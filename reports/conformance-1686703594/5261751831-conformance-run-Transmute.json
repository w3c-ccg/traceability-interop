{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e34a2e44-2d8d-4a7f-b222-3716952e3906",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5ed87901-be6f-4fd5-87dc-fcc3cafd964b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59c66907-2776-4ca4-b0d3-a09a726f4ec7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f8bcb8a-8836-4a59-93d4-48c13812fb11"
                }
              }
            ]
          },
          {
            "id": "1089528a-d024-4c5c-9b2d-ec6e3c808507",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9b3092b-34af-45b2-853e-aa9ad2d4d995",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b2bd4b01-4514-406f-afd2-96b32420d587"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0a747580-7581-4356-8b22-da42de38431f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "863d3331-c96e-4156-a9ea-5dc5030551f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3105784-d229-4df2-af62-7ba3c92ab957",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcff75bd-3622-4855-92f2-42b2984c7e22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c86e688e-af28-4719-9318-36406bd2c7be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "352444a4-a13f-4be5-9823-10300b9f1ee8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "997febc2-3292-4936-a219-8b47165246c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b239a8de-f525-4aeb-93ab-847f15feeba8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6526e6c2-7331-4630-875b-b14ba746bb76"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46bd8edc-6df6-436c-b868-c030027676ff",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c25af732-8a68-4610-858f-ed993da8da2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36f62762-2f98-45fe-b798-9cbd110aaee3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a263d807-57ce-43f6-801d-1fe80e253f9c"
            }
          }
        ]
      },
      {
        "id": "c975fcb7-7480-4bd7-83e2-2ba58dfbcdcf",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c9ae7462-2e10-4cd8-bfb1-67294f093f8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4b1850f-b655-4d8d-9342-2819d7a63429",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f408fe3e-40c8-4ba5-a13e-b9f789b5ed77",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd444072-1486-4023-8365-bcdaa1ac9516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fafc0d46-9686-49e6-9b58-72f74c75fa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440b6bc2-19fe-45d4-ba13-18314447c21b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230db84f-0770-46e5-8067-092c7b74bc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "969e75f2-c8e6-48a8-977c-43485c6be499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffdf034-12d8-41c7-86f9-cfd2bc2f8c93",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50557e1f-e9e7-4cf8-96f0-11df230b1240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c208554f-7f91-4cc1-b3f5-a1df626d8150"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b495d03-c47c-45b8-abdb-4fe8be777276",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2109eb9-213c-43b8-92e3-dbd016417821",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc2e6e1-8d71-4893-a392-d4b2ff5cbb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d791faba-40b3-4440-8104-c9ec2c0ada14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbeed83-f90f-41d4-a82e-f4bd3b6932b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89133361-b60f-441d-be68-11f6cda0d970"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "82b25292-c740-4eb1-a8ff-972ac8c3a2f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c833689-0a57-4ffa-b6e0-74b8c4d1f524",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96d86c3d-3600-4ece-94c4-ef92dbd22c1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "70a59ff4-37b6-4b4b-8aae-30b7300056bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b77d884-f16a-402a-9a50-a8ac44510e6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7e2447a3-c8de-4e37-a0fc-69497c67b3c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67412ec6-83e0-4969-b865-1d298c7e96fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4adf2b3-2490-40c1-8dd1-3da45eb90355"
            }
          }
        ]
      },
      {
        "id": "14f2dfc5-7d08-4bc1-bdb9-a2d5977c8c0b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a0136c44-30a6-41a0-b4ff-fc75adf28b8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "100243b3-8c69-46d1-ad9c-56efe03da4e3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a45a1754-6beb-4495-94e1-bdb6b8ce2968",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b25467-a42e-42e4-b3b8-269415645c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4256850-bfb6-4e30-801a-55f411672dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843161fb-63f4-42d1-8b0b-a707298c7a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34d70d60-177c-42d3-a0ed-a5eb981c2d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644fefdc-425a-4861-b7ef-8d50f4c968b9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6d42f8-8675-4eed-9f00-5b894fe1b7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaf8496-51eb-42fd-a0a1-b145df98c12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4456edd-590f-4b2c-8fb4-758d6e29a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5939c3d-f58b-496d-b71c-4fed66968bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5235446-e1ba-4632-b796-2bf7667a74ce",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8419236b-183c-4e96-814d-99f3d57606cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3efd45-438e-42fe-bb32-88c3bdbdd417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb440d37-735d-4665-b1f0-d696057ed4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c950650-712c-4d77-a8f9-ea0c3771a9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f4bb4e-fb99-46d4-8344-c3d4015a59c4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bb5d69-3d6c-43f9-bcee-7e8ef35c91c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87d286f-c485-4c79-bb88-6f1ed9cd0abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc1344e-3cda-4d9c-b24a-9810fa5a181f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43b20b4a-29eb-4655-aed3-cf43b4c85d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf709cb-064a-48a1-b899-afce00e9ca50",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8af082-7127-4666-bf7b-86eefc0a1bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a92a0ad-6f5d-4125-b8fe-84576affa57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f75a64-5e95-4e5f-8e11-5683c1487b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cf5b6ee-2699-4390-8a57-61de5c1f22e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28679b2-d35a-4628-b227-ab1df4e8ff8a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1da2474-0391-471f-9803-051e7f7546c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cea28e5-9f20-482b-81b7-c70652c6c2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47937e4d-dccc-44e5-b392-21fde9c41ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffc36d79-0f7e-452a-80fd-6e37517e2b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79601e0-2647-4348-a255-cd6ad4be9364",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53731105-133e-4571-9328-999932d2c00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af61dd2f-7849-4c07-a991-f5fb00060a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562e7831-dad5-4ab0-8c15-9e264d97fcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7be04c74-17e1-495c-ab48-d9949dba90ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2de345-411d-4927-b669-0010e985a66e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea348ced-526e-4ded-9ee9-15f844716133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41c2302-ac5d-4ec7-a39c-0ee4b4f14e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58e1eed-ae30-4b55-80d9-3a870e6910af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d44ef803-ccda-42da-87f2-4cda385f3bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80f8366-042c-49cc-a808-ce3c7883bedd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8520f255-9074-4b81-ba6b-cdf500f99e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14995ce0-27a3-427f-b0ac-3563e9d33dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1cc8c1-c4ee-4a66-9e5a-870d707f22b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8605dda5-7061-4a03-a1eb-078b580c2e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ad6368-737f-4997-8a85-01f1c7072764",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1037d7e-c2e5-4440-9043-35857ff6934a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a287b572-3269-4620-aa08-1fc9f070f599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27dd30c-0750-47c2-8f3d-9b9b1695a909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50acd92d-6e3d-4db3-9be8-4c82f052acc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2335a53-22a4-4d39-b47e-d2b8dab243e0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eff6574-5f91-4277-82e5-d2c39f8a43d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45045f0-f7cc-4e4f-a654-0abb69e9d50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c41d2a-9284-450b-b35c-1796357a095d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c80a7449-8c1e-44a2-aff2-b348ac2a4f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90384634-63e1-4ac9-a9de-a68c4c1127eb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08a20f3-3ac9-4222-b3df-ee1db73086c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2e6922-02cf-43be-80d7-ceacdc34917f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56f2516-a0e1-4b9d-bff5-208ce1657da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9a77c8a-e80c-43b9-a37d-73064596eeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7e2867-e946-415f-94ce-92e940231542",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3f91de-f53c-405f-95f3-6cbe9e9f4a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e02e5e-f01f-40ce-9847-d0b24fe11ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e2b017-b42f-4359-93e3-72a0d2c68649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d671c001-7f41-47cf-8b8d-3fa23f478dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f600d9-82ea-45d6-901c-a42deba2089e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799187f0-0d88-490a-aa5c-e6f54b641f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49784639-47ce-4063-9add-2d0c18bdb52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36b2923-f9ea-4c70-a066-270e7740e1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b199a748-953d-456f-9c84-38c08ebb58cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ab0e6a-20ed-4bec-9639-d7490d35fbc0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5403c396-77b9-4255-898b-751334c7c9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9455ef-284e-4ea0-8ac1-552dc4e49746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d10e70-b02d-46cd-862f-67d32649ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55703a48-a5ef-4e09-9f26-74b2a7c85a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2dc09d-fb0b-44f8-9139-cfc7f34f3725",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6882a2-17a5-4d3f-8e71-20a37822ec94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8ae94c-6cac-4327-8f93-e231c68929bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5055a20-bfe0-4a56-87e2-760f85caa7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff3bc9c4-175a-4cad-95d9-2a4ad5f79528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab78dc64-740a-48db-9774-262048c41718",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c27526-9217-40a8-862b-7c0ab5239b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60fd4a9-1b48-44e8-b2e0-9e5eb9e7818c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb13a8f-da38-44f4-a5fe-3d1edfd1b9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c91ff84-2c7c-4bf6-905f-31864ebc0d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307d56c4-131b-44f1-94bd-1eb88490febe",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b3b5a7-51f0-4373-aaa8-c9fd535856d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159bdd40-dbcf-4074-bbc5-ae59dbc58ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bff0298-c231-4ca7-9c50-a2fc11e20898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3caede-f0c5-4e13-877f-b7721caf609a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008890c7-d8f9-43f7-9ba9-39186aec9e64",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9df12ed-999a-4d73-828c-33dc16e771d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc613a27-0d86-4a15-a253-1603ab172592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00570aa1-f2b1-4815-85ab-07b4d07655e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8deabba0-4a92-496e-8697-91a03650fccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c80ac67-11cb-4f8f-ab55-04bbf6c3c213",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4182013e-3b92-4192-a159-19c2e885100c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0d89ae-35b4-4716-8d08-22f735f8dc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a882a02-f7b2-40b7-b8cf-0d50275811cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b07936-d1cc-4721-957f-6029dcac2864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081fe061-a08b-4940-94c3-bb9da641f748",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04768b21-d95e-40cb-b07f-14a9475411d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab61a86-55e0-4aa4-9d2a-439c9035cee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc63b16-46c3-4fbc-83f1-7222ed44c755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce0083a-e74f-4672-bed7-244319d380a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cdc2f5-2efe-4fec-9942-86b90babc032",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bafb05b-269b-44d4-ae68-3d0d9b11b875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579f95fc-e691-457d-b50d-a6f1c2d28e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbefd126-8f04-43f1-a3a9-063a2b8e199f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4efa51b-2425-41f6-aa88-ba5a3f550945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb123f3-8c7d-4feb-ba88-de87b1c6f592",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d231b6-7c3b-45d7-962d-8188e7341c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2919211d-efd6-4e35-9612-c08a9a7e6d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb63675-3a32-42bf-80f1-c7fe16571d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a69021a4-a9c5-4bf8-96dd-9eaa35668144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d64c028-515c-4fea-b573-10b74583be8a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81e882e-e44e-4a35-8caa-c668cde955b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f05157-e95c-48f4-a91e-a76f9b669604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a688d8e-6c17-4b3f-9968-b26c8c784430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c110607-49be-4907-b12f-4eeef53e711c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f71a42-5402-4b86-9fbb-c6c8514cd6a5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81aa1771-ce83-47fc-a678-47bc6ab5fe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce3af9d-0981-4c77-b780-05ff2a7b15dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0b05d8-f5b4-4b51-b042-680535fc3f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c73f026-7a88-4e0b-90ee-c3c596857707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac68f25-2249-4f0e-9dff-57bcd6036811",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b35e741-e15c-40a8-93ec-e4e407926cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e6c5a6-b959-4564-acaa-6c229fc49a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebacef4-495e-418f-883e-87208ab918f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d234d3e6-bd2c-48e8-9c04-7eaf382ee0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93116d6-3559-423f-a240-62b5b3959c12",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1590ece-0c9f-4f8f-8653-1e14ef2395ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb131a8-09ed-4750-9673-b469aabbdb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28775f42-c0a1-4361-915d-fb9faf627d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16eb0258-1846-4001-a09a-875e9ff64d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ebabca-52df-4453-94fe-5653392201f1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a904e4e-1773-4fcf-ab78-9334819cd17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6162bcb7-920c-4182-9b4d-59687b015ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4528367b-2bfb-41ed-8548-b3b5122e7c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "172f9aed-3b9a-4b00-aa98-d76ac76f9918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af819d5e-a17d-4ec8-9eda-c5980c4d2465",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e827e3-0033-4564-83b2-e73be410d833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551dc3ba-7bc6-4878-8da2-b4c982931e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df19a06-2880-4045-9b4c-3f303d0d0426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69d3336c-307f-4625-b352-ea706676b417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2aec04-d33d-458e-b943-0a97a6941c48",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b2041b-eb85-45dc-8d0d-7e35f8b89fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c792ac67-08a2-4da4-990c-f978bdd51d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ae5517-4a95-4a04-8637-bd684ca1c2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe67eebc-6fd0-4a24-96c9-cc6ded9b8cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea715540-f0eb-461c-b6bf-e8b8f9c32919",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83559493-6cee-48c0-9c1d-6b7f70decbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7b018e-8395-4b9f-9b75-e49003b4ec9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7ef07e-df6c-42f4-bd41-b1eeac21bf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d81059-0e37-45fe-82e2-c5b33e31012e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c43942-db91-414f-bca5-e8e0a7f39443",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1d6563-a254-450a-a8cc-3fcefcf2ad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0801e60f-93e5-4b8d-9dc1-8db900720419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13ea8fb-8112-483f-8852-dab075cf4dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce656a50-277f-49c7-ae5e-b2d6ef948428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c4f9f2-97f3-411f-84ff-971736ae93f8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0847a3df-ef76-49f5-827f-b386ce9cf49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985a5234-67ef-4344-a084-5968565c0e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499f5963-3dfe-4a76-9a12-9e2707cceb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0eaba28-a39b-49ed-843c-1045d8ec3423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5acc4a-6feb-4f43-b370-f767f15896a6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9755504b-2c9e-4e91-a5c8-7c7857380b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a23a328-f3f3-46cb-b12b-44dc356b3936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267502f6-47b1-490b-893b-f43047e72309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "252ac1af-8758-45c6-9dd5-07d9e57ec9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86470012-1d72-4819-abcd-709e09dc79d5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa0ff40-8292-41b4-b592-86d07b8192ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f116c583-a2ac-48e2-a45f-82241451bb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95f977b-5fed-4362-b091-5a063bb709e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6e83b63a-582a-4bd5-828f-60ec7d97adf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100f043e-0403-47c6-bde4-1c161275165c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d611ffd1-52c4-48cc-9745-9fd742a3abdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "318a6315-53be-4d6f-996d-22d3f9663703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73926817-c868-45b7-a97d-7b0bfac23267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65b80c0a-2490-479c-8ff8-f30f9d97be02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54df5589-903b-4c39-bb0f-bdde389f4921",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4203241-f1c0-4d99-b2eb-1f1cb13a4d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d803337-2a8d-4852-8894-d481fca84c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d799f87-3fc9-42ce-847d-0455193ab41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82635106-012a-43d1-85b1-317c79318b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af305b9-496d-4756-976d-33f0e64f7ac5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bda1c6-2215-4dcb-b987-744558ce35b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323ff430-bf66-46aa-a313-b8a2584cf628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129c204c-47bc-4a0e-9e5a-5e5984a0899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b528073-e778-4ef6-87a4-e181dc1f1f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3f01d1-7f50-46e6-88ef-4c416dbd1973",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581f76e6-a47a-4435-b92a-f7ef7bcc7cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f1f154-c169-433d-b1bc-b6977e44b37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a883d88-f5dd-49bf-9609-a7edc3404b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9189c5d9-552d-45c7-b1e0-73fd397da260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e4ed37-3775-4c16-ac96-6273896540fa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe635b7-aa4a-4701-b176-35a43ca9a484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1813fd8-4709-4cb3-8001-0a822c049380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d8b6b8-b321-4e8f-9111-93c2ad79705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1c78fb-e4ce-4a98-b1b6-40f69a51d346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5468da53-3759-4a74-afd5-afdbee253269",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baf83e7-daa9-4f42-b835-0578032a1b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179a27ec-bb15-4e93-beaf-6d218eb84d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7803bc5-c7ed-41a6-b010-fa12e785e764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9b3474-57c9-480a-a6b7-390c25f037b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b095b1f9-135a-43b4-857b-c715e416b946",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e57246f-5f14-443e-b145-3005aa9850cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f17838-e95b-4ce8-8148-b8741d713c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb8c22b-284b-496b-8166-802fb0846253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6cf28d-074d-42a8-a7f0-56df7f68e699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6852bfde-a8ad-4e98-bef4-0826d3b8e88d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8758ab-8c66-4c1c-b55a-96117559710a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5355457e-eb83-4859-a592-042d46dde36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b4f386-cfbe-41ce-a4e9-b80f87cafef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf1cc70-00c3-4c5b-b679-96d8e84b644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862d7b84-429a-41a5-8587-f8408f274a1a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec2b508-043a-4933-949f-a56527deb53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb54c27-9850-4f7f-885b-902488dcc950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63dae1b3-d484-4259-843d-7b2b4d731fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "50e68ec1-1555-4a10-bef0-45dbcd2ee260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6649f6b-23be-484b-aa7a-4f1d045de66b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8104f834-edcf-4fac-8ea2-fb6aee249ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2057f879-1c71-4321-84df-f6cff93d6c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c6a279-e7ba-4593-be02-1ddc97c542a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba824f3b-633d-4487-ad57-e57f909507d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89070d84-899c-4ddf-93e0-93df289a3b72",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58f384d-9d41-40cb-b801-c9c4c8de507e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240a99fc-528d-45a8-8915-1f0ac2172cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecee56ff-df3a-41c4-8a60-49f18b6c82fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f3f1ec-79de-4d6b-94c0-94acba71b620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b78bba-96f5-407b-81ff-eaf41cd9c461",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1f8714-bbff-4a71-8a2e-6c07023b409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d02f27a-8a39-44f6-9f95-54ceb661b48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97729698-a0d3-4774-a365-9b3771e8c599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b99ee0e-d401-4aff-a869-3d4c1dd56d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a067298-4f11-43a9-a92f-04e06e148f89",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754acdb3-2169-420d-8897-4365297c3754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e69a7ac-6591-4a10-9fba-fecaaa3c03a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1abef61-3b5d-4005-be4b-a417b5eefdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f450fd-ca17-4d03-9f54-753f7692e925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d920245-899d-4dfd-b451-3e4a6d153e19",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430bae2a-379a-4cc8-920e-b9ea0f4ad911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c6cd6c-bd38-4709-8051-38c2a288ad46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5c0950-26f2-4891-ad28-0f592d63529b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f8afd3-c098-4fdf-9976-18c49743068d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b469c082-ab28-4675-9d63-e506583891b7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e62757-412f-4981-8661-f8da119ea1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0239ca64-b1c9-42ec-bdc0-ecbb7f835f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d386db-8333-4a07-8c1a-0f4939e61023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "023d297f-5989-4c7b-b03b-e38a88b0d1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a23f5b7-5edd-48ba-baed-95ba6bd0e484",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c309f1-5e9c-4f7a-86d3-f036a75ad27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c632dd1-4f63-4c29-8fa7-8abd5d11bb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3be6b3-d25f-422d-a731-8f21dffadf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f08b0e5-63b0-437f-b2e4-7aa88969bd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a999bc-5ee3-481e-acf5-2d623ea379b1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158318f6-30df-48f0-9c6f-84ae414e11b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22d7fcd-677d-4ae9-8bb6-57cfe16ea9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b778351d-6fbd-4a08-a995-b9e23e8b5c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db590975-3fc2-4b59-a508-29697d0f12b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f54783-0ece-4afe-9e27-b6caf531985d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3c2f70-a75a-49dc-aafb-7752523afe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a94e49e-2102-4d28-8d27-f401cd8df255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750f5216-80f7-49d4-b979-aee34991ad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4a8602-b423-443d-91da-e8afacdae1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc116c9-a329-4d23-a25c-1c074384e8f7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29abffdd-3f22-4be5-9715-a9e527d3c1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea327795-95c5-4be4-aac8-bc0fc0ceecc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96ccb06-2f48-470d-827e-2c47e6c38211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3bd5a1-784e-4c7e-96a0-b0016cc36337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92a7a2f-d173-472b-b120-6abf156aefa4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7780d6-6321-47c3-b32e-e44768b0009f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cb4ecb-24c5-474f-8736-04c3fedd4ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897411af-147c-42b0-860b-e29694c32e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9673478d-6af3-417c-9a1a-4ca4b59e68c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3683cc9b-b207-456d-bfa0-c5cd28757bcf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fa70b6-153e-4408-a32d-fdf0de64f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2793dc8a-097f-438c-b491-e1ef5ff9cfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc79bf8a-63c1-469d-ba0e-a93dbfd2ca5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc536e4-1600-4590-959f-57957ac21f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c39912-ea4d-4073-8224-2287674f6949",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f04770-1650-44bc-b585-4a2af800ab14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f353130-aca8-4f77-a11b-f530cdbc0721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d46852d-f37f-46c5-a21b-29339ec0da43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e069c8ea-0ec4-4d98-a088-888dbaf333ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4a8694-ffe8-4476-a96d-44df94a9f32f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e808c8-5ee7-4153-910d-bbdea286f2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f14f8d5-7d5c-410c-82e2-a488929b4e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36654479-653d-45b8-84f1-6f321a7317cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3555bc8b-77b9-479d-9c5c-7ec7172e7423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4708e6-4578-47fa-9de1-5662ef4fdf05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9907f90-6a2b-4ad8-af18-f00ca32af4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808d369c-d8f1-4e45-bd20-ba6f5c06e268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a2e6df-3bad-4906-bd0c-6a4f5d77ab16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "502ce7ca-b5af-4d9e-abb4-83547cccd382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87d0955-817a-4c7a-86f1-221bc323f6c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a65ba89-96c7-4522-8c78-4b35222ac599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93898f93-65cc-476b-ae61-2e40954d47a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe71a1aa-cb91-486f-9c74-042f418d3650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b2862e-57ad-4e57-b5ae-7041033c29b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140838ff-6b51-4af9-97cc-7e815d3f90ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a9de25-90e8-4538-a511-640aeeeb0863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e161d931-4160-40c1-aa65-0f7ecf87e16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce13a754-aaa7-4db0-b4ca-765970d513f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c508057c-5788-4c09-9cf0-ca39ee4a6e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d20c6ea-7fec-4246-9c76-b3efa587e677",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c044d8-50e6-4dde-8dfc-880464922839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac5762e-7849-46f0-a0de-a1aa40889563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a4aa5b-c5c4-483a-b47c-712c4c3b508f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f88936b-7062-4e4d-ad3d-475a848a051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7702c7bc-06a8-4806-ab4a-14d39920cd00",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce668e6-b302-431b-b792-540ab24bcbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255c6df2-295a-40ba-a381-13ba710d5021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa38c21e-68bb-495c-902f-1a1e9ff14f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "371cc1c2-0432-4a42-b705-5f20b723246d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09cee21-462e-4a3f-931b-cb69aac1c0e8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f232a309-47b7-4ce5-9b49-40ab0ddaf2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150b25bb-4e30-42b0-ad13-ceb57c048dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7154a553-f4b4-4f5d-9c68-aa9bce9ca88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a5921b-bdad-4075-b06e-dbd063a17558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da40c189-8b36-47b4-b1ce-da82dc7070d0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dac69a9-0c35-4c35-a0bb-42b07a246d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff23d2e-d202-4b1f-bb53-038abe3a9f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647c320b-23f6-45cd-9688-f48707b269bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0210923e-bee0-4ed8-b5ea-3530e7f3f0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4404f2-08b8-4319-8666-3fbef49651f5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3de75e0-42cc-461c-8096-cc2572f0026e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915f1d95-5427-4031-bff0-119dd3503ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc0bd65-9da8-4d57-8445-bc1d28ec8feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8fc8fa-dffb-4dea-b125-3c2efe4cb192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cd748f-166e-4eb4-b9d7-9ee807f7def3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489f6b2c-b3cf-4be8-ace2-c93e317aef66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b524e4-77d4-4cc2-83df-1255f9a5fa80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf264da-4c95-461b-bdbd-403cda58a198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88573d19-2632-4150-95f6-2c620afb1d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23061e53-9b30-4db8-91ca-5d690a16b970",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617908d1-e848-4e9f-92f1-ac9560f1b63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b647a017-e3b0-4734-8bfb-601a49d54358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58706ecf-76c9-4039-b624-ba596ac5d33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e64160-5056-45fa-bacc-f4eface3738f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d83b044-02f8-41f6-9762-25115d9031e9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30eca36-b725-47a3-9844-0715f6899191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838caf33-4dc7-4f94-94b6-3692a456d630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8eb4ba8-6680-499b-979f-2f62eacde63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7205702c-e183-426b-829a-b1fd40ba0cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768a9946-08c1-43a6-8fa9-f27f061ec021",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcad952-8255-4667-9d63-0e7770805d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485d24f3-c8bc-4f83-97df-dff994a3045c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08128c7c-186f-493d-81c3-ace3d4c88cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44222d0e-4357-40e1-9a9a-e5db16f2d9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1b607b-877b-4f60-b48c-1fce0f549953",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9a68ba-ec13-4bf6-b104-9e7ca5991a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8677a357-1650-42ab-8fbf-6cb1a8e3bf55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e8793d-432d-4360-9f54-fd3574eb0137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "212db58b-37b4-4bce-beed-ac4c63578b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac36e26a-d8e5-44b0-bf5e-a8e45c5e18ca",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896425a5-9d21-45aa-a02f-d46eb1ae5e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5625027-b662-4861-9fae-26ccc8db024c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a26959b-b70d-471b-937e-dc384c70ac64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5991c18-dd43-43ba-afec-4b960083c631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912a07e1-e4eb-4493-b783-1690cbb77285",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ecc787-5046-446b-98b3-cb325b74a2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba0e8b0-2b09-48e2-b1ca-669931d72b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc14277-c81e-49e5-9d32-24128caf2efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "530c3b8a-5d7b-4362-8f86-e9c413565125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d34373-d87a-4ed1-a0ac-6034430c2a21",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7d1ac7-d6ed-4871-86ca-0304c2958f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f7a3ba-45a0-44a8-9043-9972cbe61c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c2ae91-c8ce-441a-8b64-67808a29fc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25ce6d29-0b01-4602-bcb5-398c66242900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a4bf0e-bc91-4677-a67a-926312fc16f5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af005f84-a98c-49b1-b392-f01ae1142fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab7f461-45e9-4430-beb9-c3c2ad7a16da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622cdbfb-de5b-4443-8cca-76e8f9fb7f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffeae2af-42c5-43af-84c4-d554ec811d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0c11dd-216a-4076-9f6e-73321f0f7180",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9dedda-564e-4f21-8dd5-dd8dbf0382f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850b734e-74c5-42a5-8d70-b3630fc4ccc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c8e0fa-b308-408d-bfcd-f60b9c6d9bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb5af33-510f-4fac-bac3-57f41151990f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6d8631-0c97-43cf-9af8-919be6c5ef5a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fd4550-7079-47d5-a50b-5a114db6867d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c04650-2a66-474d-9994-b62d4ebefea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33cf963-0537-4f4a-a329-d32d2a65bdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02297221-0f20-48ed-8cd0-ed6d9a0cb8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f82a303-d7c1-4370-b1e6-4d053f9de553",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fa6f45-2ac9-45e5-852a-30251fb1ced4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef02a28e-6b52-4f67-988b-cbd1c462f0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9d6e70-b2ec-480a-9ec2-91722d206677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8f7bae-1dce-47e9-8052-68090aa706e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2559b845-6182-4530-8ce4-f89ecdb17871",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7503b0b3-7b1d-46b9-be9d-9169f5783a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db85a011-f5aa-4d19-98c3-8603f7363b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643fdc1e-eb4e-4ed1-bcf7-84839b6544a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f15d69-73d9-48c4-b4cb-cb5ace2a2d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ae5650-3705-4724-8b5a-5cd78d03517c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f26e35-7775-46bc-8229-1b8f93bbd9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7c4d4e-3dd0-4436-98af-0de2008d18b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cff050-637c-4247-b86b-2419b7a698e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2375480c-267f-4340-8455-135992f9b9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a4ba77-96d6-4098-85a4-59e4077f4cbf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2446e84-d51e-4d36-9d77-eec126017309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc51f62a-e50d-4291-834b-2a42a40e96bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9df9bf-a945-44d4-b721-a01285f36b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c2c12a-929b-415a-b85b-8eef087c39bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4f0d0d-48c2-4a5d-b764-80c78263150a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4ac1dd-45d8-45df-a9e4-113100abad1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e510a56e-e818-4c24-a79c-7178d37e000b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743aea6a-a823-463c-985f-8356e2afc5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6201c6e6-7216-42dc-8402-3094dbd60680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281998cf-5e5a-48ef-8095-65a1f8ba8024",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ab5a54-4a61-474c-b089-8cfe8f488162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8179a4-fbef-44a1-a031-e5346be26675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82921dd0-f33e-4f10-b996-e16f2afe5605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd91ff4-fd4a-48b5-aac0-501f4b4185ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480d8313-6511-444f-aa34-4481b72c8384",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badee2ca-5a3b-4fb6-8003-9df9e360af56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8011bd1a-e9ec-4de9-b041-7ecc6231733a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a9359a-2dca-46ee-8414-d02cecdbc561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf53ac75-7c44-4d7d-8e87-f20370fe8e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee019e82-896d-4222-9533-380572b8c950",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7517410e-08d9-4a2d-bb61-2acb4790f7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc5cda1-1a5c-40db-b859-b47ddf12c421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705082f4-ed08-4cbc-b81c-e389e3031313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8407500c-ea4b-4522-a601-0810cca00baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcb3a06-5458-42df-b8b3-609c73958654",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704fd099-e5e2-42a6-bea0-64d659f8e4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f430cf-6c5d-47d1-99d0-7a8ab0cd60d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6f719f-1ce8-4d60-be67-6823eacb7fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c4cdde-5b1b-46f3-b1f9-509442bd446c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79da39a7-dd54-4feb-97e5-800eac3b3059",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94938b93-e48e-4752-8c3c-9d3567de92ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dacf5bf-9610-464d-880b-3e80bef4a455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c38f650-47f7-4f54-bb05-5771d90e155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d93ccd4-c795-4dd7-8fff-6d9ef15d5a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41e09ad-7a27-4559-a39f-a2c0ce7b67d9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd4168e-125c-44eb-b700-63a31bf6df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675e4931-4b0a-4332-b956-f6bf670542c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d86452e-ed97-4f02-8b9c-7abc80c96ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8806c6e2-b19a-4953-a004-5deb8025f55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1547b6-a1e0-4fe9-8aec-8c848a8c2617",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066ac0b-9867-4f9b-8bfb-d486a09fdfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557558cb-1c46-450f-b788-de29cde74447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2426af5f-47f7-4fe9-a5c6-c91ff29803a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbeaa7a-5bbf-4235-9f6d-17a415e8daa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af0b75e-e47a-4bd7-ac8c-b186bb0496a0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078095af-ad76-4e85-a7c0-5a277d38dc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeecfd7c-14e7-4b2d-882a-19104629680f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d4c571-40eb-4c98-b619-bafddf624e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "50dd4592-8e36-4c94-acc9-311714fd1a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d866eff-967b-4506-8875-629766a2ca90",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09db28af-a3aa-429c-a0bf-430642d2e19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92281aaf-2c1e-4ee3-8ae8-cf4b687981ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d099955-4f45-4386-b253-7eb3518eb398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e199a1-81d6-41c6-b502-8a4bda1b66a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b010bec9-1aee-4264-9ced-29e1070d3964",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd041c7-b569-4df0-bdc8-3100c6e0c2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "94aafcb9-4bda-4769-836f-91708d0cd149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1c924f-295a-46fc-8bc4-6e7951092680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0971c542-24a5-4993-812c-394f216400d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8bb8817-1051-43a6-a876-7305ced49d97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe867425-56f9-4173-a906-7d42006dee3f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a9884a-be8c-4813-9175-56e4e358601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35357370-e636-4bc5-91cf-92f4b915d375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf41c98d-04d3-49fa-bd3f-5f8885ffb5ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "595ee24a-218c-4802-bc54-84f74e2ac4ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98db8bae-296c-486e-9bd7-e13a0cc61a04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5ae093f-c008-4356-bc00-71acad7078e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38f4bd2b-eb97-4a30-9323-8bc23943b7ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85cda62d-56a3-4f8b-8f40-98d288a9c789"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37ac7e33-aef6-4ee0-b476-a25ce3c744d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "422405f9-d586-4190-b1ca-698feb8b3a6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb88bd9f-29b0-426a-a2a6-5c5ef86c20b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2d2e174-f7b8-4e54-acce-f9072729a354"
                }
              }
            ]
          },
          {
            "id": "39511fd5-c760-4e1d-9a42-8649a62e2da8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36870035-dca6-4484-8dcd-dc1dad47a38c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efc2f06f-d29a-436c-b1ed-66bab427cb4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ab1cf36-3c1e-4143-b97e-95e4bb7ae194"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d74e1634-39c1-4d6b-8773-1c41d85633b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5469906a-43ba-4f8b-8528-a8a5665a7f85"
                    }
                  }
                ]
              },
              {
                "id": "084df832-d787-42e8-b062-4139cc075501",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de3671c0-e445-4b83-87bf-ae6d1d1f5d76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cadd9f33-771e-4cc3-a847-32b20537042d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2e97fde-c440-42c8-b498-e41a4394bfa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48b74bd7-61db-47c3-a5f6-4036b5de39c9"
                    }
                  }
                ]
              },
              {
                "id": "a692a063-3cc7-4f89-a84d-771f90e67d72",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddf02772-a174-4b65-a21c-5817ec036ecb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53d729bc-1426-4fee-8475-934468d89e93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d3b10e7-77ef-4166-b527-2484a6c548a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04e304bc-efd1-4e37-9a3d-6ad3f7b1ad3a"
                    }
                  }
                ]
              },
              {
                "id": "31ceef10-a00f-4188-8092-46892e4f139c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7f6ffd8-17b1-4a10-bb41-87ad8ac726e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8861b04-2398-4254-8237-27c6cab38af1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf799b56-a99e-450f-b7ea-907d02acb497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d1beec41-dc90-40c4-802e-e789401d079b"
                    }
                  }
                ]
              },
              {
                "id": "a51934a2-452f-4efd-8ae2-8d979e8a7f67",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5b78c6e-7480-48a6-b71b-60dbe6812492",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ecd3fc1-17d1-437a-bda5-7656cdb4cde7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c28d4291-22dd-4c13-b5a7-8956d0ebc632",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7f6e6e22-3e91-40a7-9ef5-5de031d1113d"
                    }
                  }
                ]
              },
              {
                "id": "931258bc-1e98-47f8-98e6-c902bca3c41a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f0ee610-8726-4725-bd0f-e52d9673c355",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bf627e2-ec9f-4c8f-b46c-6d66f423b0e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50dce377-86a4-4304-b3fb-5045008e06a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "369ff39b-f64d-4ee0-bb11-59a04d7a688d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5db32a83-17a9-4859-950a-88d689ecb541",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3484f46-4609-4c6f-8810-5474fa90580a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ebc67eb1-8fb6-4c7c-926c-54e633dcd3da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45f7ece0-7239-45b8-ae67-b2eac6cf51a6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c53b0a6-1313-4046-9e58-bf37a46756b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cb710603-6310-43ae-a317-621bde3fe8c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aeb6a202-3b90-4f63-88a7-0f8e1cadadb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16b781ce-ae6f-4fbf-9b4b-27e23d8209b1"
            }
          }
        ]
      },
      {
        "id": "ff50893e-b0d7-4556-8415-4d9fb78a467a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1d62433a-841c-404a-8b2a-90fff7a67af9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77f8c843-bc74-4bcc-8746-234c248a90de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ac787b1-8f22-488f-90e8-11b42d3569b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b4155f-a57f-4819-b00d-d278c002dcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9b58ce-de9f-41a4-a653-6b9e5441e20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4075fca-b174-424d-9c10-19da5929fd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e0110b-0964-4729-bab8-8c3df8e19208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a498a3e9-ab9e-4471-88a9-766de55c5e7d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147d48e8-ff8a-4841-8fb1-01e0c2d2a1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bff779-99a1-4f98-8cdd-6a09da33a1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be3f4a1-b47e-4808-9c14-6e9bf5c83990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "239ed666-efa6-4800-9d95-d1ebdb6ef4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7858748-792b-4faa-936a-1fe871716188",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cff6ed-c631-4c73-a7e9-c781a02a9346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b6a0ad-5e8b-4d36-8acb-022a0408e7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d34369c-1371-4d15-931e-70a99828543b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2e06db-ca4d-4655-a715-8f5feddc7a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291e7a47-bc85-45ad-b2aa-6c3ac3f42083",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b48ee54-025d-45da-8f31-25daf9d445ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eac7c81-979c-45da-9636-04e677ccd08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045913d3-8392-4792-85a4-ce5cb91f7e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e91df73-ef04-4417-ba75-d7562a854bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c8533d-59e3-4823-804b-213dd617c609",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacd5412-5c66-4103-bd27-2a692cf29ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8785fd3a-dae6-4225-b54c-085218dc1d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6358d3-eaf8-4325-8ca7-edc058ac6189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e4d1c0-e51c-4ac1-8e0d-b23b3dc8d8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba87eb0-5045-4659-ad15-7b5bd9f21cf8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b2370d-51de-41bb-bd98-d1a643b6ac58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdd5378-280b-4d53-a164-615d51ac70c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4fc74b-68e7-49e8-9bd3-341d6ed23c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4c12e7-17e1-4211-8914-23c34b49c745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2258ab-a2a0-48f6-aa50-8ddaf5bfaa15",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2746c38-27ec-46bc-abf0-97e59073511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2efebae-b109-45ea-8a96-ad3b3eb0d68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49030bfb-1de4-452b-b459-81d832fc992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "764fa318-f1e0-4b55-a9e9-51d6d7db243a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119becf0-9368-4f7c-90ea-661ec04ee1bf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90bdfbd-6fb0-4ef8-aa74-6c1da4a4bb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5a1195-ebaf-4141-9b2c-a984104d15f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcf0383-cf13-478b-912d-8339d7057c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e71a8cb7-940a-4e4f-aecf-65d06a536220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc40d8b3-f9db-4572-905e-41a0fe0646f3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb035545-0ab1-4185-925b-4861b3307f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527f4b26-cd5c-402e-bb0d-38ce287b698e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90e6ee2-76ac-44ea-b0af-cc1ba4082ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f95009d-cd63-4aae-b7ba-83a7de979ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f467d166-0ab2-47ec-b45d-0ddce988813e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7348a57f-574a-44f5-a72c-e6d31e093652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5efe94-065a-44af-a106-d5d7356dcad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af75c088-f9ba-41b0-9ef9-e76d7e5a596e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3acc67-8b23-4306-bdf4-ce768c686e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49a2620-8cc9-438a-813e-cbd9ecb59423",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9303a36-dfe2-4886-82ae-bd44d011e919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bb2cb4-df20-406b-9399-ca72043735a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b99d59-62a3-4d9c-bb45-21cb362bce00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d858dce1-4679-48f6-bf84-7f6dc76e129f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad7e74b-29fe-4f83-977b-60d64d3acb7f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f8977c-bbf5-4dd8-af87-8d8d92150c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6220157a-c237-41ee-aa82-89ea37f07c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e88c374-8578-4977-aa14-26a028410040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30891ae0-d4c8-4f7f-95d3-de1b3559c353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2e48ba-662e-405a-b72b-835c5ee76cd4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3759e08-5a02-4607-97de-957f0ee211a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a146c0fa-7e52-4b47-b152-2d0299368e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2d7d2c-c739-4d9d-9f30-cb8055f5b12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f350a1-287a-4902-8dc1-eb07a33cb7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688c3f95-0787-4a92-9f88-3b9318d96d27",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf87aa64-d200-4e0b-9360-a3bd59101d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007a102f-4ece-4966-a132-4c0e63bf48e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26017566-da48-4eed-9eb2-7eb4d1c5f2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afbc884-4ceb-4af3-a1b5-6d9f09e647b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1b92e0-76c7-449e-a571-f2d94c04f750",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ebe072-5226-497d-b1c4-50864d2a2f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8653c9d-fdc9-468c-8e91-23895127ba8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7873ca77-ad5c-45c2-bebd-0a3a37cbae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b766f7fe-e859-4f7f-bb41-d9661779c64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4258a3bd-abfc-4a44-9a8f-1a51cd62cc02",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5d41d7-7a47-418f-a471-11ad176c7cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5857bb2-1d41-4436-b991-3ab57223b9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d85b3f6-8dc2-4815-9d5b-6ee42ab4a52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7543b88d-9985-4719-b225-6bd5d16cab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebd326c-8634-4546-adcd-6e843fa8792e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c976f2b-866d-45a3-80a9-b0c657c18f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f38f8b3-3178-4bb8-bc50-608c7946d3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b89e11-45f0-4e8a-afc8-55149b19b137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c59d739-d8bb-43d8-9b78-2eb6f3711866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99ab182-103a-4cc4-98e7-fb53420aeadb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a22ed6-fc87-442d-a77f-04720c1424fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23308f5-8e6f-4ce0-afad-6d30582d212d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f480edd1-909b-49dc-b6f8-db293e931e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e05c3296-0168-4e3b-889f-0502ab0d4d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634770ae-652e-4928-9767-b760e580eaf2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d75d8e-bc67-4e33-8a8b-7f6fcbb31a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703e506d-b1b7-4bf6-92bb-6df442d813d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6012dc7d-fdbf-40c3-bc97-37c1302df333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fc96d0-202e-4c3f-9d7e-27b3412b1ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8443495-b82d-4d33-904b-a53e84ad85ba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b6ca54-a4b3-4fce-93a2-6d305323d232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1af334-9bc5-472c-b912-eaf61a52c702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bd0408-e398-4902-a5d9-c1a206b533e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2996222-71d3-4da1-beb9-9b42c8b42f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb519be6-ca56-444b-b688-ec3807ea2e31",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b136c9ae-9533-4eef-934f-503f144d34fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236afb40-1742-4911-bc47-92463db9a5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a36473e-d225-4978-835c-419150d04702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab13a723-27d2-4de6-8953-7a8912e76b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9debf662-330d-4938-b326-5382b02ac1dd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c7ab93-dc6b-414a-b0cc-636aaa5044a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6163a26c-161e-405c-a977-a397da8f8ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3c91ae-f497-4380-9ddc-415a3caa6440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e77a7d5-ed4e-42c0-97d3-9b69c358dd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef1bc53-5bfc-43c2-a9dd-23c38ab38cf0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425bdbca-6c7f-4f5a-bb88-0095c8b0c194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc7d313-1218-488a-a945-6e4cb352df3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0543119d-959c-4242-bc88-75a0d522dd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63263727-3b67-4545-9561-e47ab28a795c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9919edd-bfc3-43d1-bba9-2417f27faf73",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55123c9-64a5-4aea-a428-6c7001a2ede2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e5463c-058b-4290-9fde-7f0ad4aec3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f246837-7610-4a08-8fee-5d80496effb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c71e98-8e97-460e-bec8-e9ebf0208f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b41646-813d-4ce1-815f-0ce17289dd23",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f2c09c-59f2-4ab6-885a-5faae53a2ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ba4057-1ddc-4ee7-8107-efa9d004884c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb223b4-84e1-4b46-bd7c-474e8efde3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de4b257-47cc-4c4e-b2ac-d8540469c273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03921d16-5414-4478-9c6c-a1124c0f1b60",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358833e7-c892-4d6c-ae97-65ff399e6c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1f572f-ad19-442b-b171-4ea4018f5436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f60a81-0ffa-48ab-859a-729d8cd4788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea8e681-c4dd-4405-83aa-a3f7f35db222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15a9886-aba3-4d23-a848-e43585141a34",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897ff381-8f39-4539-a4ca-a34f095456af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2e7986-ca51-4983-b31f-d92b76ecdad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2239a13e-a716-4a4b-8ef3-8ed87e55ff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c586840-adef-4c38-977c-cf0cbffaaa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e50fb9d-2020-4b00-9218-84ccf4f19a2e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791a26b8-0668-4438-8ac3-02dea375971c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a0e057-9843-422e-9ca9-abe0ba608b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85d75e4-6fa2-4dfd-b20e-6aa3ed14dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52709942-21c7-4d2f-b73b-eb8466651dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fb9388-1236-4427-b3a6-7335b4b3c172",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b05a060-693e-4c1e-a245-22c6dc96d8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9b235e-6ec6-401f-9cda-fab99d46d84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a15fe9-a5c1-493f-a3bd-dab976cc0cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d778c40-229e-4260-91ca-bbf6e5b1ff01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a713798b-ecff-4b01-81fc-7705c96ded29",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9e127a-883b-4122-96da-6fd0b45c62c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98adafa-b9f8-486a-9d6f-74c8d9124a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f774cdcf-543c-42d0-b68a-a2de92fd14b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "826e3f66-fdcd-439a-a0ed-88f646f8c9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2510e3cc-f574-4aa5-85b8-53f847a8a2e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f25f9f4-ff45-4a33-941e-38c101862aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34a572b-9934-4d5c-a387-18836674751e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2427671c-2d49-4d4c-972c-7bd090c4c1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56570840-9b0c-4339-95ef-17ce010c4791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dbf2ea-ec85-4879-92f8-abc3d0665101",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bd14c0-1dd3-452a-a402-dd63994fd98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea81df2-7da4-452c-a10a-a481c7b52f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc33521b-a765-4499-9774-50de9f9dcadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8242781-8dc9-4ea2-87e9-537bf45a3cce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "408f4227-b26e-452c-89d6-bfb03332b65b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb95266f-7b77-4187-a94b-516298333941",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5af49c-e69c-487d-a0d9-66878f5a06aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0f26a5f7-86b5-4449-9317-b1a9d3fae286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cca78f-165d-4532-bade-1616735fc010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d73e9391-d5ac-4c1c-b539-81f903b6dd83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e4ad411-3f75-4c11-acd9-870bde967841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5c70503-2b2f-4dec-82da-b5f4117840fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9f27ab2-eb99-4592-bd0e-cca7bc765840",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca045e43-9475-4aba-adfd-47355f57dd1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1489fc9b-e135-4dcf-9a4a-8fac2383f390",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df659b47-6aca-47d1-95ed-c411019792d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52cb1a2e-85c0-4191-82b9-ae8449d7876f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ea7e183-fa8c-4eb4-a7bd-7ec27b8c6c17"
            }
          }
        ]
      },
      {
        "id": "074d1c49-1698-4cb8-a4ce-f89d1ecb5740",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "47ea7ec5-ac54-48f2-a784-85f404dac446",
            "name": "Negative Testing",
            "item": [
              {
                "id": "535e2676-0a51-471e-84d3-7196a5d76435",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19852caf-02d2-469f-9840-67d0cd07663a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdd2499-c23f-40e2-bda5-3f111389bf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17020f07-a30d-456a-b56f-b09d118a6add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9788767d-2f0e-4f26-abf5-ea33f4192361",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2ab85a-ee1b-45e0-ac53-2ec9a5047b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539424fd-c666-4f1a-801a-0dc1ca55c35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f425dc-da2c-458a-bb6a-53deae1d4b3c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fc976b-c707-4e31-b87a-6269a27d3e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18123f88-58e7-4cb7-a439-3965a4ab5fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e51a95a-bc3d-41bd-8f6a-b4da699844d3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30c2fda-4ccd-4e33-87f6-6cd94fd7e553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002216f5-14f2-4a9e-9ec7-de5adea19876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a00970-7112-4b70-ba31-bd7b484ce665",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8e368f-8f31-4455-8e3e-a5030f726b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30aad3ca-39f9-4f3a-a960-79314379a869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ff4b4f-bd62-4d4f-be3c-9fecc564f57d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f5d6f2-61c8-430f-92eb-5f5c82d0afbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd12381-9b74-4b1f-8e89-b4fa8fe4215b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0830ef24-5c91-482a-b95b-d7767d1c4a78",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac396d41-8c0c-425a-a5df-a9339809dcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8b7d75-508e-4a0d-b75f-a4a3d397cfbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17081333-0d46-4604-a59a-b28114fb2f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c0cc72-7243-4d85-8c09-6ccc80030de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fe7308-cb3b-43fc-afbd-5b5c2afb3d6f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49de9dcf-c413-424e-8587-92ee369b5280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba0988c0-56b2-407b-9eb6-66630b1ef32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa465a6-37dd-4e34-a108-bbab0589b7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9fcf7b-75c4-482d-87e8-4652370685af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688c13ff-32bc-4e74-905d-b191503464f4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a0e225-7ea6-4f48-8eff-8f7791a13120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1931030-0382-44dd-afa3-072c0fa9d626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb1c4eb-91b1-4629-8b56-286c57f79ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc48ba3-348f-4606-a169-8ceb9b86d9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c73217-bbff-4726-9533-edc05bbbbc52",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1a8954-49ad-4ca4-9cc5-cad541b03743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a921f187-02d9-406a-9f97-2043d9ac2020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9489717b-c4f1-4a63-a169-9ab26a73d1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01342dbc-0be0-41e9-98e1-7649b6d0f486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88133ac7-ade8-4d2e-96d0-f37d307cd0ab",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8615a005-f133-4f8f-8e05-fa89d8c03340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cba903b-f7f3-4d6d-9f82-012e337465b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a210a3d-72d3-47b8-9039-048d3f327474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487dba2b-2eb3-434f-b030-4cdb6bc72a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f796c9f-ed7e-4940-b66d-99bd9d2d45a5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f82034-87ef-4f41-a5b6-73db17a1ceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1393e04-17eb-4ca5-bc59-50dc67c15248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52235d2b-f435-40d8-9c46-62f87b106bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff969eea-2610-44c9-93a8-8bfd063d7a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507b7129-1601-4901-9b32-773c0d1b954a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c3482a-ecf8-47cf-a4e9-364ae3ddaa74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344c9dea-7a1d-457b-bf27-4b119f43b046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad46ca7b-81d9-47ea-a46c-30e85cc726cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977d08df-4f0e-43d5-9629-d45b60a5a2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b51063e-c6f9-4ee9-864b-00a2e84806cb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafa5105-c25d-489d-9c25-e3ce80d42be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01766113-f1ec-48c4-ac3d-9739c0f098f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6270e48-73cb-4ec3-a161-43f2341f45df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e22b606-9812-4679-a767-dcd15443a9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e499eea7-430d-4edc-aaa5-11083aee2b5c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641edb4f-27d7-4f7e-8e07-54176d4c80bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23ce4d2-cb5a-484a-b025-51faa3a7d0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6ed723-2245-42b1-930a-6309ac4dea94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8720579c-a2ed-42dc-b3de-2c0de77b5dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d28cba-d2c5-4a75-9997-0ce135e79dba",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b210884-0054-4949-9124-7452c0a08bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06fae842-1458-4de4-aede-20745a905ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3587a24f-6991-44da-9eb4-594d1e71d61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3f4d41-ddbe-44a1-8ddf-6660b0ed089e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c72f47-2021-4491-a96e-4127e3076e9e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8edb74-f00e-4897-9c51-475c477a455a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4001dafe-cc68-4e3e-bd32-4e4b047c8c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59873560-fb0f-4b5c-996c-0a7988f5d50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b7173e-6df2-4cec-b51d-2c81fad78859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a74da99-5f6f-400b-8ce4-5a25ece1bc05",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eda7a2-9b16-495d-9071-1d9cef2d39e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4a0d96-8b8a-4ac7-8b23-3848dfa80f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6bd05f-5a3d-4ebc-8b5b-280f95e755f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577fff84-8237-4aa8-b8e1-85f81ec0416a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754b57ba-5ace-4930-87a8-91159da4ce02",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d2840f-eb52-4106-8039-5066dd7c3926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c52c2d-60a1-43aa-bc91-6d3521cd87d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db466b56-4310-4be8-9e0d-7b7a658b3338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83d6493-f8bc-4642-9861-fb893f5bdd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e47d7db-7264-43c9-b61e-b5539dde45a1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98853cdd-5e5f-45e9-8686-0848d7f34cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb44544-4be4-42a5-86ba-1abe8f6429ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b023b42b-de8e-4453-9a69-10aa46101314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9733f6a2-2cb4-4ccf-b47e-c5edf5243bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e260c10-4053-4e11-a8cb-0e2ba3eea84f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c0757-3cd5-42f2-b78a-1ee9cb34c795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd1236e-0492-41fa-8c0d-81689a8b5d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2a9482-6313-41e9-ab4b-835b92e9d46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cfd3af-0df8-4b7f-ac7b-237e991e2546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798c749e-e7d4-4814-ba65-6b3a96180288",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd41e31-1938-412d-9419-2568aa0ff9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfade68-1d48-4ae8-bfae-783cd6258e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9533de37-e697-47d0-9c1c-b24dca4a923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0839646-a060-4788-bc4b-ae318d3ecf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d5abe6-bd29-4c6b-9c53-57ee10a8842d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ed5a05-e13a-4c9b-b654-5b0eb3abeaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435b7444-3add-48fc-9e58-9f3000335c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0972e1e0-0b7b-47ae-bf4b-28b6aa93df00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10c6c99-3c6c-4fbb-abc4-104d26bde46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ec8627-0203-4f4a-9263-3b217530dcec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf538c2-d8da-48f6-9031-48e57ec0d88b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2529ce-8586-4fe2-be41-21e3ea62c06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee89831-3b62-4153-b6dd-db809b984a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ca9ba4-4252-4b01-b955-d74ef0599e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc32d1a-888d-4c7a-9dd6-2b318c8f44fe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d02142-7320-4f18-9a06-b28fb91ac170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b10717-5d05-4611-bf76-2ba44f4f6b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6145cdb-b84f-4cd7-848d-91e765b43b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2534f837-8c0b-42df-bc65-c5f9f9d4ca51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41f9e8f-77cb-4d07-b0bd-32ba8e1f4716",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d25078d-4d27-418c-bc92-393745d75a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1400f26-a281-4a67-b768-0622b781d2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee268fa0-b52f-42d1-9fb7-073cb247be2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e385c449-907d-421b-a71a-f8a31fde501f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35910ce6-2cc1-4da5-9fbc-4fd0883a41d1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc799d3-7021-4528-bd18-f1dab158b4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b98e970f-d874-49fe-8ff4-d9667c6ee609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de520fc-d42f-41dd-8d8b-3c63ebae070b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3b3e0a-d26b-4e44-9391-9c02946bd47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ee449f-e5ca-45d9-94fc-29fa8d94aeed",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c3545a-df46-4250-a56b-d1a15656f694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db96114a-fcb1-4089-8f85-a3c25bace92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688d8022-c4dd-4857-bf05-622c7b354963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad73837-48ea-418c-8d28-cfbb88f569ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0caa014-38ff-4ec0-a6f1-e546189fc748",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b5dd3a-2b4f-42b0-b5d9-fccfdb558c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ab6522-f3d7-4e79-a5c4-b0213abb9398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8be4e65-5c34-4f55-a844-bcbc17fff325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9447d79-cd27-45ce-81d6-f3fb318581a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a02c40-d9b1-4bf1-bc72-7ecd57d15bb1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0762585-c9f5-40d2-8d25-a22cb9582411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4a0762-6a88-48b2-aca2-bd41cd95bdc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac02ac3-712f-4ef0-bae4-0267028c018d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af17f6c5-75e4-4bff-8585-e205c0016383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbe6da4-60da-49d2-9cef-dae827a6e206",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2798be95-03f6-4add-a971-80026cac9891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92c657e-67dd-4d5a-a958-ba35b54cd10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0de4c2-a271-4955-9332-7333cbcbb298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227c4bfd-f2e9-4e3d-b275-6db773fe13cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0019c95-5934-4382-a039-839400dad9e6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af9bbe8-a698-425f-8d1e-b8e6ba592da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2798527d-7eff-4002-9dc7-25ebb9f78fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba5747f-ff39-46ac-a740-8f3f15efd0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99446190-0ca4-40b3-bc8f-116b4b539a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5235f9c-c21a-444a-bcb6-d0ac41853dfa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec46cd0-6c1b-4d97-ba07-8e9b331c22dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a8a37a-5726-4f5d-8b43-d2e168eef044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef257b03-b5e8-423f-8a67-e337a3a3b413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f763e8a-03d7-4074-9894-034c44b00e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1b94dd-6e01-4f56-917a-714f4135a0ac",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d52036-e27e-4425-8a0a-01667eab8bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e5a085e-9f51-4d5f-8784-ba2e3a2e5ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9878e4c-1f49-49d8-a316-bd53892d171a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f9a6a1-0b45-460d-b524-c5eeb2444ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a3e3f7-0da8-4a6c-b41b-4b9526e9ec85",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bdc4b6-4bc1-46df-bd20-cf729a223f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2e5dd9-251c-40dd-83a0-336e76cb90af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f08fb9-b69a-448c-a303-ec2bf2054794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b076c0c-2429-4f11-b125-7ae02cec4b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5bf842-215a-40ef-a556-1e6b38a63605",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d03dae-4e42-4b1e-a3ad-e493c467740c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84530013-86af-4a73-a06f-9a3212cd1e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19716fb8-e175-4739-a973-d961dffee889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd314c8b-ccdd-4009-b590-9af4e478b04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b03c905-2396-4ff2-a554-81aab73b6491",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eb7c80-955f-4ba1-b624-072644986c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dd1832-f6f9-4894-a3d2-4ee8977023b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125bfa94-7680-4710-a221-37087b430fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f8a5df-e4ae-4936-8f3e-35bc1075db8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd85e21b-5e03-4964-9312-7e59ed623121",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72c3644-2b0b-4e7a-93e6-d122aa4a8ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9da9b9-a23e-4367-8030-bac386ab0e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565a6814-12b1-49ba-8f50-36bc4a98d908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ef8a78-727a-4c8b-b925-8cb80d9f40cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c53a984-32b6-4a9e-871e-213a87a5734b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742611ea-5164-4990-bd37-63c6107ed475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47208817-4c75-433b-bf60-2956c8cf9d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4592e1-195c-4e0b-ac4e-008630ee821e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117fa83d-591e-4da5-ab92-6c95a051e975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226075a2-6cbf-4b99-bf00-a38291a5418c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3408e2c9-d214-4705-9ef6-a56a9aca21ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58ecdba-3c5a-423b-bfdb-cf9f4728fd10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86626ac6-0b00-45e9-bdab-03f5d0e90a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028ec782-f1d3-4180-94d4-2e2dea45e85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7187cb38-e015-4f54-828c-7ab909b76310",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff09aae-00d2-4630-be39-c8363a13368d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139bf205-889f-424d-b5ff-9c9e57b07cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3170761-fea4-402f-8eb4-affda448f4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e670699-7800-4ef5-8fbf-27463baa5a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17091ec3-f901-4e5c-a093-8e13b0ad01e5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f9a4ca-c962-4345-bb9d-da6d186a5e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a979c7-c1e1-4bc8-8203-7da4bcffbbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c703c7-8d69-4807-bd70-87e42427018a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9682afc-8ba8-4529-adfa-b177647484e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74bf9d8-6446-4d53-8c7d-9fed9fccfe55",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6924430f-0795-4eb3-a9c4-02c57d2d75c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99a1489-88a7-4d32-b6b3-63709999e073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af75f3d3-c437-44e4-8e65-7aef2088597d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ff25e7-5205-468c-b325-d45c57624b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e285dd50-f3c2-41a0-bca6-4317a95d158d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1713c1bb-1432-4a21-8d6d-2193cf728f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4139d751-e106-412b-9543-332780a9eb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceb4890-dc0d-4374-81bc-e797908568c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cf02af-357c-4030-8ab0-37331e819bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4c9423-f864-49a6-a5d9-55dea28ddb23",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d76bbc-228e-42a5-953a-1b051c0f1768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea4eae2-aa76-41c9-977d-76be13768237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e774e31e-d25d-42c5-a0ca-36ade6aeda92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61a6a19-b163-49d7-9feb-89dd379c89c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053639e9-baa4-4266-9ab3-74dc926c7505",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ce0bb5-3b0b-4eea-82a0-25091af96a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becd00db-a4f7-4d44-81c3-e1d96a125f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9841fe8-308d-43f4-830f-b5e8162125aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bef07e-61f0-45d2-a668-c74707545b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b3e955-52f6-470c-a96f-faad7a0f5904",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3ebaf8-84fb-443b-b6e7-a9f99b909cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fe06a7-0329-4821-b876-1a0e54e29b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8decb6d7-713f-488f-ac3a-6cd1748b6c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef85551-c473-4344-b6a4-a5568494f54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2303e14-72d7-441c-adc7-a32699e28c09",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cd9824-0b71-43f7-bd2b-d6a90918526b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb96bfb1-4f87-4d80-a504-225e5f0669cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe3e016-3c83-469a-bb65-c063a62ec017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb035a70-6a2c-46f5-9b1d-da9418fab0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04266d75-5b9c-4b1a-92dc-33cfe8b0a989",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e0780e-b2c4-408c-976c-f463665ce45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada8d204-7d76-44a1-923d-062278eb6d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a20c827-eb8a-4c86-89c5-4010b9fa82b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2e72e6-958f-42dd-bcd8-3694c9bc4ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dd19de-424b-4134-a0a1-3f1ee436e941",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bcf8c9-55e3-4f43-9b97-3c65fdc7d036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb34558f-2953-4751-94d2-8110ccc7f81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162611dd-4056-4be9-b9ed-22bdb8c04224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c38b7f7-7858-4690-84b3-a64b6fc48ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d88493e-15c1-47c3-a78d-569988610fe3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a64fe4-3dad-4ba7-8463-a525744ba5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cd5f2c-6313-4a7c-b6b5-d1f69db74f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26537c97-4b88-4650-99ad-3ee30e5b095d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094399a4-9445-4004-bb89-5ca57827c35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb4b9d5-9fdd-40b3-8a30-326a63d8e410",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d743fa-e033-4cd9-9774-e5e95ba7066e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbce2689-4040-4132-9c5f-a9f3c5b21ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354544f9-640d-435c-a6f0-c7aa55477f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bf3210-3ae9-446d-a20e-5431cc8e8e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c72640-920c-4a64-80ba-5e9a687905d2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6e156e-809e-4edc-9fda-75372431398f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03dbaa3-ce92-4a20-a363-f298426bf492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a4bd5e-4038-493f-b094-b9d26a633b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf3666e-902b-48cc-89a5-e15acb99ed13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540de937-6acf-43b5-bbc9-1f01b0025fb1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df0aba2-4e88-4617-823d-48aabeb39184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e58abe4-a748-4c21-9125-1a2ed8d6a4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0583609a-4469-424d-8101-ec1f2e2e2507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a36976-c05a-49ed-8ab5-f407c9d299dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe74062-f7e7-4713-bf9e-a51a55418649",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672128fd-7555-470c-8b3c-4ad6144b189f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9325c0de-e5a9-49dd-a70b-c001b5ccef23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4867b416-578f-441a-b1e4-5d24a57d73a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fa6d9c-8dd1-4b20-83cd-8039ca47b805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71e58cd-aaf2-4d9b-bf4d-2b059c546879",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa17b7c-7863-468a-b547-63b0f5929f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7292baed-f0f5-4fcd-8204-342788733694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5afa62-ea92-4366-954b-620cc9ae1dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6b6c67-e652-4f5c-bc4d-cb3316914ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c97a2-a441-451f-af90-7794ea70014b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77f551f-d453-4983-b40a-e3a87fdacc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47264a74-14d9-49de-977d-e93005f247a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65685d4-2f52-4184-9ff1-1687a6b4e951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7deb4230-6c44-41b8-9eb1-9d9e387fd6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9af60fc-7113-4d46-a544-159d9db1a8e1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658df03b-e1f1-41df-80c6-7b436434a43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50645f2-9145-4d69-ae2b-f03ca55e39e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ed1169-f28a-4110-ace9-0d57419785c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f21be41-ba87-45f8-a226-e778bd1f53ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54261fb1-f3bb-4c80-a87f-0ccf6391c8b5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b714f8dc-7274-4970-ac16-f63da886e33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ea0505-85db-4cb0-939e-734e712fa5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241fa48c-f787-41e4-b904-bc9d2429a973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a2a227-27a3-4a95-9671-dc1295f856c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f522489-5db2-48f5-b2cc-8f08a812d1b9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322405dc-aed0-4a51-8868-293d0de0e87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10953e4a-5388-4ba6-b071-61025bb56ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6638bdd-47f3-4cad-9f77-bd41650c162c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3e96e3-2cb0-452f-a573-57564ceef3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d583408-cd63-4c73-965b-8ba2f9f4c98d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfff0d19-9d90-4bda-b68c-4c03f9284b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba109be-aa38-4fc4-9f16-0fbba1db9ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c7abff-a104-4316-a72b-8033a09930f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32fe169-7a89-4b1f-8730-e137ad4f2532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d13055-305a-4bdf-bcdb-5fe79a499d04",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e67e142-c54d-4672-97b4-d7f37e564055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d211237-4f11-489b-9e14-63280079ae7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ef87c-f1c5-4cf4-be81-6697f57ad54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7948e2-a49f-4768-852c-7d9613f13199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f99fc70-6afd-49a0-9303-adbd61aaad24",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb857358-c7ed-40d5-9ac0-398080ca79a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc710cd4-0ba3-45f9-88cd-403b32dcfcec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f6612c-3671-42e5-8082-74951104d655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca379fac-bc5c-434b-8b46-e4565840864f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2b932b-90b7-4bf3-ba58-454fc74613d7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd67acf-46af-42bd-b17e-ca05d4d267cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0690119-6d5c-4b61-a382-0cc964eab79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cdd3a9-b519-4d77-96ea-fdb7edd6443d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623e8c5a-eac0-4fc0-b6c8-d0707d399f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55014aa3-e7d8-4131-ac51-4961c2f9f9ea",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442a3484-c714-4400-85ff-cbb5f6fdc102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660bad76-2ce8-4f36-949f-930c91659247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476ccc59-ecf6-470a-93a5-bf5eafb85460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802dd6e1-e1f2-4557-b26f-ba25bcb6bde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c551d2-9ffe-46f9-b10e-a942fbc915ed",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa95ded-8684-442b-8b3d-da0de08e5064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb81f85-f342-4ffe-9840-bb17a7237b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f641c52-022b-4f09-928c-2845ed055402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31425537-f986-4b22-add2-04ad215db0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704ca6d1-89df-4dac-8ef9-7f91a7945f4e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9155f7-8956-43c9-bf52-829d414fdf78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f764256-3996-4d1e-8e6d-0b3ef45287fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec80f92-fe52-4437-8fa6-ae410d7ef03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8824326c-8c97-4ae2-93b8-f253b0a5f24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeaecb7-0279-4f1c-9818-677353f5a3e0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46404ddc-1c72-4e3a-9d62-ac1c4051af1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441dee84-164e-45e0-8b1e-10dad9e7ff14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17090f8-7455-4b4a-a347-5b4d5bc0ec17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2fe071-f670-4a3f-b85f-92e93d7a437d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592f7846-2c0d-4ba8-9d83-483cf944bf61",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baab97f9-b956-4e55-9e47-37b85eb4bd3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feded540-498b-4bdd-ad15-e21f2ce58ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f46124a-52dc-4bd6-9c27-d019400aa0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1b2aa2-4c7d-454a-9053-3cc4f2939844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64a169b-e5d7-46ad-9bf8-af6339f01b1d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea2e363-4201-4319-b2c7-dbaa0adb0949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0bddc2-b798-4857-b711-ad49dd1cf1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c397e342-cd12-4b1d-bef2-51e9e920d4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173a733e-1776-4d25-832c-7bdd5a33adf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89051d5-1054-493f-b8d7-9ee5882246d2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ad5aa6-d861-4be9-afd8-bac088c611ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e7f2c22-f29a-4469-9c2e-6f8396ed9532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe56ccf8-23b0-4615-b704-9502fef9acbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95167489-d43f-4969-a8c4-4b3e3c48e79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec2d55-5dd9-4d47-ad10-173d5832358b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ca4c4-6060-4395-9035-a62e0d807193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6c7441-0e5e-4f2f-b6bf-4d363aac894f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc292250-f200-4d7b-a84a-5593ae7171bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fee3e67-38dc-4ff7-982f-f10b23cc1423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4805d93d-126e-4f17-a3c7-c766c8c4e59d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb174128-69ca-4727-a058-c8e117c2e05e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9309d7c-0ba3-480e-a57e-3cbda14b4d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290a0351-3a59-4f2b-b6d8-9bc05a541a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c54f213-7abf-4db4-9449-c11c10c626d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e24d50b-b216-4f51-9eea-91b30e1543b9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bae84c-7a6a-42db-96e5-3d670d0047fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2579f313-8259-4746-9ffb-472e14b20715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125109cf-3cb2-4338-afa6-f12e06d1d8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f38eb1-8737-48bd-8180-72327cd995ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d2920b-0729-47db-9eaf-fd9f0c9cd581",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db799eec-b17a-4778-99db-bedba048c663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6ff7a6-6bd5-45eb-81e2-9bf07d07c411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7c0cf1-19b8-4668-9047-4a0545c16843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67c3022-ff91-4b39-82e4-8b94054f0047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd6b78c-b087-4deb-b7cc-d50b9f16cbc7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebcf818-17b8-4e80-baa8-58eb7140cb78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68239d81-9c61-4c7b-a10e-591bd33cd9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac297b7-810b-4c47-b142-aa77cb9debb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb398708-231e-46c8-aefa-d7b323a4de46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a976911e-ff54-490c-86ed-dfa5e20e1b19",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb643f1c-7948-4313-8f04-06594fb92853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d4de51-34e5-43ca-bb20-b47e8e7e75d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f38af4-11c2-49ce-85e1-cb201496d199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85527c50-70dd-4557-b2d8-df72c7c1f324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee903b5-9b19-4108-a1cc-f95481fc739f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98531858-0026-47eb-974d-813a5441d192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c18b093-96df-4fbd-92f2-7c2f3e78f87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40dd5e6-8481-4ac2-baa2-7917479dfd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72d674b-b83c-44a6-b1fb-7cb97abbf9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc4c04a-a357-43ba-a8a9-3e4d8d08b67a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fc82dc-850c-4cfc-b5f4-384c946f9efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9133f0fc-5493-4b0e-ba89-561a0874e505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c041f00-2798-4be2-96a2-d579961422cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2244eff0-d398-417c-947f-a3420a2eb3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493df18e-ea2f-45c8-b202-7f7ec57baf67",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60c09b-64b1-4fc6-8e0f-51e5b72edd5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "490bb16d-0be4-4a78-8a11-05f416368ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53830dae-8261-4895-8536-b076fe04e15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca138893-5eb0-43a6-9050-bb31ced762c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5a81a7-3cf2-4b4c-9a6f-22d78770c8e0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a4ad31-162e-4b25-8fe7-e2b64b33e970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "647cfd4e-984b-4f3c-b5f2-bff5cb09cc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46f32f3-b89d-44de-bfd2-362c020a1626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f0793d-b26f-4812-9db1-33ebe5fb19c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec5234d-ff9a-4e3a-9bc8-2dbf450714a8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc772258-737b-4a0c-b830-acf0abafba9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b71818e3-1490-4ccc-be89-bb38eba274c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ada495-f9f9-41d2-872d-2166f13a76e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c305a75a-c983-4cd3-ab2f-06cc0b32c4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b027091-4957-4ae1-934d-65051e9b1d51",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057f959e-c449-4a8a-90ac-89336482de17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b65900d4-cc22-452b-964f-1b219030008f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c6a26c-11b7-47be-91f1-55983107e856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42b438d-3327-4b00-b714-168f915e681b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01451014-2780-48a6-8cdb-40155562ffb1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a6677b-d4bb-460c-bc05-9152b4e6c8d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2288f4b1-923e-4996-bb32-9667368b21f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904b61c1-bdaf-4261-aea1-5b9c83fb7ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a30320-9591-48b7-a875-097cce918983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03d970a-b6ef-4be5-b9e6-1613ae37b840",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ca0c0b-2a02-4286-9ca6-4d7e89f58491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a4d374-3647-4132-9ac5-7b2c38439a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12af2715-34f1-4f94-8ca1-da7a592db226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f9f7d4-4e22-408b-be34-cff3b81155eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89edb0b-ca83-4d1b-ab54-3b5403861e9f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aceff341-4652-4eab-8f2f-db16e89ec937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0298a99-ee46-4ac8-87da-95515303290d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e4472a-e491-4589-8e3e-b5cbcc114eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366fb79c-1f60-4a2d-abde-2d86efdf03c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566a3be6-cf5e-4b5e-ae93-7292a96ad930",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20bb6a5-0625-4051-b7c2-fd94d6cd89f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b648e9b-9029-45e8-a5bc-0d127c4842fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec17e42-f6b4-4ad5-a381-56842c7f26ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d79986-71ae-4a4f-befe-ecf7a03af56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f048ae-0dda-4b60-b744-d749a2e22ba5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e497399-dbf7-4d78-98d1-d8a4ff6820e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a632d0c5-7dde-430b-b5a0-10d91d71ffe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3198becb-791c-4c98-9649-3c676249c4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8070064c-455d-4524-b1e4-5e07ab9b8b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea34972-4b89-47f8-84a8-2769805ac053",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b997b53-f035-4214-af24-85a33a693254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d669aa16-0ab6-466e-8a73-b487ecb4f24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6487fdf6-0c46-4b9f-be8e-eb2cedf587ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8659725c-7610-473e-a780-f5f1c30b6820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85400535-c431-40f8-a935-3a38d72eb57c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4029cf-06bf-4dbe-bb73-f09eba8e8437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83aec60c-f5ca-4488-93d9-05e95ec2bbe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb8ffb4-6510-4d17-af6a-be7bb8d72529",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f79d91-141f-429a-b97d-4fa380031d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f179f6a-f813-4d7d-91ca-3ee2ffcef5df",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c96876-80d1-4419-868b-c57cdcbe4e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b77ded8-ce79-4c6c-8f21-b3b5aff0531b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf41f11-ed6b-447d-8154-419af5d400cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81c688a-7dbe-4f04-a675-e7353e772dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc44047-2417-4a45-9bf5-8ccd7609ac6a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc6f205-4a44-45f3-ab7f-9fe508ea0182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a214dd91-7d95-4f70-939a-b05e286e5af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0efad85-3cc7-4cb5-9c57-c8e0d37ee859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3d3390-8c7b-40a8-90ec-12dc7b104518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45229bba-f87d-43b4-aab2-31d9fe2fa86e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edd6d35-af85-470b-bd89-d1cd30e0a21d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bd1b1d-3888-4f5b-a7e7-570d09970c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5d537d-2904-4c2a-a313-d4fad78f239d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d217ca-41aa-48d7-a748-d298d4e3a7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee29eca-d99b-4033-9847-e8c6cde54014",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86538a9c-cfb3-45e9-b45c-9ba0145a7c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16dd2afe-d59b-4bd1-b054-6368a5b635fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b71a9-78b4-434f-ad0a-96b8d7514d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31174187-9a5f-4b06-826b-1169ac2354bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da1c47e-473e-4064-9cc7-214e15a32b38",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cfd784-d091-4848-aafc-26e97f5d5253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2609a8b6-f8bd-4f7e-b3aa-a53a8533fae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72fe6d5-9145-44e5-81ee-dd9ee6dcecb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693525fc-9d93-422c-9500-edd1814474a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0751cb2-c5e0-4614-9038-8e53002d5c66",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcd8e72-9dd1-49a1-b726-dc5196658aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef30980-3689-4a10-9e73-15c0af7411b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e1407b-ecf5-419b-abac-7b9abd6785f0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a7080a-c4af-4cab-b3d1-c7ddb48c6a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ba15c4-ac72-4b73-8d7a-dbb0195c0c7a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32297d9d-8704-435c-b5ec-f820fe198ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be475600-00b9-4eac-bcce-c3dc17ff8f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3078071c-ddce-4371-908d-2c4724423f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01880ee9-4092-4a6f-8a16-7a7a47f1c754"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1106cf43-479d-49d9-bc31-6f2b69b90586",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d55c822f-2452-4eda-b605-fb5bb3d503e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "353c184e-651b-403f-809e-44e5370f2f2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36b7e47d-4408-40e4-bd7f-b037888f552d"
                    }
                  }
                ]
              },
              {
                "id": "a8bc13d6-0fa5-4583-9538-cdea3a6ccbf5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f93682b-c3eb-4bbb-8af3-a10a0b29ae2e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789081a9-64e6-4cfb-bdaa-d4935d56e064",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "410740d1-49eb-4a3c-a323-96c1f10e316e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60943f2-e239-41f0-b7c9-4aae1f1bf476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e82dbfcb-f6bf-41fd-b635-69f67965a57a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c80f62d-010d-45f7-8c15-32709a788eae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "414dce69-cd47-4999-a085-fcd4ef62923b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d913b7d-d83f-459a-a036-c5483d7062d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "674c00b0-c8d9-467d-b866-ffefb7ddbe96"
                    }
                  }
                ]
              },
              {
                "id": "12e19f09-cb2b-4030-a0c8-5025a06e7ef1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ab00e845-3997-44f6-bf27-cc3f7721d952",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76cb22c-cc76-49ac-9be9-f5383c6f4298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "40c9e8df-6a4b-4335-988b-b14d3f037a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26929778-c6b3-4e1b-9182-a22e6b7c8d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e386a3-822e-4829-aabd-09f4f92d5aed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff888a33-e628-4630-bb5e-36e5ac7e06f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c2ae417-e47a-48f5-a2af-fe4f378e51b2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6c37ac7-b65e-4569-a5d6-d0eed9aa7aec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0cff0d3d-33f7-4920-851b-ce794f634b03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb07ce52-897c-48db-8cd7-5a884e525d4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b4bccf7-f4f3-4c7b-a362-0b13629a5502"
                    }
                  }
                ]
              },
              {
                "id": "a62a80d8-4705-4756-8325-7909c17ae07f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ff5ff66-f687-49c5-b971-369eb9033b64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8fe16b40-ee1c-4802-982b-a4ac8480e455"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44ee7b67-7e99-4778-9ea6-c9346c0dff45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8219ba09-f355-4784-a974-6a4b9f2c207d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebff2ca9-70c8-4025-bb26-3f9b4403f404",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f02346a4-568f-469b-875e-efe5112d2ac8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26e562fb-6c9d-453a-8689-05f49451a354",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "956046fa-cebf-48be-ac88-b5de456bf652"
            }
          }
        ]
      },
      {
        "id": "605b99e2-00e6-47e6-94ec-282c0aea1c83",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6be646b2-112d-4d17-8d88-ab9a69b13de6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a5a9647-cd79-451d-97d0-81f60c4281fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b171eab0-a317-45ff-9d02-70bc367e35a9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2aa1ea5-a637-4a14-b69e-ba9ba04f3fc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7d22648d-d0c5-4a7b-ad41-be907307e5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b5d31f-5f66-4c79-acd2-cd8a9e26abe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6533778c-0d40-45b6-948c-895e940bb675"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ef2a26a-3268-4b21-bdc0-bec6dc785ffa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4887a4e5-2f09-4656-ac1c-a0a7953f3fa0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c3dc14c-5628-4392-8736-4755a16c7f23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dff5756-150e-4988-a1d1-67ba3345962d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a214a5c-1c0a-460c-b034-0580b7797b64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8184891e-d01b-42ce-b24e-ce5e6fd2ab95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee7ee46b-1477-4eea-a146-0a55ad08a1ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f28109dd-a395-4f6b-a540-76952f64c64f"
            }
          }
        ]
      },
      {
        "id": "4cff90ac-d28f-430e-a195-30a2580e0ac1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6936e3ea-11e6-412b-86d5-47ffe183763c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48d13aca-32c2-4736-9243-8a052becfaed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b68384af-bb6e-48c4-b327-a0a8c0b0f924",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d45e004-2076-4c92-9425-88a4b15f0016",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb50dc8-9482-4e13-9b5c-62b30db49f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395810ea-fccf-42d5-91ba-ae5071216fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab7175b1-a512-402f-9ff7-f6cb7ebf0f47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57051676-ed0c-494d-9e5c-f804b9c65fd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2609cdb-2491-4811-87e0-73343abdcddc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0054a592-d3d6-4be1-b9bd-2523cea926c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e6f0449-6068-4cdf-a6f0-b71ccbbf8a9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "182294cf-c4a4-4a9f-b6b5-992ac285b5d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9edbc85-93bf-4746-a520-897572b9b8f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ac08cbb-2232-4cb5-a9a4-f9deab96500a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31066f81-1dd7-4b7f-adbe-8445dbe7bf6a"
            }
          }
        ]
      },
      {
        "id": "d30f6000-6838-4333-a963-7aceb6b6488b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c83c5a74-09bf-4f18-a5b4-56a4b56f78a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90ec2e95-6311-4041-9625-12681114daf7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25b3fe50-c22d-403d-be7a-4fa9f20d7023",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664d95f5-5afa-4cc5-ab09-2becc6cd7f27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c6d7786-ffaf-4088-a2f1-4efbbce9c5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d59a1d8-9cd3-4751-bb1c-0325bf5f6d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acb6412f-afa6-47c1-b57c-ad7ec9e1aa10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d0a8194-5475-418b-9bc0-7cda8973cfd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8a7e143-5ae5-456e-a560-bc48ee5e0647"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcb4ba35-7065-4b14-b725-82e8560c4a5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4614ffce-01bc-466a-8248-697145db5723"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af09fd81-b711-41d4-9d93-374ce6d55ada",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f3829b03-aae0-4541-aabf-056b63a6b025"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd0f6e54-c982-4f38-ac3e-f103fa450487",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eaf675b5-0d66-4acd-af6d-29187d7a6300"
            }
          }
        ]
      },
      {
        "id": "2d4aa404-a24f-4dd4-9d5e-291df9b27e57",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1d650de-14e5-46f6-93a9-87375716f127",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ece177dc-578a-4fc9-b33c-8662da974e31",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c6032c29-eadf-434f-bc95-df869442c619",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f6ceccb-2de8-4905-b9f8-62331b1f4ea7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c705ba3a-8954-4930-bf7c-a22d4a7d9abd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 796.3252032520323,
      "responseMin": 21,
      "responseMax": 7606,
      "responseSd": 942.8695949624389,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686703216680,
      "completed": 1686703423510
    },
    "executions": [
      {
        "id": "5ed87901-be6f-4fd5-87dc-fcc3cafd964b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b7040d58-d344-48de-97c5-dcd1533f4c8c",
          "httpRequestId": "46aaf338-853f-47bb-a9af-42ad73cd63cc"
        },
        "item": {
          "id": "5ed87901-be6f-4fd5-87dc-fcc3cafd964b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "08cd9cf8-13c2-48fd-a1df-a3900794e0c1",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 0
        }
      },
      {
        "id": "1089528a-d024-4c5c-9b2d-ec6e3c808507",
        "cursor": {
          "ref": "8bf4561a-acb2-4e49-b2ea-f79974fc1f1c",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d36d7fe8-3597-4bc0-8e1d-80fa1d897c6d"
        },
        "item": {
          "id": "1089528a-d024-4c5c-9b2d-ec6e3c808507",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c6a3d81c-3b2f-4664-aadc-4a25a9a956f9",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "f3105784-d229-4df2-af62-7ba3c92ab957",
        "cursor": {
          "ref": "64b096d1-bb56-4148-adda-9085fd0ffbd1",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bfbda856-658b-4bc7-9b2f-777d1ae62338"
        },
        "item": {
          "id": "f3105784-d229-4df2-af62-7ba3c92ab957",
          "name": "did_json"
        },
        "response": {
          "id": "80474cd7-b6d7-45bc-a537-ab8e92224902",
          "status": "OK",
          "code": 200,
          "responseTime": 1073,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f408fe3e-40c8-4ba5-a13e-b9f789b5ed77",
        "cursor": {
          "ref": "c5473aa0-6ba4-4dd3-a912-84597a719dd3",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f133358a-6cb7-456c-a5bf-71bdf9af653c"
        },
        "item": {
          "id": "f408fe3e-40c8-4ba5-a13e-b9f789b5ed77",
          "name": "did:invalid"
        },
        "response": {
          "id": "6d802e42-c70d-4057-b824-658248a3316e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f408fe3e-40c8-4ba5-a13e-b9f789b5ed77",
        "cursor": {
          "ref": "c5473aa0-6ba4-4dd3-a912-84597a719dd3",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f133358a-6cb7-456c-a5bf-71bdf9af653c"
        },
        "item": {
          "id": "f408fe3e-40c8-4ba5-a13e-b9f789b5ed77",
          "name": "did:invalid"
        },
        "response": {
          "id": "6d802e42-c70d-4057-b824-658248a3316e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440b6bc2-19fe-45d4-ba13-18314447c21b",
        "cursor": {
          "ref": "6656837e-e53a-40bf-a530-85370cdc48b1",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f78bf5dc-62a6-48b9-a555-4e7ac130c94c"
        },
        "item": {
          "id": "440b6bc2-19fe-45d4-ba13-18314447c21b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bc134539-b1d7-46eb-98ed-bd0ffeeea347",
          "status": "Not Found",
          "code": 404,
          "responseTime": 803,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffdf034-12d8-41c7-86f9-cfd2bc2f8c93",
        "cursor": {
          "ref": "4e1e3121-cb31-424a-9353-f3d0b9a2284c",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7a50c95e-0a46-48f7-861f-479141ed4e6f"
        },
        "item": {
          "id": "bffdf034-12d8-41c7-86f9-cfd2bc2f8c93",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0e57bc78-da8a-47b5-af54-380d5585fdab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 866,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2109eb9-213c-43b8-92e3-dbd016417821",
        "cursor": {
          "ref": "8abdb502-bd1c-47ea-af61-410e95d0e5a8",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "77c719b7-c884-4e61-a951-e71c23c93461"
        },
        "item": {
          "id": "e2109eb9-213c-43b8-92e3-dbd016417821",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1a964a39-92f9-4166-9627-6e44ee314c00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c833689-0a57-4ffa-b6e0-74b8c4d1f524",
        "cursor": {
          "ref": "8139e2b5-3923-4a8a-a47b-105d937e653c",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ece15ecd-2e43-4f7a-b86b-2b66cca70370"
        },
        "item": {
          "id": "2c833689-0a57-4ffa-b6e0-74b8c4d1f524",
          "name": "identifiers"
        },
        "response": {
          "id": "145844e7-2a63-4ce7-95d6-29c24ef467e1",
          "status": "OK",
          "code": 200,
          "responseTime": 1535,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45a1754-6beb-4495-94e1-bdb6b8ce2968",
        "cursor": {
          "ref": "bd150d6b-d3b0-4c74-99a1-0698e5a505b8",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9cf344b7-7d64-4d23-88f7-bf3695398b31"
        },
        "item": {
          "id": "a45a1754-6beb-4495-94e1-bdb6b8ce2968",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "34abc99f-e47e-40b6-857c-9cacf9ce7e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644fefdc-425a-4861-b7ef-8d50f4c968b9",
        "cursor": {
          "ref": "8015b658-ac87-4f47-af2e-8e709d603902",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1e2686e4-d95c-4cad-8eca-ace291fe1afd"
        },
        "item": {
          "id": "644fefdc-425a-4861-b7ef-8d50f4c968b9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d8abdb52-8f98-4c5c-9ca8-7cf675907060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5235446-e1ba-4632-b796-2bf7667a74ce",
        "cursor": {
          "ref": "40ed4c6d-d6fd-450c-b1e9-15abb68ebfab",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c92493a4-8dc2-4452-b3ed-58ed0758fff2"
        },
        "item": {
          "id": "a5235446-e1ba-4632-b796-2bf7667a74ce",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "99ffb3c8-2091-4f24-81a0-8e98cb915cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f4bb4e-fb99-46d4-8344-c3d4015a59c4",
        "cursor": {
          "ref": "6c327ded-8e95-4aee-98c9-b75cc47448b7",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9119875d-0260-486b-8795-2dedd134ade6"
        },
        "item": {
          "id": "32f4bb4e-fb99-46d4-8344-c3d4015a59c4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "90b8b1ef-d789-47d3-a530-cebda43821ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf709cb-064a-48a1-b899-afce00e9ca50",
        "cursor": {
          "ref": "45fe4311-0b4d-4c01-b4bf-0145de856e1a",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2449234d-71ee-4be4-be00-d14f94f68f32"
        },
        "item": {
          "id": "adf709cb-064a-48a1-b899-afce00e9ca50",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cedab8d0-5b72-48e9-8445-4c5e2c7c058c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28679b2-d35a-4628-b227-ab1df4e8ff8a",
        "cursor": {
          "ref": "686f43e1-a14f-48a3-96a9-0b8038986fd8",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e58aec14-90ed-49ca-ad21-f18a56b3eb9b"
        },
        "item": {
          "id": "d28679b2-d35a-4628-b227-ab1df4e8ff8a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "36ae47d0-84bc-45c9-904a-aafef90aae41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79601e0-2647-4348-a255-cd6ad4be9364",
        "cursor": {
          "ref": "1188f757-5e52-4bf9-8249-a0fef60c75ff",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9ad9f212-587e-4a32-b024-5920819c47d9"
        },
        "item": {
          "id": "e79601e0-2647-4348-a255-cd6ad4be9364",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3088997b-dd9b-4cf4-aa1e-de3ee3a336a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2de345-411d-4927-b669-0010e985a66e",
        "cursor": {
          "ref": "7f9e35cd-fa87-4886-834e-146db4810d9f",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "15edd580-8fed-42bd-bdcd-799905839181"
        },
        "item": {
          "id": "ac2de345-411d-4927-b669-0010e985a66e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "30cf9420-b6ce-4f72-86fb-5d9c782a8433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80f8366-042c-49cc-a808-ce3c7883bedd",
        "cursor": {
          "ref": "c4e259b1-a739-4381-ba39-ae7cdedb5360",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2737db04-3759-47e3-a197-9a671f76f910"
        },
        "item": {
          "id": "d80f8366-042c-49cc-a808-ce3c7883bedd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f44ead9c-0352-4f1b-a760-cbdcb6503c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ad6368-737f-4997-8a85-01f1c7072764",
        "cursor": {
          "ref": "3dec1648-cd50-4ce7-ba01-b97b499130df",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b56e5413-d2b1-407e-aca8-b2370f0f94f1"
        },
        "item": {
          "id": "85ad6368-737f-4997-8a85-01f1c7072764",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b52b6519-d7ce-42bd-aac1-dd07e5c12db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2335a53-22a4-4d39-b47e-d2b8dab243e0",
        "cursor": {
          "ref": "434e8122-0ad4-4aea-8648-29f8d029d573",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4d68579f-5a82-4c86-9ffb-fb441d04ca5e"
        },
        "item": {
          "id": "e2335a53-22a4-4d39-b47e-d2b8dab243e0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f9fe1d84-7239-4420-b88d-1e98d689129d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90384634-63e1-4ac9-a9de-a68c4c1127eb",
        "cursor": {
          "ref": "6a816de6-2d12-4281-bc5d-45c2afadcd98",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "99249570-d34a-4345-9951-462e6738c522"
        },
        "item": {
          "id": "90384634-63e1-4ac9-a9de-a68c4c1127eb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "59440582-6176-40a3-9700-d500084d5fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e2867-e946-415f-94ce-92e940231542",
        "cursor": {
          "ref": "82d4e5ce-4bb8-434e-8d07-1910dffc954d",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5c63b3f3-c909-400b-b249-f1bf1385e6e9"
        },
        "item": {
          "id": "9c7e2867-e946-415f-94ce-92e940231542",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "152e2de8-0a2f-41ed-8d97-e069b0e754f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f600d9-82ea-45d6-901c-a42deba2089e",
        "cursor": {
          "ref": "6a3eba2c-3d7a-47e6-8e81-2785f0a4c3c8",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0c06cbd7-e3ec-409d-8a6f-ce90d801760f"
        },
        "item": {
          "id": "e1f600d9-82ea-45d6-901c-a42deba2089e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "929afc5f-e37f-45a7-8c97-3163d57ac8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ab0e6a-20ed-4bec-9639-d7490d35fbc0",
        "cursor": {
          "ref": "0f5c0af2-faef-44d8-ab8c-e6b10c93ea79",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6d1c1ca1-2dcf-49b7-8932-b1db7554d6cd"
        },
        "item": {
          "id": "a1ab0e6a-20ed-4bec-9639-d7490d35fbc0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5dcd8945-265d-466d-ad81-418189672009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2dc09d-fb0b-44f8-9139-cfc7f34f3725",
        "cursor": {
          "ref": "91bcc040-09d4-42c6-8b18-971187f2db02",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3fa1e49f-f61e-4681-8a75-fc666f6b8569"
        },
        "item": {
          "id": "2c2dc09d-fb0b-44f8-9139-cfc7f34f3725",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f18f164f-70c3-4d30-bea3-5591b4ad8671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab78dc64-740a-48db-9774-262048c41718",
        "cursor": {
          "ref": "97dee30d-0b46-4f97-8fdf-2971d9ef514f",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "775e76a5-292f-423c-9191-c3ae04e00bc0"
        },
        "item": {
          "id": "ab78dc64-740a-48db-9774-262048c41718",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0a2b5d36-1f36-4f38-ad02-f2bff9e8ec7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307d56c4-131b-44f1-94bd-1eb88490febe",
        "cursor": {
          "ref": "6e029eae-e68b-4ea6-afe8-106080285cea",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "21c3628d-2062-498e-a4b7-6ff270d5581b"
        },
        "item": {
          "id": "307d56c4-131b-44f1-94bd-1eb88490febe",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "123aec66-403e-43f6-aeb1-0170d5e98ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008890c7-d8f9-43f7-9ba9-39186aec9e64",
        "cursor": {
          "ref": "5d842459-9866-4000-bc44-d135ae6a6ec1",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c13e39f6-641f-4ec6-8e25-eeca4a9a9115"
        },
        "item": {
          "id": "008890c7-d8f9-43f7-9ba9-39186aec9e64",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "91dfa323-127f-4baa-9432-8ba4dc7af390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c80ac67-11cb-4f8f-ab55-04bbf6c3c213",
        "cursor": {
          "ref": "6ec07d3c-0ede-446a-a83a-1fa0df25ad58",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9acf4f9b-18be-4615-94dc-92ee96f733e6"
        },
        "item": {
          "id": "6c80ac67-11cb-4f8f-ab55-04bbf6c3c213",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "53555452-9efc-4e9d-a7b8-d5555b20ec62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081fe061-a08b-4940-94c3-bb9da641f748",
        "cursor": {
          "ref": "c4963bc0-4f4a-45b3-ac12-89daee058e46",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f54af3b2-fbbf-4ba6-87c4-29ebf51715bf"
        },
        "item": {
          "id": "081fe061-a08b-4940-94c3-bb9da641f748",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7a61e10d-5756-4ce3-8b23-f6cc51f025f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cdc2f5-2efe-4fec-9942-86b90babc032",
        "cursor": {
          "ref": "b9d43e4b-f735-4cc1-9ea8-ece8bd612c21",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5bba4315-f1e6-4fe4-b70d-040bb3e6b2dc"
        },
        "item": {
          "id": "e0cdc2f5-2efe-4fec-9942-86b90babc032",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f5d9c1cf-3a57-4250-b65e-506ef3c59dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb123f3-8c7d-4feb-ba88-de87b1c6f592",
        "cursor": {
          "ref": "0c160e56-aba8-45bc-921a-25298c251d58",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "387e9c5e-3946-4960-a209-560f0bb24fe7"
        },
        "item": {
          "id": "3bb123f3-8c7d-4feb-ba88-de87b1c6f592",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f823bbf3-1bc3-48d1-b1b0-f1d323fbedff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d64c028-515c-4fea-b573-10b74583be8a",
        "cursor": {
          "ref": "f9122e6f-0b12-423c-b80d-f5dd94eb5865",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0fe86ab3-483b-4665-bad4-a638b5ee8844"
        },
        "item": {
          "id": "2d64c028-515c-4fea-b573-10b74583be8a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "571016a6-276b-4e74-ab4b-6d6420ede647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f71a42-5402-4b86-9fbb-c6c8514cd6a5",
        "cursor": {
          "ref": "d767d7ca-803f-4f98-b17f-d6da87c0b6a4",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5dab93ae-882b-4409-af8d-0019198fd710"
        },
        "item": {
          "id": "44f71a42-5402-4b86-9fbb-c6c8514cd6a5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "42718402-1ec5-4251-bbe6-3c410abccaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac68f25-2249-4f0e-9dff-57bcd6036811",
        "cursor": {
          "ref": "a6b5ef4a-a7c7-482e-9265-4ad8a0958fd5",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "389ddd9b-605e-4b1e-a0e8-350d9bf7ab83"
        },
        "item": {
          "id": "aac68f25-2249-4f0e-9dff-57bcd6036811",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1edd638d-ea4a-4151-a0ff-08a498bf63a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93116d6-3559-423f-a240-62b5b3959c12",
        "cursor": {
          "ref": "49421f49-0fed-47b8-a0f3-6d0bf08c757f",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9c98ea60-192d-45d5-b44c-b22875ee4395"
        },
        "item": {
          "id": "d93116d6-3559-423f-a240-62b5b3959c12",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2d31558b-49ec-4d4e-bc12-6ce3a4158226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ebabca-52df-4453-94fe-5653392201f1",
        "cursor": {
          "ref": "979686b3-4cba-4207-8e71-5625c15d651c",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3b9eb775-dc71-44d0-8b92-583da53fbf4a"
        },
        "item": {
          "id": "e5ebabca-52df-4453-94fe-5653392201f1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "778ebc3d-e483-48ad-a360-2dfbaab4ea8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af819d5e-a17d-4ec8-9eda-c5980c4d2465",
        "cursor": {
          "ref": "509a6c2f-1f3c-42ff-bd1c-80a6d26da368",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eabd4578-fa26-4cb9-843a-84129c55b0da"
        },
        "item": {
          "id": "af819d5e-a17d-4ec8-9eda-c5980c4d2465",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bcc4801a-25c3-4729-9ab8-3d5a3fffc256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2aec04-d33d-458e-b943-0a97a6941c48",
        "cursor": {
          "ref": "1c959d2c-d63d-4c52-a8d2-015b4eda6cc6",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a3df6d2e-2e77-4d18-b6eb-1087dfab276e"
        },
        "item": {
          "id": "4d2aec04-d33d-458e-b943-0a97a6941c48",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4edf3ce4-289e-4805-a6d5-b1e45e648041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea715540-f0eb-461c-b6bf-e8b8f9c32919",
        "cursor": {
          "ref": "9a31ebd8-0fc8-41f3-9dee-5fd48ea49383",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6bcf7333-c500-453d-ae45-fc6f5631d30b"
        },
        "item": {
          "id": "ea715540-f0eb-461c-b6bf-e8b8f9c32919",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b8d6df18-f68a-44cd-a1c6-829ac6f2b6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c43942-db91-414f-bca5-e8e0a7f39443",
        "cursor": {
          "ref": "d9d1170b-b674-41a2-a3f5-95e0f37c84e4",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "59f43f95-249c-4e61-975c-190dea2af50e"
        },
        "item": {
          "id": "73c43942-db91-414f-bca5-e8e0a7f39443",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "90376448-540d-4d14-abe1-f8f36013240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c4f9f2-97f3-411f-84ff-971736ae93f8",
        "cursor": {
          "ref": "259b9ef7-ae9e-45c1-a083-8b054d188104",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9d2f49c4-682e-4214-9231-d6cb9265bba0"
        },
        "item": {
          "id": "51c4f9f2-97f3-411f-84ff-971736ae93f8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cbbe23c9-ba9f-4f29-b69d-75729e0355d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5acc4a-6feb-4f43-b370-f767f15896a6",
        "cursor": {
          "ref": "86656d94-ee5a-421f-a573-79a4f042c0a9",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a0a53bca-4b59-463d-8ce7-a06f4c245ce1"
        },
        "item": {
          "id": "bf5acc4a-6feb-4f43-b370-f767f15896a6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c4391e07-5654-4c48-b9a4-d492d391d10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86470012-1d72-4819-abcd-709e09dc79d5",
        "cursor": {
          "ref": "67721f99-2ebc-4bfc-8a2a-2cc3fc4dd11c",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "702238df-b2ec-41dc-8dad-1e3c456bb506"
        },
        "item": {
          "id": "86470012-1d72-4819-abcd-709e09dc79d5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6234b3f6-a718-415c-b044-7c2c1286ca14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100f043e-0403-47c6-bde4-1c161275165c",
        "cursor": {
          "ref": "6e9e14bd-fa30-4fa3-8aa4-c8e953e28fe5",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c5ce12eb-6e9c-4790-b769-75235209060a"
        },
        "item": {
          "id": "100f043e-0403-47c6-bde4-1c161275165c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7c4ced9e-ef43-4ace-be3f-4040c7a545a2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 932,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54df5589-903b-4c39-bb0f-bdde389f4921",
        "cursor": {
          "ref": "c1e014d8-12d8-480c-964f-d3de3c8cd738",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4cd54d02-8330-4a21-811d-9fa9094f1a43"
        },
        "item": {
          "id": "54df5589-903b-4c39-bb0f-bdde389f4921",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0a2bb86b-cb9e-4313-883a-fa34760624f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af305b9-496d-4756-976d-33f0e64f7ac5",
        "cursor": {
          "ref": "1453ac30-adf8-4654-9fc7-709706b5a7b4",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7edcc7df-9066-4ac9-88c9-c2f46c0d63f9"
        },
        "item": {
          "id": "9af305b9-496d-4756-976d-33f0e64f7ac5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c7046a34-0e10-4005-b087-e4c7f4eac7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1726,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3f01d1-7f50-46e6-88ef-4c416dbd1973",
        "cursor": {
          "ref": "cf5b897e-53e4-4017-b0ea-41cebdab1d25",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d1b09b24-30a9-4644-baa6-8b6c39b3a119"
        },
        "item": {
          "id": "bb3f01d1-7f50-46e6-88ef-4c416dbd1973",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3a1482f5-0d4b-45b4-b2d5-c554841b951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e4ed37-3775-4c16-ac96-6273896540fa",
        "cursor": {
          "ref": "1e625a8d-4714-47cf-8229-a7e6ac2b4c03",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fc866f5c-5b6b-416f-b542-0725908eb60f"
        },
        "item": {
          "id": "15e4ed37-3775-4c16-ac96-6273896540fa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "00493cfb-a948-446f-b848-e976bb5f675b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5468da53-3759-4a74-afd5-afdbee253269",
        "cursor": {
          "ref": "c21b6cfb-7bbd-4978-9418-789ffb781b23",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "409a26d2-5ff3-4bd5-a1a3-6cc840360be1"
        },
        "item": {
          "id": "5468da53-3759-4a74-afd5-afdbee253269",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2e306f19-04c3-4d03-b07c-d31cc1d6a593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b095b1f9-135a-43b4-857b-c715e416b946",
        "cursor": {
          "ref": "eb950281-e920-4440-a977-4c5056ffd3ad",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5412dddd-cebd-445b-9baa-a1eb5a5efb50"
        },
        "item": {
          "id": "b095b1f9-135a-43b4-857b-c715e416b946",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d8b69300-14ab-41a9-95d0-062766fc3752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6852bfde-a8ad-4e98-bef4-0826d3b8e88d",
        "cursor": {
          "ref": "fc5e10d5-f10b-4454-a9d7-44a4fc69332a",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5c007ee9-9b76-44b9-8390-2a6f980fb86b"
        },
        "item": {
          "id": "6852bfde-a8ad-4e98-bef4-0826d3b8e88d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "edb36126-3e72-4841-b68b-a32efaa316bc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 869,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862d7b84-429a-41a5-8587-f8408f274a1a",
        "cursor": {
          "ref": "d0a0d8d6-726d-4452-9c05-2423a6dd3c6d",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c501052a-f338-418b-bf44-31b6bbe7a7e5"
        },
        "item": {
          "id": "862d7b84-429a-41a5-8587-f8408f274a1a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ac8e3dbc-360a-4c75-965c-c0d63d048db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6649f6b-23be-484b-aa7a-4f1d045de66b",
        "cursor": {
          "ref": "355ad135-dbc7-488c-a4ef-32d83ce0a48c",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2e551671-2b9f-4fd5-8670-9e275153433d"
        },
        "item": {
          "id": "b6649f6b-23be-484b-aa7a-4f1d045de66b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8f238fe9-3130-4176-aa7c-368253ceb0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89070d84-899c-4ddf-93e0-93df289a3b72",
        "cursor": {
          "ref": "72958596-24c3-4222-bf4b-11e4118fae39",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "46670da0-312f-46a8-9051-f85ad4ab8592"
        },
        "item": {
          "id": "89070d84-899c-4ddf-93e0-93df289a3b72",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1478f0cb-36db-42a8-83a1-2d7915f15735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b78bba-96f5-407b-81ff-eaf41cd9c461",
        "cursor": {
          "ref": "547856f8-1f62-4ee6-94c0-faba63243113",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3f500f3a-4723-4bc0-8c0e-0ca6e18444b9"
        },
        "item": {
          "id": "b5b78bba-96f5-407b-81ff-eaf41cd9c461",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "09879ded-ff57-4de2-807f-23e657823159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a067298-4f11-43a9-a92f-04e06e148f89",
        "cursor": {
          "ref": "23cca2ae-2a1f-4da9-b82b-2f7d8fb894ee",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c574e308-fff5-445e-9134-f7d2546d623e"
        },
        "item": {
          "id": "1a067298-4f11-43a9-a92f-04e06e148f89",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "905a2d3b-a9ff-4b29-b892-ba895365289f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d920245-899d-4dfd-b451-3e4a6d153e19",
        "cursor": {
          "ref": "cf54a2c8-0a60-46fe-89ea-31708edf56fd",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "376d65c8-ecec-42c7-8665-19ca3de45fe9"
        },
        "item": {
          "id": "2d920245-899d-4dfd-b451-3e4a6d153e19",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "835993db-6245-4942-b55d-ff98df4e6c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b469c082-ab28-4675-9d63-e506583891b7",
        "cursor": {
          "ref": "139b2378-50a5-4893-a0f4-444994bb3462",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b7e5d9d5-15d9-4ab6-9632-634163b15f78"
        },
        "item": {
          "id": "b469c082-ab28-4675-9d63-e506583891b7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "808f32be-45fa-4993-b933-64e5ae3e8a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a23f5b7-5edd-48ba-baed-95ba6bd0e484",
        "cursor": {
          "ref": "767b6b1a-75ff-42ad-96a0-0bf03e83596e",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "00a8f278-0dab-4e25-bbdf-364aa66d94c5"
        },
        "item": {
          "id": "8a23f5b7-5edd-48ba-baed-95ba6bd0e484",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "67cf495b-6c42-4618-bf1d-c11cba04fcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a999bc-5ee3-481e-acf5-2d623ea379b1",
        "cursor": {
          "ref": "06c01719-0d67-46d7-b2ae-005b0a741eca",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "45402250-71cb-418a-994e-d0e5731550ee"
        },
        "item": {
          "id": "64a999bc-5ee3-481e-acf5-2d623ea379b1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e5233a03-1f12-474f-8ae3-8c4a278b92c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f54783-0ece-4afe-9e27-b6caf531985d",
        "cursor": {
          "ref": "ce820b8f-d880-4706-b3cb-f24a01ee941d",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f749626d-9331-4de5-87d1-a50e4acdda44"
        },
        "item": {
          "id": "b0f54783-0ece-4afe-9e27-b6caf531985d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "48b11c1d-6b5c-4c7e-9b7b-dd1b90f1c6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc116c9-a329-4d23-a25c-1c074384e8f7",
        "cursor": {
          "ref": "b06c377f-af8f-4beb-9d3b-498bb252baf9",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b3ec3d1a-33a0-49dc-980c-f3f1a409b480"
        },
        "item": {
          "id": "dcc116c9-a329-4d23-a25c-1c074384e8f7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1d09b113-e8b8-4a82-ada5-d195be65e5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92a7a2f-d173-472b-b120-6abf156aefa4",
        "cursor": {
          "ref": "ad481d9d-a438-4d2f-89b6-6a803b74c606",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "41b58c0c-8d06-43ca-9b71-d177c6f0842b"
        },
        "item": {
          "id": "a92a7a2f-d173-472b-b120-6abf156aefa4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "28c98c3b-e54f-47ee-97f4-8a388d4af757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3683cc9b-b207-456d-bfa0-c5cd28757bcf",
        "cursor": {
          "ref": "c97cd32e-e32e-4cf8-ac9a-20086fb451c6",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5a835463-97d5-462b-b450-a533fd8e564d"
        },
        "item": {
          "id": "3683cc9b-b207-456d-bfa0-c5cd28757bcf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2d8cdc95-70cc-4713-9418-95734948d59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c39912-ea4d-4073-8224-2287674f6949",
        "cursor": {
          "ref": "762f2870-5f71-4ed9-9ce8-31daae0858ad",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7c01364a-033e-40b5-a234-a845d3bc01a7"
        },
        "item": {
          "id": "14c39912-ea4d-4073-8224-2287674f6949",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c1836f0c-c18b-4f21-9c40-08ea4cfb1be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4a8694-ffe8-4476-a96d-44df94a9f32f",
        "cursor": {
          "ref": "b615fb71-907c-444e-aa5c-ffe343c86543",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c66852a4-105a-4e74-81f2-7a9fa6d9ec02"
        },
        "item": {
          "id": "3d4a8694-ffe8-4476-a96d-44df94a9f32f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "85cb93c6-ed0b-42f5-9adc-ba5885f60f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4708e6-4578-47fa-9de1-5662ef4fdf05",
        "cursor": {
          "ref": "42931e14-ad7f-4f83-a469-016f705139a0",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a621a423-2339-4f67-831d-93be1e5bc58b"
        },
        "item": {
          "id": "5b4708e6-4578-47fa-9de1-5662ef4fdf05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aab0dd33-417c-47a7-8db2-7b59c51a0a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87d0955-817a-4c7a-86f1-221bc323f6c4",
        "cursor": {
          "ref": "a794f470-5f69-4c6d-b73d-8830e3d8abbc",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "05186401-d1e7-4863-8ef7-4c2ed54b34fe"
        },
        "item": {
          "id": "c87d0955-817a-4c7a-86f1-221bc323f6c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1e57706b-001e-4d92-8389-09221ab5d796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140838ff-6b51-4af9-97cc-7e815d3f90ad",
        "cursor": {
          "ref": "1c28b553-5764-4ad1-a0a9-4cc8241c1447",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "05219de7-aeab-464c-8d9a-538766cca7e4"
        },
        "item": {
          "id": "140838ff-6b51-4af9-97cc-7e815d3f90ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "69dd9afc-00a8-4df2-a813-46a414bfc4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d20c6ea-7fec-4246-9c76-b3efa587e677",
        "cursor": {
          "ref": "b1670d92-0c61-4e62-8a3f-b419b337948f",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e8baa159-72d3-49fe-a8d1-efba706e5eb1"
        },
        "item": {
          "id": "4d20c6ea-7fec-4246-9c76-b3efa587e677",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0d4f102c-e7d0-4aa3-b44a-9d2eb735de29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7702c7bc-06a8-4806-ab4a-14d39920cd00",
        "cursor": {
          "ref": "90e8735d-aa03-4c02-92e8-c2954d37cb78",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "860ece38-ed63-4a65-9e0f-f5c06156bfeb"
        },
        "item": {
          "id": "7702c7bc-06a8-4806-ab4a-14d39920cd00",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9130669e-708a-40f0-8294-1ceed6a316e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09cee21-462e-4a3f-931b-cb69aac1c0e8",
        "cursor": {
          "ref": "bf7bc52d-83ec-40c8-8930-47107e97e13b",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2da2df0a-f179-4d65-b20a-a7fb25e9e3db"
        },
        "item": {
          "id": "b09cee21-462e-4a3f-931b-cb69aac1c0e8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6238c702-2fb3-4706-8c03-cb76457a8bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da40c189-8b36-47b4-b1ce-da82dc7070d0",
        "cursor": {
          "ref": "fdcff84a-b09f-4137-8a23-cc1d68c30f3e",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "acbde749-ca1d-477a-bbc1-55c72a6d5f92"
        },
        "item": {
          "id": "da40c189-8b36-47b4-b1ce-da82dc7070d0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0afcfb89-cbbe-46e0-afea-322942ec5019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4404f2-08b8-4319-8666-3fbef49651f5",
        "cursor": {
          "ref": "930ebe2a-864a-4494-80bc-7838bd63f920",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a000ed4e-cee1-45d4-8ccc-9f6a139e6fec"
        },
        "item": {
          "id": "2e4404f2-08b8-4319-8666-3fbef49651f5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9302c52b-9625-4156-8a95-775430f3c7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cd748f-166e-4eb4-b9d7-9ee807f7def3",
        "cursor": {
          "ref": "01992be9-271e-4471-9813-28864692eeba",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "24a128c4-56ef-43a3-970f-b36550b57bc7"
        },
        "item": {
          "id": "d0cd748f-166e-4eb4-b9d7-9ee807f7def3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2e0d5b93-5f6e-4aec-8225-8289a3d7acd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23061e53-9b30-4db8-91ca-5d690a16b970",
        "cursor": {
          "ref": "9c2aa02e-bda3-4735-9a21-024d44a498b5",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3f073e0b-2093-4187-894c-9e64014c6603"
        },
        "item": {
          "id": "23061e53-9b30-4db8-91ca-5d690a16b970",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0fa8593e-7d51-4f1c-a612-af238588fc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d83b044-02f8-41f6-9762-25115d9031e9",
        "cursor": {
          "ref": "80ed6bf8-b112-4356-be05-efb989153ad4",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d1b4aba-3286-40dd-8b5f-3cc2aadeffa8"
        },
        "item": {
          "id": "7d83b044-02f8-41f6-9762-25115d9031e9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "770b69ce-b955-4b26-b2f8-093c426922c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768a9946-08c1-43a6-8fa9-f27f061ec021",
        "cursor": {
          "ref": "af52eb8e-f15f-4724-93fb-1682be56a22b",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6da594c3-9f85-4fe8-a3f6-9b1c253ecd76"
        },
        "item": {
          "id": "768a9946-08c1-43a6-8fa9-f27f061ec021",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "49ae01f9-8c92-4a15-b355-65727531383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1b607b-877b-4f60-b48c-1fce0f549953",
        "cursor": {
          "ref": "308e79c9-fa65-4ee2-b10e-1e4191ade8a0",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a8cc1a9e-7e68-439a-a926-ea84b305cb3e"
        },
        "item": {
          "id": "4b1b607b-877b-4f60-b48c-1fce0f549953",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "990b5904-ecb2-493e-9c30-5a40803a7bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac36e26a-d8e5-44b0-bf5e-a8e45c5e18ca",
        "cursor": {
          "ref": "e9501eb2-9b6c-4a64-9835-a615741aeac9",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "44ac5112-0ba5-4549-8965-271de8d7cf51"
        },
        "item": {
          "id": "ac36e26a-d8e5-44b0-bf5e-a8e45c5e18ca",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b57c811c-b656-4f5d-8623-e2541cf6daa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912a07e1-e4eb-4493-b783-1690cbb77285",
        "cursor": {
          "ref": "c12233e4-476e-4b41-9a05-144b53624ae7",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0995fc73-2230-43a7-bbee-06561c5dea60"
        },
        "item": {
          "id": "912a07e1-e4eb-4493-b783-1690cbb77285",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "071a7c5b-208d-41cd-8f62-b01973f14e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d34373-d87a-4ed1-a0ac-6034430c2a21",
        "cursor": {
          "ref": "d8aa0af6-3be0-40ce-818c-3fbd867ad8da",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9ffba305-99b7-4fa1-9391-caa346d06b19"
        },
        "item": {
          "id": "37d34373-d87a-4ed1-a0ac-6034430c2a21",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "756a0e4d-0770-4ac9-a7af-93e00ed990cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a4bf0e-bc91-4677-a67a-926312fc16f5",
        "cursor": {
          "ref": "f1a62c11-485f-400f-8c5a-721ced524d1a",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0177c7bf-5ed4-457c-8480-d07afec4aca3"
        },
        "item": {
          "id": "b8a4bf0e-bc91-4677-a67a-926312fc16f5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7cfedb33-ae3b-4a02-aa72-d24cd83cc830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0c11dd-216a-4076-9f6e-73321f0f7180",
        "cursor": {
          "ref": "f1229262-78df-4ef5-a777-ad4c0e21b4ec",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "af0d105a-d9b4-4b24-8eb0-53b592c70048"
        },
        "item": {
          "id": "7c0c11dd-216a-4076-9f6e-73321f0f7180",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e4fcdbe2-7c62-4c9a-806a-eb035a12fb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6d8631-0c97-43cf-9af8-919be6c5ef5a",
        "cursor": {
          "ref": "41e73be3-ca24-4f55-954e-dd1a8d3f17f0",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "546d7b33-1d46-44cf-800f-b6115d64053b"
        },
        "item": {
          "id": "0d6d8631-0c97-43cf-9af8-919be6c5ef5a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e698e86e-034e-4384-8e8e-d0b78e41dfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f82a303-d7c1-4370-b1e6-4d053f9de553",
        "cursor": {
          "ref": "a80f14ad-fc6b-4a96-8344-2eeaeb529c66",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aa9b055c-467a-46c1-879d-0152e88ebac9"
        },
        "item": {
          "id": "8f82a303-d7c1-4370-b1e6-4d053f9de553",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1140b04e-d549-464e-bc63-5802dd571c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2559b845-6182-4530-8ce4-f89ecdb17871",
        "cursor": {
          "ref": "123fd4ae-a748-450d-a059-e40ed222d03e",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "146b84dd-2f00-4243-b7c3-72b80c50680e"
        },
        "item": {
          "id": "2559b845-6182-4530-8ce4-f89ecdb17871",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c234102b-a69a-4e99-a9d3-df60d6100a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ae5650-3705-4724-8b5a-5cd78d03517c",
        "cursor": {
          "ref": "778c13f7-62e7-42f4-85d0-1895ff0d3040",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "69947659-1c18-43df-9994-1ebb3bebb676"
        },
        "item": {
          "id": "24ae5650-3705-4724-8b5a-5cd78d03517c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f7f6b72b-fcbe-4169-a793-ed7982775d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a4ba77-96d6-4098-85a4-59e4077f4cbf",
        "cursor": {
          "ref": "35d8169f-cf3e-42e5-9f53-706e61ce8afa",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5a6a47a1-4274-404b-b98d-75733a15beb8"
        },
        "item": {
          "id": "e3a4ba77-96d6-4098-85a4-59e4077f4cbf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cc7daf00-514a-4956-9241-ff2c5841c37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4f0d0d-48c2-4a5d-b764-80c78263150a",
        "cursor": {
          "ref": "701c8d3f-07c2-4262-b685-2e9ad05a36c2",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0ec07624-ff29-4ed1-a9bb-82eebdcf7170"
        },
        "item": {
          "id": "ad4f0d0d-48c2-4a5d-b764-80c78263150a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "59c3248a-cc82-4848-a0a8-65bac7f6d556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281998cf-5e5a-48ef-8095-65a1f8ba8024",
        "cursor": {
          "ref": "5fe65a5e-a7c3-4498-97b3-3532c7acddfe",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ee1bca23-ab52-4fd6-9ad3-ddc60ef66041"
        },
        "item": {
          "id": "281998cf-5e5a-48ef-8095-65a1f8ba8024",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b7caf144-0154-4da9-83a0-22a21cdf8bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480d8313-6511-444f-aa34-4481b72c8384",
        "cursor": {
          "ref": "fcd38745-cb1a-469f-9f7c-b4af18017fc9",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fe2db034-81c1-4569-8a86-5ea098b47b98"
        },
        "item": {
          "id": "480d8313-6511-444f-aa34-4481b72c8384",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "49cd39ff-922a-4a6e-ab71-e79809eed48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee019e82-896d-4222-9533-380572b8c950",
        "cursor": {
          "ref": "2c7b8f30-a710-4b48-b7d8-4e18038f34f9",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "373593aa-94ac-4a3b-987a-0000625c6459"
        },
        "item": {
          "id": "ee019e82-896d-4222-9533-380572b8c950",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5eaa0818-b3ef-4652-9dbd-51df722d3d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcb3a06-5458-42df-b8b3-609c73958654",
        "cursor": {
          "ref": "9bf4ce5d-3f54-4430-b22d-519312aae628",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2bdd7863-cc67-46a2-a3b5-9211e9d9de52"
        },
        "item": {
          "id": "fbcb3a06-5458-42df-b8b3-609c73958654",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3b8f5cee-4831-4d06-b975-2219b81ca897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79da39a7-dd54-4feb-97e5-800eac3b3059",
        "cursor": {
          "ref": "08b3f92b-378c-438c-ba5d-59165ff74b31",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3594cb1f-d653-498f-9e7e-a1844553f1b2"
        },
        "item": {
          "id": "79da39a7-dd54-4feb-97e5-800eac3b3059",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "62e33458-6f98-445e-8c41-d84ef38a28e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41e09ad-7a27-4559-a39f-a2c0ce7b67d9",
        "cursor": {
          "ref": "95e4ae57-2d16-4364-bc48-2e68e1606469",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7997b8b0-a6e0-49c3-b9db-dbfcc81d9cab"
        },
        "item": {
          "id": "f41e09ad-7a27-4559-a39f-a2c0ce7b67d9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "85b41927-2825-4d81-9cb1-36232b61219a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1547b6-a1e0-4fe9-8aec-8c848a8c2617",
        "cursor": {
          "ref": "ac722b19-c84b-4d0c-a0c4-797358125a24",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dfb3a3f4-0c5e-4792-9dff-f4a98c5ac514"
        },
        "item": {
          "id": "1c1547b6-a1e0-4fe9-8aec-8c848a8c2617",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d68477ef-dd87-4687-94a6-5dd548685f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af0b75e-e47a-4bd7-ac8c-b186bb0496a0",
        "cursor": {
          "ref": "460a80f3-f43d-47ad-82cc-cb15e5df5a84",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d87a4bd3-cb19-4e00-b209-deca21620862"
        },
        "item": {
          "id": "7af0b75e-e47a-4bd7-ac8c-b186bb0496a0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cfbf53f7-6e6c-42cc-b7bf-64032ac44952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d866eff-967b-4506-8875-629766a2ca90",
        "cursor": {
          "ref": "2e254693-4d14-45d2-baba-a752901b6845",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2c6191e4-55df-460d-ae30-69b5c15bffb7"
        },
        "item": {
          "id": "4d866eff-967b-4506-8875-629766a2ca90",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bc5d2bac-33ea-441c-8bfe-2d795b2db172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b010bec9-1aee-4264-9ced-29e1070d3964",
        "cursor": {
          "ref": "95b90825-3216-4b68-b57c-c13118fb85c3",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6401567c-fe1b-4df8-a5fc-eb3aafd7ced3"
        },
        "item": {
          "id": "b010bec9-1aee-4264-9ced-29e1070d3964",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "18de09a1-5fda-468c-933f-0804d44628b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe867425-56f9-4173-a906-7d42006dee3f",
        "cursor": {
          "ref": "1bacdbed-b57c-4280-af6e-330b8b95a3a3",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2b9f40f2-bab1-47fc-866a-8506c1310ca3"
        },
        "item": {
          "id": "fe867425-56f9-4173-a906-7d42006dee3f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "463148a0-770a-4e8b-88cb-bc3ad9bf8ec9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36870035-dca6-4484-8dcd-dc1dad47a38c",
        "cursor": {
          "ref": "de03dfa8-7dac-4739-98d1-31b9493a87e0",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b6d770fb-bf30-4373-9ad6-bef66d5797fd"
        },
        "item": {
          "id": "36870035-dca6-4484-8dcd-dc1dad47a38c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1c89ff4e-6b36-4014-a599-d8a52887a8cb",
          "status": "Created",
          "code": 201,
          "responseTime": 6389,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "084df832-d787-42e8-b062-4139cc075501",
        "cursor": {
          "ref": "ec741873-4a85-4235-a025-e069d727bf7e",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "622e1d08-012f-4458-b08e-3c6533e67c7e"
        },
        "item": {
          "id": "084df832-d787-42e8-b062-4139cc075501",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "50d34231-19e1-4264-b4c0-0984333dac3c",
          "status": "Created",
          "code": 201,
          "responseTime": 5927,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a692a063-3cc7-4f89-a84d-771f90e67d72",
        "cursor": {
          "ref": "6c7320cc-4ffe-428c-944f-09b7561295a8",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a843793c-4021-4761-92b5-88fc862cc4f3"
        },
        "item": {
          "id": "a692a063-3cc7-4f89-a84d-771f90e67d72",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "250fad10-31bc-4c8b-a5aa-86b26760c4ca",
          "status": "Created",
          "code": 201,
          "responseTime": 6304,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ceef10-a00f-4188-8092-46892e4f139c",
        "cursor": {
          "ref": "d44a6199-4f65-48e4-930b-388c536b9c8d",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "116fadeb-251a-418f-8e75-19c07582679e"
        },
        "item": {
          "id": "31ceef10-a00f-4188-8092-46892e4f139c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "38b42e1b-ead7-45aa-a33d-650bfdaa8d89",
          "status": "Created",
          "code": 201,
          "responseTime": 6709,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51934a2-452f-4efd-8ae2-8d979e8a7f67",
        "cursor": {
          "ref": "de4cdc52-7110-43ae-87da-bf608a3ddadb",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ba1c1a0f-5c37-4a58-b9e4-d34682c24571"
        },
        "item": {
          "id": "a51934a2-452f-4efd-8ae2-8d979e8a7f67",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5fb9cc5e-61ae-416b-865c-bc67692d3cfd",
          "status": "Created",
          "code": 201,
          "responseTime": 6621,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "931258bc-1e98-47f8-98e6-c902bca3c41a",
        "cursor": {
          "ref": "e7ca4fef-4f09-4507-95bc-141178111a1a",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a47796cf-63d2-41f6-b037-6da17df4fdf2"
        },
        "item": {
          "id": "931258bc-1e98-47f8-98e6-c902bca3c41a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bd0edbb0-ba53-4bb2-b9cc-37971646821f",
          "status": "Created",
          "code": 201,
          "responseTime": 7606,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac787b1-8f22-488f-90e8-11b42d3569b6",
        "cursor": {
          "ref": "9cd96963-d7de-49ff-b172-d60f2b77d3dd",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "242e86fd-3a33-483c-93cd-feab4840b286"
        },
        "item": {
          "id": "1ac787b1-8f22-488f-90e8-11b42d3569b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b0461567-c66e-4d0c-bba6-30d7a88d4b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a498a3e9-ab9e-4471-88a9-766de55c5e7d",
        "cursor": {
          "ref": "307f4c6b-8f48-41ae-8d76-133550c7dac9",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "68ebecce-0842-49d1-9b48-7d3bde4cd508"
        },
        "item": {
          "id": "a498a3e9-ab9e-4471-88a9-766de55c5e7d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c75245ce-29dd-471e-9476-cfca9968b258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7858748-792b-4faa-936a-1fe871716188",
        "cursor": {
          "ref": "e3787c98-9090-4463-8830-a7a92568a602",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b7ace66f-18ad-4d10-bfa0-7376a16f99cd"
        },
        "item": {
          "id": "f7858748-792b-4faa-936a-1fe871716188",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cf8d26a2-0361-4444-bbae-89bc973eec44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291e7a47-bc85-45ad-b2aa-6c3ac3f42083",
        "cursor": {
          "ref": "2c3a8ff4-cec4-48d5-a682-ad14a8a3173d",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3c217177-e94b-47a9-9270-b05e6e231ded"
        },
        "item": {
          "id": "291e7a47-bc85-45ad-b2aa-6c3ac3f42083",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "093f4d49-fd0c-478d-843e-91a1bc495968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c8533d-59e3-4823-804b-213dd617c609",
        "cursor": {
          "ref": "5276b058-6e00-4cfe-ae8e-1454ee73c042",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d5308482-d667-4635-9206-3d9272b1a701"
        },
        "item": {
          "id": "24c8533d-59e3-4823-804b-213dd617c609",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5c9df177-bb42-403e-a20f-cc24b49479f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba87eb0-5045-4659-ad15-7b5bd9f21cf8",
        "cursor": {
          "ref": "640a5513-1d55-4d81-a3e9-4b3caa1b67ce",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c7b6c3da-c05a-43ec-9e9d-5ea7ed2c3998"
        },
        "item": {
          "id": "1ba87eb0-5045-4659-ad15-7b5bd9f21cf8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6ca9b9e9-df7e-436b-aa10-9af985f8b8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2258ab-a2a0-48f6-aa50-8ddaf5bfaa15",
        "cursor": {
          "ref": "6e52007c-24b0-4a6a-8a65-75d6d77d870b",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2846ec33-a0de-49f0-b5e5-529e37fa89f8"
        },
        "item": {
          "id": "ce2258ab-a2a0-48f6-aa50-8ddaf5bfaa15",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8d2b3332-395c-4d5b-b3a1-cdf08efeb6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119becf0-9368-4f7c-90ea-661ec04ee1bf",
        "cursor": {
          "ref": "30b099dc-f447-428a-96b4-904a29f05586",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fc1c6623-d27a-437f-bd0a-1994690237d5"
        },
        "item": {
          "id": "119becf0-9368-4f7c-90ea-661ec04ee1bf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5b4a909b-f57b-4f17-b45a-b2ff42f332e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc40d8b3-f9db-4572-905e-41a0fe0646f3",
        "cursor": {
          "ref": "9938bb24-67d0-42e1-9deb-9d27a8b7e58f",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2940a4a0-b958-411b-ad96-729dd53b810f"
        },
        "item": {
          "id": "cc40d8b3-f9db-4572-905e-41a0fe0646f3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "892b5922-f986-42c5-a13d-d2e6c01bea44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f467d166-0ab2-47ec-b45d-0ddce988813e",
        "cursor": {
          "ref": "67e04be7-9a79-47f4-9f82-9aedce7f1e26",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ac4b16e0-a824-42d8-ae1e-ef7698bd9f1b"
        },
        "item": {
          "id": "f467d166-0ab2-47ec-b45d-0ddce988813e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6261bb1a-1913-4eee-a35c-f01f095d2699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49a2620-8cc9-438a-813e-cbd9ecb59423",
        "cursor": {
          "ref": "00e23133-1c66-4f1b-8454-ef90b689c6ef",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "12bd104a-0a45-4156-9990-41398792da7d"
        },
        "item": {
          "id": "f49a2620-8cc9-438a-813e-cbd9ecb59423",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0c2033be-fe3a-467f-96dc-d26ff0e05285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad7e74b-29fe-4f83-977b-60d64d3acb7f",
        "cursor": {
          "ref": "181e8402-4caa-4f08-b68b-98ef4a813da0",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "198f0909-7247-4077-b577-3f94c0990a02"
        },
        "item": {
          "id": "0ad7e74b-29fe-4f83-977b-60d64d3acb7f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c955a88f-d65d-473a-b6ff-30f80f958231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2e48ba-662e-405a-b72b-835c5ee76cd4",
        "cursor": {
          "ref": "5497cdc2-19af-461e-87fc-1a5e5fd807f8",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "082785e5-b8d7-4dd5-b9e1-0e8ee9cc390a"
        },
        "item": {
          "id": "0d2e48ba-662e-405a-b72b-835c5ee76cd4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "210c201b-2b1b-4e25-9bf3-c5f8154675da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688c3f95-0787-4a92-9f88-3b9318d96d27",
        "cursor": {
          "ref": "c701990f-9c0d-4949-ad63-a0bdda92d2b7",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8beb32e4-c83e-4752-b2cf-400f9ec127f6"
        },
        "item": {
          "id": "688c3f95-0787-4a92-9f88-3b9318d96d27",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ebb02884-0173-4ff7-b806-cd0f0f211597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1b92e0-76c7-449e-a571-f2d94c04f750",
        "cursor": {
          "ref": "06237f60-f7ec-44e0-9bb9-5a96953893f7",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7c4ca62f-2786-45ab-9d29-ddfeb2f4f84a"
        },
        "item": {
          "id": "da1b92e0-76c7-449e-a571-f2d94c04f750",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8bd230d5-5645-4d38-b7be-66da9dfc7bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4258a3bd-abfc-4a44-9a8f-1a51cd62cc02",
        "cursor": {
          "ref": "6e2a2adb-f98c-4385-96f6-1ff082e1f545",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ec0421c6-9c1c-4583-99b8-d38a802d1df0"
        },
        "item": {
          "id": "4258a3bd-abfc-4a44-9a8f-1a51cd62cc02",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "51ddbc0c-7ed4-4e8e-a0c3-7eb4656f6286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebd326c-8634-4546-adcd-6e843fa8792e",
        "cursor": {
          "ref": "f7c3dc1a-ffea-489a-b046-4dd5de3ab2c0",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "677c9f8d-28a4-4b07-9a87-41d76b6fd599"
        },
        "item": {
          "id": "6ebd326c-8634-4546-adcd-6e843fa8792e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "421d97e5-40f7-49d6-be62-0b9f42944770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99ab182-103a-4cc4-98e7-fb53420aeadb",
        "cursor": {
          "ref": "17f77c85-18c9-46d5-affd-7fd1fd0264c3",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "56b30038-3f34-41ea-a5f4-0943e192efba"
        },
        "item": {
          "id": "c99ab182-103a-4cc4-98e7-fb53420aeadb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8293757b-9398-4494-8d8f-b1f76e007e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634770ae-652e-4928-9767-b760e580eaf2",
        "cursor": {
          "ref": "136d2214-2b10-40f8-bbd3-8bf042b592de",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4ca1b7d3-0880-489d-82a5-5ba01024abc2"
        },
        "item": {
          "id": "634770ae-652e-4928-9767-b760e580eaf2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b45d4bf8-29bd-4ce8-b378-285b256fafff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8443495-b82d-4d33-904b-a53e84ad85ba",
        "cursor": {
          "ref": "e9201bdf-aa23-4ba3-a3d0-ce0f6db6b6a1",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "296275f2-55c5-4cb6-9dad-8fdae197ac36"
        },
        "item": {
          "id": "f8443495-b82d-4d33-904b-a53e84ad85ba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "55bac55c-6c89-450f-8127-ea14378b33cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb519be6-ca56-444b-b688-ec3807ea2e31",
        "cursor": {
          "ref": "5b1f43b7-dd5e-449c-95ee-318188098141",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "06958405-645e-4e22-9a71-76905d4be4e1"
        },
        "item": {
          "id": "fb519be6-ca56-444b-b688-ec3807ea2e31",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f5d922df-485b-44a5-807e-ae63fcc66715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9debf662-330d-4938-b326-5382b02ac1dd",
        "cursor": {
          "ref": "5e4cfe59-34eb-4b81-aea8-ad35a567837a",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "54041d88-0c6b-47ea-b969-439b7ec2640e"
        },
        "item": {
          "id": "9debf662-330d-4938-b326-5382b02ac1dd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "45238373-bcef-4272-8b90-33e4af6ec006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef1bc53-5bfc-43c2-a9dd-23c38ab38cf0",
        "cursor": {
          "ref": "8173fd6c-7de2-46f2-9b91-b8b3a5c8ccae",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a1239476-79f3-42a9-b96c-bf772ca04920"
        },
        "item": {
          "id": "8ef1bc53-5bfc-43c2-a9dd-23c38ab38cf0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c4555f3a-d007-4d2a-ba44-788d58bdc642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9919edd-bfc3-43d1-bba9-2417f27faf73",
        "cursor": {
          "ref": "cc59c361-7ef4-4699-87e7-ea50602e342c",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "69feeba0-c548-4e99-8f61-26764fe8e494"
        },
        "item": {
          "id": "c9919edd-bfc3-43d1-bba9-2417f27faf73",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "55996522-02ac-4cad-8c18-b682070778fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b41646-813d-4ce1-815f-0ce17289dd23",
        "cursor": {
          "ref": "e203d94a-b5f8-4ee4-89d1-dadc54cb8f35",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "20268860-b2fe-4996-aea7-7e4f6719e022"
        },
        "item": {
          "id": "22b41646-813d-4ce1-815f-0ce17289dd23",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9857a2a5-bea8-4b3e-a3b5-10a94384c43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03921d16-5414-4478-9c6c-a1124c0f1b60",
        "cursor": {
          "ref": "9367157b-1588-4a81-af53-db5f55c73e3b",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "17b9b7ae-2376-4188-bb68-0e94afc7a004"
        },
        "item": {
          "id": "03921d16-5414-4478-9c6c-a1124c0f1b60",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b19ee581-e587-49e0-b4c1-b70bfe065d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15a9886-aba3-4d23-a848-e43585141a34",
        "cursor": {
          "ref": "5c7cbff1-e305-43b9-94bf-bf43b13de6f9",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "33c6b4d9-1ed5-4931-bb16-4aeefc7ea927"
        },
        "item": {
          "id": "e15a9886-aba3-4d23-a848-e43585141a34",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "29dcee9d-9d6d-4165-b593-36ae17140547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e50fb9d-2020-4b00-9218-84ccf4f19a2e",
        "cursor": {
          "ref": "b3e3ede6-e15d-436f-bbba-2d0a21ac727d",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0a0ddb80-c480-4faf-aef1-9a8c38ef1b24"
        },
        "item": {
          "id": "9e50fb9d-2020-4b00-9218-84ccf4f19a2e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f52b104-7572-4314-82f7-94168a34e7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fb9388-1236-4427-b3a6-7335b4b3c172",
        "cursor": {
          "ref": "f7568a78-33c7-4085-83e8-b316fab8b526",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1b0ffdbf-6bda-4ed2-bf20-98db3163e494"
        },
        "item": {
          "id": "d8fb9388-1236-4427-b3a6-7335b4b3c172",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a3ff8f3-d053-48fe-809e-346d65e0d041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a713798b-ecff-4b01-81fc-7705c96ded29",
        "cursor": {
          "ref": "32772b5d-b341-4bdd-aa62-ee5b7557ae2b",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f12dae8c-89e8-49d5-9672-9a188567a989"
        },
        "item": {
          "id": "a713798b-ecff-4b01-81fc-7705c96ded29",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ffe17ecf-a5d2-4997-a674-2729fab8d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2510e3cc-f574-4aa5-85b8-53f847a8a2e3",
        "cursor": {
          "ref": "5943ac17-6e61-41fa-9fb0-9d0793eecad6",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b300e4c8-04bf-42dd-b23a-68fe082aacd2"
        },
        "item": {
          "id": "2510e3cc-f574-4aa5-85b8-53f847a8a2e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "422cc1db-ce3f-4da5-a068-dde006d1becc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dbf2ea-ec85-4879-92f8-abc3d0665101",
        "cursor": {
          "ref": "e9d8d1db-510b-4697-a90a-ab7dcec97305",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fd4241e3-3399-4f3c-8378-da6939c1a645"
        },
        "item": {
          "id": "d3dbf2ea-ec85-4879-92f8-abc3d0665101",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8d19f160-068b-429f-8b4f-ff182803715a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb95266f-7b77-4187-a94b-516298333941",
        "cursor": {
          "ref": "135a850e-e05d-4ba4-9b97-eccbc0e00d37",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "835fedb3-2bb4-4112-8d5a-33db649cdce5"
        },
        "item": {
          "id": "eb95266f-7b77-4187-a94b-516298333941",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cfcebd35-b888-4e7f-9974-45b34fe7f245",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19852caf-02d2-469f-9840-67d0cd07663a",
        "cursor": {
          "ref": "ecf8fcb0-720e-452b-9cf8-4aafb3f43d51",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "57ea2d87-3151-4a9c-80f0-7c5a11d54e24"
        },
        "item": {
          "id": "19852caf-02d2-469f-9840-67d0cd07663a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "52abd0df-11f5-4e47-938b-862d0b1f102a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9788767d-2f0e-4f26-abf5-ea33f4192361",
        "cursor": {
          "ref": "c7770ea7-7343-4b71-a1ec-0fbd11afb6e6",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5c430800-8c5d-4197-9cf6-75ad911e1d6d"
        },
        "item": {
          "id": "9788767d-2f0e-4f26-abf5-ea33f4192361",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7c9077b4-541a-46d7-beca-7405eafc8baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f425dc-da2c-458a-bb6a-53deae1d4b3c",
        "cursor": {
          "ref": "1600dc95-d12d-48ce-90b1-19aa23db7378",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "073ccf87-e15e-44ea-bec3-bd65e1313590"
        },
        "item": {
          "id": "36f425dc-da2c-458a-bb6a-53deae1d4b3c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f9a1e2a2-7751-40ea-8f76-03abbf271131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e51a95a-bc3d-41bd-8f6a-b4da699844d3",
        "cursor": {
          "ref": "82909db9-2fbc-4fbf-bb8e-b8a0de8ffa1b",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dc3e63f1-87f6-4545-9bb5-be3ff2fbc9af"
        },
        "item": {
          "id": "0e51a95a-bc3d-41bd-8f6a-b4da699844d3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "be4bbf24-955a-4f8b-9aa8-0c5519a59865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a00970-7112-4b70-ba31-bd7b484ce665",
        "cursor": {
          "ref": "f4147c34-3b64-4b03-9dd8-d74bd6d7c882",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0c64f3b5-d4e9-4a2c-8b05-97d428475f32"
        },
        "item": {
          "id": "63a00970-7112-4b70-ba31-bd7b484ce665",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d6adb1de-6790-4bf8-aec7-a7127b671daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ff4b4f-bd62-4d4f-be3c-9fecc564f57d",
        "cursor": {
          "ref": "cf407d14-8693-47ae-9231-2fdae895c551",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6b6577c3-7d93-4436-a13e-d2223d6c2b2a"
        },
        "item": {
          "id": "37ff4b4f-bd62-4d4f-be3c-9fecc564f57d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f54eb84d-ef50-4125-a812-ca7e6b7f9176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0830ef24-5c91-482a-b95b-d7767d1c4a78",
        "cursor": {
          "ref": "e8074120-409b-4e74-b0ee-72fec69f22ca",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "768c571d-a699-4176-9132-31c20a9ff15a"
        },
        "item": {
          "id": "0830ef24-5c91-482a-b95b-d7767d1c4a78",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "86ac8f4c-8b05-4aff-ae97-9dd258aec2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fe7308-cb3b-43fc-afbd-5b5c2afb3d6f",
        "cursor": {
          "ref": "29d16d70-ba47-45a8-b512-e0d8e363deb6",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "48d2b0f1-44fa-415d-9b06-6bc8038186b9"
        },
        "item": {
          "id": "18fe7308-cb3b-43fc-afbd-5b5c2afb3d6f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d794ea48-5793-4940-9d96-99eb75e653ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688c13ff-32bc-4e74-905d-b191503464f4",
        "cursor": {
          "ref": "fc7facdc-4181-4fed-948a-9e25348b4d23",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6c4665fc-be40-4764-aaa2-cbd1c377a1bd"
        },
        "item": {
          "id": "688c13ff-32bc-4e74-905d-b191503464f4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "88717615-755a-4560-b49d-2bb58b73a5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c73217-bbff-4726-9533-edc05bbbbc52",
        "cursor": {
          "ref": "ffb4efd5-17ee-4add-ae64-b67e48781e9a",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "25a305cb-b06b-4c6d-9c35-adc7da8c86b7"
        },
        "item": {
          "id": "01c73217-bbff-4726-9533-edc05bbbbc52",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "af2280af-1fd2-4ae9-bfa3-f964b3c47bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88133ac7-ade8-4d2e-96d0-f37d307cd0ab",
        "cursor": {
          "ref": "bfd0aa4d-8d49-4e16-9502-5bdef6e19d9f",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2c6c4645-97e5-44fb-9987-068559bf13c4"
        },
        "item": {
          "id": "88133ac7-ade8-4d2e-96d0-f37d307cd0ab",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2ae77039-95b3-4c8d-8b2d-9e0657a65408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f796c9f-ed7e-4940-b66d-99bd9d2d45a5",
        "cursor": {
          "ref": "d6124abb-2eae-4015-8451-23617f987178",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "29988a0a-55ca-4a39-80b9-bb8ead641b8d"
        },
        "item": {
          "id": "4f796c9f-ed7e-4940-b66d-99bd9d2d45a5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3a479fa3-56e1-4edf-bef9-1ff74c99a8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507b7129-1601-4901-9b32-773c0d1b954a",
        "cursor": {
          "ref": "776a5880-a318-4493-a8b9-10abb601c138",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a6538da0-0152-440e-9ec5-78cc2f384317"
        },
        "item": {
          "id": "507b7129-1601-4901-9b32-773c0d1b954a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c3a2ab6e-aff3-40d0-b9d3-6ebab11f0db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b51063e-c6f9-4ee9-864b-00a2e84806cb",
        "cursor": {
          "ref": "9e5741e6-589d-4b30-aa07-28a0d4ebc0d2",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "788dafdc-4bc8-48a7-a4b6-31bcefddbffd"
        },
        "item": {
          "id": "1b51063e-c6f9-4ee9-864b-00a2e84806cb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ddaea228-c4af-4095-abb7-f7807760cc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e499eea7-430d-4edc-aaa5-11083aee2b5c",
        "cursor": {
          "ref": "85bb11d9-723d-426d-8016-1f1b8e4e3da8",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "96381605-daea-4873-b3c6-98ed70ad52e3"
        },
        "item": {
          "id": "e499eea7-430d-4edc-aaa5-11083aee2b5c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e39b57c5-1f00-47ec-acba-0eb9924a39fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d28cba-d2c5-4a75-9997-0ce135e79dba",
        "cursor": {
          "ref": "76e24951-db07-41f9-a157-6cdf271b3ffb",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8226ef67-8af0-4f5a-8be5-8aa65114e7d8"
        },
        "item": {
          "id": "e9d28cba-d2c5-4a75-9997-0ce135e79dba",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "05fed515-0b62-410e-b767-8c81b2520e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c72f47-2021-4491-a96e-4127e3076e9e",
        "cursor": {
          "ref": "af22f0a8-1e82-4858-8ba9-d4bbeb2ceecc",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "af11a8ad-ef82-4761-addf-18f8a4a00be4"
        },
        "item": {
          "id": "c4c72f47-2021-4491-a96e-4127e3076e9e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2ea5a551-7c99-4a3e-97ae-82dba76a735c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a74da99-5f6f-400b-8ce4-5a25ece1bc05",
        "cursor": {
          "ref": "dd53ddf2-ed1d-4520-b3b9-e9f51617a6b1",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aa0644a4-3e37-4806-a7f1-5864b99276b2"
        },
        "item": {
          "id": "7a74da99-5f6f-400b-8ce4-5a25ece1bc05",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b7fd47c9-c8f9-45c0-adde-1aa6dbb0b85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754b57ba-5ace-4930-87a8-91159da4ce02",
        "cursor": {
          "ref": "fc3d78bd-f834-4b93-b65c-7f99b90c97af",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "da91ba8f-9c29-471d-b89e-7d0b4f61526d"
        },
        "item": {
          "id": "754b57ba-5ace-4930-87a8-91159da4ce02",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5a97feec-d580-4fb1-9bf7-bd733e6fc8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e47d7db-7264-43c9-b61e-b5539dde45a1",
        "cursor": {
          "ref": "127b2399-c70e-4652-894a-7ac6b1e964fe",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4a347675-980d-4212-8462-f258cebb2ac7"
        },
        "item": {
          "id": "9e47d7db-7264-43c9-b61e-b5539dde45a1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d232828e-c8f3-487f-8bcb-1cc0df644191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e260c10-4053-4e11-a8cb-0e2ba3eea84f",
        "cursor": {
          "ref": "cb3be4fe-fce7-42c6-b5e1-e921730e7184",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ec6ed3a5-c18f-414c-b6fb-6b6560e2b0fd"
        },
        "item": {
          "id": "3e260c10-4053-4e11-a8cb-0e2ba3eea84f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "906951d6-5908-4bea-adaf-904d36d8ccda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798c749e-e7d4-4814-ba65-6b3a96180288",
        "cursor": {
          "ref": "0cc866a5-0edf-40ab-b9fe-3199a5c51b82",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "500966e0-f1ab-4f42-99a1-1dd28390da0d"
        },
        "item": {
          "id": "798c749e-e7d4-4814-ba65-6b3a96180288",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1f256cf2-ecb9-428e-9a8a-10cc16801863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d5abe6-bd29-4c6b-9c53-57ee10a8842d",
        "cursor": {
          "ref": "f7ef5298-2d3a-4d0e-9a96-30e905c8c50f",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "28a53454-d07f-4a4a-ba01-c033e8e383aa"
        },
        "item": {
          "id": "74d5abe6-bd29-4c6b-9c53-57ee10a8842d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "db33a1f9-0d2b-4729-9d97-83e6195718a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ec8627-0203-4f4a-9263-3b217530dcec",
        "cursor": {
          "ref": "5a695361-c044-44ad-b689-4d60065828ab",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "57d51c27-3927-406f-9e9e-b0c4e0f64706"
        },
        "item": {
          "id": "59ec8627-0203-4f4a-9263-3b217530dcec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8f79a41f-92be-4728-9a38-e91a3ca31302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc32d1a-888d-4c7a-9dd6-2b318c8f44fe",
        "cursor": {
          "ref": "cf2f00e9-805e-474c-b67e-ce2bfc0774e1",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fe3499c2-cb91-4fae-9ce0-c934b942f497"
        },
        "item": {
          "id": "5dc32d1a-888d-4c7a-9dd6-2b318c8f44fe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "41928380-635c-465d-9c38-8cf762cb687a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41f9e8f-77cb-4d07-b0bd-32ba8e1f4716",
        "cursor": {
          "ref": "61536c41-a2a1-4dd4-a85b-2b4da798c318",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aabf08e9-8f2d-47e4-a6fc-93d8a9f14881"
        },
        "item": {
          "id": "b41f9e8f-77cb-4d07-b0bd-32ba8e1f4716",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ee56428f-228c-4ff4-8fbb-b042707bc04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35910ce6-2cc1-4da5-9fbc-4fd0883a41d1",
        "cursor": {
          "ref": "bd717add-6115-42d1-b1b8-d60a528a749e",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2eb5eb2f-5d0f-4109-8eb8-f3e114fc861e"
        },
        "item": {
          "id": "35910ce6-2cc1-4da5-9fbc-4fd0883a41d1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d0a1f17-61be-4cc5-a827-97ad072d53da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ee449f-e5ca-45d9-94fc-29fa8d94aeed",
        "cursor": {
          "ref": "74263b61-f2c8-4448-85ed-26b3d03c577f",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "090afa91-7ddf-45a6-9ece-912de408ce1b"
        },
        "item": {
          "id": "c1ee449f-e5ca-45d9-94fc-29fa8d94aeed",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5062e941-53b6-4e64-9dc3-84eeacdb61a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0caa014-38ff-4ec0-a6f1-e546189fc748",
        "cursor": {
          "ref": "5cb5ce21-1fba-45fc-802a-29b45d419fdf",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6f681b58-bef6-4b81-8b8e-6a531e49304a"
        },
        "item": {
          "id": "a0caa014-38ff-4ec0-a6f1-e546189fc748",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "815b4a83-b57e-475f-9911-ebe9d1537a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a02c40-d9b1-4bf1-bc72-7ecd57d15bb1",
        "cursor": {
          "ref": "3997cbcf-d578-46ef-b408-f92b3b0c240f",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "209343aa-26b8-47a2-8bb2-279d5d742a4b"
        },
        "item": {
          "id": "c9a02c40-d9b1-4bf1-bc72-7ecd57d15bb1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f12a8252-2f05-45f1-9612-cef961423e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbe6da4-60da-49d2-9cef-dae827a6e206",
        "cursor": {
          "ref": "98ef7b2c-cb41-40d9-b1b2-05d14893083c",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f8d8a566-c923-4d63-a7de-577bd8cbda44"
        },
        "item": {
          "id": "2dbe6da4-60da-49d2-9cef-dae827a6e206",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f782f3fe-b193-4d7b-aebc-00b8306bf7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0019c95-5934-4382-a039-839400dad9e6",
        "cursor": {
          "ref": "5961b910-887b-4080-b8b5-82989972775f",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ba21ad4f-e200-468e-a353-969ffd0a1137"
        },
        "item": {
          "id": "c0019c95-5934-4382-a039-839400dad9e6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7f7c73af-30d8-4acd-a990-f9e728092af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5235f9c-c21a-444a-bcb6-d0ac41853dfa",
        "cursor": {
          "ref": "54eff2c3-08e0-44ea-a87e-408fc88cf003",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "131a92c3-ba07-4188-b2ff-2dbfc2600194"
        },
        "item": {
          "id": "e5235f9c-c21a-444a-bcb6-d0ac41853dfa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b00aa773-ca40-40fd-8aef-e21c58ecc593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1b94dd-6e01-4f56-917a-714f4135a0ac",
        "cursor": {
          "ref": "9e4a321a-d24a-44e4-acae-e05dfb958496",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e14f2283-6754-48fd-8122-8826e78599e3"
        },
        "item": {
          "id": "4e1b94dd-6e01-4f56-917a-714f4135a0ac",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "aba51401-fcd2-4c2f-b20a-ae90024e5f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a3e3f7-0da8-4a6c-b41b-4b9526e9ec85",
        "cursor": {
          "ref": "d6b5d6d0-8dc0-4017-8af8-262cc5a9c82f",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a085807f-8013-44c9-b2b4-e13657454fa1"
        },
        "item": {
          "id": "50a3e3f7-0da8-4a6c-b41b-4b9526e9ec85",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f4da98f3-da61-4f64-98c6-23b16b1bcf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5bf842-215a-40ef-a556-1e6b38a63605",
        "cursor": {
          "ref": "fe924815-770d-4182-9f7b-11f6caef4ad1",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "14ceb6fe-a67f-445d-864e-75f8de5b7cda"
        },
        "item": {
          "id": "9b5bf842-215a-40ef-a556-1e6b38a63605",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a9dd99b5-b0b3-4759-ad8a-9ec3eb515d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b03c905-2396-4ff2-a554-81aab73b6491",
        "cursor": {
          "ref": "5abab26f-0ae5-4b5d-a382-00a68c199a4d",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b1385e82-4cab-4973-bbe5-b88b208d778f"
        },
        "item": {
          "id": "0b03c905-2396-4ff2-a554-81aab73b6491",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3fa5471f-e6d6-4487-9036-1ac445c4ca9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd85e21b-5e03-4964-9312-7e59ed623121",
        "cursor": {
          "ref": "207d67d7-6f78-4a84-a9bc-9a65ac307734",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "380ab528-093a-41f2-a951-29eea8ba712f"
        },
        "item": {
          "id": "cd85e21b-5e03-4964-9312-7e59ed623121",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d835201-3291-4c54-884b-1252c54923dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c53a984-32b6-4a9e-871e-213a87a5734b",
        "cursor": {
          "ref": "1df1e114-5bbf-4750-9470-91605a2111d4",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cf796a2d-9a7c-44d1-bbd2-f1e7953967b3"
        },
        "item": {
          "id": "1c53a984-32b6-4a9e-871e-213a87a5734b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "77dd5129-bb12-4946-9e89-fe4ac3199032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226075a2-6cbf-4b99-bf00-a38291a5418c",
        "cursor": {
          "ref": "64150175-bd4d-402f-8f9a-0267415c412d",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e073e1df-4b21-4a6a-a0b9-ad459b774d99"
        },
        "item": {
          "id": "226075a2-6cbf-4b99-bf00-a38291a5418c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "084afe2f-5678-470d-a245-06cb696331a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7187cb38-e015-4f54-828c-7ab909b76310",
        "cursor": {
          "ref": "decd8d1f-1a6d-41a0-af0a-10ab9745893e",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "056f08d6-cf40-48ab-be57-117189a2ece5"
        },
        "item": {
          "id": "7187cb38-e015-4f54-828c-7ab909b76310",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "51189f32-3782-4528-a7ac-4ae95fec9260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17091ec3-f901-4e5c-a093-8e13b0ad01e5",
        "cursor": {
          "ref": "f8a19920-848f-4276-b244-4e3d4201e7f6",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ac7d82df-3186-4ce1-bd9d-ef0485990c9e"
        },
        "item": {
          "id": "17091ec3-f901-4e5c-a093-8e13b0ad01e5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "abee9900-2764-4a96-8a7b-86ffb66d118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74bf9d8-6446-4d53-8c7d-9fed9fccfe55",
        "cursor": {
          "ref": "be51996b-7f32-4b97-95f9-b1fa80d36487",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e332e7f7-335c-4002-9a47-cdc5f4e32b4c"
        },
        "item": {
          "id": "f74bf9d8-6446-4d53-8c7d-9fed9fccfe55",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b362e3e9-377f-4cfb-bb79-2a3db6be3754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e285dd50-f3c2-41a0-bca6-4317a95d158d",
        "cursor": {
          "ref": "6bf825d7-4e65-49bb-a1b9-9aaa463be8e5",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0bb42059-3699-4dbd-b58c-6a8deb20d838"
        },
        "item": {
          "id": "e285dd50-f3c2-41a0-bca6-4317a95d158d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0111532c-ca67-4107-b28f-a373c8ef7d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4c9423-f864-49a6-a5d9-55dea28ddb23",
        "cursor": {
          "ref": "6a8a0f9b-2480-463c-8aad-08d4020d6486",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2d90202d-48b3-4aa1-9356-05dc3720ebb3"
        },
        "item": {
          "id": "4c4c9423-f864-49a6-a5d9-55dea28ddb23",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "33b31b11-fb54-49b1-9795-c64b04032658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053639e9-baa4-4266-9ab3-74dc926c7505",
        "cursor": {
          "ref": "e9d730cf-5eed-44bd-9cb9-eb7b02553885",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "171ff39a-a448-48a6-9660-a8185dee0fff"
        },
        "item": {
          "id": "053639e9-baa4-4266-9ab3-74dc926c7505",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d45d5654-ee2f-4325-a9f7-ec1c13257b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b3e955-52f6-470c-a96f-faad7a0f5904",
        "cursor": {
          "ref": "9fb40f3a-3cc1-483d-8ee3-a7540d45b062",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "582dc81c-ac37-4588-b9be-60a30626b62d"
        },
        "item": {
          "id": "43b3e955-52f6-470c-a96f-faad7a0f5904",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4a2a7723-8565-444c-9c14-5cd1fdabff1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2303e14-72d7-441c-adc7-a32699e28c09",
        "cursor": {
          "ref": "d69d7402-2eb9-46e2-a25c-c586cb0c91b7",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b83069b5-4242-4ab6-81c5-55f8b3ef0cbe"
        },
        "item": {
          "id": "b2303e14-72d7-441c-adc7-a32699e28c09",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f992fbf7-0a82-48fb-9f32-0eaf158b7f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04266d75-5b9c-4b1a-92dc-33cfe8b0a989",
        "cursor": {
          "ref": "e8e3417c-07f4-4155-8ef4-44c79502a007",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8b0107a5-6463-4329-9740-fe5b4a3ba377"
        },
        "item": {
          "id": "04266d75-5b9c-4b1a-92dc-33cfe8b0a989",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8927de1a-cc56-43ef-98d3-c070babefae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dd19de-424b-4134-a0a1-3f1ee436e941",
        "cursor": {
          "ref": "ad1de381-3c0d-42c7-9138-72e868b1cbb2",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0ec9b669-4292-4f5f-b98b-7f539ad29a27"
        },
        "item": {
          "id": "b4dd19de-424b-4134-a0a1-3f1ee436e941",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "71b8025b-31f6-4b45-9287-7ad82b3ed729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d88493e-15c1-47c3-a78d-569988610fe3",
        "cursor": {
          "ref": "a8717a0c-3d55-4f2f-a189-2420b55f9414",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d086de13-6500-4212-bf78-c7018f572619"
        },
        "item": {
          "id": "1d88493e-15c1-47c3-a78d-569988610fe3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1ba6cb85-6b0a-4248-81c8-a83c7c9a91b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb4b9d5-9fdd-40b3-8a30-326a63d8e410",
        "cursor": {
          "ref": "46388130-8287-4e66-8139-3cc16db8da9a",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "788c3a36-b68b-467a-b7e0-9af1f1b54dca"
        },
        "item": {
          "id": "ccb4b9d5-9fdd-40b3-8a30-326a63d8e410",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c74aab72-7930-49d7-a1e5-88792bd6acbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c72640-920c-4a64-80ba-5e9a687905d2",
        "cursor": {
          "ref": "87a5fbfe-3d38-492e-a2a8-42046279d0b5",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8880ead9-8076-43b0-8ae2-7aa447fb793d"
        },
        "item": {
          "id": "94c72640-920c-4a64-80ba-5e9a687905d2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "206717d5-958e-4e85-a5d9-cb3b79998aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540de937-6acf-43b5-bbc9-1f01b0025fb1",
        "cursor": {
          "ref": "a13a935e-2292-45e5-ad22-76baa0b8208d",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "849a7140-a1d2-4309-ae5d-1627d9dca1cd"
        },
        "item": {
          "id": "540de937-6acf-43b5-bbc9-1f01b0025fb1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6f8ad4f0-63d0-43df-a359-97245d9ffe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe74062-f7e7-4713-bf9e-a51a55418649",
        "cursor": {
          "ref": "8b996a25-ad59-4849-a07a-a7527d3cd7f6",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1845ae5e-4d60-4bfd-96c6-9208e71dda13"
        },
        "item": {
          "id": "dfe74062-f7e7-4713-bf9e-a51a55418649",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "35a1cc5e-a3b4-4509-a598-3fd093a2eba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71e58cd-aaf2-4d9b-bf4d-2b059c546879",
        "cursor": {
          "ref": "f2da6f9a-f5d9-4673-b379-a8ba7a410824",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "031dc4fa-3c47-4fba-8ed4-3cc835f08df0"
        },
        "item": {
          "id": "a71e58cd-aaf2-4d9b-bf4d-2b059c546879",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "036781f1-c199-4015-98d8-3e1bf5cba961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c97a2-a441-451f-af90-7794ea70014b",
        "cursor": {
          "ref": "5405be9f-01fc-449e-8381-b3b54862cb9a",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c5f5ebdf-d1ed-4970-bdd2-a9d0724e57c2"
        },
        "item": {
          "id": "0e3c97a2-a441-451f-af90-7794ea70014b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "524c6ec5-e171-4e00-84e6-7c1feb859a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9af60fc-7113-4d46-a544-159d9db1a8e1",
        "cursor": {
          "ref": "2e002b1d-3bbb-467c-9ddd-6da1ffb12751",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a3d1de3f-1b6a-4d4e-8503-968072f9ba9a"
        },
        "item": {
          "id": "c9af60fc-7113-4d46-a544-159d9db1a8e1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "663ff5cd-fe4a-4416-9149-eaed384b6ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54261fb1-f3bb-4c80-a87f-0ccf6391c8b5",
        "cursor": {
          "ref": "8373480e-7309-4186-8820-78e3e2e3e3e5",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "05ab5f6c-276e-4f1b-8730-95f273598e44"
        },
        "item": {
          "id": "54261fb1-f3bb-4c80-a87f-0ccf6391c8b5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a4fa1645-0bb2-4278-ba81-02e0cc777845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f522489-5db2-48f5-b2cc-8f08a812d1b9",
        "cursor": {
          "ref": "5399bb37-b8ea-4718-8f82-73048cca6ec2",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fc50df34-a28a-4e74-8cd5-856e9ba8c581"
        },
        "item": {
          "id": "6f522489-5db2-48f5-b2cc-8f08a812d1b9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7c055a37-d635-4077-81de-b5d3fde2c15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d583408-cd63-4c73-965b-8ba2f9f4c98d",
        "cursor": {
          "ref": "7c84b493-4091-4db2-888d-8289b98ba5e0",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fe1e6674-017f-465c-9e35-717e2ff25879"
        },
        "item": {
          "id": "1d583408-cd63-4c73-965b-8ba2f9f4c98d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "738c09d5-7daf-4e64-827c-4b2cffa51169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d13055-305a-4bdf-bcdb-5fe79a499d04",
        "cursor": {
          "ref": "cad33c1c-fc4c-436a-83ea-be0696d783a6",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f68d3dfa-add9-47f2-8424-9384b88edb87"
        },
        "item": {
          "id": "c7d13055-305a-4bdf-bcdb-5fe79a499d04",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5bc9a598-2f6c-4ddc-a469-96a2509f69ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f99fc70-6afd-49a0-9303-adbd61aaad24",
        "cursor": {
          "ref": "480ab231-2dc4-4612-87e8-4ef8c95f7294",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5c916b82-0ba8-481a-82f2-ba7d86f031c5"
        },
        "item": {
          "id": "8f99fc70-6afd-49a0-9303-adbd61aaad24",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "029949ab-21d7-4d1e-8649-29f3c2750054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2b932b-90b7-4bf3-ba58-454fc74613d7",
        "cursor": {
          "ref": "a6d3532a-da9f-40ce-bb0e-ce5bd2f78410",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5437dc43-398f-432c-9f7c-4ca7ca8840bc"
        },
        "item": {
          "id": "bd2b932b-90b7-4bf3-ba58-454fc74613d7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a451060f-17c3-4548-a732-db7208bdfc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55014aa3-e7d8-4131-ac51-4961c2f9f9ea",
        "cursor": {
          "ref": "434f60fa-649f-4478-8b51-b1cb92283417",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "94bea748-bc43-4b83-8feb-4dc54acf7058"
        },
        "item": {
          "id": "55014aa3-e7d8-4131-ac51-4961c2f9f9ea",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d352cc0f-bd8d-4d60-b91d-95215672847d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c551d2-9ffe-46f9-b10e-a942fbc915ed",
        "cursor": {
          "ref": "8878f099-6cf7-4d7d-9474-0c1c663dacbf",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "04464c57-c54b-40e2-9a97-97cc1c50be30"
        },
        "item": {
          "id": "74c551d2-9ffe-46f9-b10e-a942fbc915ed",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0d0e582b-8b5e-4c10-996c-ab4d752886c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704ca6d1-89df-4dac-8ef9-7f91a7945f4e",
        "cursor": {
          "ref": "84cafecb-f56a-4ab9-bbec-e95c63476dd8",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b74ba3ee-d0b2-4f26-af6d-7b724ee9e227"
        },
        "item": {
          "id": "704ca6d1-89df-4dac-8ef9-7f91a7945f4e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "83a54495-8452-46a8-a8f2-90f114bd253b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeaecb7-0279-4f1c-9818-677353f5a3e0",
        "cursor": {
          "ref": "e94939bb-7f04-4b5b-ad51-e476453b2a39",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ca054516-e3b9-4cc3-9fff-4b7809b730fe"
        },
        "item": {
          "id": "ddeaecb7-0279-4f1c-9818-677353f5a3e0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "03fc2643-f399-4549-9395-132d34f0c909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592f7846-2c0d-4ba8-9d83-483cf944bf61",
        "cursor": {
          "ref": "29f4dd1b-096f-4612-88bb-abfa4d06d5c5",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6ee6dee7-04ce-4046-a6a2-cb4370fd4f4e"
        },
        "item": {
          "id": "592f7846-2c0d-4ba8-9d83-483cf944bf61",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f431f37f-09b0-4139-bd8f-6c57b04fcd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64a169b-e5d7-46ad-9bf8-af6339f01b1d",
        "cursor": {
          "ref": "c17a26c4-8baa-474a-a86a-97d056464dcb",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4c71738a-6224-481c-bb3f-a02dacf15975"
        },
        "item": {
          "id": "d64a169b-e5d7-46ad-9bf8-af6339f01b1d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7ebccf4a-5752-4415-80bd-d6a9ea7a0612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89051d5-1054-493f-b8d7-9ee5882246d2",
        "cursor": {
          "ref": "93983ce9-1f16-43ba-bc3d-711789a9f066",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a4fdc31f-d17c-4d37-9e68-dc6fad2096f0"
        },
        "item": {
          "id": "c89051d5-1054-493f-b8d7-9ee5882246d2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2338a966-be00-4e46-ba10-a498757ae2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec2d55-5dd9-4d47-ad10-173d5832358b",
        "cursor": {
          "ref": "460327eb-80aa-473e-bcb4-b39d51cee70f",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "404118eb-56ea-466a-8b8e-975df4cff5cf"
        },
        "item": {
          "id": "17ec2d55-5dd9-4d47-ad10-173d5832358b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9b2df7e5-5360-45ed-8df9-3d089073fac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4805d93d-126e-4f17-a3c7-c766c8c4e59d",
        "cursor": {
          "ref": "c14185e6-460c-47ea-9705-5f0f81935600",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e6321136-1431-4900-a5ae-66ed7675f365"
        },
        "item": {
          "id": "4805d93d-126e-4f17-a3c7-c766c8c4e59d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d4241e77-d6d4-4d33-92d6-a0b57dfd5cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e24d50b-b216-4f51-9eea-91b30e1543b9",
        "cursor": {
          "ref": "170a3f79-ccbb-4a53-bc7a-7ab31b8e8674",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1ed956d5-cf60-403f-87f4-6e867c6d5880"
        },
        "item": {
          "id": "1e24d50b-b216-4f51-9eea-91b30e1543b9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ece72b7e-aa41-4ca7-bf92-db64af03859b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d2920b-0729-47db-9eaf-fd9f0c9cd581",
        "cursor": {
          "ref": "58012406-9e1b-4c20-aeb6-b48da383c624",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2da876fc-c02e-45cc-bf8e-ee7dcbb850d3"
        },
        "item": {
          "id": "a0d2920b-0729-47db-9eaf-fd9f0c9cd581",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "347b35da-6ddd-4520-88c6-790918153334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd6b78c-b087-4deb-b7cc-d50b9f16cbc7",
        "cursor": {
          "ref": "78415284-b5e8-4f12-9d0f-48a526c6ee32",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ba8b5937-36dc-49cd-9fb6-dee0ed5e2cd5"
        },
        "item": {
          "id": "7cd6b78c-b087-4deb-b7cc-d50b9f16cbc7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cf9dc232-b830-4040-9fc0-8449a12c7284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a976911e-ff54-490c-86ed-dfa5e20e1b19",
        "cursor": {
          "ref": "a3da98e1-6873-46f1-a8d4-b83bb9b32252",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cc2da558-82fd-43f0-b830-b235f87162af"
        },
        "item": {
          "id": "a976911e-ff54-490c-86ed-dfa5e20e1b19",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1e607b0c-eb13-4e43-a1da-168a72939b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee903b5-9b19-4108-a1cc-f95481fc739f",
        "cursor": {
          "ref": "78429f08-58b8-453c-a7bb-de93b2aac946",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "123b942c-5e23-4b63-9008-855be5a0da5a"
        },
        "item": {
          "id": "8ee903b5-9b19-4108-a1cc-f95481fc739f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4cbdc982-1956-4c30-87da-72412feff978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc4c04a-a357-43ba-a8a9-3e4d8d08b67a",
        "cursor": {
          "ref": "3e034d40-5b21-43c8-a6b5-2eadba63a212",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ae3e5db4-8b31-48fb-8053-c886f248e537"
        },
        "item": {
          "id": "bdc4c04a-a357-43ba-a8a9-3e4d8d08b67a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dbc91b7b-59d8-47b4-8416-9f73670b909f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493df18e-ea2f-45c8-b202-7f7ec57baf67",
        "cursor": {
          "ref": "47edb2a1-8f90-4928-87ec-06f95e152eb6",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "622c705f-b9fd-4435-9210-c039b69a96b2"
        },
        "item": {
          "id": "493df18e-ea2f-45c8-b202-7f7ec57baf67",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2e310ae1-35b3-4e83-a8c0-465360182183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5a81a7-3cf2-4b4c-9a6f-22d78770c8e0",
        "cursor": {
          "ref": "0ba6e811-f840-429a-8167-bef698a6067f",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7d23e628-d20c-476c-bb8e-fcf898b94539"
        },
        "item": {
          "id": "7a5a81a7-3cf2-4b4c-9a6f-22d78770c8e0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fc306c8b-d0b8-49df-8fbd-ee2affb80551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec5234d-ff9a-4e3a-9bc8-2dbf450714a8",
        "cursor": {
          "ref": "ba92f4f9-535d-4d38-9a4d-12127df14aa5",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d21b41d8-b1e9-4644-90f2-bd07d288b762"
        },
        "item": {
          "id": "bec5234d-ff9a-4e3a-9bc8-2dbf450714a8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d837f38e-3874-49c4-a0ac-51a28158d673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b027091-4957-4ae1-934d-65051e9b1d51",
        "cursor": {
          "ref": "599b4414-1c2a-4d7d-82c8-75f4b59729c0",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "10662775-4788-4bb2-ba47-88b52b4fc1d6"
        },
        "item": {
          "id": "1b027091-4957-4ae1-934d-65051e9b1d51",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7810ae96-41d1-4afc-98d3-b023691a22f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01451014-2780-48a6-8cdb-40155562ffb1",
        "cursor": {
          "ref": "5e985722-5540-48b7-8d06-605913bcd949",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6f63101c-932a-48ae-9eac-13ffb46091db"
        },
        "item": {
          "id": "01451014-2780-48a6-8cdb-40155562ffb1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d7c1476a-25bc-40ed-8d02-3a8102ee53cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03d970a-b6ef-4be5-b9e6-1613ae37b840",
        "cursor": {
          "ref": "f1a705c4-2cea-48f0-b299-bb348d44f46f",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f61f6526-4807-45b6-a76e-77d677950379"
        },
        "item": {
          "id": "c03d970a-b6ef-4be5-b9e6-1613ae37b840",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ff9879d2-dc2a-4ff5-9076-e24634b04aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89edb0b-ca83-4d1b-ab54-3b5403861e9f",
        "cursor": {
          "ref": "e715bfb0-d9f6-4f8d-b1ab-17c165410667",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d4347a87-c208-4c0d-af86-c6b006a24261"
        },
        "item": {
          "id": "b89edb0b-ca83-4d1b-ab54-3b5403861e9f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9c977fa2-efdf-4d82-a6ae-504990fca302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566a3be6-cf5e-4b5e-ae93-7292a96ad930",
        "cursor": {
          "ref": "4a3c3bc7-b79c-429b-91b7-bd2b008bb6e1",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d26b356a-50f4-42e9-b409-4949bd21f715"
        },
        "item": {
          "id": "566a3be6-cf5e-4b5e-ae93-7292a96ad930",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "518cc3e3-0ded-4144-9f90-6cd3269f7b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f048ae-0dda-4b60-b744-d749a2e22ba5",
        "cursor": {
          "ref": "0e22a265-3cad-47d2-b2c9-46a295d3df56",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6cae208e-39a8-42da-a67f-7ff37dce2f63"
        },
        "item": {
          "id": "b5f048ae-0dda-4b60-b744-d749a2e22ba5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2ad60067-3cd5-4cb9-9e18-2d1c92e282bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea34972-4b89-47f8-84a8-2769805ac053",
        "cursor": {
          "ref": "f2a7e505-e75f-468c-9f46-66e587a091b7",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c26e5539-62b1-47bc-93c4-b28b7fb31ac5"
        },
        "item": {
          "id": "aea34972-4b89-47f8-84a8-2769805ac053",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a161bfbd-a7f6-4564-a7ba-171593b28476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85400535-c431-40f8-a935-3a38d72eb57c",
        "cursor": {
          "ref": "68e4a55b-644b-4123-be27-d93b59d05438",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f04ea4e0-e760-4ce8-b5c9-11279558aa6a"
        },
        "item": {
          "id": "85400535-c431-40f8-a935-3a38d72eb57c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "88f85cda-a96b-4b2c-a1a4-3df04fd78f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f179f6a-f813-4d7d-91ca-3ee2ffcef5df",
        "cursor": {
          "ref": "0d865648-346a-433f-86a0-bf452c4b365b",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "66a2c72d-5a1d-4a5d-9162-9c2eb5edbda1"
        },
        "item": {
          "id": "5f179f6a-f813-4d7d-91ca-3ee2ffcef5df",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f23b61a6-7227-4cb5-b58e-20511b0adcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc44047-2417-4a45-9bf5-8ccd7609ac6a",
        "cursor": {
          "ref": "e516da8e-68ef-478d-8045-47f247810922",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "18678c58-64d0-4cd0-907d-cc98e71b244f"
        },
        "item": {
          "id": "bfc44047-2417-4a45-9bf5-8ccd7609ac6a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8446f6b7-a814-4b62-963e-5925f2fb7089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45229bba-f87d-43b4-aab2-31d9fe2fa86e",
        "cursor": {
          "ref": "e3cb7139-0941-45ed-922e-b1775da113b1",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e6b95e38-ce0e-4d99-a3cf-04396f55c490"
        },
        "item": {
          "id": "45229bba-f87d-43b4-aab2-31d9fe2fa86e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bb135e4e-75cb-460a-89fb-0cceddd70309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee29eca-d99b-4033-9847-e8c6cde54014",
        "cursor": {
          "ref": "d858183b-6d1e-487b-ae8c-32179ae1786f",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "be9633e1-4101-4161-8876-5ac1c017f93f"
        },
        "item": {
          "id": "fee29eca-d99b-4033-9847-e8c6cde54014",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f3d440ea-2c6d-48d2-aa18-cc50b19dac71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da1c47e-473e-4064-9cc7-214e15a32b38",
        "cursor": {
          "ref": "493ffedb-b8d7-42a9-893a-def7f7123ef8",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bb70a918-ded4-4ca2-a1fa-ffc84173cdb4"
        },
        "item": {
          "id": "6da1c47e-473e-4064-9cc7-214e15a32b38",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3edb6651-e9f8-4679-a3c4-afc8fdd394f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0751cb2-c5e0-4614-9038-8e53002d5c66",
        "cursor": {
          "ref": "0708d87d-7725-40f5-b6bd-74bf6fec1ee0",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f3c704da-1245-48a4-99e5-8121e4333fc2"
        },
        "item": {
          "id": "e0751cb2-c5e0-4614-9038-8e53002d5c66",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4c7d54ab-8d69-4bec-b231-e91627e8b326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ba15c4-ac72-4b73-8d7a-dbb0195c0c7a",
        "cursor": {
          "ref": "e5b18647-7c1c-4e39-815a-eda8aa6da973",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "94909565-ddef-4fa5-a585-9c6b74d0d85a"
        },
        "item": {
          "id": "66ba15c4-ac72-4b73-8d7a-dbb0195c0c7a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "392ae045-583a-47d7-a403-14109105ebad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f93682b-c3eb-4bbb-8af3-a10a0b29ae2e",
        "cursor": {
          "ref": "54edfd28-afa9-4e9a-a8a6-ec7b27970aff",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6d0fcd0-4b71-4868-8d51-f0f2935e9028"
        },
        "item": {
          "id": "3f93682b-c3eb-4bbb-8af3-a10a0b29ae2e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6553ec23-3fc7-4408-a5f7-43796852d87d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab00e845-3997-44f6-bf27-cc3f7721d952",
        "cursor": {
          "ref": "ed1a3cce-3c12-4294-9db1-06187debef83",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e4e282c0-d419-4d5a-93e4-4161dd3dc697"
        },
        "item": {
          "id": "ab00e845-3997-44f6-bf27-cc3f7721d952",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "08ee719f-efbd-48fd-87c6-552d369badfc",
          "status": "OK",
          "code": 200,
          "responseTime": 597,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2ae417-e47a-48f5-a2af-fe4f378e51b2",
        "cursor": {
          "ref": "f3a95b7f-f830-4260-a594-f25596233bff",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b7887fb6-514b-4741-8e90-36902d6b5ce6"
        },
        "item": {
          "id": "1c2ae417-e47a-48f5-a2af-fe4f378e51b2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ab7a987d-e6fc-4399-8b0a-6e0d7f22773b",
          "status": "OK",
          "code": 200,
          "responseTime": 1659,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62a80d8-4705-4756-8325-7909c17ae07f",
        "cursor": {
          "ref": "77ced8c2-35c2-45b1-b3cd-d23a0d75ab1a",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5ee74aac-e6f5-4184-b5f8-4d214ad2e502"
        },
        "item": {
          "id": "a62a80d8-4705-4756-8325-7909c17ae07f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f2425897-839c-47dd-a2f9-37b2c1009b81",
          "status": "OK",
          "code": 200,
          "responseTime": 1736,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171eab0-a317-45ff-9d02-70bc367e35a9",
        "cursor": {
          "ref": "a9c3b0ef-7cb9-4cf6-9555-4f6c5345a394",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5701af22-ab16-4896-b796-618faf01fa99"
        },
        "item": {
          "id": "b171eab0-a317-45ff-9d02-70bc367e35a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b596fafe-abd0-4469-bf06-b03ca377f227",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171eab0-a317-45ff-9d02-70bc367e35a9",
        "cursor": {
          "ref": "a9c3b0ef-7cb9-4cf6-9555-4f6c5345a394",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5701af22-ab16-4896-b796-618faf01fa99"
        },
        "item": {
          "id": "b171eab0-a317-45ff-9d02-70bc367e35a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b596fafe-abd0-4469-bf06-b03ca377f227",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68384af-bb6e-48c4-b327-a0a8c0b0f924",
        "cursor": {
          "ref": "185a9e2e-bf9d-407f-8a39-174dde8a5ade",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c2d28a02-d966-4ad7-b668-b772c4ac7170"
        },
        "item": {
          "id": "b68384af-bb6e-48c4-b327-a0a8c0b0f924",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5ca38053-62d8-472a-bd4a-606d95262401",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b3fe50-c22d-403d-be7a-4fa9f20d7023",
        "cursor": {
          "ref": "15ae25df-1de8-4c5c-b2f6-4866afc22f42",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "59bbd78d-0d20-49a4-902d-fffe5cc6129d"
        },
        "item": {
          "id": "25b3fe50-c22d-403d-be7a-4fa9f20d7023",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2b80eff1-3a88-4d26-8324-cedb79b02ef3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}