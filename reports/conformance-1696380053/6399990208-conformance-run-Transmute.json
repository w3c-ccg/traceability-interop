{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9f096eee-9de0-4df8-ac85-218f75e43414",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c122e7bf-5f04-4388-8e4c-f415c99050ba",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "121e54ca-76d7-46d0-b8a2-099c2e392d3a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab5dad2e-2a14-491e-8765-ec005c653797"
                }
              }
            ]
          },
          {
            "id": "8475a187-a8fd-4323-bc0e-989539ee57a5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbb6f331-2c1b-470b-803b-e1f67bfe5131",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a7903d2-241d-4085-ab1f-f197b2b536ce"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "68bec020-2590-48fd-8b19-001b3aaa7b15",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "833eb726-5841-46c5-bf41-9705589791c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a42458b-2f53-4233-a6d1-ad97ada4df79",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3134d834-6f99-4c74-a4db-c54d243412e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d01b448c-3b01-451c-8590-77ea40be7099"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da88fb10-8f8b-42b6-b4ac-e33133347401",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de06dbc1-8442-4d3f-b117-c93b5779b260"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1249ba26-1995-415a-9be3-25a72ed674ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55f1f53c-78a0-49c6-81e5-561f5bcd2e7c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6d54515-0c63-4c06-9c6f-2aab3ad596c5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8f8ed392-f9ef-47a1-a432-55a95b4c994d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0d9ec32-a9f2-4f5d-9678-011bc821d850",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4c207ac-2248-44c0-ab9e-c63b765ab0f7"
            }
          }
        ]
      },
      {
        "id": "ff3ad525-51d6-41e7-8275-ad0c09a1e73c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "28dd3daf-df74-49ad-b36d-33524ecdaa39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "430f3d02-4d21-41df-b752-76927868744e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8190889-6719-48b4-8a48-695536d63c2b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a41611-72dd-4bcf-a9cc-260016abac68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66965375-5edd-49d6-91a3-b078aadc2a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7574ea17-4d36-4209-bc27-1b81ff6300ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc9163a-5a7f-4b3e-a37c-a2325a2b45c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4181b13e-6e6e-4915-83c1-7e7ec4389d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedcab0c-4de7-4c4e-8a82-8eb4b2d84244",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaa74b9-c214-4abd-8c3e-c8b4880aa09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02d393f5-09ac-496f-92d7-a1a39a99302c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "188f0a91-b8f1-489f-bc34-d0a822961c87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87f4fd32-13a3-47ac-a42c-78ffae58d273",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523b93b0-f369-48ea-a438-f3fb8903a099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e66e30eb-e6ef-4035-9e81-02750de61a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea960bbb-8421-405d-9e53-855f2b3f9d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92997e7-0615-47c1-9a96-fcbad3cab8ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b762084-7482-4d33-a133-0fcc8c1cfea0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b873a190-3b98-466d-b57f-f4b3e6abc5c5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bd96d47-0c4d-4fd8-9521-40f973cbc0be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2f298997-0cec-4f12-9759-3f6133174359"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30687dd3-4b21-4aa2-95df-7b280592f02f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8d2adb9a-48a0-4a57-9077-2db1ed7ff564"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d0fa005-b095-4512-9d4d-ef0c29bc2a64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b141437c-6db5-4de3-b4f4-02a4cf594bd1"
            }
          }
        ]
      },
      {
        "id": "2e2179f7-f708-4401-b8aa-16be09ee8c62",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "88a44c74-f7ea-4614-9759-80654e9df87e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ea7c40c-bdd8-4c2a-8ab0-ccfe95d1fc0f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2c8792fd-a04e-4bc4-b18c-acd1fc087582",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5908af-8db7-4891-b24b-3ce8914343f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b100dac-d7ae-4bf0-baa0-b71f201e7e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a0a364-b6a4-4dba-8bd0-9db3f9b9c49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "899fab01-64d8-49f4-8bea-b9c5cb527001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4261ba-12cd-4ff5-b4d8-0571bfb27407",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bc121b-319f-4d7f-84eb-fe7e7709466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cfb27e-20bb-4e17-b6fc-74a3d70bb201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117a6d4d-b668-446e-93ef-3168be024f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d8174cc-583d-4308-bdaa-6ccbcb0a19b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86d8305-dd8c-4519-b3ad-3eeb58cda1f1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad06034-f0d3-449f-9f63-62f36facfd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7c447d-e15e-4dbb-aa21-42b4968ee2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44ea6dc-6482-45af-af26-124c406e19d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d6fa24e-5e48-49e9-9dd3-88aaec286ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49f3756-bfbd-4276-b57e-864f5542a743",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd7b5ee-0f5a-46e6-9413-78ba0fb3846e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08972e82-0049-44fa-8c64-0fe719f1f005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dbcd2f-a882-4876-a6da-0687282a1ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "217b4b96-7844-48e5-892f-0ba48cfc0e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315acccc-9069-4af9-8114-db250d212a01",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efea0908-aaad-467a-8d9d-88f61617c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aee9296-c2cc-45a2-84b2-89a655d25617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399a312b-f75c-44b3-b95e-6df40d31cc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85e4f9d1-c3ad-42c4-a6bb-f5168f09d8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd30b156-2f3d-4c67-adcf-04249f3c51bc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83299d61-612a-40f3-9b06-97008df81ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87bafd9-89a8-483a-ab19-752d2512a854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc2960c-3de3-48ef-9aeb-11de0c3285bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9234c072-5bc1-44ed-a3b6-30092cad647e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649a3402-802a-4bb7-8ef5-20ba4affd659",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df5a95-61f9-42f8-8472-9ec639c13574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de27c784-0250-492f-8f10-dfef9cbc5382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3829d9-03a0-4fb6-9d2f-685fdaba691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe30f35a-e9be-42ea-9165-9927bc559df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc05cd52-8d22-441e-8a6e-b08f3a1f7d54",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc627dc-a4ae-48be-b539-1b71ccee5c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4594bb-9f25-4f7d-b15a-acc6a38b72d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e26a58-6d27-4535-90c5-d83ad0d7e765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f4aeb2a-4ba5-46e7-836f-d3132ecece9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e83020-41b8-4939-8e8c-2fc5e8626ea2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb51d0d0-0447-49a9-966e-fa972dcd5caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c20075-5614-4f44-a159-c135b39c4e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce32968-a1d4-4340-b719-0270b73783ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ae29714-2865-4d1a-8021-33898f72dcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68f483d-d597-41e0-8860-150f53a755eb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2ec42d-45e0-4752-9a7a-ac590df6045d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68bb566-82f4-4e38-8222-f597c769db9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565d481d-96c0-4c62-bb54-4262e98c6c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b524b956-2992-43e9-904d-ce589f19c9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23834514-312e-4623-ae92-a75d2740b66b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f6f615-31fd-4ebd-bf1c-b1019837fa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02410f37-7e20-4d32-86ad-005de7434520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fd1547-a4f6-4f0a-8ace-cb56617a4b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a25800e8-5ee9-4c42-b4a7-315593a83e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b8f192-727c-4680-a969-0a2a281c5120",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feb55b6-e792-4d94-b874-783579d71468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc0c477-3910-4f89-9d0f-275156bb2e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9d1bfb-ee0d-4290-a3b5-4d06542af7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79bfdcbf-0209-46d8-bd48-cad3b225a64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab69d10a-c6cc-4ea6-a9a8-998911365f04",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285f8cdd-43ae-4b71-a918-2bd2f09e82dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a0373b-d765-445d-8fa3-95aaf4fd2fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9564967-57db-4c68-9de1-ad76ec5c8115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10fa47d8-fba9-4068-9ced-8a01b5742cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d11124d-50de-48d0-b6df-2530dafbabc1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd2d78-4360-4a11-b627-89bc107d9a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6aeaad3-a719-4210-9a0d-8b8e7c58e88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b250a6-ab6b-4b0c-9f9e-0a1a17c906b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58fed4ea-1f53-4a05-831c-3f711f5c9dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388a5624-13a0-4a92-8b23-31d87e6af212",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8f0a9e-b855-4892-8490-f950ed506da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8d0deb-fcfd-4f1a-8cd4-fb54370617e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7a54da-5157-4551-9fa5-cf4dddf7a8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cda06e5-41ee-4fa9-bded-f3eca5886c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a0d416-25e0-43ab-971d-dd80ae8bbd6b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef3138d-c1de-430f-98ae-64864084bf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0e6975-928a-4f23-bd95-19bba651778e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe99b2e-6ce6-40a7-a3c7-df7650791ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6601e681-71b6-4ec3-ad00-e552e4c70f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f40ea7-6fb4-4a3a-bf3c-7842b0ad6fad",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df7385-dc02-4766-a71f-80e91c173ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7533e10d-998e-4816-921f-ece77eb9502c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9215230-e9e6-4db9-a4a0-43e894ab283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b78e4d0-b8d7-45e4-b078-c315216c99a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6b9f52-91ae-4f60-9787-fef1d3e70366",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a89ef7-23fb-4aa4-8539-bda16fc87d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc074ef1-b28d-44e1-b516-74dd2d9bbb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63219f4b-f43c-493e-8747-4c56703b38db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ee7310-4f3b-4bb6-9b3e-55d24a003983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc520b7c-2c3b-4f97-9a70-a564bd798c67",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ab811d-203a-448e-bafd-b4c218c7bec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb7c152-d815-4e50-97f5-c4c2df632be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a00c20e-7a0f-47be-a6b9-b8aa0962052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76cbcf9-ce2d-42b8-93e5-6036a30f0a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a21cfa-d5fc-4f4e-a031-508a4c782d75",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd14354-ccfd-4dd0-bcfc-a23dbcaaca7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4522aa-11f4-48a8-8fdc-076325baed4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae4c538-1303-44d1-92c2-0c06bd12ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "416232a3-bd14-46fc-b4f1-ce1134e406f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b03bc4-ea3d-4b49-8621-0a5a7d2b8f69",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd52c80d-19ad-445d-bd94-4820dd87d72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d622920b-4143-410a-8998-44756d6f0344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc6a2a4-ebaf-4b43-ba92-873f52f5efdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "910b7b42-d439-40d1-8bfb-cb75b0aa6b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4344406-6e1c-4ba2-94bd-45452acf0681",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde9c539-c682-42b3-b6a2-fd71eaaef6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37bd434-abbf-4765-84f6-ce61ca8d905f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee5c9f4-4c54-4df1-8ce0-a02323d8a592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef375ed9-7d44-445e-ba9c-fbcd8b6b7c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244030c6-9ad4-4fab-a6c7-4e91930eb6e7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbb8584-8185-4e14-b736-7ac6abe81319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220fe51b-dee4-48aa-bc6e-69b733e3a981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feae09b1-052f-47b7-afda-95201d983420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a02f8e90-0e7a-406e-9e1c-e441a6244bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622d7304-a6a0-402e-aa4a-a3f0a659fb01",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b010bb-477b-4930-8a12-18df3eea367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72d33ee-3422-4288-a95d-4f0c3e929fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3a3e9c-e27c-4ddd-a26a-3e1e1736cd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "344abeb6-d808-4c81-8c3b-1f91f7e48725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5cd744-cf7e-4c77-9779-e4f18be7165c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f491b8bb-4763-45eb-bf5c-6bf9cbabc127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d418619d-bd66-4e13-a840-26b7ee5f9916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a779ad-d733-428a-a7a0-12dc7d81fc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76026497-3ea0-4fc9-bcc3-2380da5621aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f931549e-5b7c-49c5-afba-e114e949af1f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a643fb81-ea7c-46b7-b519-9d8f80c5547e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827f9998-0e5f-4322-9fae-92b98d116def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396f3611-419c-4e78-abe6-46dec12172dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4566483b-2e49-4201-b82d-8e82bff300ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce314b2-e841-432f-bbd6-5cdbe8fed85f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c785b316-3514-4aee-b55c-7ce27edc7e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae84bfde-b417-4d86-b7b5-ff4d7302f4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3e955a-9381-49f3-8fe7-dba6c7ad4d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9dd8f1-6f88-4cf3-8d86-a2ac487510ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d94b2b0-bdce-479f-aabd-b3da06c8f395",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a630fa0-0d73-4f1a-b660-6c2e671fbfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de22eb7d-4e77-40ae-92e3-4cf13f6d38f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2f1de0-bc3f-4362-b411-865f9594df42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac040819-a928-4553-ba32-9c61f09b855e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63949160-e844-4a14-ac05-a3c48eab9417",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a27c19-3644-4cb4-8c6a-01464f683d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83622876-75e0-46e4-a575-84fd531aa08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64b8cdb-a699-4518-b5b5-6a7d38633638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "832017bf-8cbc-4355-8d6f-f4b108b22f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b4bcb2-720b-40a2-bbdf-f3870acbf87e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788a0f75-529f-43d1-a925-8bc8fda22523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34393e53-c1ba-4de3-a3da-cf08a611b67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf6169a-ef81-4e73-bdff-759fee899926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4648d0e-e49a-445e-ae1a-1361186ef7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee55a12-edf6-450d-8445-e17838237960",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b69235-aa6b-4e4e-a73a-07ec9a4cdc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb59e8d4-d270-4f34-a969-a4afb05ac16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdad4b40-08c6-4568-a090-fd210730a6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f2f7bc-a07a-4976-aca1-4eeb10c1e571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ffc706-25ad-4bd2-9adc-d596d0274cf6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28885cd-6393-4e99-acab-2a6e66ef64d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdc18b1-2868-4b00-a967-55ea638a27c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604244cd-afa5-469e-aac4-cba7b9bb4fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb219d3-c0c7-44b0-95dc-933a78633d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90a352c-7ca7-46d0-aa1f-ef03a167fce1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae76ad4-c33f-46c4-8e70-7a9880c76b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ef21fd-5f02-43d9-a841-1e487474b634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a762cc89-7d3d-4e42-ad03-cb68a6b5e6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0bf52d-93fb-449f-9bb8-2375ca1561ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b54d378-c7b3-411b-bc64-8b4185eda05e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47e8056-9d49-4dfe-be87-89a182e52f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde8e2c8-245f-455e-bd7f-c5b8c580f51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb919ebc-8586-4ccd-8887-f5f18764da79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21634a78-4725-455a-9122-9f5690330180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f24b25-5465-4044-889d-5c99b4b09c9c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1ae658-a412-4abe-ac28-35b7dd560519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfb92ac-e07a-47da-9f3f-95eff0e53e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d14892-3d32-4d4d-b8b9-b0100fd0d41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "706d31b3-ff94-451c-a30c-e14fd3bd332f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa79ee9-d6e9-47e7-909f-b56ad7ab33bd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c476ec-e75f-4f70-bcdd-97cc1177eab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34292d21-5896-4943-8bd3-fb8321efbe40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5a1db5-7dca-40e9-b287-5a981558bce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b65b11a-f46c-4dfa-9a33-d2787d726f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02239e2-5f3d-40d1-9a5c-dc2fdd9543df",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344cf039-3482-4705-afff-f020a4497993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a961c300-e860-403a-853b-febee57064f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162cf17a-3322-4fac-b1d2-cbfb9ade0929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "739dad2d-c8a3-418d-9f66-8f895d5fbf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef3cdfc-9c24-47f0-a99d-40f50bb58fd7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9782ed-2543-4a59-b485-44b80cf5664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ca1831-cb37-4598-90a9-4ce24ef6b724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856aea33-e0eb-42c4-9096-49b9108437d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "724f156a-2e48-498b-a1e5-088f97f3b001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e310d4c-e2e9-4952-b014-c43547d2b359",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200b3cf2-d94f-4659-9c36-08912464c865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d2dd34-34ed-4264-8174-62035d41141d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc6aa1f-e206-4411-85fd-19cbc7e1d55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac4cd67-e90f-4104-b95f-2eb15ae6b986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd5b418-ea48-4279-8c75-819e0f7efe29",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74676a28-2a46-4b1f-83a1-67e2507a70c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfe4112-a9d5-40ef-b25f-77b978813249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9835bcec-c80a-4db2-a381-e5928e1d3358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd586a36-4b5b-4f83-b5fb-160da57d5d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5733147-d332-4ca0-99c9-fa098e816817",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c5d3e2-946e-49fd-b4ad-026a719bcbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ac8c3c-82f8-4d18-a027-482ce24d761e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13930d2-4f24-403e-ab66-e8eb59044643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d853d4-92d2-436b-9014-8185d29d2af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d1deda-466d-4bb6-a9b7-fd28ba7ae93d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753bf4d4-2082-4e2d-a81e-44953abda4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aafb9eb-ef11-40c1-9dad-1cc3db020a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec33a80-4b24-444b-89a2-2ac5fd77bf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7a856aef-5682-478b-bde6-2044421af6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92638ccf-b6f0-4882-9300-e4669f2c17db",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337e9452-2fe0-4ba2-abbb-75110f884e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86482f41-ea75-48e4-92b6-67684eef15bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa57e575-a61e-4440-b5c8-f8d2adfd9761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c81185e3-21b2-4863-bc30-89c5cfffd897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c9cf12-7bd8-44a9-bc79-4d07bced20c6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32bc0c8-1df2-4541-8315-5040a66240e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7be30d-2cbb-4644-83eb-26fe0f039f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddc13f4-42b2-4a88-bbbb-01b1e6c05aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a273b19c-670f-43f7-a177-e4641ff75ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6d7ac0-b024-42b6-bd71-ff963abc01b8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccad0078-7f80-4168-afd6-4f63ab13af8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd56a9e-f83f-46dc-899f-210f180a3e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c7187a-8101-4267-b01c-b76d2a7c7866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68700a24-d310-4a3b-a84f-014bdae0f99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da846af-f1f9-4659-ae5a-0d4a71856d01",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7104a8c-ecb6-4b0e-aba7-964e02b0e817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e889194-c730-4c2b-99ce-0eb2305ef5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60204e06-2753-485b-8175-51c9d48222c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8e7ff9-b2a1-4973-b2f1-3bdf118c147f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fe9b17-b457-4af1-9a1b-cc8c87db885c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a2629d-7e40-4070-adc0-79676669195c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5e9606-45dc-4ee4-9952-2e4574389d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862d0d4c-0bee-4a35-b10b-02735a4c70b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e73b67-be43-4ef7-ac74-3e5cb9721c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e0e6b1-1113-464e-a755-c0c5fa7f1c79",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ff001b-c3e6-4d4b-afe0-0cc78f080dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1eab2a-6b89-4928-85c4-5da53994360b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aa3b38-61e7-41e7-9cec-7937d2f31aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e02d9428-aad4-4f9a-92fb-4c5692e49c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05147a2b-fafd-4d4b-9c9b-9547b279f7b2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207cf98d-8d1a-4180-b25d-c1fe1f987d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd895dae-3d05-4238-acdc-2289c2d221e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732760fb-d9e5-4bfd-a5fe-22897906e1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a99f99cf-e6a2-4432-83cb-d32b3238bc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186865fd-0019-4bf4-a888-5ebd5471a9a9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc92642-d65d-4234-954e-1fc20e565414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bf8f1a-0586-48e7-b0c5-9a3932d8ef07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf7d21f-45e5-4cfc-b3ff-3e4b951c8621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "323ef89f-91cf-41aa-81bd-58015239cfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70919b89-e88c-47af-b985-3a8561eb38a2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54014b19-7e40-4d1d-90db-eb7d64523f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99d4af9-f89a-4692-ab58-6dc0855caf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce6d50f-b5f4-4d6c-badd-7318c30980d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e428be10-f796-4f54-8a9f-4cc52c54a27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db9e12e-a081-4cff-94e7-1f3b51247b59",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7f7499-2461-4feb-b10b-5ac138df4c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b651b7-0e92-46f1-a917-c7c2c3fec39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5a4e79-ff52-4e25-8073-af4c141e6cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd821274-95dc-4473-bff4-079c4368e8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b23163-a29f-4e9a-8627-64fe52014fcd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeab14f-7d9d-4e69-a210-8b02f7586955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24527049-1566-4731-820b-7c9dc8f749c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefcac50-b185-46bb-9537-d73e987d57f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "335ad916-1e40-40ca-acef-83a105dd979d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c491c700-d575-4c29-8d28-b1fb93ea74d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdaf220-0df6-408a-b0c1-bee7e00415eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69d66ca-e4d1-4e79-b932-6ce587ef3cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ce9c1a-825d-4121-9852-c116abdfd0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4ec279-8d2f-4ce9-89b3-3662a6719a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0f7529-1ad8-4566-8762-c33b67761233",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1409e3-0dc7-45c7-b2f0-0a5432bf336f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76ae983-4c7b-4b22-8580-b66de200c4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bec359-0e62-4f03-855a-02a6a0d4357f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a488a3-f8f0-4d3f-b325-1d154b6f53e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9f0bd4-e382-4b95-b758-5b22f7ffc494",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e544a654-f122-4fad-82db-28e611ea166b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d9e5b8-a30c-41eb-a6cb-1e60f853c9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81e3686-b93e-4751-85d1-10c3f149caf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1d526a4f-8f69-44d1-8dbf-51dc9821d1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8531ad00-2c95-4a84-ab1a-a98292d75184",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38a6fd0-abe2-4722-b533-200b6057ed80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9366a7-ac3f-44b5-b21f-0ff7d5023561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2750eca6-0cef-4ae4-9c27-2607faa849e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4796911-93d0-4b63-bf2f-e5ff408e3859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d860c80-cca7-487b-882f-5199ec365bf0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cb8691-9654-418e-81be-1c7923588aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba5c9ed-fa52-483d-899c-7aa69f68674e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb4c6f6-a1e8-4155-af3c-f79008d02c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed61cfec-619c-466d-b8d3-962a58831416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30bfcef-a128-4708-a662-639f10e6dee0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1981fd54-b27a-4cf7-9780-71273099c623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df964c9-d761-458e-92e1-2740bfc1cffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae762b8c-e95c-467e-958d-6b9a2f15b672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "762bb678-66f5-4835-b7aa-7d7724192761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd48813-bf2f-46d0-b931-d4df3b703522",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8eba88-dff6-457e-99bd-02f1a8580462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb78e1f-3113-480a-9f55-19f5ac8bb9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429a3a98-f888-4bda-8250-41263dc7bca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa04a47-04f5-48aa-bb9d-a90226a2147f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f97044e-9f9e-4e11-865f-f2d07776f7e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742a0472-ff69-48d8-bfdc-7856a47e49b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a6705e-adf7-446e-8388-5655fad15ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec981485-4e37-4d79-8426-5e30044c5e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fec4c11-4350-4455-bcb0-871d29bdd5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17a6a99-c70b-4dc2-88e8-922201311ac1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f3361d-f042-4f1a-a26f-a5d011bba815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb07dd7-9ce8-4b15-828b-e978d6deac91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3752797f-4ad6-4ae7-afb6-5573617f979e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10aceeb-af35-4073-8ff5-6b6c48869ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac5ed0a-d55c-4232-81ef-b55e3edb036e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0177a0e-0bdf-4423-8de5-be69b1b9cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8470cf2e-be40-426d-8fd3-a993ebe3362e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90ddfb4-f8eb-4fc3-9ad9-a96a87da17b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94dd3dc-8a4d-4af4-b37b-0c19b357d402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b12c358-095e-4457-9b00-c3b4e7f56d76",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee94605f-6b2a-43db-8014-c0f7fc21802b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8679583e-e82f-4c00-9a37-4a5c57a5de3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53965182-004f-4e24-a54c-40887ccdb769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5af3586-1202-4fea-98f3-70386e99e1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd016b86-9958-42c9-8e0b-69bc5d72da39",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef2a638-e32f-426f-abe8-c2b4374303be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584c5da8-9710-4bc8-9539-d3ff6f396816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314acc2e-f79d-4ff0-99ab-ab6927b8064d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "def79e61-f0a9-4ca3-8c54-8533aa722655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db65f2b2-e26b-4843-8952-bb55b810ad94",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd7f9f6-c4ed-467d-98e1-1433100b3667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ff1a0c-613f-47b8-adeb-2704f27aefe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6494f3-1f6e-48a4-8cc4-593b11b0162b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51172b4e-ed9f-47ff-8f0b-ef7b3584e03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a14baf-61dc-43ad-83fe-197516062a3c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a668b3d-730a-47fb-9706-8eedd759f58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d78e07b-aeb4-41fb-8cad-dc67b99c65fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539dcd8d-bcf8-4dcf-b1cc-481695c15e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38ca7f56-b4e2-437b-9647-efb28c821bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc78554-3c37-45cd-a3d6-25f7491334c4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa98aa3-ac7c-4872-ad7f-2ee4279180b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfa3801-4706-4913-8c80-7c27b00e76f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3f6dac-851c-431f-b6a7-8ce3da032a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf74447-ecb2-433d-8af9-83627a93ffb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c034ba0-909f-4dd6-9ef9-1eb9c6964e79",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f770314-79dc-4bbc-84de-8e24d1c5a9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d9af59-1cee-4b98-8e80-127bbebca077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e832b3-0a44-4566-89da-840ea67d2aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e9b6d5-d701-4306-ac12-5f2b73222665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b21e2c4-c8a6-4371-b36f-7d6e386c89ac",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c8a738-1327-4d2d-aefc-03d8eabfce15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a47784-5d9d-43bc-a8e9-765b1436d355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad15e010-9149-416f-85ab-7767b0144d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f7cad0-c357-4165-b92d-f24a4d8e3539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a661c7e8-3168-4f22-9aad-a2205a188055",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af2c2f1-425a-4383-8582-f1b0b0757ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c7e4fa-f768-4d41-be68-71c50e21556e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9efd9e-9450-4439-8ac8-ecf626087576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76457bb6-a9f9-4d6e-a5d4-1c5a2c390e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3828928-f69e-4abc-807a-b1057ba7863b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae2c720-0ac4-4c8a-b346-a577be7a9c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f5799b-fc66-4784-bb8f-060e279ca940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1430d4e-c1f8-4dd6-ad13-a620235ca37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a958ad0f-665c-45dd-a064-09836be338de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad916f5b-23b1-459c-b1f9-db0b5af850d4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb37132-1c53-4269-8fa1-a5555ab9e769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fc202c-9706-4b57-99f2-0ccc1bd76015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b82c36-cb72-409f-b703-11a1ff560416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "759ea8d7-0667-44a7-8346-850006309ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d102a0af-e85f-4f16-9ed7-9bda39b07333",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada96fab-5f7d-4180-bce2-7d8ff25c737e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125b11bd-a984-4a56-83d3-920a2e51c7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd266ada-d3e3-4efe-be0d-8c1cb8b8a107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b68fcf5c-a68a-4c76-b448-3f30d8fc59c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e39a1ae-a3c1-45f7-907d-c43cdfee8185",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5977443-5eb9-4dc2-aa81-81f87d3f7414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e62a4ae-f78d-4872-8fa6-f16aa39fe62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b224c6-913b-4541-a452-dba658ee4203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de4a1d0-3656-41dd-81c3-454287662645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e2c7db-55c2-4ed0-a25e-ca1c92b2729e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a0b35f-d08f-40b2-8ca1-dacf64776cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7911929d-58d6-42f9-9fb2-2a3535eb64e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b9b1c5-9f30-4ef7-9f5a-c56d9847197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e37e781-e03d-482d-a01d-e353e8d1cdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267d09e7-181c-4d04-9b60-956769a328ec",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded3eaf8-c766-4403-9797-fe5465009bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0002e406-ae7d-4011-9bc1-d6f9f1bacfa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fdb6e1-1e66-4347-b448-de5767f7e46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b066a524-d028-467e-a0d6-207edac9a900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77a709f-3e9e-4f0d-b244-3308059c5a94",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcde930-ff06-43de-8c6e-9daa5458aa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d487806-73ba-4e91-92ba-b5686dff5767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c9e3af-7fdb-4bc1-9f62-b527f9a04fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39f3845c-78f2-48a3-8ffe-cdc2f0e92049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1188155a-6808-4546-b661-4c7b5af45947",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066c6e22-0ffc-4d0b-aaf4-9e7dccba0897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ab7eb4-c663-4774-9bff-2498caf95510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe748b5a-d5bd-420b-bc58-5d6bfd9845a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff3171d-dde4-4f99-8ff2-2743f13c4a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdb0dc5-c695-4877-bb7c-9f766f71aaee",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9aa0e6-d5fb-4964-98ba-64c04d908e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26228fdb-fbe6-401b-8b01-0e29fe031ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ec4c18-fbb3-4b26-8bd6-5862667cc9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f18ba39-1da0-4114-b708-4331940dc43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a5d553-8cb5-4556-8bdd-cc484fb5151d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052f51ee-2473-458a-b1a1-0a28c176c165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717719d5-f1a1-4333-97c4-c679ac206ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55528f4-89b8-40d4-9eba-fc5da0816d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d72e774-eed5-4046-9c19-bcaaeabab45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3e6063-525a-496a-ac20-af8e204f96d0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25c1a98-f05a-454e-a840-1f56f0bd7c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fc210b-91dc-4367-8b8f-c78c2ab11905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965f457d-01fc-4ec5-b031-3fd7a7d565cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51c310cc-edad-41a9-84e6-eb03997e54b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391e3a32-bd17-4a5e-8d78-31c526078e50",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35c04c2-1078-48db-b0ed-4b3bc012464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93891183-977f-4f6b-a9f1-d2faae34a87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e6d9ff-d5d0-474e-9dc9-442cb3a2cdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68facd29-8a72-4ab1-b438-feb4e2f6d00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161bb3ce-164a-4826-a620-8fe5790869a7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767acbce-8d48-48e9-9979-4d029cb7a642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39db9aa-5ef4-4626-ad41-b19b686e8755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15d658f-d42b-462e-b561-63d09a9ba7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c77fffc-38ae-440e-a6ef-22caf3700bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bac5d7-4c1b-43ed-9d4b-b074ac0e4fe7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f134786f-d2f4-4f56-bd73-f4346e2d2e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa02850-77f7-4394-966e-7156acaf7e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3099a0e-ff7b-4e83-bfe2-e284765dc833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9e63eb-8cca-4155-8627-99a1832eaa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd782cc1-f2c8-4640-be5f-646b30fd8736",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bd8acd-e722-4698-a47f-21a8eb889c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21f6e35-c98a-4f74-8d0f-bf2e091a0411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5524c479-f720-4a74-ac2e-9d873a889148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc31ea7-6613-4342-bd31-01d113294609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51df7d67-5ad6-4eb1-a19d-5e66959b82d6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021ddeae-ab9b-47b8-9354-76dd427f7d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b80302-2fa5-47a9-92f4-1e69ba532927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d159fb04-36db-4370-b36b-e491645ac32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e10aa4b-0ec9-43da-8bbb-6a68b1ea8dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a813db-b57c-4f7d-81f3-94c22eb066f5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c34b5e0-197c-4b92-b2b1-9fb852c33c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340b8cf6-2829-4419-a8ac-540e30dfeabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca53e97-3c57-4d26-a180-f365559c75d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "53cf8d58-97cf-44b7-a367-d6621d62d2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb42f9d-7411-4060-b67f-14fecc73be42",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2fbda6-08bc-42e7-a11c-14bfdfc3e836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0c4e4b-fd2c-452f-af05-72bfe572042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4e5760-3b9e-4398-990a-235b3551c37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91c668e3-e3dc-4cc1-91f0-028095c87356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c270989b-97d3-443a-85fc-83944134feeb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18903f01-cf99-45b9-99da-99e3266ce9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b758cd33-5416-414f-9a07-6c609a542ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5475068e-b619-49c7-9d64-1b1626ead411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aafade-b670-400f-a577-5726aeb77c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c296bfd-dac3-4f6f-96b8-c17cd88d31b4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32e52bb-f7ed-4821-8716-fa04c0c56e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22bf6ae-a972-4c6c-853c-a4180cee1e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1e601e-0f0f-49ab-8362-ecd88cc167ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "51079f50-5278-460f-be47-e90e5bcbdf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae980cae-28d3-4ac1-8a2d-3505b1ae6586",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd0373a-f908-4f73-88d8-9ef53a11fc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e61683af-97b9-442b-ac49-21ece929fef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f824e419-1a90-498c-8255-4f618b8ad39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df18f85-23cc-4b26-87fb-286a432a406a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a48240e3-6d31-47d3-a2ce-d8d2f7d2e73f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba641a68-f086-466b-82f6-c09688b2caf5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1413da95-2569-4745-9151-2f005f4ed64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "531dd42a-4c5c-43c6-bb3a-b7cdfc9cb3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193ce692-ce57-4921-bbf1-ec4b6ed99a9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca05d658-9f17-4a77-8cde-39ea9c2bd848"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ab3d19c-a855-4029-9ae0-c3036cdd6f39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59fe697a-dd7a-424d-b4a6-1454801f5b73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8db7f6a7-a89c-4c3e-8c2c-215522f8b7ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93ff9eda-3c6e-4062-a3bf-5717e942b652"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d219b12-4056-404a-94b5-25178bc6ba7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ad9cee3-fa39-46bf-bfa1-abb2a974e117"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a2d591c9-8042-4e03-a978-eea413322bfe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6af9e9f-bae1-478d-9b65-087044c16221"
                }
              }
            ]
          },
          {
            "id": "d66cc1bb-c84b-4c1a-bc0f-d603e995eebc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52c01228-d458-43e4-989c-b43a2d931ed1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f6b1416-be26-44d4-ad8d-e28877fb4bef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5d35300-9b70-4173-a253-fcf0c5649d33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93d90b45-e0ff-4d2d-84a7-f64dcab7c292",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d2408c7-e6a0-41d9-b4e6-d086b330cca7"
                    }
                  }
                ]
              },
              {
                "id": "cc6fba1a-15de-4fa5-8a1a-c2b0d3271700",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9320a932-b49a-4e92-b571-0a3265fb2322",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bda9da6-1f18-45d7-906b-da4acae8b226"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7ea8ae2-1dae-4ccb-b959-da1f284e36cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ccad33f-6be3-4d47-a028-378b9f52646a"
                    }
                  }
                ]
              },
              {
                "id": "f4b80b61-5b24-458d-87c1-31f0cc263a2b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7791334-2094-4b06-880f-2cbb08eb4334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4778dc94-284d-4bdc-aec8-91c303ebf8bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a614433-8f0b-48a1-8d3e-410216c8c6bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9b21722-8733-418e-90ed-c63c59bf1129"
                    }
                  }
                ]
              },
              {
                "id": "35d739f7-06ae-4e5c-803c-dfcacc41c089",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfbfc4ea-eae4-4866-9898-3e134ff756d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a6d0d81-e659-4cbb-a5d0-03b1a1b9e83b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b327ea7a-8b42-41cf-ae43-8a3aff15674a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a7021bc5-0c5d-4d3e-8444-9affd484a06c"
                    }
                  }
                ]
              },
              {
                "id": "b4c8fc1b-0bc0-4c09-97c2-c984b6ed3d30",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c93598-fc17-4feb-9495-4ff61070b310",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d53cb1ae-144d-4b99-9cd7-a8c0ebcf99c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d491bc90-1064-496a-8838-2ef5691e5e1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8526818a-dc39-46e8-ab34-c1ec32640670"
                    }
                  }
                ]
              },
              {
                "id": "b57d0632-05f3-47bf-9863-97b3731f31d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5639e3b-ad43-4a13-a9db-dc1b126b1299",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d555acf8-199d-4b91-ada9-360cdaed55cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e843e918-ed11-439a-b782-dd958c7bed5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c643fb3-fbe0-4215-a79e-d494575c41cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9c862be-fd7a-412d-a4fc-921e92301c1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12b95619-b3dd-40df-959a-7c449ccef905"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd21e813-cd89-489d-917b-7458188a7d54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbe62230-a293-4f58-a640-44ebedfa446a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d14391a5-a25b-4e06-90de-96ca25811bf2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f215b72-ab3f-45a6-80bf-f031624cd0bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53d07075-b13b-47bb-94e7-a4efca600641",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b3c7bae-9c7f-4b45-b7be-ec203e32fdac"
            }
          }
        ]
      },
      {
        "id": "311b9c33-7be7-423c-81d2-b94edf9148b5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bbad44ed-46fe-4ced-a981-13a5788a0297",
            "name": "Negative Testing",
            "item": [
              {
                "id": "740bd978-6e22-4256-a484-6c3defecd0d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03a8b6a6-e57c-478c-99f5-6ade7459bf56",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a586e960-9145-4d49-a71a-72e769924179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dc1988-de9a-4568-9802-c0eda24e13d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138a60c0-b3d0-44d5-8448-02ef79d22ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f10fe07-5aa8-4926-8cb5-312c418a1d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549cb380-ffb0-4c6e-a932-266c6e661051",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0a7c25-af4e-442e-be75-292439745b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f086c34d-db73-417b-8505-2bb540363da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf9038d-a490-475b-a0b6-4610a51470d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8422874-c167-4ba3-bb8a-e6b08e37e8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc4d5c8-d942-41c9-b057-548e32fee6b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9f7eae-a263-4ea4-8f0d-134d9808f88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f69cf05-1c64-41ce-b82f-8e9f929eea75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add70641-b4ef-449b-9dac-e7c95d7754f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3aec4d-4bd3-4465-a5be-54ab85c867e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9bb048-f2e9-4a7c-88fd-e234a253cd6e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb96a9f-b3c9-4b81-ba7f-8e34fe1be2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b10741-4688-46c1-9df7-d895da56b684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a4e40a-f0be-415d-8301-3a411494113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06427641-33ec-412d-856a-d4ebc5b7f399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8217a41-3b75-435d-b8a9-54115dce00ee",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163a4977-ded5-46ce-9273-21c149a92608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3246790e-c0b8-43a8-b809-e0ad35c3b38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2213caf-89ff-4ebb-817d-769198cce786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f6dd5e-5781-4a92-b7b5-0e89abb607fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cbdef2-6098-4991-b48f-230ae9dc3845",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bbd8c4-d988-4c75-914c-762a7df8fd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c086b5-9922-4b0a-8b3a-6927f65ea66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395b3788-e553-4ed6-930a-91cd59a480ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa66632-8081-4e67-b12d-06b1b1aabb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ed9652-34b4-4b53-9968-7bacba419111",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f92513c-4057-4d2e-9b65-ab3ef4794c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b70890-9397-4741-a401-d3df77474e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef96819e-fe40-4bc2-a992-75fd11488bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcb9fad-aa9e-4aa5-b774-a100c5be3d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4a898e-3979-43fd-83fa-093a5001f431",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebf07b3-9c8b-4fd6-af3a-afa1c62cfea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dac136-42c1-43d0-8c57-91126f051a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddc10fa-b65a-4b9e-8845-170c740fd086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1704c380-a916-4efe-9767-29655663562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b787871-8b79-4b7b-a380-31de3f2ea7a4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ab08cb-d510-4b40-bc1c-b6bdf01c1155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaeef8d3-ffd0-4415-a1bc-250dbb87e4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8888a5-8639-46d0-9c14-7d95bfeae2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6adf4935-b9ea-4e26-ad26-2e2aa49eb31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d3e3d0-5f46-45e0-936f-0d53e2fbbf5c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8f2eb3-3a54-43a8-aab8-3cac50f6a96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4382bbf0-9f47-4ddf-a66c-0a3a4fc179a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb59c367-182c-4bdc-a41f-7e1fbb716144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9698efee-b87b-4d70-aa85-644e5ea657e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ca9835-61f8-452b-a9fb-8c287f9a5492",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5c4678-c0aa-43a1-b2d5-69bcf7de1768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569e1469-97eb-4c82-a3f4-7473c6610cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68b074a-c671-4e5c-8be5-be9e947e6a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d033ce-198c-4532-a849-8e3ea1cf64f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002391fb-ddbc-478f-b1ed-507d81e758a1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8bb5ad-1a92-432a-adec-68c114a1bcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f29c85b-76b8-45b3-bc66-24b2a118a896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdd182b-6d75-4f6c-a1c0-3706ccc4ae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2a40d9-7cd1-4494-a46d-d7a1703bac28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a8fa60-2410-46d9-8add-1fed5b282e57",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177082aa-6425-4a85-9351-9076cdb46854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf14bd6a-5367-4684-9604-65cd5a29bc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1556f67-a31b-4823-846e-de8b31a42b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcee2bfd-ff8c-4938-8ae8-ee4bc45c40b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c2d6bf-a670-4c9a-9230-e5624cb3ef4b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef79cf0c-cd19-4b3c-ae6f-865399c62e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8038337a-550e-4944-acbb-e235835127f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afff480-357b-4982-b5a3-78217e2e8703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86ac167-15e4-4806-88ad-ed3924230956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf3c6f2-0a8d-44eb-bd4b-1309dbfbd143",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38db569-cb94-4da5-a971-2a312a9e0970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66160abf-3311-44c4-b927-085fbaed1894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71658812-bc3d-4c55-9c9f-919ccbc3e807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "785d29a2-bc65-4f2e-a4f5-0a253dc93a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddb23bd-8e18-4617-9e59-aabae5c9ee3b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709b5973-4700-4015-b953-343dc950fea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f76fe11-7014-4308-bf6c-8ef216e47175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2966a8ce-f285-41f8-976e-cb894d8b3682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fd77df-a2b8-4cab-a3d1-2a20a03aa618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0d8325-ddc1-4da7-afc7-1b352ef3ba7c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82a5da3-788e-46e7-b888-3254e2d526d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f4788c-0bba-45d3-ab1d-259a463962e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2348775-67ab-43c0-a02c-a39b1399ac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ae09bb-37cd-477f-ad5f-a324f7e63670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec7a1af-6d8f-4a7b-bd7b-3e899ab700e5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b0da09-0f56-4081-94bb-e8cfcd6a649b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf34e02a-3982-4774-8052-f95e8911a2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9a6967-3435-4841-9cea-1ddb86e7abf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85764e2c-b6e6-4db6-99f3-dc6b68d888db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508fbc40-2b89-4279-a5e8-b027e8417cfd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b929950e-ad8c-4033-b21e-cabb63a664ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dff71a-cb5a-4c24-b3ce-245a6cb7bd1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebea2b88-d0f0-4383-8fa1-b5c434f1a8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21801782-8ae3-4da4-b85b-02d5c4ab7b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22c7b9d-50be-4c8e-9b7e-52f4df5a0d48",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c59c0-9f9d-4ce0-a474-9d4f3ce6921c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c85518-8a71-48e8-9e12-9b97a8f513c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a359daf-a039-44c4-b3c1-4c9f51e93934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdb32b0-6ba8-42c8-be73-96398d308eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5812d0d3-15e7-4660-a53c-39148d3c4eca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130a2337-9750-4720-a07b-e928961d19a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78efc5a0-7587-4b37-b6c2-6610efe9faee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffeed78-3f2d-4df1-97bf-8332f888f20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da165af9-63e9-4687-8b77-3641dd03ecaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6001cc49-b99b-4795-bf1e-096e5ab60a50",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e611b8-df17-411f-9258-84e8213fc34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d07431-525c-42bc-ad0d-a7ba8ffb7c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcd4be4-f1c5-4faf-ac39-a61063f4d274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e0a92d-6bdf-4932-93fa-0bc5631a34c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e08df1-4b94-4e8a-a27a-eca9204aff13",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27269515-142e-4f5f-afa4-fe836d186382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333e0bc2-042c-4efb-a9b3-9c2dc3a402df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f0534b-e649-4db1-977f-75f479e6e53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b3ddf7-c109-492f-a399-c31dd4179f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71589bf7-07c7-45eb-9407-8a2794616bfb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d210a61-85e7-4e7c-8b82-671e0607b43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf9d63a-f3eb-4e77-8c51-d79cb44a7f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049d4c61-f11a-456c-a93e-0a478baf4ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15dfc124-4450-4b26-b7b5-13f0f2a369a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6b264f-8650-411e-9101-fb39f969f756",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea99cf3-3812-479c-90ef-61bac7a49f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3514bf5c-5c99-4217-886a-092e75c3c7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bdd5e1-1ecd-48a1-a06c-be24f1fdcc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc89d6cd-0b42-49c5-a935-e425e6f66433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194aeb33-ca8f-4718-875d-96d96c2bb9c8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0032d07d-0716-40a6-8822-442c1b77da52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316c0904-d331-4e6b-af61-9178460023e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3384e96c-5ecf-4be8-8a3e-8a21b60e1ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4479d0-c71f-498c-bb92-3429a09ac93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36c23ed-bafb-4d86-b7c7-cf480b15684d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fecb15-5a4c-4451-aa61-284c7d9727e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5c4d00-cd07-4a22-a947-889cd429e638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535d7e42-2256-44c8-bbe9-239460c8b826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5edbfe48-c67c-4728-b653-1de8cb61e27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586bb2a-2b6c-459c-be44-ec7320f06b99",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00b8559-fdc7-4899-8e5f-5cac4dac021c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bb180f-329d-40f6-9a32-8006278212e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30b8277-a14c-4ff9-806a-c00d287ad2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69caef9b-a035-472d-b18f-0767f5a3bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115e452a-1ba3-4b94-8699-799ff1534ba4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa17b93-126b-4a38-862b-cacc622d6de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984599d1-a1f9-4861-9a1b-820b1f1faf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eba170-a1ab-45f1-a900-277f67aa74e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e16ce0-3c17-4b32-939a-807cacb5960c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732bb2ec-7ff8-4e37-8799-2a13e7d4cf47",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6857fdc7-2bcd-4afd-b63e-ef14cd7694d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbb0585-0327-4136-a3c4-9d83c8e74c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c326a119-3bc9-4a88-8c55-1ed74c0dd7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14dabde3-dfb2-4bf4-b2c2-c83c4df3915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30009e8c-2f37-42a7-9bd0-f3e0834029e6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c4b4c5-dccc-418a-847f-943c272e4a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc1370e-b870-4235-a19a-817f32d9deab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098b060b-17d3-4e85-981b-f05d0ed12281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade04247-696d-4e7c-9394-d4c5b0135a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ba3779-717f-4ffe-82f6-cd741d999134",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093e4e6b-bab1-47af-9c43-e238ace1fbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d07b44-f043-421d-815e-648db60da187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f93727-eca6-4db5-80c6-e018f9b56e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11bb45c-960d-434a-82a9-b3eacd5a1c5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50c5d825-f94d-42fe-a3d1-e384663fa633",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbcd37fb-74a3-4d8a-ae0a-9d4daa2d9cbd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884df48e-24a6-459e-979f-7d180897e331",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "01ce647e-019f-478f-b6ff-f5887af0e24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d4e71d-24c8-4e78-a4c0-6234d97b87db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3de45d43-6846-42ec-b764-aa19da1979f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4b8f9f5-1e18-45b5-9cc2-24ebef2e7005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d589a206-c196-4687-8837-61e27cc5696e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8699b151-8d16-4cd6-9aa4-b949b9497e40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29364f87-78d4-44a3-8c61-6d49faf275dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ce833d5-e984-4fa3-a17d-a6cb220e7fa4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cabf2e36-184a-44cd-b7b7-fef351ada72f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec395d0d-8a8f-41a3-aa42-4f52e1fc7c01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a72962b-111b-4b73-b2a5-900a333742e8"
            }
          }
        ]
      },
      {
        "id": "1908f89c-2ece-4aa0-b873-fb69eb044e68",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2dd636dd-7287-40b0-9729-029af0543470",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f963ff2-a39f-4361-9105-8e11460364b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd473269-9f67-4c09-99bb-14fed8303e59",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f017ae60-615c-4779-857a-f5526cd2117f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced91d82-180e-49c9-ba5b-c58d9404b1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4706349-908a-417e-9113-742bed5f6e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "85e66284-4f7b-46d4-98ca-2472e64c5319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552d1bf8-08d9-4974-94b0-465ba7f33c36",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa11d971-3b64-4c8b-b437-65e170735a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f85ae1b-ec0d-43a9-984b-1ac68e1a4577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e7218c-0922-4d14-9913-913bd2d329b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41523bce-d194-4c31-9a9f-3011510800a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d7e01f-e0f7-4d93-80f2-5edfcef9ab56",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0768fc0-0bb6-46d3-b7d3-fa5d4920eabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4560e36-90da-4244-b27f-5732c6f81400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a8989e-1308-4f96-82e4-3195f5c0824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05cf7a0e-68ed-472b-8762-0df9e5cd05cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76c3f73-87f1-4fb5-84f8-562c168dae32",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c70f6e1-512f-4ae6-9e91-0f6831c99afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07551674-17fc-4bc4-93b1-6e6dd51947b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2638de6-8f54-4ee0-97d0-737808208804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4119e754-996e-4b16-a8ed-9fa49b1f9f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a19108-4bc8-475a-a3de-b50fe91876b5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab6d0d8-1233-4d51-90f6-8756876c7e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87aabd0d-66e1-4914-9a3a-42afe6418960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9cfd6f-9137-42e1-91ee-9ef962a83006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05dd9cce-8ee2-4465-a366-76380b412efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f85a56a-78e6-4f20-a360-1e3594dd2ac3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17be65c6-2fb5-426f-b8c9-b211f4ec9279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50690a2e-cb84-4c51-bb9b-5ff7fe5bf295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40337533-30a2-473f-8c7e-d76f985b04f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4533cdae-195d-40aa-a0e9-512c45727b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c88fda8-d653-4da9-bfca-0564739ad66a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015e76dc-9a3d-4514-88b0-3a20525cf5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9448273-d5b9-4f75-b72f-005e1767061d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fb2ac9-3f7e-4017-a217-6564958b1844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb52b224-9825-4fd5-96ae-93ea27b75cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9184d4c8-5479-404e-a6f7-d2634eff487a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c101334c-5d71-4558-86aa-91b2ff0f53bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77af2ce9-0e53-4dfe-9cb6-233864f6ee9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208ae127-107f-4d0a-a1bd-5b9f501324d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13521675-8fe0-477e-9ee1-409a0d143ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a2565d-d5ff-4061-b992-2f7b33dcce16",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a744bab0-7cd1-4413-8419-c0c61aae93ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db4bf3b-0904-4309-868f-65a3275b9ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834435ec-f3b2-4c20-821e-e76731521465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82455070-4d00-4dbe-b501-81e598866b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9adb4a-d800-48fb-92a8-b579c92441dc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aa8a40-8a94-4a66-bf14-db4f255b171c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1942c70-5558-46dc-98b6-1f66b3c222cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367d588c-0344-4b01-98c3-84a11dd8a360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0353389-13df-4999-bdd3-319b35790047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c54135-c7c6-46b2-8550-4b2000bb10ae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67295121-c99f-4c1e-84cf-bbc89e0fc877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dae6ae-e193-4e76-b776-a15fd9627b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dbbce5-10f2-49bc-8a1b-89ca43ed33de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d494affc-a435-47b6-9cc4-e59b6174b920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0f2380-6c1f-4b62-b8e7-29ca044bc7c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c0f2d0-5dba-4e57-975f-5db979c2dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc112acc-fce3-468d-91f9-ea817a41a965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014ac823-7acc-4b60-91a1-8d27f7f64c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b5d93e-4c86-4faf-81cb-ec8f34cb3c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4b2477-70d0-4af3-9445-ef6fbf15d61f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a467f3b5-1d27-45d2-86ca-0ad1e36aab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a039aee0-431e-4133-aeff-7b39bbdbb4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce336ee2-595e-461f-aabe-1442aca91cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d0a0bd-ff62-4744-871d-f59616f16996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ae2f2f-2adb-4526-b8aa-90129fc8afd4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06d47ff-669a-4b5d-acf6-77e1b4163a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078dc3b6-bf1f-4846-8b04-d0f519906406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5e6ec4-71ea-47c5-943c-973e827e35e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "549ef1a6-00e2-4135-a711-5992a24574f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3503a9-16fc-4307-bb03-be18cc27e2da",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d417e6a2-76f9-4c16-a5a5-83fddbff8d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a826424b-3cf9-4f58-8cd7-caf675cfa280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008aaf81-a9b7-4e92-8c5a-6fc878c1108c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6128ac04-838f-4e23-af7c-bb5029958e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055a0eeb-c7e0-4898-bb17-2aa4b2dc323a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0430cf64-7018-4285-a7b7-deed63c19716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2801be40-709c-4781-bdda-cf8aa55b6953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56543d51-5da2-450f-8bd4-65a4bcf37bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0793c4a-5b0a-464b-b74f-7a5c8b11de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67997579-be7f-41f5-86c4-0528c4ebffd7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e425500-f7da-4ba1-8de1-bb03beda1e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afaf665-7cc3-4727-91ac-c400d3fe014c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9349e6-2b47-42bc-a82a-130db97acbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1415380-44c1-4f2e-9d88-1ccbae19565f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e72d3c-9d76-4b7d-96cf-034aa25934f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81a2bcd-c2c0-4594-beba-390705c34420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9c2f00-14db-48e3-b677-d92cb0ba75af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4fb30c-35d4-41cc-a3a1-365fc9c9d67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "733a8d6f-875a-42f7-9fed-d1a386c496dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad4f7ad-5556-450b-ad05-7c88c9286021",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04232e1-a0d4-4a6f-981e-c16c142a47e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466b8eba-a25d-4997-9d42-f37a6c5b16b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ddd9e2-5112-42e9-89b6-442e5a8944ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "708780c6-20a4-439a-b6df-76688bd4185e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45aa1c8-0bb9-42ca-8ba0-eb1e229f7e5e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b6161e-4d0d-473b-b693-424df9847ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec733fb-38e8-46cd-8ff8-660a9e9f3ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9a91c1-58f7-4a89-b2a1-0a8172b632cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "158916b3-a428-44d4-bd26-a0263be5ac7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e66fbc4-0b18-4dfb-873c-eed58586bc22",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f67700-e125-47d8-a370-517f94d70183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa09d03-d248-4a5b-b994-31c1f6924890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34161656-2970-4702-9a07-bf7153b8be97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8055d53-2be7-4ebc-bafb-0dca308648d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb2e9b0-ab6f-470b-94eb-c02215256aa8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c4fd2b-d7fe-401d-8cbf-299e356f6efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb4de3f-1831-4073-be1e-039d1676e7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7bd81d-553f-4223-b515-842f5b83d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2c37a1-3ef2-402d-940f-a63e0f8c43e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2b8389-4b34-4f35-8159-8d4fc39de702",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0bc034-98be-42fe-bcc0-9d4c1c26d473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7e29c3-8270-4488-9534-d571c3944079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60302c85-4f86-4dd2-96c0-ea1bb12bbb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "837e61eb-9c0d-4219-a7c5-46074fa0cc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e27bd7b-2112-4ab6-a492-7e749bde7a16",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b1928e-ff19-43b8-8ffb-65e6ae091acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89117c58-5869-4596-9cb6-0d08d9934cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6f7b2f-46f1-41a0-a496-6947c2a31cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "099f7c66-85aa-466b-b40b-2f7ec53d03eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05c275d-0e41-44e4-92f9-fa18b48351a9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27e2a9d-2c6c-4b7a-8e1a-db4ea6c69f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f5a111-6fd1-456a-bf0d-3883173ea0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fef13c-2dbf-49c0-a6f9-fc9eca1347ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8df843c-4832-4022-9781-8adbc93d72e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7775d2-7ba0-4169-bfac-54666d321e4f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd20c05-2e12-49e1-8f96-c350c738bf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e186fe-66d2-4869-be70-eb417505f888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ba243-3a90-4f50-8113-cfd0f85ac60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2ecfdb-ee1e-4d4f-9c5f-080e08d423b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6647f7b8-823c-4f50-b8d1-13d6e60fd983",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5932529b-412f-43b5-8e9c-168522cfa857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5399c83-4519-4990-9eba-c22475c834f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dcc3ab-c384-441c-ae6d-9ebe667bfaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d54faa38-6007-4dcb-93e3-93939ed0ecf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a357e1-52e5-4db2-a99a-25a9173aa895",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9117cce2-d479-4345-9d3f-08b34b61d12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd108ca6-1de0-43cc-860c-d331b5545cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017c2289-025a-428e-9253-a2e43b69583e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabb892b-44ad-4b26-b013-31387282ebdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3dd529-5b0a-4703-99cf-c93715c6e37a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edf020f-39e7-4d86-8024-bd89c3249d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8de8015-db04-40d5-82e9-a6ccaf7af983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fed528-8d01-4ec2-9911-0c1aa4c54808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1b2e71-24e0-4e62-923f-a17e9d2dd0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847db8d9-95a5-49d8-8c76-9bc6538a0163",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb269f28-0f52-480a-bf40-6c8d9804cf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c53d11-1764-4c1e-865e-e82d7f0200a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db5a77b-b4a2-4a9e-92a8-dd3647ee9eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "579017a6-c608-4a94-bebd-d1b24a0b9945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c70505-18eb-426c-a848-9b0504d1f838",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5445c6e3-e471-4831-b45d-98582c8fd295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d1eb4b-141a-4414-bde7-1222391e56c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebad872-ca76-49b7-832c-3fc72f6d1bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8421c295-a249-4077-9bd8-1446ccf007ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a26e847-77da-411f-b582-21f3965912ea",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129b4960-e9d2-4d4d-8c0f-b94e5649abf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166743fb-f87d-41b3-a8a6-701e994effd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4b253a-1dc4-4cbf-8f9f-bde61c9b79ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5292f3-116a-4fb8-a828-1429b3e4040e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fa2d59-840b-4f2d-acaa-968774931a45",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1395c7-bdec-4b41-8e93-835ef6e8c384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0887aec9-dec9-4558-9460-6b22f7893be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0223f7-253b-4d3b-bf47-3461e72dcde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "373a87aa-6037-488a-b159-44badebcead2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ae8066-399d-48e7-b0cb-e1bffb3d2276",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3749c0d5-6278-4b35-bb9c-b31bd074344e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8296fc-e59a-4146-888b-2bce89322144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb86c1c-2439-4c1f-a949-60d682d566ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdba690-9230-4faa-90f3-2f41946ebe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05746f3-be1f-4734-bd23-8761835b9c62",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e77685b-3bd3-4c5e-b674-6d144a00eb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91899fb1-106c-45e6-a448-f12096a6ec05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebc12b0-df67-450e-a4aa-4f51f19f3b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "252df91d-3688-4e81-aee2-24ffa6d919f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bb7e8a-43e7-4457-8ad6-a4dcd650c4e0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79b8f4c-2ac0-4599-bcfe-29e84708dc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef60620-06b9-4221-b323-3b8a72155121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedc2db8-4f9b-4e32-b484-d92681f14d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7b2214-f3ca-4dc8-85d6-8ff08965a374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23107a32-e187-4e58-94b7-a3977cb1600b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9590e2-7de2-46fe-93d8-263dfd4dea49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82ccacb-025a-4655-b6c1-61c637c19d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f93528-f530-4fd6-b2c4-2540ecbf8fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d21c9f-160a-4416-9c82-0504b1c785a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d093c81-760d-4e91-bc95-632563acc233",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76f74ee3-5dbb-4c66-816f-9f61805a7e38",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a2f620-01bf-4602-b785-1e12447a2b46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "15840495-cd15-4ab0-be1c-de24772faa5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5a98e7-8628-4256-b045-fb7f2e2041b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "136d936a-f633-4840-b7c6-777a17e58e33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee507c47-5625-43d0-ab77-64ef964a028c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f956ab1d-a01f-4591-b968-8d3e828fb60e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "098ac216-fd40-4bfc-a15f-2fae0e962d59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbfa2be2-3351-4f9f-91e5-68f1258d01f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9824e6b4-9eb9-432e-b97b-b9263e0d82ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "216d39a5-0ed6-422f-b497-7a213f5181f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aee184b8-f0c4-43a2-bd9e-0dcfc7e36d75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfceb6ab-bbbb-4178-ad38-5dec1d0704a9"
            }
          }
        ]
      },
      {
        "id": "13369bd0-c5de-4386-a964-f0585d88ca4c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a00602a-70ca-4a32-8c30-9db0bbca9b80",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d857004e-eb41-4a94-b569-13c34245ebcc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9d35825-0f2c-49ec-9051-6b460d643f02",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c896dec3-3383-449b-a3da-2ff6d687981d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e57d13e-be2d-43a5-8c9f-cc64412b168f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1724fa5-3874-4a26-bec8-67aff0891955",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fe2f42-70ef-42e0-84a8-c2a6ea554bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e6f9e5-dff8-4c10-a603-0ce50d251913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d138ae-454c-455e-a53e-4c4842a1a951",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce446f4-63b1-4a8a-bb0c-8edec98e5c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde1ada2-8f65-4e35-8de1-7fbb1dcee499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42f4508-e9fd-48d6-9874-9b499dbb04d4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f4d17a-5ad6-41ea-b9aa-336902444fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77963c7f-a909-4fea-a0a8-21da3e1c6c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f00310a-20c1-4f28-8721-3bdac6fc39d8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41751f11-855d-48ba-ae9d-209aeed41235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fcf607-d8fc-4594-9bdf-c99f2dd22343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43f5ea2-b26e-40cb-a837-df032b348246",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5b1db4-713e-4f44-8201-ad0c195abfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221be395-df73-4039-88ba-3a3a3eb68d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6e951a-633c-4e29-8b38-3a3e48aba7fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a7099e-75b2-46c6-96ab-94d8f72c8b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a098c49-2145-4b16-a7ac-d39059119667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa592143-3b8a-4ed6-8fa6-e7bf74cc0407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aad5bc4-c3a0-40fa-91d5-272058421ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b71fb6-5d00-45bd-84a3-58f379624baf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed503c-3eb8-468d-a99a-ab0626ce0b9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09c0583-7c02-4737-a5a3-2dd3c29eed62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3976a975-51f7-4b76-8d6f-f9ea77941484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ba6799-5d94-4b11-9999-9cfb8b712e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0feabab-6e9b-4f13-9ed5-a39c1269ca36",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbebec53-260c-4596-89ec-e53a30b77126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4802f5fc-d2fe-4ed7-a2ed-d78348d9aa3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058eca90-487c-40c7-bd30-94b5d6d7b0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c05154a-0cad-4e94-b092-e99024af4895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8133c56-fb55-486f-ba6d-f426f34e3894",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd8ac17-4167-4682-81af-5cdaec56666d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a75879e-7fa6-4057-a662-3546e831aa46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d350e3f-44b3-4431-ac12-dca4815423e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bf4aef-8854-40ec-b927-2c8c453ebe84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d4daf3-4662-424f-925d-4fc32de74dc3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1160fd-e99b-46e0-a1b4-d8038dadfc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bea6776-6dfc-4127-afc4-036c2bad573b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeda0f9-a502-47e6-a252-d8d5189303f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f963c7b-1b80-4772-9707-de9de7166ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81552ac2-542c-4b1e-920c-62fb21fd6af3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ac6d57-929f-4fed-b35b-82911368d488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba3545d-08fe-48af-b609-a1de9b96ec9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e639a27-32be-49f2-bf1f-3e43914160e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef8a6a3-57a7-48b4-bae4-f0b8575477b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a8727d-b58f-4754-a069-25e522b2f45d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e545d3fe-5fe2-4cc7-8275-616de1326d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2019387-6502-45f0-8552-7190e9e3a747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea03bfa-865c-478b-b0a9-707c0c2bbad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58beb063-dd1a-489b-a69e-471828593e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3d752d-9317-47a7-822f-e799e80a7990",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bda6b4-9d54-4444-b196-3e1694f83f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e627ebf-ce89-4195-abe3-fb4da637dc6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c70976-d096-405f-b22c-1d808e1cd8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7688f0f-7997-42ef-8e1b-69613751820e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507ef961-2131-4c45-a13c-0add6cf7b939",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821b676b-a73d-42ae-8982-b53a92b68cd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75fb7c51-9378-4241-ba0f-5a992e291b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c62c46-64fa-4ea7-aae7-d2d23919678d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a69a39f-ece9-4595-8932-4bccf75dade4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a26dcc8-8087-4edd-a9b8-e470733fc885",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eee0aec-3378-4a8c-a50a-fe939d616d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da1e45f-b8a7-4006-baf8-e49469270077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52481db-964d-4852-ab67-43c677b8f77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bb0ab3-0c1d-44fa-9cc0-aeaff2ff3560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86b70f1-dcaa-4d51-ab00-b276cc1ad84e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6804f8bb-ff73-4132-beaa-b17174f5b598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16f4115-ee97-4f3c-948f-f6a98788ec77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c4fd01-c9ad-4fae-97c0-38ba81845eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13eed95-1e60-4e18-82be-b5ec99f6fcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28216267-3cef-4646-81cf-9353946d2f6e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393b8bb4-5c15-45b8-b2b5-bca9f64e718b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dd0f41-841a-4857-ab16-bb6d8057d92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe76bd4-56bd-4d1c-a7dc-9d834e25e211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e726150-7fc1-4ff6-a7bf-b405c81b68ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587b9f1e-962e-4865-b0b7-d2d58c55f9f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739605fd-2367-4ff9-94f0-b7eb1aefb420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3c656e-727b-4601-a6d3-e7984df40038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8088be-6d87-4500-8f0f-2f69de2f38c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6646fed3-8782-4561-ae90-ad6b6dbabe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29035a8c-409a-487c-97b3-836d30d8e422",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93335ad1-fd1d-434a-b667-03bb8fa77ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27236be-c037-4330-8807-5ab339446d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df619cc-68c8-46c3-beb9-ebd67b37dddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d94d21-84e9-4c7f-a28c-9483c86ef04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae530497-520a-4f7e-9f89-6533c3aa12c7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cae09f2-d01d-40b9-8c9e-c0a2987a0c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d106b3-69e1-4fb2-90d1-b5ddf7798cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de03efd-5454-4447-90e0-acdaf5b50f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5161a5-291a-4367-9056-a04d57f9f6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52d12c7-112b-421a-adca-c0cf288198cb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5917b8c-8644-418c-9b19-08ee0906d258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4309aa42-7997-4806-9edb-ffdd5a1eda1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dd07ad-7c7a-423c-b8cc-bcf7f673281a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e084659a-6b10-4d96-9132-fc61bbae9364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf965c44-4b48-4098-967a-bcd6e3d39cb1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371484ca-918f-41f0-b2c5-4727dd99e5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194a88fc-3762-489d-8d08-4d89469c898b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec4c6ee-111c-4031-8e8a-5cadb27f797e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc150f7-dbe5-4687-b803-20b8aa2e7e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303cb121-2a1d-450b-a652-a3310d0eb0ff",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b365fa7-d487-4d88-bfac-b5d190fd6fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b12f84-1995-45f7-9b3d-bdf968c04027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de424250-4c2a-406f-97d4-6f28e53381ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c3114a-fabc-4aac-8fd3-0f9ab62ac385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b84afba-9d2f-48ea-84b0-5a1ab1404db4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7689aa4a-a2e0-40b3-8e56-9eb901b5a6fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58624a31-55b7-4142-a398-a9724eaf665f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1242bc9d-0c8b-4697-9a7a-8f096f18f175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb1f61e-d232-4f39-9760-277598bcc4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb88a651-030a-4778-a284-6ba067fdb6cf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7614c8bf-dca9-465a-b411-e64cf0390f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9bc4f2-c0ad-4caa-85a6-ec0af2be5654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e26a1ed-cab9-4a1f-bca4-62c549a9b484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0af8d6b-e40f-4bae-95be-36abd59d5c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149c16a5-0d28-4129-aa58-c29088248a31",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606cf8e9-0913-4908-ab0b-2e1a53f2aa65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9832be99-9c35-49ac-9e0a-44a03f14daa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373c81dd-123a-4e85-b3e6-9fb3d5cfaf7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3c3ac9-f391-422d-9801-1ddddccfef85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4af057-831a-4e60-8bc9-eab14f0c5d02",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef567402-bdd9-44ab-9d52-39b1324ca35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0ba8f5-f0b3-454c-81f8-bdf31e1b03b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d185a8ea-eff7-4b71-9b54-6823a213cb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8671423d-0d7c-43e8-a745-db60c053f7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7530630-4c23-4fe9-9408-e2169ead8483",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8fe21f-9d60-401a-9c5a-0b78bd944666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8458251-1dc0-4010-921d-f56d9e16d637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4d2c5e-d472-4e42-bf24-e2a080cbad7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790c930d-c89f-4d7d-95fe-0506bafab161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad57434f-2ce9-46fd-b820-9f8411ee98d3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fb0c26-1643-41f6-9454-39e7138a31cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5174ae9-34db-495e-b2fb-f3828b4197ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7218acf8-a431-41e2-aebb-4d6f3e0e09b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fe6958-b1e5-4047-afd2-06fe79f3d3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55637d16-2dc9-4f20-8adf-13d95748dc12",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71b5a2c-928e-4877-872f-14525d8d9b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e6f04d-904e-48d5-8f43-57e246062ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ab7302-464e-4be8-bfce-7f57f3a36acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b43479-f7d0-4deb-8865-3517d949db21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c433faef-f71e-4598-bc22-336a0ca5188c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ac1445-64e5-4053-b169-f12fefedd1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f246e1e8-c0b8-455b-af53-82f31cff62c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4879dc3b-8653-496b-925d-78c2279207be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1224b6fc-fbb8-4746-b9ab-a05bf5928ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b5d0f-cd60-451f-bc22-9fdc28a3ba6b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a970cc94-80aa-4520-83e4-d0883e77b53a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f9fff6e-ffa6-4eed-b710-abbef60696cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad0c811-bd06-46d1-8751-7965c5bf0180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bc6ef5-5e40-4d78-b8e1-300bb5a330a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad4dfa9-df49-4a01-ba7c-3893905cc0cb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbf36ce-b59d-4861-9115-5bf1c043cfc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655140ab-b943-48e3-9b96-9041689c9408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52b9e99-71c6-4336-8f5d-302ab8404c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee75835e-4258-4521-93ac-39def63344da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7a3890-f2c0-4bf5-9b16-09ad530059d2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cd1346-e710-4a86-9d75-902f6048c086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6ce26c-4d3c-4a0d-8d4f-192535ce768f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e549b0-502f-46e3-a5dd-bb23a457546b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ce80f0-3c6b-4cbd-97eb-786ff2abb309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a307ce-6388-4519-ab59-4807055eaa75",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187396d0-8e97-47c1-a73c-8642beef3f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad416b9-5437-4008-9f96-ba8cd5c7846b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f979b8-c6a1-4bec-bb41-931109e0cbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf8fb92-33f3-4fb7-bb86-12b3d92b5f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ede326-ece1-4b2f-8f3b-2a1625a8cd87",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19afc9b6-ccb4-4974-98aa-251c8c3165be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e514214e-3057-4405-af22-337322c0499a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d904eb-aab1-450b-83dd-85488cfec3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b37a81-9d63-43ac-bcc6-ee5bdb069eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea638a58-3be5-42b9-ad29-0e1a5163b85c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e24db0c-e130-415f-8b3d-37d7b8d4a88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fc02a0-f983-4c41-b1b7-baad7b3cc6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0972c82a-c4ef-4cfd-af4c-a6a4f5471cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80b4ca3-cb5c-4157-8c45-c7a368adced1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdd68cd-4616-42b2-bcb3-981277e31558",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34570a6e-85e2-4ea7-bbb4-ff8fc15525c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cfc66c-d583-482c-a714-100d56f6dc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6de40ee-03f0-4750-b5c8-946d3dd88107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48c2aa8-731d-4bdd-979b-9dee44f4e9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52468150-3e7c-4d0c-a408-73adb21f404c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c0f796-984d-400d-8a87-e87f5502b693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f68d6f6-8acc-4e80-8400-69935f4d02b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a726e2be-1566-45c4-bb24-e88dffb00ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca53e308-e45d-4b38-986f-98dd48ab599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7057ba9f-f930-4f0c-bc92-2959f9b5ce17",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5655eaf-bd0b-4a1b-aaed-29c97b0e3d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a0b651-4695-4140-aaff-1b56e6f0948a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650a997f-a774-4647-9280-0801a5796509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b9d36b-0686-496a-9d27-5d943cf3143e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811aee71-df82-4ea3-a73d-33bb2554ca09",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457cb655-10ab-4341-9584-c93f90f0fd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d512ec93-a6c1-4504-84d0-7eb64c11a9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbbe745-f350-41bb-b1dc-b67ee609fed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605bcc02-81ab-41c0-85b7-11012ebc6a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cb5e2d-7563-4b9d-8576-63399b14dd9b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd11539-211f-4fe5-a8d3-6161270875a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca66cb4-a25b-4f72-9391-4b1335d588e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc83459-de52-4288-b27e-4049c71af8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8684fa7-dd81-4bbf-bc42-850b67951413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d14f1b1-71cd-4536-8d30-cc1219b6d4e9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073997e3-8175-4159-bc71-ede3a5163e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d170be-1445-4901-9416-544824dbec38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5510d3-7227-4e62-a0c4-97f6f9c07cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c73f97-6b73-41f6-8ba9-e0b1b1bed2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9210dbdd-933c-4cfa-bcc0-7d9028453e66",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a511a980-edba-4fb4-9a29-77526205338a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65791e9a-e64f-4e6b-9f60-83cfd0c45d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c2cca9-449a-403e-b780-1ac42330c995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f22c1de-03ea-4fdf-9e74-ab59342799f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa0423a-1cb9-4eec-95ea-ac33e6ad7117",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d366f42-1fb4-40bc-a2b8-0acd90dc94e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bda0f64-6a19-4e26-b521-6f43e9627f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8030cf1-83fd-4afa-b180-28f225ea1ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c652aab-f1eb-417c-9c86-1108ee62e07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5b7626-51d4-4cdc-a317-97d875f92422",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587469a8-e6bd-4562-9d10-44315722fc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a71c78-d742-41bd-8607-b1c5389c125a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf47c8f-c013-4f90-ae79-559623ece322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9359b4a-67bc-4e04-8f70-3e5ea3dea6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b737ac3-d4ee-482f-92d7-e88200cf3912",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e090205c-bc91-482f-9c3a-50520c167bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc88824b-6d4d-4f88-a2df-2e30d05da768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5901993-febb-4602-8d32-498364264a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfffdad-88fa-4cae-bea1-6eba760fdfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f06de1-9a8a-4135-82b7-ed31cee8d94e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fe7e95-444b-414e-b839-a2349f3b8fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fddb90-f254-4a95-baee-9c5a58b5f425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cd8e72-00d2-4a1d-878b-920930bbf1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2309f718-5bad-4b18-b8c8-a16f3f355df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba2558b-82f2-47b6-b4d7-79bce1bacb91",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d360b429-75a2-4c65-87a4-d94338ebf51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17fc478-0e8c-4a19-afc9-82b6017bf656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1a1006-5c9d-4520-8ad8-ae0bd44f649a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179e3d94-bd5c-47e1-bcd7-5a4a1d585ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5602aedd-f872-4086-b473-585abf29dd81",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ce34a8-bfad-48bc-9f1f-5aea5bf48b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ea1354-8763-45e7-bb38-830f5215c2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab43b864-5130-425f-9a9d-7eede385a195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f05c77-6f56-42df-95e3-33249d854a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9d26cf-ccc2-4c99-82d7-770f5569e9bc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38469219-ec7e-43e8-ad8c-f70ff8850245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7396316a-4443-4581-ba56-ad8e8c917518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af26576-9ddf-42a1-b9ef-d3c2b2ae3fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e2299f-0427-43a5-9346-a7a9875a84ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c78595-67f5-4062-8c64-bb983e22c816",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6b591c-e7af-47cb-8951-cdefc5320ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ba8b5c-10f0-4369-8fcb-22c17caf99ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba2da0e-ca00-407e-a0e6-da44591a3d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85415c6d-48bc-40d5-8bfb-7e3f2fb2dc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1bb9a6-df53-4cac-a0ca-3f6576c66a95",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf7594d-6dc0-46b9-a740-e69e8fb1a73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a329af-7017-40b4-8632-f9a462fbb806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2e8e7a-80ba-4b48-b5b2-25bd715c8d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10e3621-3c82-4550-9037-9e7e55b83d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ea9024-b370-4930-b203-c30711538b5f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e874f95c-2413-44b4-a2ad-0564df29b5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a651c0e-2bfa-4b39-8f93-a4d049caea21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fec876e-eac0-48d6-98d5-f54568168017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca80b13-f9db-4040-883f-9e3f129a6fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981d844f-20ed-4098-917f-7044b954a3bc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404e722e-a065-4ea3-8744-6ac205628798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d39d516-fbc0-489c-b7ad-91cc4d909120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2611ac9a-2408-48c6-bd4d-eb4aa064b0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83086313-8791-408d-9792-86309ba9eb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad169ec6-8ce8-48fa-8be4-1854ad2f6a8a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d74084-6a91-404f-ad3c-83ec453b2d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73607920-f524-427e-a452-597dee6076e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f07c7ce-1714-4b11-808e-a39e6fb52916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fa8ff7-2234-4ed7-bc94-d8ab544c8241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7d5dff-a0ef-4e09-811a-9823922975a7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a72881-274d-477c-83c1-3cd1aeb6bd25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9612ef1-8ed8-46ac-9a5f-81155621072a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8701fff1-9c77-48b2-9f8a-d6d4d465d3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f77dc7-45c8-4c6e-912a-6c1e22a2ea1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ec8460-8def-4d5e-823c-212fd34bca4a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e042ac-376d-4668-870d-d2f427ab123c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e19837-62f3-45a5-9eb2-45837928c1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c9bce3-2319-4aa1-ab14-7f1874fb3416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd70886b-5137-43bf-b266-529770a519bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cbb632-30fe-4ad1-a00a-d3f41e310524",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6045f8d9-89a4-45f1-a114-9e262e429cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8fe746a-08fb-4ae6-b287-c8c94704354a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72ed27c-a16e-42a2-9c26-0ef413b9ce06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753d9534-640e-4de6-9133-e4dbbebbfb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0429843a-6c04-48be-94f9-d7efd8f5fcc2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536a8461-024d-4e82-9197-a81af610fabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1879c17b-d9df-40bb-b4b7-d591f6db6112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b488c19-5b80-4a1a-bdfb-b7ae0a7a4f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8985dc6-85f8-41e5-9a60-064fc4e8e7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe69b0b-3d07-4770-99cd-366e4f1955f7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3001dea-899f-4469-9151-3f7df1b50abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866223d9-c7a7-4c18-ae2c-13b8f97f7ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "898d35d4-733d-4c37-b532-8300d8261411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12551c6d-8337-4dc2-80a0-c91629ea287e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae25854-42af-4890-9c01-b8fa7b6dd6bb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01e6043-aa04-4045-9dfb-289ba6e0a544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac759532-89b2-44ca-a86a-4923a33af2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cec57b-7c69-4161-aa90-82d2173a8cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a42fcd7-e09a-46ae-a021-e3c981c3db96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40a4a69-5a65-4f57-9c28-3e14c7f5903d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98697a91-04cd-4d3e-bfdf-b1bfbf86760e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc31e267-fd20-4ac0-9b36-1e789fa8492b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cba4bf-4d15-49a1-b7ea-465da1755aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41db2e8d-4c28-4f5c-966d-5047ee2e56de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69fa55a-5e54-43fb-a470-ae073928c578",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6088724b-a6e2-4760-b6fd-ad82c64cc817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b97a259-bdb3-44aa-9bcd-b7d460a0daf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954e1ff4-78f5-43d4-81f3-2b1d8349a4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0e54f0-5c73-455c-bb58-4125a5704c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb56f82f-843d-4c67-8b67-0b95263fc486",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566aae01-7a30-4d70-83ff-a874b6de2b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bb03b7-8814-4823-9855-57fb065651a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5593136f-f838-45b9-bbe9-cdc771b68408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9946b43f-7371-4117-9a1a-93cfa102b2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b899b5-5b78-4ebc-8bfc-48ebf6b3d986",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45158bd8-1cbc-461e-b8f5-ebcb3e542b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31bb5508-e271-4a2b-a0fd-c8c3b21cc144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbb7ac8-5d04-4405-a3dd-7d3259a06850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e1dccf-6aff-4c4d-8159-060e4185fc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630fd4da-0e23-436c-a7bb-f8055a37ec26",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1769536-df8a-48f4-8710-b4c29824616e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b06b4dea-7562-4e09-a9ec-d91d229c849b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055c3bcf-a828-4a09-ad47-f4be962e18f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0febde4-e8aa-434f-81c8-accecfc25861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcef6e83-43c6-468c-8bb3-533b3fefc86f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498b2a7c-d8dc-4d16-b9af-4ba2a102c613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90cabc66-7338-4dc4-9587-100904c02d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21b7078-caee-4401-bef9-d5124056bdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96327037-1777-4b70-a88d-2c436a48bcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53113241-07ae-4f4c-997a-200b1862e8bf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9d2bdd-8e18-4785-a72d-289754e81802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bde09e7-70eb-475a-a535-b1aa6da87631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2349f3-d040-4f17-a401-0fd5dd738e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40f44e5-576b-408c-8dd2-e7e1cfbcc22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3426fe72-cc61-4b41-ad72-5b55ca822310",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba98bbd7-2ef4-4073-a783-387ac796fb44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e94163f-815e-4628-ae4b-b247c612d9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f965208b-649c-456a-9f18-22e5fc60d570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cbe321-2b3d-4aea-864f-cdeceee588e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933fbfd9-00db-4bae-b7b8-2dda10e0ed04",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11740c1f-5bb3-4e3d-95a5-930a8423c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6bed810-0376-42ef-a2a8-fa1b4aafdcb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5126d62-269f-4a68-95ca-553333facb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9b9124-2ea2-4848-85f9-5b72234b1c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6455cf-02be-4428-a717-c8f54402b99a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e24037-75d0-47df-a054-4a0d9acd9a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f5a08f3-d166-4d7a-b0ee-35b8ef9da023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9467ff6-4fb5-4354-aaa3-ce977c8ed351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dd77d3-64c7-4a42-bd27-7d5a7f6a9a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89952588-8de1-4149-a8eb-6dc42649de14",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc35df8-f7ae-4cfe-a378-eaba4eaf8dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba2dfb5-d584-4620-beff-2e545992505d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c39ea8c-6aba-4690-9ee2-c59f497a6c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddb6fee-65c3-47ca-bf26-4eacb17680d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3180e8-d55a-4195-ab9e-b53a0d019233",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47412b1b-0409-489a-b520-4e811297510a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d717db54-11e3-4303-ad16-6a62612508cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56d692f-9a45-4d17-b3d9-06d224de0766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452b28b9-acb7-45a7-aa9b-e3023a954a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c134cda0-0706-467d-96dd-8e8c9cb13c69",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158bf758-cb88-4e51-bedf-2b61a63709d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6a95bdb-e2eb-4eb7-9856-c6cb49ee54ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6242ef-0359-4382-aa7a-5a1b55763d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef7c32f-9621-4633-8c83-29fdab2ddb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a11b15c-ef31-40c8-b962-cabc167076b8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2704935-60a4-4666-964a-61abe9402221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d945ce-e0af-47e7-a34e-21df57a46384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f01c39a-5630-4196-aee6-b84a2bfd4dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d450a1-7ad4-462b-b818-d0f33f35b8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe2a176-7c34-40e0-9b6c-578ea857864b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4da34a5-a710-4d9e-a2f9-fa1a926787ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a007bb2-8eff-4a99-a718-a34ffb84a20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f7dd72-20f5-4a6c-a945-b7b5fd63d897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608f802d-9df9-42b5-98e5-97ceff1be361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da040aea-e623-4629-b362-ada632b7ceac",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0788f993-4826-40ab-8703-fb1478ac7938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635a1d6b-074d-4d3e-bbeb-046bb453279c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a43f6c8-4602-4352-a404-9ad329750f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41eaecd-4044-4ac8-b8a7-a3a95ee9d643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0e2a6d-4999-4049-bc16-ae6cf7b2bdf6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588f0053-9b6b-4a56-8423-ec86cfb6493e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c4f930-c4e1-467a-ae91-e4463eb7150b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a31968-8509-4926-b15d-5222c60da285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02744289-bea3-4b22-b19b-c9bdb9b36eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68155096-e260-4511-8814-7068761bbc98",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9de9aa8-0f03-420c-a351-bc4e6685a620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c41919-7044-4f94-ad0d-8250f5d80195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35a1961-9ca0-4345-aa81-3626fa31cabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c957e32c-0343-4758-8045-b8be1b7181a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0d2d53-52f8-43dd-83eb-e8b9848f47d6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b2fb9a-af21-497f-9e7c-0eb1ed79c379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1a65d8-e45f-4ccd-8be8-cb739452c036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d62bb5-934d-4598-bceb-f6231f7061ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f2b68c-c3e4-4639-a6bc-c1f6c6204245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2515aaa-7ed1-42b6-a24e-7e805dac1a85",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ac8ab5-ea10-4044-8155-dd9a04afd227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5388db3b-34f8-4566-b5a6-7f6bf24ebdec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812036bb-5257-4934-b48e-8d01f35a63bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa44e2f-3857-44f6-8ac8-6bac37fa3294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608a6c7b-3bd6-4f89-a5ff-0f30f29fb0ae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1898064-c143-4fe6-95c5-a5bf949a956e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e91445fb-47c2-4601-9cef-9a0c86dc548a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a43f4c-f6ee-4dec-8ecf-24938aff0513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4cfd66-4224-4a9b-8139-34de5f8c9947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d92f7e2-57d3-4a27-bf84-72013ade22ce",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de48b2ba-46ad-487f-bd80-723c431591cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a06b7f2-192a-47f4-b0ce-b88b3e5bf132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4ff5e8-9d66-4db0-9606-681a56c755fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37bc6f1-f48f-4f42-8a65-c28daf09d60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d38bde-0e08-40f0-b3fc-45d9d45897da",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5319e4-1156-4432-ab09-ebcde1748411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af15a2fa-4ff5-419e-b21e-9944521c14ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3e6dc1-caa1-4bd0-99d1-dcb167493026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a885c0e3-dca6-40da-9a3a-27f3562cdb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faee710-0cab-4af9-ba07-3d79c4bb0f3f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287219f8-0b0f-4cbf-a3d8-d20f7b906746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc13dbf6-0938-4163-9122-c8003ec8d709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36e7dc4-9b0a-4871-aec0-2cb92c41fde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa468c3-c546-494f-a328-a5de7893864e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3762318-f2ea-41ad-ae94-bd28414c9754",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677b4fa4-a128-4e31-871f-b839c5cfaff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a163d5d6-1e3f-45a4-ad73-95dfa8d6b0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4647b584-242a-4b73-8912-1006a2d9bed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb9f96b-d7a0-41d4-855b-6d0e5661d70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a73057-e280-4fa4-8cb2-d64f6f68a610",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84da116-2faa-44b7-ab04-0621ac67b8d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d62d61-712d-4bdc-aa7e-bb8a7d574125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9b16bd-3564-4156-8904-24929cfbaf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f92345b-c05e-4054-8eed-a1a887807baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de400ab-4caa-4525-bd36-acbbda470627",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055ae3b5-1157-4f35-aea2-6aebc5838360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ccfba53-51da-4882-bc9f-d61179c3d411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0effc20-8307-4d2e-bba5-9c3bb6f6d3f6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f5837a-624f-4475-a423-88b31d1c67cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3851e98-cef5-4058-9f43-3ad16c04fd5c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f659ba9-65d5-4ea6-b606-d445de79ac6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622adc3d-8d5b-4634-8a6d-f05fb2410e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f14fcd-c4ac-46eb-a177-7213c6478ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c0e921-5170-454a-abbf-bfc7d3ce4f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b64784-55e8-40ac-a851-2cfe84854b00",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cc857a-e892-41dd-93c4-5ac6b38a6026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc5adb2-3d97-4d9d-bba4-2ef24d29e2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1096a4-e85e-4da2-9159-f7658ee49b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35749ac-2859-4920-84da-083f4e55323f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48df827b-15da-4eca-9f21-5ef5893920e2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f27abc-3d54-49b0-b88d-4534336e75df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd3a57c-3705-46dc-98fc-71ec6b956123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b4c7a9-83d1-4ce1-9fc1-4e4da434218a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c631fa-8995-40ea-aa87-38ae58c50347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b18e07-f9eb-4d49-a5a3-3e407c80eed2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f02501-59c8-4839-b059-b670ec4c73bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ab8e3e-8e2d-4a2d-b58d-52db43fc5404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67f96eb-d6ba-414d-9ec0-54a99ea0f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d21a9ed-74db-4f13-b678-7e9a3f88054f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c1a797-08b5-4109-bd8f-55772d06511d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc564fb-c877-40d4-86f7-5838ba04a0d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b2e326-c49a-4dbf-996f-16e2392a7cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9a7031-fdae-4446-9b31-2737ebfc1a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4f76e1-195a-490c-ab22-27e4c6cddf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5a0bcb-63c4-4021-b1c7-fae92468730a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f29ed2b-6e53-4bdd-a335-28c4d77d68cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e988df-a473-49cb-83ff-6269f60520ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b673e34-79e3-4652-a13c-0f2369fdf27b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05569dfa-253a-43b4-8217-d8c4e9dccebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be8c0df-b22b-44a5-bed1-133493b08502",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253f18a7-5771-4408-bdd3-53d5acb52863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eab5e96-f98d-474e-9c4c-67edc7a57898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab1c41-a712-4795-9366-0cd8b3c4d169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd11074-d644-489f-85c6-71ce7d1c5c95"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cea7b1de-c043-4e9e-98e2-2db938b4381d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d42c11e5-ac2c-45b0-8f92-f4eb284c364c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cb1f545-8d6e-4ca4-82ba-143e43a6be46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c92949f-a6c5-485c-9a12-46eb83a52a57"
                    }
                  }
                ]
              },
              {
                "id": "eb94fc22-005d-4137-b60f-e910c79bb86f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fa1af47-7224-46e6-9005-7a3bb884d985",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3974dd13-68f4-402b-b57a-12e7fa19136f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "64af9baa-1996-4be4-ae0b-70788e837d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6704da62-e1a5-471b-95db-5e2c3abd04d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5380e1f-280a-40c5-bde9-2ab54e7e5e60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2ca5797-491c-4671-a75c-4647d607dbc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08ebb1cd-8088-4e67-be7d-23e6b4adeb39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "710c9923-44be-43a5-b48a-503840d941bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccd03a0a-c1a3-4131-8e4c-5225c7b4a762"
                    }
                  }
                ]
              },
              {
                "id": "a9b5217b-4eb7-4b66-aeb1-fa354e84701b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3d979935-be89-4379-b022-12287d018f7a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d507876e-ad3e-477d-932e-2ef6f4ecdd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fc5edc9f-7966-4203-b98a-b6681fed8cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35484851-a1fa-4ec1-941b-e03e9d289caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd462c7-c603-46a3-9a83-69032a9fc745"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f21cdb31-cbf3-46b4-aec0-27b0cc7d549a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb4ce836-6b33-400d-a96b-1e3ab239939d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9a60821-5b38-4fc8-a653-d67dc935a98a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aaddd70e-4747-4b29-b02f-e96bf86f2f69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b602a237-8caa-4e5d-8424-e5f096d9a311",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0232378-f055-4a45-9dfa-4df023ccb7b5"
                    }
                  }
                ]
              },
              {
                "id": "0b6fb94a-169b-4085-b6ef-7cc9938f772d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "219ef669-2be4-4ff1-95b5-fe0411fcc39c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31257187-ca90-48c7-b73b-61b94ab090e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5dd8335-9658-4128-905c-bdc5df9db666",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5481e25d-d5f9-471d-aad6-d9ee571a98f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08446fdd-827a-4211-92b5-f9b9f841c8ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ca909fe8-5c16-4066-a548-dba0b450800f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc5b4ebc-4cde-467c-a451-ff14e5b05ab4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e11f2f56-67e0-4d14-87ef-d050c981f8d4"
            }
          }
        ]
      },
      {
        "id": "2c9bedc5-2100-4a66-a5f7-424dfce0f182",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "96647a32-2067-4b37-af8a-e0bd7e9d9e0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ae74d14-4739-43ee-ba63-60fe0ffd177c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e062e54-95c2-4c33-8bb8-092761964761",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b6b4bd-bb20-4662-9fd0-9c980bb69389",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d30364f3-68f5-4ca6-a95f-bef37df3da39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a8cd43-dd07-4844-8b60-38badc12ae24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05340183-b94c-411c-864c-2fb471873bd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f23a2ad-9555-42a6-9725-1479a1597bc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8279b724-f16e-483b-9b3c-c31cdfb56dfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27aa8d6a-7df4-4b21-896a-3f6932f16a38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd2561c0-8a0b-4dbd-9238-a999f4bfb8d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3ca0768-2a04-4802-8689-c65daa95b076",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6adb29f6-d165-4875-809e-d64334d293d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e01554b-6dbb-4862-85e6-ae848c5123c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c082d83a-6b98-4aad-b7b4-1a06fab2d862"
            }
          }
        ]
      },
      {
        "id": "1ff8327b-09ec-4787-9051-465b1d96eaa5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8d3712ed-e5d8-486b-afb6-7ec2ff963f0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ea3815c-e01a-4578-afd4-b3050ce90359",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a241f34b-e36f-47d9-9ef4-06e299a9dc51",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a348d67-e9c8-4102-ae82-ab8b08d16307",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffc97f6f-d70e-4aee-8455-e3deb7df8ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3010bd-a93a-47c6-a07e-be6119655cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a051e4e-cf0d-4fc4-bf24-38ee73d15b07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adb1d3f1-e928-428f-9c56-1f0e4adf2e91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86c0c25b-78ad-4ba8-a3d7-188e8fb99215"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bbf03e9-ca30-470a-83b7-547c38cea4f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc01f9a7-cf74-435c-be04-a9d1cf5fa1e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9d0149a-72fa-4a2c-a956-24ef966b59c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a479592-d24f-4d8f-b202-8092d2556c5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a259dc4e-2075-46b0-8b25-39822302ff77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a085265e-c268-472f-acf3-564bafedb439"
            }
          }
        ]
      },
      {
        "id": "f402faf3-cdab-4806-86df-e222ccc8e617",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fe50d2c5-b244-4c93-aec6-9462018708b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "168bc28d-dd3e-4a91-b43b-f631386969a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad9ec1ba-c7be-40ba-b3f0-01fa8afe68ff",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbadf272-2937-4914-8b4f-192b318c805f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a696114a-3867-43af-8895-68f99d1091dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340aec90-2b80-495d-ac26-e834100092d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11c684b2-8153-4dc3-813d-c08e3173c5d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15412bbc-2837-4a55-85cd-a590b91091a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "659b84c4-bdf5-456e-8f78-f1da24ca30bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dd04eb8-49ab-45d3-a647-0f5427589ab6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "954b7620-8514-4c12-9d02-1cc96c905201"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4586d009-3874-4958-82e3-93c60a5f079b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9907438-ca00-4b7b-9fe9-908d0cdb8433"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cf4fc98-e6e4-4abf-a9d6-e8e053ed619d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b4e5495-6cfb-4b05-9b98-3ab20970b103"
            }
          }
        ]
      },
      {
        "id": "5d40be8d-02e3-4b77-99f8-4c149cbd576f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4f4f9ee-3f03-4f23-9ee6-2c0230438aaa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59b9852b-8029-4364-8bdd-ce5974844cc0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "63b1c595-253f-4429-9259-8b99107cce58",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bfe250d-674d-42fd-b60c-a7e96571d32a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40f7b2c9-7f4f-44c7-9742-bcc6edf1eb14",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 312.34154929577466,
      "responseMin": 6,
      "responseMax": 7158,
      "responseSd": 868.9548519644337,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696379643421,
      "completed": 1696379746774
    },
    "executions": [
      {
        "id": "c122e7bf-5f04-4388-8e4c-f415c99050ba",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "132adfa5-209d-4094-a743-2be1216e06eb",
          "httpRequestId": "91276a4b-221c-4230-b98e-11d7f5c8205e"
        },
        "item": {
          "id": "c122e7bf-5f04-4388-8e4c-f415c99050ba",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7cdac4cd-d962-4e5f-af53-b4105731debb",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "8475a187-a8fd-4323-bc0e-989539ee57a5",
        "cursor": {
          "ref": "55d2b701-e85d-4ec2-9cc7-35cbdf9b6c91",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "df79be8c-ea89-42de-ac22-adfa3d84d80e"
        },
        "item": {
          "id": "8475a187-a8fd-4323-bc0e-989539ee57a5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a043dfae-fa0a-435d-a500-f4fd23cc178b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "1a42458b-2f53-4233-a6d1-ad97ada4df79",
        "cursor": {
          "ref": "81ab25fc-d440-4b2c-87ff-c3582df17d9d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0ff3a036-7995-4df2-b0d4-d9cbb5443fc7"
        },
        "item": {
          "id": "1a42458b-2f53-4233-a6d1-ad97ada4df79",
          "name": "did_json"
        },
        "response": {
          "id": "17059d4a-c13e-4fa6-949b-85936df59be3",
          "status": "OK",
          "code": 200,
          "responseTime": 1202,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8190889-6719-48b4-8a48-695536d63c2b",
        "cursor": {
          "ref": "02497062-5189-4552-a60b-06c799eb4d65",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09d5349e-71cc-41ae-a2c8-e0bca108daaa"
        },
        "item": {
          "id": "c8190889-6719-48b4-8a48-695536d63c2b",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c2fdb2a-481e-4117-8d8c-bfbdf28e268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8190889-6719-48b4-8a48-695536d63c2b",
        "cursor": {
          "ref": "02497062-5189-4552-a60b-06c799eb4d65",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09d5349e-71cc-41ae-a2c8-e0bca108daaa"
        },
        "item": {
          "id": "c8190889-6719-48b4-8a48-695536d63c2b",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c2fdb2a-481e-4117-8d8c-bfbdf28e268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7574ea17-4d36-4209-bc27-1b81ff6300ea",
        "cursor": {
          "ref": "15494937-7453-45da-93c0-f98f7edea8fb",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f900d068-5bdd-44ba-b822-ddd652cff706"
        },
        "item": {
          "id": "7574ea17-4d36-4209-bc27-1b81ff6300ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d1e6f657-93f4-4dd3-8fc8-98d716905bf9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 349,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedcab0c-4de7-4c4e-8a82-8eb4b2d84244",
        "cursor": {
          "ref": "14c7277c-bc15-4381-9d29-aa852fc7c47a",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "be0215ec-9e23-498d-b731-f960593fe001"
        },
        "item": {
          "id": "dedcab0c-4de7-4c4e-8a82-8eb4b2d84244",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8f6ae439-c549-45e7-904a-fcfd51f137aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 258,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f4fd32-13a3-47ac-a42c-78ffae58d273",
        "cursor": {
          "ref": "60e2f886-a5ae-4eec-a8f0-1018a5175d50",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e1cacf08-0680-41e2-a949-ff1fc63d70ba"
        },
        "item": {
          "id": "87f4fd32-13a3-47ac-a42c-78ffae58d273",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2791b7f9-c1b1-4eba-8068-f1a67617c558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b873a190-3b98-466d-b57f-f4b3e6abc5c5",
        "cursor": {
          "ref": "be075d44-76ec-4ed7-919e-ea8229308689",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "50418751-feae-45df-9698-6352fcdaf607"
        },
        "item": {
          "id": "b873a190-3b98-466d-b57f-f4b3e6abc5c5",
          "name": "identifiers"
        },
        "response": {
          "id": "e35013b5-b8bb-41d2-8e5c-75899e835900",
          "status": "OK",
          "code": 200,
          "responseTime": 1286,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8792fd-a04e-4bc4-b18c-acd1fc087582",
        "cursor": {
          "ref": "4fa8f20d-7978-473f-9bd9-0f4474ffd3df",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f188fd95-8b08-45f8-9acd-cbcbff505c82"
        },
        "item": {
          "id": "2c8792fd-a04e-4bc4-b18c-acd1fc087582",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc2b5b5f-f946-4ca1-a3e6-90f152bf75ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4261ba-12cd-4ff5-b4d8-0571bfb27407",
        "cursor": {
          "ref": "161fef4d-ab6c-4544-a110-d17d41ad4251",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "121dfe17-562e-4fe9-ada2-7b6e7bbd6667"
        },
        "item": {
          "id": "fa4261ba-12cd-4ff5-b4d8-0571bfb27407",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f79fe765-8aff-4cf5-8467-b1a985a96940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86d8305-dd8c-4519-b3ad-3eeb58cda1f1",
        "cursor": {
          "ref": "e61b1f81-0d13-4b7c-bb21-c3200c5a4f00",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "23ef096b-615b-4db3-a6d1-a94c249d22e4"
        },
        "item": {
          "id": "d86d8305-dd8c-4519-b3ad-3eeb58cda1f1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "536caa0a-8dc6-4c30-9d6b-b4dc882e21d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49f3756-bfbd-4276-b57e-864f5542a743",
        "cursor": {
          "ref": "328f6752-bc0c-42db-9fca-739c0e028cce",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "012010d7-eb8b-41ea-9d7e-ca2ceb70765a"
        },
        "item": {
          "id": "c49f3756-bfbd-4276-b57e-864f5542a743",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "32fb87e9-5113-4d35-b087-43051a2446fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315acccc-9069-4af9-8114-db250d212a01",
        "cursor": {
          "ref": "7970e996-b10c-454c-99a8-ce484c9f3268",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8097f54b-da7f-4cfe-8166-a46455692b18"
        },
        "item": {
          "id": "315acccc-9069-4af9-8114-db250d212a01",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9a7fee4a-8746-4745-9926-22ce796fa2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd30b156-2f3d-4c67-adcf-04249f3c51bc",
        "cursor": {
          "ref": "7735b010-1af8-419a-90b4-6be384365d84",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "464b5d0c-9b17-402d-9561-c47833a3598a"
        },
        "item": {
          "id": "cd30b156-2f3d-4c67-adcf-04249f3c51bc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4e8b4b98-a0fb-41e9-b7e9-fc58d8195613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649a3402-802a-4bb7-8ef5-20ba4affd659",
        "cursor": {
          "ref": "8aa9de06-f303-4e8d-8486-8af819c64ca7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "77a367ef-722e-4f5b-b6de-3bbc3d2495d2"
        },
        "item": {
          "id": "649a3402-802a-4bb7-8ef5-20ba4affd659",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "44da0bc0-7bac-4f6e-a4d9-5eb9b8ac04f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc05cd52-8d22-441e-8a6e-b08f3a1f7d54",
        "cursor": {
          "ref": "5ff3a1b7-cab7-45c6-809d-4c675795a38a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "379f57c6-ba37-4a27-9726-f6c298d2c396"
        },
        "item": {
          "id": "dc05cd52-8d22-441e-8a6e-b08f3a1f7d54",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "53997771-18a8-4188-9573-2a0d3413067d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e83020-41b8-4939-8e8c-2fc5e8626ea2",
        "cursor": {
          "ref": "73c33850-03f1-400b-8879-420510bcefed",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dc8375b3-14b7-4452-bc68-808279a0bb24"
        },
        "item": {
          "id": "a4e83020-41b8-4939-8e8c-2fc5e8626ea2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a2a0b8be-7b1e-4cec-beb3-2e889e80e41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68f483d-d597-41e0-8860-150f53a755eb",
        "cursor": {
          "ref": "c0078c6e-2dc4-4c6d-8423-d6fbece0716b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "08e5be24-ddd4-49a5-a356-a186636e5958"
        },
        "item": {
          "id": "b68f483d-d597-41e0-8860-150f53a755eb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6e842c2b-0162-451f-9cf6-c04b6622986e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23834514-312e-4623-ae92-a75d2740b66b",
        "cursor": {
          "ref": "596d1c99-c827-4599-ba5e-1a419908c0ed",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "330b446d-476f-4146-bc1c-ea95308ebc37"
        },
        "item": {
          "id": "23834514-312e-4623-ae92-a75d2740b66b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ca2114ce-5de0-44af-b5cc-95aa6e71dabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b8f192-727c-4680-a969-0a2a281c5120",
        "cursor": {
          "ref": "d1847857-509d-4ce5-9cfc-bfc588a704c4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e9f42973-a32b-4d30-a8b9-d48753636127"
        },
        "item": {
          "id": "d7b8f192-727c-4680-a969-0a2a281c5120",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "18454fc3-0c1f-49af-a34c-e5f01d9dddcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab69d10a-c6cc-4ea6-a9a8-998911365f04",
        "cursor": {
          "ref": "67b22298-e936-4a47-aa4d-398acd6ad4bc",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5adf3afb-db5f-4032-b1ed-00060e5e450d"
        },
        "item": {
          "id": "ab69d10a-c6cc-4ea6-a9a8-998911365f04",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "42c0f355-08d9-49c2-a8ef-16bad153f962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d11124d-50de-48d0-b6df-2530dafbabc1",
        "cursor": {
          "ref": "794611cd-8a60-42c2-8667-212d6adac764",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fd9f2bc8-2bee-474f-997c-14b3e1033179"
        },
        "item": {
          "id": "0d11124d-50de-48d0-b6df-2530dafbabc1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ca51296e-d717-475d-9383-2ac32028a5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388a5624-13a0-4a92-8b23-31d87e6af212",
        "cursor": {
          "ref": "4691c506-568d-40af-af59-430b90e50980",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9b5094bb-ecef-491f-912a-bc258249d989"
        },
        "item": {
          "id": "388a5624-13a0-4a92-8b23-31d87e6af212",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4ec7ce4f-8bd0-4ff7-9b86-00a5a3c44a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a0d416-25e0-43ab-971d-dd80ae8bbd6b",
        "cursor": {
          "ref": "9c9bac58-c38d-4852-b057-71e94bc60f21",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "047a0449-d8cd-4302-b019-d05a94fcaa70"
        },
        "item": {
          "id": "10a0d416-25e0-43ab-971d-dd80ae8bbd6b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "98c4318c-75e3-49be-8692-4e9d5c4d1d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f40ea7-6fb4-4a3a-bf3c-7842b0ad6fad",
        "cursor": {
          "ref": "f28defdb-91c2-420a-a7f4-6cc8d21bd5c6",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "270b24f1-39b0-44ad-8218-f1b262894c2d"
        },
        "item": {
          "id": "07f40ea7-6fb4-4a3a-bf3c-7842b0ad6fad",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c9682615-a174-48ed-8d0a-9c72987d6a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6b9f52-91ae-4f60-9787-fef1d3e70366",
        "cursor": {
          "ref": "864e70cb-0d47-4888-b920-117761c9556d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b84b4182-fab1-4899-be54-b11181c15589"
        },
        "item": {
          "id": "9e6b9f52-91ae-4f60-9787-fef1d3e70366",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ff7ac087-1c92-41e6-b912-ca187d09cad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc520b7c-2c3b-4f97-9a70-a564bd798c67",
        "cursor": {
          "ref": "2e30207c-173b-44e2-ac52-e7b5eae50724",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "71763a47-e173-4731-b916-f7f5100f8387"
        },
        "item": {
          "id": "cc520b7c-2c3b-4f97-9a70-a564bd798c67",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "623cdbfd-1230-407c-b219-fe5f9db62a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a21cfa-d5fc-4f4e-a031-508a4c782d75",
        "cursor": {
          "ref": "323c0730-589e-4eb0-bc93-3231f1a332c4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "95fb759f-a0c0-43af-903c-44295a3206f6"
        },
        "item": {
          "id": "20a21cfa-d5fc-4f4e-a031-508a4c782d75",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8b259427-42c4-45d4-bcdd-107c10648bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b03bc4-ea3d-4b49-8621-0a5a7d2b8f69",
        "cursor": {
          "ref": "238e74cf-18ea-4cfc-b395-38ab22b68d05",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2058b528-94c9-4829-8515-8c1a1e3f4708"
        },
        "item": {
          "id": "27b03bc4-ea3d-4b49-8621-0a5a7d2b8f69",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0d0ecfa0-a09d-44eb-8591-a5b7187d7bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4344406-6e1c-4ba2-94bd-45452acf0681",
        "cursor": {
          "ref": "9ece6ad7-d982-45d0-a48a-fa8ad29683a3",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cc405c13-44f6-475b-86bc-fb422dff3e39"
        },
        "item": {
          "id": "a4344406-6e1c-4ba2-94bd-45452acf0681",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fb5711cf-158d-4b42-90f2-ab999c0eb1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244030c6-9ad4-4fab-a6c7-4e91930eb6e7",
        "cursor": {
          "ref": "013ee604-99aa-4b1c-a3d4-9361994f9219",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fae8de8a-06ad-4878-b0ad-9db3ee61dbb8"
        },
        "item": {
          "id": "244030c6-9ad4-4fab-a6c7-4e91930eb6e7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cf9cc5c9-190e-42f1-a492-5f8731c853d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622d7304-a6a0-402e-aa4a-a3f0a659fb01",
        "cursor": {
          "ref": "08511eda-402f-4c93-b7e1-f87c3d3b66d5",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "41870f01-f80d-4232-984f-25966326732d"
        },
        "item": {
          "id": "622d7304-a6a0-402e-aa4a-a3f0a659fb01",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "34f4e9de-d7bc-47fc-b176-730df12026cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5cd744-cf7e-4c77-9779-e4f18be7165c",
        "cursor": {
          "ref": "a1638ecf-f9cf-443f-8dd3-cbf66e8321b5",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "48ba162c-b0a4-4610-8f74-2219daf022c2"
        },
        "item": {
          "id": "ac5cd744-cf7e-4c77-9779-e4f18be7165c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2f99b022-7f65-4a18-a682-5487115b41f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f931549e-5b7c-49c5-afba-e114e949af1f",
        "cursor": {
          "ref": "3cb6c14a-4e61-4cbe-974f-d801980ce40e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2d6dc87a-49b9-43e7-868e-039cf00a0f47"
        },
        "item": {
          "id": "f931549e-5b7c-49c5-afba-e114e949af1f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "56e1a28b-0b3d-417a-84c0-5d7ff487c30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce314b2-e841-432f-bbd6-5cdbe8fed85f",
        "cursor": {
          "ref": "0552d15b-5d04-4d42-b89d-98e8c4edee85",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5a79d337-10b5-4f3c-8714-f8f4e22a86ed"
        },
        "item": {
          "id": "0ce314b2-e841-432f-bbd6-5cdbe8fed85f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ce97d50c-ca24-4cd1-b850-877bf11ce545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d94b2b0-bdce-479f-aabd-b3da06c8f395",
        "cursor": {
          "ref": "bdc3d9bc-0ee2-4edb-b587-a75ea135b0a2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dec021ce-b5b4-4dad-877b-191ae4eb9a17"
        },
        "item": {
          "id": "2d94b2b0-bdce-479f-aabd-b3da06c8f395",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "afa2771c-8159-4820-8046-286d8f6b62f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63949160-e844-4a14-ac05-a3c48eab9417",
        "cursor": {
          "ref": "e451a510-96f0-4a7a-a646-aa2dedfc0a1f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "33661ebf-91cc-4c6e-a95e-ea70c562a31e"
        },
        "item": {
          "id": "63949160-e844-4a14-ac05-a3c48eab9417",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "07724e22-2211-403a-a240-a82aa8f2c04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b4bcb2-720b-40a2-bbdf-f3870acbf87e",
        "cursor": {
          "ref": "dd4e4045-f86d-4cc3-974e-430368d291e7",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "70a2b7fd-a911-4c79-8301-1c391136b6f5"
        },
        "item": {
          "id": "26b4bcb2-720b-40a2-bbdf-f3870acbf87e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4b159fa5-22f9-4734-bdb9-4bf06046fda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee55a12-edf6-450d-8445-e17838237960",
        "cursor": {
          "ref": "060a8288-41c8-4eb6-9277-9beb99c3528b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5b1dffbd-b1f1-45f5-9f8b-96c4c8759578"
        },
        "item": {
          "id": "7ee55a12-edf6-450d-8445-e17838237960",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "576aee69-7e11-4efb-9d35-e4e837c1247c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ffc706-25ad-4bd2-9adc-d596d0274cf6",
        "cursor": {
          "ref": "81082538-25e0-4a8a-b076-5c572c37f58a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "115c0c57-e15e-4392-9c2e-42680af7abe1"
        },
        "item": {
          "id": "a9ffc706-25ad-4bd2-9adc-d596d0274cf6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4f95ca2b-c4ec-4326-8b85-db546588308f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90a352c-7ca7-46d0-aa1f-ef03a167fce1",
        "cursor": {
          "ref": "dc0059c7-4539-47c5-80a5-35ec062911ab",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5c7b8b1c-6410-46a3-9d46-fd0fdfd755be"
        },
        "item": {
          "id": "e90a352c-7ca7-46d0-aa1f-ef03a167fce1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7416b780-695a-45ce-b2d3-99b33f1b7c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b54d378-c7b3-411b-bc64-8b4185eda05e",
        "cursor": {
          "ref": "60599ffd-f897-42f7-915e-fb3f5af0f311",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "784057dd-cca1-4d70-8768-d8aa15bc2d30"
        },
        "item": {
          "id": "3b54d378-c7b3-411b-bc64-8b4185eda05e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b850fbb8-0622-48d7-b89a-037555505a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f24b25-5465-4044-889d-5c99b4b09c9c",
        "cursor": {
          "ref": "0aff74a2-ac03-4ff3-b422-b9a2b543ced7",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eb6657ba-87ac-41c1-a390-1aa75a45b911"
        },
        "item": {
          "id": "74f24b25-5465-4044-889d-5c99b4b09c9c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7f4556bd-4eb7-4886-858c-38c81e765d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa79ee9-d6e9-47e7-909f-b56ad7ab33bd",
        "cursor": {
          "ref": "584d3baf-5a78-4f5a-9393-8c191db5ffee",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cb8b4253-b015-48b0-beec-e9b0ed708e2b"
        },
        "item": {
          "id": "bfa79ee9-d6e9-47e7-909f-b56ad7ab33bd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d9d01852-8543-44e5-9e41-a8ab8f8a4152",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 585,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02239e2-5f3d-40d1-9a5c-dc2fdd9543df",
        "cursor": {
          "ref": "60f15ec1-61b6-4740-aa2c-e08d4045bb8f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9ee7b6cd-3106-4f04-a6be-2c11af5d9169"
        },
        "item": {
          "id": "d02239e2-5f3d-40d1-9a5c-dc2fdd9543df",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5ba585e7-ad58-4c88-a26e-62d4c6576cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef3cdfc-9c24-47f0-a99d-40f50bb58fd7",
        "cursor": {
          "ref": "0a3533cd-cd9a-48fe-a90f-9c79da8107bc",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a446b515-c1b5-4f0c-ae15-5610edb7d4eb"
        },
        "item": {
          "id": "6ef3cdfc-9c24-47f0-a99d-40f50bb58fd7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b9bcae1f-a1ca-4d20-a796-7480faeaf564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e310d4c-e2e9-4952-b014-c43547d2b359",
        "cursor": {
          "ref": "7823f1ca-997c-49f9-8db7-02e022f19478",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "755f85f1-bd43-42c7-8c14-e4a7900a8478"
        },
        "item": {
          "id": "5e310d4c-e2e9-4952-b014-c43547d2b359",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d88063fd-2455-42d2-99db-223c9be3ef33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd5b418-ea48-4279-8c75-819e0f7efe29",
        "cursor": {
          "ref": "5ab6929c-f9b0-4cad-8d46-1a39769c37f4",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ff6f07bb-8e88-403e-9ab1-52c7ccc4bf7d"
        },
        "item": {
          "id": "cfd5b418-ea48-4279-8c75-819e0f7efe29",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ab87d0f9-44dc-4710-b301-59ecd0952ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5733147-d332-4ca0-99c9-fa098e816817",
        "cursor": {
          "ref": "de8c33bb-58c5-4885-a843-24d3ddef6e7f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7f644042-9742-4d0d-b86c-e128ee7f6fe2"
        },
        "item": {
          "id": "a5733147-d332-4ca0-99c9-fa098e816817",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b96e2e6c-e6c1-4dcf-bc1d-fc71c5b8368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d1deda-466d-4bb6-a9b7-fd28ba7ae93d",
        "cursor": {
          "ref": "0f1b360f-6eeb-40a9-85ad-3f556b8a010b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "93a3b4dd-0be2-43da-be12-50cf8d8c6a51"
        },
        "item": {
          "id": "88d1deda-466d-4bb6-a9b7-fd28ba7ae93d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "60efa359-a592-44d8-9690-d9962955c15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92638ccf-b6f0-4882-9300-e4669f2c17db",
        "cursor": {
          "ref": "701ae963-5ff4-4275-85b0-c4f8724d90d3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2333ebc8-bcfc-4146-8350-db43ad9f3a5b"
        },
        "item": {
          "id": "92638ccf-b6f0-4882-9300-e4669f2c17db",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "52773da5-a3ad-454c-b9e5-118cf7127494",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 604,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c9cf12-7bd8-44a9-bc79-4d07bced20c6",
        "cursor": {
          "ref": "30d328cd-193a-47cc-9181-a50104d47338",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c48bfeeb-1dfc-43a1-9f73-b3a7d11df827"
        },
        "item": {
          "id": "b5c9cf12-7bd8-44a9-bc79-4d07bced20c6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fa87d5f1-ab72-4e38-ba93-16c3fbaf2f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6d7ac0-b024-42b6-bd71-ff963abc01b8",
        "cursor": {
          "ref": "a16fc55b-dc0f-4a41-845e-0354da8ddd3f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f2854279-98c8-4ca0-b3f7-f321d39ca6ed"
        },
        "item": {
          "id": "4b6d7ac0-b024-42b6-bd71-ff963abc01b8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c54c8b45-877d-4a53-9e62-938cdcd5b848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da846af-f1f9-4659-ae5a-0d4a71856d01",
        "cursor": {
          "ref": "1aec6b67-2c03-4dd9-a57b-4b99460aab49",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "23702932-5f9d-43d3-af9f-e3bdcecb9f96"
        },
        "item": {
          "id": "0da846af-f1f9-4659-ae5a-0d4a71856d01",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b8457588-2c26-4f04-8df3-655c64731209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fe9b17-b457-4af1-9a1b-cc8c87db885c",
        "cursor": {
          "ref": "1cdfe0ad-9dfa-4661-8e69-4a31f07196a9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e91583a7-d9af-438b-a0b5-a16616c5ca97"
        },
        "item": {
          "id": "67fe9b17-b457-4af1-9a1b-cc8c87db885c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ea95411b-b9bf-46ab-9607-918548ced2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e0e6b1-1113-464e-a755-c0c5fa7f1c79",
        "cursor": {
          "ref": "5f126680-74c2-4382-a756-d82461d20040",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "26ab55b2-aaf4-42df-8cb6-6bf072e49e05"
        },
        "item": {
          "id": "77e0e6b1-1113-464e-a755-c0c5fa7f1c79",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d7befe8e-c5db-402d-b557-a7d6fa3b7d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05147a2b-fafd-4d4b-9c9b-9547b279f7b2",
        "cursor": {
          "ref": "29575fef-2529-4666-9a19-ffd197dfce32",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d0467535-5782-4fe5-a75b-5322f0bc3906"
        },
        "item": {
          "id": "05147a2b-fafd-4d4b-9c9b-9547b279f7b2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "49666ce4-1703-4a9d-9f64-5c892b17480f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186865fd-0019-4bf4-a888-5ebd5471a9a9",
        "cursor": {
          "ref": "af175ae8-3f6f-4e2f-a306-72df223c4c22",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "53478822-dfdd-41df-be34-96425964072c"
        },
        "item": {
          "id": "186865fd-0019-4bf4-a888-5ebd5471a9a9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "83899f6a-9e1c-41dc-b715-9789865b4eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70919b89-e88c-47af-b985-3a8561eb38a2",
        "cursor": {
          "ref": "8bce97d7-75ba-46bd-8541-fb6760036385",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6cff9257-653c-4fb1-9368-a2292755685f"
        },
        "item": {
          "id": "70919b89-e88c-47af-b985-3a8561eb38a2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ab982727-7bac-4e45-8c80-ad6ac8d93959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db9e12e-a081-4cff-94e7-1f3b51247b59",
        "cursor": {
          "ref": "fdb69737-5cdd-46f3-b5b8-7ebe3a9f5e40",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ffab33bd-883b-4b71-969e-192768b0f222"
        },
        "item": {
          "id": "8db9e12e-a081-4cff-94e7-1f3b51247b59",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "98a08c42-4820-4f2b-af26-63b33060797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b23163-a29f-4e9a-8627-64fe52014fcd",
        "cursor": {
          "ref": "f3b4e676-84a8-4056-b9f8-3afada1ab667",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dfcf10d4-dcd5-4b7e-ae52-da6a0dc6b05e"
        },
        "item": {
          "id": "e2b23163-a29f-4e9a-8627-64fe52014fcd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "296965c0-ec95-40b2-8483-1c0b294686c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c491c700-d575-4c29-8d28-b1fb93ea74d8",
        "cursor": {
          "ref": "405bbc9a-9dbd-4793-995a-84e863addb7f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5431f411-c89c-444b-a94d-e7a9fbe69954"
        },
        "item": {
          "id": "c491c700-d575-4c29-8d28-b1fb93ea74d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0fb67419-2613-470d-8c8a-11ae0e14a2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0f7529-1ad8-4566-8762-c33b67761233",
        "cursor": {
          "ref": "e18703c0-ae77-4d30-828b-c70860d25bf2",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "86c2e1b6-6043-4277-b741-0cbd64c7236a"
        },
        "item": {
          "id": "ff0f7529-1ad8-4566-8762-c33b67761233",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7e92a6fc-1b88-47a2-a39d-f8bde9138907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9f0bd4-e382-4b95-b758-5b22f7ffc494",
        "cursor": {
          "ref": "023ca3cd-9d05-4dab-8eff-90cf373a12df",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7323b286-b8cf-4243-bd4d-15f7026e74e6"
        },
        "item": {
          "id": "9a9f0bd4-e382-4b95-b758-5b22f7ffc494",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0803ad08-da67-4f0d-a137-2e5b620f03a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8531ad00-2c95-4a84-ab1a-a98292d75184",
        "cursor": {
          "ref": "15b5e795-5d62-40fd-aeab-56a108939d3c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6028e61c-d980-4a0a-873f-08e3f69d1162"
        },
        "item": {
          "id": "8531ad00-2c95-4a84-ab1a-a98292d75184",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b488f69d-34f7-4f6f-830b-b487811a67cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d860c80-cca7-487b-882f-5199ec365bf0",
        "cursor": {
          "ref": "66cd886c-e6f2-47b7-b1f3-cfa1309c9e09",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c17af8b4-d5eb-4da7-898e-5279c8c32008"
        },
        "item": {
          "id": "4d860c80-cca7-487b-882f-5199ec365bf0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "494cc5ff-129e-4e85-8809-362d43843e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30bfcef-a128-4708-a662-639f10e6dee0",
        "cursor": {
          "ref": "aa8cab55-2d80-4ac7-9412-6a3e107e40d3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "52ddedbc-3fcf-400a-ad65-c70af7747b87"
        },
        "item": {
          "id": "f30bfcef-a128-4708-a662-639f10e6dee0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6c78f8d3-044b-4fc6-8ee5-4c951f452733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd48813-bf2f-46d0-b931-d4df3b703522",
        "cursor": {
          "ref": "d02da4d4-89ba-42e6-858c-10cf683822ca",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "48e0fca7-13fc-438d-9eca-f8618d6482e4"
        },
        "item": {
          "id": "dfd48813-bf2f-46d0-b931-d4df3b703522",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f294dc63-5596-4119-aa36-340d3bf72320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f97044e-9f9e-4e11-865f-f2d07776f7e6",
        "cursor": {
          "ref": "00da03d3-8bef-48fa-9a1b-d5f3c5e45e60",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "41dc5b9b-bdd3-4b00-a4eb-6b1b67a1683f"
        },
        "item": {
          "id": "1f97044e-9f9e-4e11-865f-f2d07776f7e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8c3fa253-cecf-4a4e-9f06-d5e75db9c21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17a6a99-c70b-4dc2-88e8-922201311ac1",
        "cursor": {
          "ref": "e04a4e05-0326-41f4-9b8e-2b73138cba8c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c7ce9670-e9d0-4b4c-a0fb-d3e9c4572f3d"
        },
        "item": {
          "id": "c17a6a99-c70b-4dc2-88e8-922201311ac1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cf91ea75-d84d-4540-a4ce-b62a560ed971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac5ed0a-d55c-4232-81ef-b55e3edb036e",
        "cursor": {
          "ref": "92079332-d8cd-47e1-8854-19a55f08749a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2671f0b2-6a82-4106-9186-4be42e8e3e9f"
        },
        "item": {
          "id": "bac5ed0a-d55c-4232-81ef-b55e3edb036e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "690e8d69-7820-4503-bcc8-0d67f95cf0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b12c358-095e-4457-9b00-c3b4e7f56d76",
        "cursor": {
          "ref": "f4d6d9a5-7eb8-4f9a-9128-5b5a6257e461",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "343974f2-f201-4481-99ee-85bba59e3f8c"
        },
        "item": {
          "id": "4b12c358-095e-4457-9b00-c3b4e7f56d76",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1a1e122a-3476-461e-b0ec-b885f5259131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd016b86-9958-42c9-8e0b-69bc5d72da39",
        "cursor": {
          "ref": "3e1202b0-1987-4a73-a7ab-5bf8cc06cf40",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3a91ab3c-bd45-411c-8da5-460c86e89535"
        },
        "item": {
          "id": "fd016b86-9958-42c9-8e0b-69bc5d72da39",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e319ff22-9779-485d-a3e1-292954ae1183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db65f2b2-e26b-4843-8952-bb55b810ad94",
        "cursor": {
          "ref": "5b88ffc1-f3db-4eac-a64f-7f31bd13ece5",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8d1f5303-6d26-4320-9e3b-7a27e510a913"
        },
        "item": {
          "id": "db65f2b2-e26b-4843-8952-bb55b810ad94",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "783ce41d-5a79-42dc-84cd-a6d5ed8510a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a14baf-61dc-43ad-83fe-197516062a3c",
        "cursor": {
          "ref": "5f59c811-751f-4a78-8a3c-b88e158646fc",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fb588ca4-b066-4e72-af57-d7c27e1a18a6"
        },
        "item": {
          "id": "b2a14baf-61dc-43ad-83fe-197516062a3c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "318a2b75-a757-4139-b4fb-d7d0e44c6c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc78554-3c37-45cd-a3d6-25f7491334c4",
        "cursor": {
          "ref": "e7ed0872-e640-48d1-bfc6-12dd281d565b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8f3da250-9be4-489c-a874-dabfa835a28a"
        },
        "item": {
          "id": "2bc78554-3c37-45cd-a3d6-25f7491334c4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ea499c60-9b72-458c-87a0-83de1a85d1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c034ba0-909f-4dd6-9ef9-1eb9c6964e79",
        "cursor": {
          "ref": "0ad06f8e-1559-42ef-a67e-73c853dcc309",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fbedd2cd-f958-47ae-bbb8-af5022e362b9"
        },
        "item": {
          "id": "0c034ba0-909f-4dd6-9ef9-1eb9c6964e79",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c1158515-4fb2-42f3-b393-30f0d9df9903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b21e2c4-c8a6-4371-b36f-7d6e386c89ac",
        "cursor": {
          "ref": "8fa0f7b4-00a5-4696-9556-403def11cca3",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "27a0265e-cb2e-416a-b760-4f07c79d9d5a"
        },
        "item": {
          "id": "8b21e2c4-c8a6-4371-b36f-7d6e386c89ac",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6fda411e-b5a1-4f08-b3c6-8aa6f7917b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a661c7e8-3168-4f22-9aad-a2205a188055",
        "cursor": {
          "ref": "f05ca457-17de-4101-8297-8464d2a3a6bf",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9329b15e-70a9-49d0-ad0e-8e7707f3a294"
        },
        "item": {
          "id": "a661c7e8-3168-4f22-9aad-a2205a188055",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "736297a6-d9d4-4aab-901a-49881bdec023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3828928-f69e-4abc-807a-b1057ba7863b",
        "cursor": {
          "ref": "1ac6e3b6-acf8-41c9-9e25-2761bd6639c1",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "15e178d9-6cf3-4c3c-baea-790848eee704"
        },
        "item": {
          "id": "d3828928-f69e-4abc-807a-b1057ba7863b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3a0a4c41-09d3-445e-acb3-55fb13202cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad916f5b-23b1-459c-b1f9-db0b5af850d4",
        "cursor": {
          "ref": "8769e824-8fd5-4d65-88a5-f22b96251296",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8e0d5130-35a6-4fbb-aa10-199143babcf1"
        },
        "item": {
          "id": "ad916f5b-23b1-459c-b1f9-db0b5af850d4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1c2d5c24-8a01-4971-8c82-8b45bdeb7913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d102a0af-e85f-4f16-9ed7-9bda39b07333",
        "cursor": {
          "ref": "68ba2e67-9a99-4d5c-9f95-cee1d49a8cfb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9178b2d1-f1f4-4c87-8728-92b7f5b700be"
        },
        "item": {
          "id": "d102a0af-e85f-4f16-9ed7-9bda39b07333",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "908f642c-ec67-48e4-8561-b50f1ffb0df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e39a1ae-a3c1-45f7-907d-c43cdfee8185",
        "cursor": {
          "ref": "6a692caf-c16c-4104-8baa-a4fca9c1d293",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "68384193-1b6b-43be-a0ef-de3f47bf987e"
        },
        "item": {
          "id": "7e39a1ae-a3c1-45f7-907d-c43cdfee8185",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3a1ac3b3-9747-4798-b18c-3cac787e7403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e2c7db-55c2-4ed0-a25e-ca1c92b2729e",
        "cursor": {
          "ref": "633c3f1e-753f-446f-a33a-7b26d18f244b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fab60928-781e-44ca-86b9-432a3ebad1fa"
        },
        "item": {
          "id": "04e2c7db-55c2-4ed0-a25e-ca1c92b2729e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "48443a0d-643a-456c-9a56-9e126574bf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267d09e7-181c-4d04-9b60-956769a328ec",
        "cursor": {
          "ref": "bd2f4c5e-160f-4deb-b027-e4db9286baef",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9097b43a-2410-4675-aae7-371e88fadaca"
        },
        "item": {
          "id": "267d09e7-181c-4d04-9b60-956769a328ec",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "835065a1-654a-4911-9cd9-ed98ef92ddbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77a709f-3e9e-4f0d-b244-3308059c5a94",
        "cursor": {
          "ref": "11c22e76-4cca-42e4-b0ba-4fe59a8fdcdf",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "43ed56ac-9fc4-4732-aada-8c3715355096"
        },
        "item": {
          "id": "a77a709f-3e9e-4f0d-b244-3308059c5a94",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f1f601d7-aa37-40e3-8e7e-4e1ead566611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1188155a-6808-4546-b661-4c7b5af45947",
        "cursor": {
          "ref": "bebc30a6-17d7-4ed7-90b7-a62f06f7dad0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6449536c-3754-4dce-b1bd-17b5a151cb73"
        },
        "item": {
          "id": "1188155a-6808-4546-b661-4c7b5af45947",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5c3ffbbd-6686-413f-950c-a617b8f1821a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdb0dc5-c695-4877-bb7c-9f766f71aaee",
        "cursor": {
          "ref": "4de0b1bf-a14a-4171-842f-c36dd0af91da",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1dc0ae90-84b5-41eb-bf50-5273ee2aa356"
        },
        "item": {
          "id": "afdb0dc5-c695-4877-bb7c-9f766f71aaee",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c6c60cc5-3bac-4d15-8f64-2a418ed218e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a5d553-8cb5-4556-8bdd-cc484fb5151d",
        "cursor": {
          "ref": "fb29d438-f8fc-4cf5-b12d-7606b34ecd5b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f05d0ce9-0d4b-49d4-8b66-e180b6032ea2"
        },
        "item": {
          "id": "93a5d553-8cb5-4556-8bdd-cc484fb5151d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f5cb5f2e-5600-43b3-bcab-2196927b5fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3e6063-525a-496a-ac20-af8e204f96d0",
        "cursor": {
          "ref": "6a312593-aa93-4d3c-959d-ce54108e53e6",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6646a287-611d-4141-84da-cb42054b2499"
        },
        "item": {
          "id": "bc3e6063-525a-496a-ac20-af8e204f96d0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d3c31df8-5d5d-4172-a222-6811134d1913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391e3a32-bd17-4a5e-8d78-31c526078e50",
        "cursor": {
          "ref": "80e713e8-4b89-4326-9e0b-9b4388490eb2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7d637eeb-f6ee-44ad-8396-2e551d9c6f19"
        },
        "item": {
          "id": "391e3a32-bd17-4a5e-8d78-31c526078e50",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f2eddd7d-f69e-49a2-9169-7d47e36268d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161bb3ce-164a-4826-a620-8fe5790869a7",
        "cursor": {
          "ref": "3c67abed-3576-4fb3-aa89-fef5d0940c92",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e66896a1-7ed5-417a-b83c-686146191d52"
        },
        "item": {
          "id": "161bb3ce-164a-4826-a620-8fe5790869a7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7a089c4a-6ee6-4c18-9854-8d3e0b80cd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bac5d7-4c1b-43ed-9d4b-b074ac0e4fe7",
        "cursor": {
          "ref": "37c718cd-19c5-4215-94be-10a768b92e95",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6fcdb99a-ccb5-43ec-9094-3a00a5c72750"
        },
        "item": {
          "id": "90bac5d7-4c1b-43ed-9d4b-b074ac0e4fe7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c578980c-ea3c-4e35-84f9-62966767c38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd782cc1-f2c8-4640-be5f-646b30fd8736",
        "cursor": {
          "ref": "58c1fa7a-eb02-44fe-899d-ce41ed1f4cc1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d9ffdce2-d221-4488-8a7d-85432a80be41"
        },
        "item": {
          "id": "bd782cc1-f2c8-4640-be5f-646b30fd8736",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b5f1b102-c1b1-441e-895c-41f5644bd679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51df7d67-5ad6-4eb1-a19d-5e66959b82d6",
        "cursor": {
          "ref": "8890f086-913a-4eff-975a-272557b3bdb9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "708fa0fa-e966-4eb1-8e8b-c19ad7242f48"
        },
        "item": {
          "id": "51df7d67-5ad6-4eb1-a19d-5e66959b82d6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "acff4028-a3ec-42ab-ad81-e8020ebf7e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a813db-b57c-4f7d-81f3-94c22eb066f5",
        "cursor": {
          "ref": "0e6d1b35-038d-4da9-a3bd-e87cdd3c7e7a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9988900f-6404-4832-b5ff-ccf93b085766"
        },
        "item": {
          "id": "07a813db-b57c-4f7d-81f3-94c22eb066f5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "49aaf621-1f6d-401a-a4c9-ae9c895696d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb42f9d-7411-4060-b67f-14fecc73be42",
        "cursor": {
          "ref": "2f6940ea-4504-4ccd-b7e1-027457eaa489",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "399d5f8d-3c6d-417b-a91e-4c198ddd71f0"
        },
        "item": {
          "id": "2eb42f9d-7411-4060-b67f-14fecc73be42",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d196326-b537-4e90-840b-f209bc08c675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c270989b-97d3-443a-85fc-83944134feeb",
        "cursor": {
          "ref": "36b3ec25-d5dd-40ad-b3b5-2aadf62aa277",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4c7b1fc3-6b01-4abe-8e25-b8f89f4b7ac5"
        },
        "item": {
          "id": "c270989b-97d3-443a-85fc-83944134feeb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1633cd6a-be3c-4a88-a779-b7635ea02116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c296bfd-dac3-4f6f-96b8-c17cd88d31b4",
        "cursor": {
          "ref": "28a51e57-5c6e-4426-af02-815c8bd9762a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "477536ff-a41d-42a9-8049-5ea00956caf7"
        },
        "item": {
          "id": "7c296bfd-dac3-4f6f-96b8-c17cd88d31b4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "16afc8b7-0c54-495c-8328-a911734d3731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae980cae-28d3-4ac1-8a2d-3505b1ae6586",
        "cursor": {
          "ref": "3c4e6bb4-0180-4a04-8e1c-b95e3da90bc0",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fede57cf-5f69-42cb-940c-69e33b12bab6"
        },
        "item": {
          "id": "ae980cae-28d3-4ac1-8a2d-3505b1ae6586",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "80ad794e-6d2f-44e7-9d6f-1f48a4daadd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba641a68-f086-466b-82f6-c09688b2caf5",
        "cursor": {
          "ref": "53f4ecb9-3d13-443b-a18f-b38893fd70a3",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f7df7338-8fc6-4db1-bf20-45867208f1d7"
        },
        "item": {
          "id": "ba641a68-f086-466b-82f6-c09688b2caf5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "76db1ac4-e93f-4425-b11d-b488983bdd68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c01228-d458-43e4-989c-b43a2d931ed1",
        "cursor": {
          "ref": "00ef21fe-2e35-4d98-9dd2-67b8931bc6ee",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a00167d1-47de-4dc9-92db-eca99acb5100"
        },
        "item": {
          "id": "52c01228-d458-43e4-989c-b43a2d931ed1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "008f9f0a-8ba6-4b04-931b-110c9a7c45f4",
          "status": "Created",
          "code": 201,
          "responseTime": 7056,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6fba1a-15de-4fa5-8a1a-c2b0d3271700",
        "cursor": {
          "ref": "480ba90e-b776-473b-bbb6-54fab4ec29b6",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "709801f7-1652-4830-a5ab-9bf003fccaae"
        },
        "item": {
          "id": "cc6fba1a-15de-4fa5-8a1a-c2b0d3271700",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b45597b5-6c22-4cee-b840-27561029409b",
          "status": "Created",
          "code": 201,
          "responseTime": 7158,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b80b61-5b24-458d-87c1-31f0cc263a2b",
        "cursor": {
          "ref": "9253c0a2-085f-4934-93f6-6c935c98feda",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "050de335-30f6-4cef-88c2-bbe9ab9f7284"
        },
        "item": {
          "id": "f4b80b61-5b24-458d-87c1-31f0cc263a2b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "361e8335-c2f8-4a89-9a17-f06ff857c9cf",
          "status": "Created",
          "code": 201,
          "responseTime": 6368,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d739f7-06ae-4e5c-803c-dfcacc41c089",
        "cursor": {
          "ref": "c70bfea7-9118-40b0-9a4c-6d9438d7c921",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5c69dd42-f277-4a9b-9948-8137a8b7d3cf"
        },
        "item": {
          "id": "35d739f7-06ae-4e5c-803c-dfcacc41c089",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "da647b91-d0bd-4605-a050-8527ecf98758",
          "status": "Created",
          "code": 201,
          "responseTime": 6507,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c8fc1b-0bc0-4c09-97c2-c984b6ed3d30",
        "cursor": {
          "ref": "350a07a5-d811-47db-92d9-5e6b1d3ce858",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "979d5773-aca3-4604-9679-d05bbe9cd018"
        },
        "item": {
          "id": "b4c8fc1b-0bc0-4c09-97c2-c984b6ed3d30",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cb3ae3c0-8fad-4a68-930f-f770add745b7",
          "status": "Created",
          "code": 201,
          "responseTime": 6142,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57d0632-05f3-47bf-9863-97b3731f31d0",
        "cursor": {
          "ref": "3b4c60aa-1eef-4702-a836-7ad5e9860000",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5ab00025-e1a2-4059-ada8-753ea642ea92"
        },
        "item": {
          "id": "b57d0632-05f3-47bf-9863-97b3731f31d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "52955af3-15d5-433c-8bd7-c66cb4eb2739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "03a8b6a6-e57c-478c-99f5-6ade7459bf56",
        "cursor": {
          "ref": "a6d83166-bedf-4153-beab-0d33056d783b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fd7793e2-c23f-4407-b48d-d854374aafe0"
        },
        "item": {
          "id": "03a8b6a6-e57c-478c-99f5-6ade7459bf56",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1fd33332-073d-4974-8cd2-c7aa094e27c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549cb380-ffb0-4c6e-a932-266c6e661051",
        "cursor": {
          "ref": "cb6df7e4-29bf-402d-9bd4-bdfd9ae8f8c7",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "72507518-a2ab-4726-940a-5f4298a1d9c7"
        },
        "item": {
          "id": "549cb380-ffb0-4c6e-a932-266c6e661051",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "26b83daf-e7b3-4fd5-86db-a6f0a345aedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc4d5c8-d942-41c9-b057-548e32fee6b1",
        "cursor": {
          "ref": "268ddf55-55ff-4bdb-9451-07421d11a86c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c0537f7b-1a07-4264-9e66-e362b42ae814"
        },
        "item": {
          "id": "6dc4d5c8-d942-41c9-b057-548e32fee6b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "29367a72-c88b-4a2f-b958-742416b09afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9bb048-f2e9-4a7c-88fd-e234a253cd6e",
        "cursor": {
          "ref": "e0bad0b4-1767-4a49-a882-92fb83757980",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c226344e-2e64-42b9-8c21-67b442aaece0"
        },
        "item": {
          "id": "2b9bb048-f2e9-4a7c-88fd-e234a253cd6e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2e64c0ad-80db-4f70-bab3-fa14aa16f21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8217a41-3b75-435d-b8a9-54115dce00ee",
        "cursor": {
          "ref": "b6b5839b-ff8b-468c-bb2e-aa4cf4bf61d5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b6e3ff1e-c882-4bfd-a37f-0527fddf26d4"
        },
        "item": {
          "id": "c8217a41-3b75-435d-b8a9-54115dce00ee",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e7a59b7b-2800-4bb3-8a88-b09bdde7b4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cbdef2-6098-4991-b48f-230ae9dc3845",
        "cursor": {
          "ref": "90f8e666-ce27-4acb-be82-c9b408cd7e52",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47ec1143-b7c3-4918-a13c-134e8b0590a8"
        },
        "item": {
          "id": "57cbdef2-6098-4991-b48f-230ae9dc3845",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "42b55fe3-9472-40e7-8b99-ea8602f42f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ed9652-34b4-4b53-9968-7bacba419111",
        "cursor": {
          "ref": "691b67de-0565-4568-95ec-f5ee5a133502",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2154ec95-6c15-499d-b874-0ef553c336d9"
        },
        "item": {
          "id": "a9ed9652-34b4-4b53-9968-7bacba419111",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "333b9810-85b6-48f0-8686-e6c7f3d95542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4a898e-3979-43fd-83fa-093a5001f431",
        "cursor": {
          "ref": "00c4dbf4-ec1d-4141-871c-506a233c0398",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e1296d05-c1fb-4241-bb76-126dc67ef61c"
        },
        "item": {
          "id": "be4a898e-3979-43fd-83fa-093a5001f431",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "625c9b31-cebd-44f2-a8eb-af72f4c60942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b787871-8b79-4b7b-a380-31de3f2ea7a4",
        "cursor": {
          "ref": "74207c00-5789-45a8-a639-855ebb3581c1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cebde911-bf12-449b-b819-9b445977ff5b"
        },
        "item": {
          "id": "0b787871-8b79-4b7b-a380-31de3f2ea7a4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e3d8b533-3836-44e2-bfa0-9b4f856baa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d3e3d0-5f46-45e0-936f-0d53e2fbbf5c",
        "cursor": {
          "ref": "c52826e8-430e-4dbf-9379-b13b05a32db2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0f0c4df9-202d-4cd4-8dcf-9537a1de2f07"
        },
        "item": {
          "id": "13d3e3d0-5f46-45e0-936f-0d53e2fbbf5c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6b75257a-516b-4fdb-a22a-33820d74fe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ca9835-61f8-452b-a9fb-8c287f9a5492",
        "cursor": {
          "ref": "34039782-6134-4919-869e-203be44c540b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3a76e612-24c9-40e8-8445-f11926674c1b"
        },
        "item": {
          "id": "05ca9835-61f8-452b-a9fb-8c287f9a5492",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a02fab53-bf53-4fca-82e3-39c66b0e8ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002391fb-ddbc-478f-b1ed-507d81e758a1",
        "cursor": {
          "ref": "4d766e48-a1dd-420a-a679-d32dbead829b",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8c8e4e26-fab3-4810-a3d1-9ee328b42ae5"
        },
        "item": {
          "id": "002391fb-ddbc-478f-b1ed-507d81e758a1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4ffa8d3d-7a3d-492e-8f4f-4c602366edb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a8fa60-2410-46d9-8add-1fed5b282e57",
        "cursor": {
          "ref": "4de14a66-3d1e-4577-a2af-336d494841ad",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "96bf9be2-73c5-4b84-8794-b058648a887c"
        },
        "item": {
          "id": "65a8fa60-2410-46d9-8add-1fed5b282e57",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2e5ab0e7-148b-40cf-bffe-73f146462acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c2d6bf-a670-4c9a-9230-e5624cb3ef4b",
        "cursor": {
          "ref": "3314f54b-ee69-4b40-a61f-216f9b430b95",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "503752bb-512a-4942-b8b2-59e3e8f7a70d"
        },
        "item": {
          "id": "98c2d6bf-a670-4c9a-9230-e5624cb3ef4b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "49b91551-0e8f-47c2-a8df-7227ec54c4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf3c6f2-0a8d-44eb-bd4b-1309dbfbd143",
        "cursor": {
          "ref": "5c8bb093-8539-4dc6-9d44-a65cf2b6ebeb",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9e9bf3f1-5b83-42fa-bb58-d790d529e0e8"
        },
        "item": {
          "id": "6bf3c6f2-0a8d-44eb-bd4b-1309dbfbd143",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "57f47b4f-ac1e-44d3-8971-0622858ec7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddb23bd-8e18-4617-9e59-aabae5c9ee3b",
        "cursor": {
          "ref": "eedc6466-596f-4d7c-a4cd-5e0c851387ba",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "275b1c2a-351f-4b5f-83f6-c8d0272d6663"
        },
        "item": {
          "id": "2ddb23bd-8e18-4617-9e59-aabae5c9ee3b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "19aceaa9-750e-451c-a08d-0f95e7c1a23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0d8325-ddc1-4da7-afc7-1b352ef3ba7c",
        "cursor": {
          "ref": "0e4b9f56-ad30-4801-8ea3-0730ca2c0584",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "38d6cd51-a2b9-4fb6-a38b-5c01a5fe41b0"
        },
        "item": {
          "id": "6d0d8325-ddc1-4da7-afc7-1b352ef3ba7c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c61a9002-7d90-4b36-b8d3-b8a264ebbb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec7a1af-6d8f-4a7b-bd7b-3e899ab700e5",
        "cursor": {
          "ref": "2c2ecf42-547a-486e-8d95-e1794fd5ea5e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8faf10c9-51f5-4780-b2e0-eecd9087c185"
        },
        "item": {
          "id": "8ec7a1af-6d8f-4a7b-bd7b-3e899ab700e5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc33f828-4152-4f50-8aa3-567a10ece269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508fbc40-2b89-4279-a5e8-b027e8417cfd",
        "cursor": {
          "ref": "57919309-7740-4d73-9829-e7a88512dbff",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a6a24d36-cc7f-47a7-b687-ed838a0dcb81"
        },
        "item": {
          "id": "508fbc40-2b89-4279-a5e8-b027e8417cfd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6f492dfb-5763-4a66-9c63-5b98bc0dcd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22c7b9d-50be-4c8e-9b7e-52f4df5a0d48",
        "cursor": {
          "ref": "9342456f-90c1-41bf-9126-ccd823ed8db1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c9356cac-6835-493c-a320-4507ad960c5e"
        },
        "item": {
          "id": "d22c7b9d-50be-4c8e-9b7e-52f4df5a0d48",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0960309b-806f-48ca-8f9c-d7c472b0e5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5812d0d3-15e7-4660-a53c-39148d3c4eca",
        "cursor": {
          "ref": "949ddeb9-2ae0-4cb8-b7de-3aadb93fbf1f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "779fefee-69f0-45cc-9cc1-2c560770986f"
        },
        "item": {
          "id": "5812d0d3-15e7-4660-a53c-39148d3c4eca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "79cfb93e-4b53-48cd-9b93-b517d2f4063d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6001cc49-b99b-4795-bf1e-096e5ab60a50",
        "cursor": {
          "ref": "db37488d-d676-4756-9871-2273510c72d5",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a27e290-0357-4938-8582-327e273f0581"
        },
        "item": {
          "id": "6001cc49-b99b-4795-bf1e-096e5ab60a50",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "172bbbde-f9ed-4d0a-9cb8-d45cc5460946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e08df1-4b94-4e8a-a27a-eca9204aff13",
        "cursor": {
          "ref": "89458808-4f41-4ccc-b714-8f5f394ef64f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c9ae6576-6dbb-4ef5-839d-467823072d04"
        },
        "item": {
          "id": "64e08df1-4b94-4e8a-a27a-eca9204aff13",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2dd9ee63-c2a1-4c68-9cb4-36575a6b6ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71589bf7-07c7-45eb-9407-8a2794616bfb",
        "cursor": {
          "ref": "28d2bfd9-dc50-48a4-b840-79482e981c13",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b8114bff-1fe5-4dea-a621-d90e7062f247"
        },
        "item": {
          "id": "71589bf7-07c7-45eb-9407-8a2794616bfb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "272f00e2-7447-43ee-bdca-04e3636ad0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6b264f-8650-411e-9101-fb39f969f756",
        "cursor": {
          "ref": "c32eb472-8cd4-4731-b079-379618736500",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fca3bdb4-d2fe-4fc4-aaf3-c59ae9a1ce50"
        },
        "item": {
          "id": "8e6b264f-8650-411e-9101-fb39f969f756",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d0487bc2-1835-4020-9a48-8be3c274136b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194aeb33-ca8f-4718-875d-96d96c2bb9c8",
        "cursor": {
          "ref": "e3f830d1-7125-4e3d-acdf-128c442c529c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "67cc6fff-4151-43fd-99e8-8c6a5fb5d658"
        },
        "item": {
          "id": "194aeb33-ca8f-4718-875d-96d96c2bb9c8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "905aad3c-eb39-4080-87e2-4a337db098e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36c23ed-bafb-4d86-b7c7-cf480b15684d",
        "cursor": {
          "ref": "1ee803ac-c626-4155-a24e-c1e0c6da5369",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "df3088ad-71c2-438a-84ac-c3787e9b14ed"
        },
        "item": {
          "id": "a36c23ed-bafb-4d86-b7c7-cf480b15684d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9c2f30d9-5979-44d1-80fe-5d58712a1d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586bb2a-2b6c-459c-be44-ec7320f06b99",
        "cursor": {
          "ref": "b21985c3-90f4-41ae-ae0a-69fde0eba899",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "07f50153-9657-4b57-9e8a-4be7acb0082c"
        },
        "item": {
          "id": "a586bb2a-2b6c-459c-be44-ec7320f06b99",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f7fcfe9f-3c70-49ca-9393-7e07eb26df40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115e452a-1ba3-4b94-8699-799ff1534ba4",
        "cursor": {
          "ref": "47e37161-7854-44b1-b5d3-781339d3d2e7",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "326fe352-7f31-4d0d-8a1a-c0c70dd09f16"
        },
        "item": {
          "id": "115e452a-1ba3-4b94-8699-799ff1534ba4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ced7052a-52c8-4d80-9eb1-2ef12fe2a76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732bb2ec-7ff8-4e37-8799-2a13e7d4cf47",
        "cursor": {
          "ref": "7c3b0ac5-d573-46b3-8468-a52e03ad0c0a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f6a3c739-2ba1-4d27-bf54-dced93dec947"
        },
        "item": {
          "id": "732bb2ec-7ff8-4e37-8799-2a13e7d4cf47",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2a04b01-8450-40a3-b1e5-136f15ba267f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30009e8c-2f37-42a7-9bd0-f3e0834029e6",
        "cursor": {
          "ref": "24a36ba6-6b1b-4a5c-bc19-79143dd9eccf",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3a7dcd23-9cb3-4718-bc70-32056da60568"
        },
        "item": {
          "id": "30009e8c-2f37-42a7-9bd0-f3e0834029e6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "880b28b2-02d2-48b2-a4bc-389296871934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ba3779-717f-4ffe-82f6-cd741d999134",
        "cursor": {
          "ref": "7803707a-484d-4349-b319-66f1acb386c5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2ad6130e-ff9e-4885-92a6-2d30cbdf8095"
        },
        "item": {
          "id": "91ba3779-717f-4ffe-82f6-cd741d999134",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "26e888fb-77cc-4088-8c9f-5721b8d65b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcd37fb-74a3-4d8a-ae0a-9d4daa2d9cbd",
        "cursor": {
          "ref": "3550a6be-b450-47dc-80b2-21fe15a8e47f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bcdeabca-5280-4e59-8a5e-028e95d5d61d"
        },
        "item": {
          "id": "bbcd37fb-74a3-4d8a-ae0a-9d4daa2d9cbd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0b0fb887-a34c-4044-995a-305ff9ea366f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd473269-9f67-4c09-99bb-14fed8303e59",
        "cursor": {
          "ref": "a6a8974d-9de0-4100-855a-e6b7b415900d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7316045c-0334-4036-a18f-7fc684ae7269"
        },
        "item": {
          "id": "dd473269-9f67-4c09-99bb-14fed8303e59",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7232cf5-d746-4552-a725-239f25c95bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552d1bf8-08d9-4974-94b0-465ba7f33c36",
        "cursor": {
          "ref": "6151a4f8-79ee-4e68-89c1-f21a098cb4d2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0d782ba0-c8dd-47d5-9bb0-bb53872fe93c"
        },
        "item": {
          "id": "552d1bf8-08d9-4974-94b0-465ba7f33c36",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d01c803-0eb6-4312-ae9f-90f85568cc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d7e01f-e0f7-4d93-80f2-5edfcef9ab56",
        "cursor": {
          "ref": "ba427e00-fe18-4a34-a468-6335fe744e37",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7f5f63ba-a131-4aa5-9d67-fd4b9201b774"
        },
        "item": {
          "id": "59d7e01f-e0f7-4d93-80f2-5edfcef9ab56",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d52bfe22-cb6f-4945-a4ee-0ca6d99e01a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76c3f73-87f1-4fb5-84f8-562c168dae32",
        "cursor": {
          "ref": "38e435ad-dcb2-4f9f-9a09-8f995f2c4356",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3a58829e-a4f0-4c11-8b3e-82758519bc20"
        },
        "item": {
          "id": "f76c3f73-87f1-4fb5-84f8-562c168dae32",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "15f08fe3-11da-425d-9eb0-c94bb764e9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a19108-4bc8-475a-a3de-b50fe91876b5",
        "cursor": {
          "ref": "27369395-edb7-443a-b902-ca6cfc3f0765",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b44103d7-83b1-49cd-9e99-1e71c79d29f8"
        },
        "item": {
          "id": "d3a19108-4bc8-475a-a3de-b50fe91876b5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c8d1547c-b334-458c-a359-df27b913ac7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f85a56a-78e6-4f20-a360-1e3594dd2ac3",
        "cursor": {
          "ref": "17684405-dcd0-4c98-9415-aa32d7719093",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f6543800-57be-4526-b00f-e106ad3fea23"
        },
        "item": {
          "id": "8f85a56a-78e6-4f20-a360-1e3594dd2ac3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e07c7fc9-b193-4c1d-bbda-b5e35d84cea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c88fda8-d653-4da9-bfca-0564739ad66a",
        "cursor": {
          "ref": "1e12272e-8372-4f2d-8aa9-39b73b08ace7",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e28cc737-d765-4bfc-8b98-98e803305cac"
        },
        "item": {
          "id": "0c88fda8-d653-4da9-bfca-0564739ad66a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "106e2c52-85a4-4dac-93c5-0c4dc4930ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9184d4c8-5479-404e-a6f7-d2634eff487a",
        "cursor": {
          "ref": "a9163856-3ecc-485c-82ae-f064d09b275d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "624b0008-b5cd-4bc3-bc12-f850fb0ba9aa"
        },
        "item": {
          "id": "9184d4c8-5479-404e-a6f7-d2634eff487a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "632966a8-43f3-4497-81ef-285cf439ced8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a2565d-d5ff-4061-b992-2f7b33dcce16",
        "cursor": {
          "ref": "8ac5a5ee-e167-49fc-8d6c-5b1f350205f3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bf436c2a-8d09-4716-9bff-684e4ddc45da"
        },
        "item": {
          "id": "d6a2565d-d5ff-4061-b992-2f7b33dcce16",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cc3d3e83-6efa-4d1e-a77c-a1f23caa0174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9adb4a-d800-48fb-92a8-b579c92441dc",
        "cursor": {
          "ref": "f7028d1c-0608-47d8-a1e7-f774d088b57d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34a32524-d460-4e29-97f4-eaf1e215c375"
        },
        "item": {
          "id": "1d9adb4a-d800-48fb-92a8-b579c92441dc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2595d5e7-8608-4e60-9b97-bd0c5e2236ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c54135-c7c6-46b2-8550-4b2000bb10ae",
        "cursor": {
          "ref": "29c72ac7-180d-4826-b7a1-4a380890148f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b82c812d-98bb-4c2b-8fb1-7334ca2b77ab"
        },
        "item": {
          "id": "c9c54135-c7c6-46b2-8550-4b2000bb10ae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2626e7ff-c50d-4ec4-bcf8-70a997b23ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0f2380-6c1f-4b62-b8e7-29ca044bc7c9",
        "cursor": {
          "ref": "688b2941-406c-4d4f-a52e-fbb77c093611",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8ae74944-0d1b-43f8-b213-c5b1242d2af9"
        },
        "item": {
          "id": "1d0f2380-6c1f-4b62-b8e7-29ca044bc7c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "84fd937a-9abf-4713-b33f-23b93e444bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4b2477-70d0-4af3-9445-ef6fbf15d61f",
        "cursor": {
          "ref": "5f56232f-91ae-4be5-93c0-af425a46c819",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7e4e0e14-fb37-41da-b2a2-825a4aeb7089"
        },
        "item": {
          "id": "2d4b2477-70d0-4af3-9445-ef6fbf15d61f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5cc0e7f0-b815-4e7b-9aca-801915a83179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ae2f2f-2adb-4526-b8aa-90129fc8afd4",
        "cursor": {
          "ref": "28cb5d20-dea2-4323-9c19-07ac5e2b01a5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c1f29f5c-57be-42cb-8f02-de038d3f8832"
        },
        "item": {
          "id": "c5ae2f2f-2adb-4526-b8aa-90129fc8afd4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e80340b7-6bcb-4ad4-b754-66d95179d752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3503a9-16fc-4307-bb03-be18cc27e2da",
        "cursor": {
          "ref": "038b4b9c-856e-4462-a775-4a69e8d1aead",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "efca1b34-143e-4056-82cf-77ef7752564b"
        },
        "item": {
          "id": "cc3503a9-16fc-4307-bb03-be18cc27e2da",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "555765be-f349-4ef6-98ef-086d8b30df62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055a0eeb-c7e0-4898-bb17-2aa4b2dc323a",
        "cursor": {
          "ref": "e2a5c151-09d5-4b46-9b3b-1e4c1555d82a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "10f683f2-130d-4070-8ffe-9887e1141cfa"
        },
        "item": {
          "id": "055a0eeb-c7e0-4898-bb17-2aa4b2dc323a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "273f9a6f-1486-4685-a932-ceadae143d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67997579-be7f-41f5-86c4-0528c4ebffd7",
        "cursor": {
          "ref": "2410209e-9d71-42a5-ba65-91d393b405e3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a5dc5939-cd6b-46b2-9158-5db68ac3d254"
        },
        "item": {
          "id": "67997579-be7f-41f5-86c4-0528c4ebffd7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ac946325-1531-4e91-8e29-5995f88397e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e72d3c-9d76-4b7d-96cf-034aa25934f0",
        "cursor": {
          "ref": "1df9a1e6-4c8f-4269-a650-f1146cd6c333",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "05b41a9b-4455-45c8-815b-ccffe5e4a27d"
        },
        "item": {
          "id": "d4e72d3c-9d76-4b7d-96cf-034aa25934f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ad83a4d-256a-4c2a-8bd6-9a6c3d5de90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad4f7ad-5556-450b-ad05-7c88c9286021",
        "cursor": {
          "ref": "208ef6d8-d63c-4314-be2e-4ca5eb353fbe",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "16a742dd-8da8-446b-a6d8-938cf017a90d"
        },
        "item": {
          "id": "1ad4f7ad-5556-450b-ad05-7c88c9286021",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d22ba6c6-856c-496a-aa99-a62f24cb156b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45aa1c8-0bb9-42ca-8ba0-eb1e229f7e5e",
        "cursor": {
          "ref": "6914f26a-6d5f-449e-b9e0-58c0db61f8a9",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "50758c01-b8e9-4f45-b650-c644d518a43c"
        },
        "item": {
          "id": "f45aa1c8-0bb9-42ca-8ba0-eb1e229f7e5e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ed49bce-e323-45cb-a573-f12c235c1215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e66fbc4-0b18-4dfb-873c-eed58586bc22",
        "cursor": {
          "ref": "05e8d55f-80cb-4e67-a751-3604d0b80ead",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2cff1b7c-1cc2-4c10-9494-ff06abb2040d"
        },
        "item": {
          "id": "0e66fbc4-0b18-4dfb-873c-eed58586bc22",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4fe109b3-9353-4709-8de6-004cbbae98b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb2e9b0-ab6f-470b-94eb-c02215256aa8",
        "cursor": {
          "ref": "c04b0269-d7de-4e3d-b98e-ddc8a5ba60c8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f2713b42-6167-4291-9998-4227e96ab596"
        },
        "item": {
          "id": "8fb2e9b0-ab6f-470b-94eb-c02215256aa8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5084447f-858f-40dd-bade-3906dd32fa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2b8389-4b34-4f35-8159-8d4fc39de702",
        "cursor": {
          "ref": "40101df0-da72-4766-ae11-0beca9eeb764",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3b80d3b9-4886-4dc9-8102-bcf076ab8c25"
        },
        "item": {
          "id": "fa2b8389-4b34-4f35-8159-8d4fc39de702",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f8436228-0d01-4b8f-8772-ff2722ce7c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e27bd7b-2112-4ab6-a492-7e749bde7a16",
        "cursor": {
          "ref": "34bea01e-b4de-4eb4-8455-727f6fcdfde8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b6546db4-2f07-42ad-bdc9-9660e06a8f2c"
        },
        "item": {
          "id": "4e27bd7b-2112-4ab6-a492-7e749bde7a16",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6620cc3f-1e34-42d8-940b-618be053a20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05c275d-0e41-44e4-92f9-fa18b48351a9",
        "cursor": {
          "ref": "14018a57-269d-4095-9c1c-544c97dacd58",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c4598ee6-d309-401c-960a-d7ec65da4935"
        },
        "item": {
          "id": "e05c275d-0e41-44e4-92f9-fa18b48351a9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2aede3b2-c5d0-4799-85c6-7bef12604f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7775d2-7ba0-4169-bfac-54666d321e4f",
        "cursor": {
          "ref": "6030eb22-fec4-4e5e-a079-c6b4e721cd4d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "60cc08d2-8d02-40d2-a1f1-a768e1cb8877"
        },
        "item": {
          "id": "1e7775d2-7ba0-4169-bfac-54666d321e4f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5e3ff9fc-a858-44c7-93d7-c8c4dd6ceb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6647f7b8-823c-4f50-b8d1-13d6e60fd983",
        "cursor": {
          "ref": "424be1b1-a867-4293-9d13-5df88aeeee33",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b2bd6a53-d96e-45ae-9662-75a9c08dac68"
        },
        "item": {
          "id": "6647f7b8-823c-4f50-b8d1-13d6e60fd983",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2794bfd3-6891-4bda-8b91-37a8d4d0dca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a357e1-52e5-4db2-a99a-25a9173aa895",
        "cursor": {
          "ref": "8c73d43a-3de0-4e95-b217-13b67817d214",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "21ace658-2e04-4f0b-9b5a-de11cdb77c3d"
        },
        "item": {
          "id": "01a357e1-52e5-4db2-a99a-25a9173aa895",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c8d04453-482d-4a6a-babf-69998806ffaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3dd529-5b0a-4703-99cf-c93715c6e37a",
        "cursor": {
          "ref": "1c64f3fd-cbb8-43ec-ab7a-62b7dbb21783",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "86587a17-59ed-470a-bb9f-0b9296bde7ed"
        },
        "item": {
          "id": "ae3dd529-5b0a-4703-99cf-c93715c6e37a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c23c76a8-ae85-4a54-a954-81878bc74f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847db8d9-95a5-49d8-8c76-9bc6538a0163",
        "cursor": {
          "ref": "8a2d3486-53b1-41c6-8f8f-6fa5e9e3c71f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4abef15c-fc41-473d-8f06-99380aab5df5"
        },
        "item": {
          "id": "847db8d9-95a5-49d8-8c76-9bc6538a0163",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "97e44bea-23fb-43b3-a72e-c6318fe4ba53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c70505-18eb-426c-a848-9b0504d1f838",
        "cursor": {
          "ref": "df9d9bd8-c3ec-41f6-9bfe-184388199dd2",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d2697ede-5e16-4ebb-96ac-d1d9919d6887"
        },
        "item": {
          "id": "01c70505-18eb-426c-a848-9b0504d1f838",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ed37ec1e-3f92-44ac-bd0f-27daf4e1fb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a26e847-77da-411f-b582-21f3965912ea",
        "cursor": {
          "ref": "cda21980-4275-4a99-a384-3fd60104f581",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0d150c58-8917-474a-adf3-6cca7ed217c9"
        },
        "item": {
          "id": "0a26e847-77da-411f-b582-21f3965912ea",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2d47c853-c476-492f-a242-856430566402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fa2d59-840b-4f2d-acaa-968774931a45",
        "cursor": {
          "ref": "7b25f5ae-131a-4ec7-90d8-3abc7ecab6a6",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4a209b0b-df32-4cd6-98f2-5eb6acc5a195"
        },
        "item": {
          "id": "e5fa2d59-840b-4f2d-acaa-968774931a45",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d869ff48-f9ff-409c-b3b7-3604d2b06368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ae8066-399d-48e7-b0cb-e1bffb3d2276",
        "cursor": {
          "ref": "b14ab60a-2fbd-4b21-838f-4a4a1f34f406",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7e2b534a-739a-48fc-b3d1-ed8170c3b0a7"
        },
        "item": {
          "id": "06ae8066-399d-48e7-b0cb-e1bffb3d2276",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b7dd29e3-2ca1-4827-aa42-9a8fe9bf18dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05746f3-be1f-4734-bd23-8761835b9c62",
        "cursor": {
          "ref": "2ee42606-cef5-4790-83f6-9dff0cfa6ef3",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "34569a88-4b15-4d49-8662-f0472c8980f1"
        },
        "item": {
          "id": "b05746f3-be1f-4734-bd23-8761835b9c62",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f58aaa84-6e43-4643-a515-45d83f973bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bb7e8a-43e7-4457-8ad6-a4dcd650c4e0",
        "cursor": {
          "ref": "c06ce7f8-31aa-4f09-aa16-cea1af8e34d1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a20506b9-6c07-460f-996a-ac25c0ea5a22"
        },
        "item": {
          "id": "91bb7e8a-43e7-4457-8ad6-a4dcd650c4e0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e1c3b3f1-9537-48c1-a35c-9d7b9dd4da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23107a32-e187-4e58-94b7-a3977cb1600b",
        "cursor": {
          "ref": "5c7f47e4-9fd7-4f0b-b0fa-fbd0e36cf9db",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8cb6c98a-7b17-4a2e-9010-2c3cf784c51b"
        },
        "item": {
          "id": "23107a32-e187-4e58-94b7-a3977cb1600b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ff1dabd7-0bb8-4819-a66f-19f3e223dac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f74ee3-5dbb-4c66-816f-9f61805a7e38",
        "cursor": {
          "ref": "68ee172d-48c4-46d8-b9a4-9ee3d89bd5e7",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2bad3d40-1b1e-40fc-8e30-ec83140f58f6"
        },
        "item": {
          "id": "76f74ee3-5dbb-4c66-816f-9f61805a7e38",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "115df1fd-9481-4943-bd4d-ec2fa4570025",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d35825-0f2c-49ec-9051-6b460d643f02",
        "cursor": {
          "ref": "32e42813-852b-48b1-a0f1-f9634a2f4103",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2be7d679-f3b3-4f2b-88bd-9f5aa523f0ef"
        },
        "item": {
          "id": "c9d35825-0f2c-49ec-9051-6b460d643f02",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "96a87dfb-45a6-4806-bdea-feba961896ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1724fa5-3874-4a26-bec8-67aff0891955",
        "cursor": {
          "ref": "90df6f02-6484-4317-b968-65f584f15651",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "60cf2dda-f46b-458e-b38b-d56e42c7080f"
        },
        "item": {
          "id": "b1724fa5-3874-4a26-bec8-67aff0891955",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9cbcc9f1-73b2-4c56-8e23-07ba5c4aec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d138ae-454c-455e-a53e-4c4842a1a951",
        "cursor": {
          "ref": "0442da53-0b7a-405b-8d20-bc384aaa1384",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "55524d7b-53e4-4003-948d-5c0e84d9473e"
        },
        "item": {
          "id": "21d138ae-454c-455e-a53e-4c4842a1a951",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "66a3059c-517e-498a-b7c5-930643a9d1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42f4508-e9fd-48d6-9874-9b499dbb04d4",
        "cursor": {
          "ref": "3aeb9b2d-d08e-415b-884d-9f2ce6d428e7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b2bab879-d037-4589-89de-aa99452fa3f2"
        },
        "item": {
          "id": "f42f4508-e9fd-48d6-9874-9b499dbb04d4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ad20acff-2fad-4e17-b140-4eb6a3e34ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f00310a-20c1-4f28-8721-3bdac6fc39d8",
        "cursor": {
          "ref": "d25726cc-9eb0-4f33-a742-a33b990790d8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20bc640a-7b43-4793-91b0-a3daa842402c"
        },
        "item": {
          "id": "9f00310a-20c1-4f28-8721-3bdac6fc39d8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a428bf8a-bfb5-4795-809e-b9469d384c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43f5ea2-b26e-40cb-a837-df032b348246",
        "cursor": {
          "ref": "af9d4763-4746-4528-9561-990cd68b38c0",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "54ad6617-7b58-4839-8a4a-c90b94a8f88a"
        },
        "item": {
          "id": "d43f5ea2-b26e-40cb-a837-df032b348246",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "907e5f67-1be6-4492-b67b-1973d8c0597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6e951a-633c-4e29-8b38-3a3e48aba7fa",
        "cursor": {
          "ref": "41796234-6a39-45d3-8fd1-0dfe9874824c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f0964944-aa5f-473d-a533-a42d3610b478"
        },
        "item": {
          "id": "9f6e951a-633c-4e29-8b38-3a3e48aba7fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5fcebf32-782f-4518-b68c-d463c5b2fe57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b71fb6-5d00-45bd-84a3-58f379624baf",
        "cursor": {
          "ref": "5cbf5175-fb48-453a-80d3-0ddfdf3141a9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a607b5ad-3c6f-4c11-80bb-8cc80445c53d"
        },
        "item": {
          "id": "86b71fb6-5d00-45bd-84a3-58f379624baf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "910f5759-a4a7-43d4-a787-23c948d280cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0feabab-6e9b-4f13-9ed5-a39c1269ca36",
        "cursor": {
          "ref": "84089c85-3c66-45d2-a6ec-a6b2be740d10",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8f262972-f7ad-431d-8b03-b672d5ef80f4"
        },
        "item": {
          "id": "b0feabab-6e9b-4f13-9ed5-a39c1269ca36",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ee7dc364-b220-47df-bb10-38d53cc5905a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8133c56-fb55-486f-ba6d-f426f34e3894",
        "cursor": {
          "ref": "b3b9f769-0767-4090-8e1d-15df77f5c782",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f0cb36c0-6650-4280-b800-ef93bfe75a8b"
        },
        "item": {
          "id": "e8133c56-fb55-486f-ba6d-f426f34e3894",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "60c4adb2-01e5-4b92-a9aa-5a1b6d0693fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d4daf3-4662-424f-925d-4fc32de74dc3",
        "cursor": {
          "ref": "cb41b491-ad59-447e-a92d-f7ab0d271613",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "45f52b5c-7b2a-4bad-84bc-c2b7f1f44097"
        },
        "item": {
          "id": "73d4daf3-4662-424f-925d-4fc32de74dc3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "13c2d522-7547-443b-96cb-1eb5ee7a3d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81552ac2-542c-4b1e-920c-62fb21fd6af3",
        "cursor": {
          "ref": "b70d95ea-1798-4858-8279-eedf94022e44",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fe6a308c-1a55-4ff3-88e2-6ed20328ba2e"
        },
        "item": {
          "id": "81552ac2-542c-4b1e-920c-62fb21fd6af3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b298eeff-ef35-4675-bff6-b3d1832dbfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a8727d-b58f-4754-a069-25e522b2f45d",
        "cursor": {
          "ref": "f6d215a3-760c-413f-b2eb-b5b65a933a49",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "59269894-828e-458e-b022-45b37838b753"
        },
        "item": {
          "id": "e0a8727d-b58f-4754-a069-25e522b2f45d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "510498c9-d696-4db9-8408-7b2ef58e8210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3d752d-9317-47a7-822f-e799e80a7990",
        "cursor": {
          "ref": "8d1d9fac-3c53-425c-a75a-27ef04c82985",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2f88187b-8350-4c7c-8d70-00d51b40374a"
        },
        "item": {
          "id": "8c3d752d-9317-47a7-822f-e799e80a7990",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e8f78f85-0fb2-4702-ae15-d7c52843dbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507ef961-2131-4c45-a13c-0add6cf7b939",
        "cursor": {
          "ref": "f76c6810-7615-43d4-b3cc-2d7b3e0b55bf",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "22d9b5ad-2bd2-4c04-8446-b9ef8a3269bf"
        },
        "item": {
          "id": "507ef961-2131-4c45-a13c-0add6cf7b939",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "313533a7-640f-4367-a77a-7aae5ddb9c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a26dcc8-8087-4edd-a9b8-e470733fc885",
        "cursor": {
          "ref": "4083cd3f-4194-485c-83a2-45939018c0d8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9a3ed67f-f690-4431-a42c-d8de73901faa"
        },
        "item": {
          "id": "9a26dcc8-8087-4edd-a9b8-e470733fc885",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c81d80ba-2753-4335-962a-602e86734f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86b70f1-dcaa-4d51-ab00-b276cc1ad84e",
        "cursor": {
          "ref": "c973f3fc-7062-4932-a00d-b5de1688cf58",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7f571707-bb59-4409-ac22-003641068067"
        },
        "item": {
          "id": "c86b70f1-dcaa-4d51-ab00-b276cc1ad84e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7abc8a93-373a-4ae5-97e4-f87bcaf464fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28216267-3cef-4646-81cf-9353946d2f6e",
        "cursor": {
          "ref": "bcf2b221-af73-4ddb-8f46-0d8a6e270188",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c611c7ca-35b6-4c4b-bae5-ff3827124bdd"
        },
        "item": {
          "id": "28216267-3cef-4646-81cf-9353946d2f6e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "58ecfb58-ef89-4f12-b271-ac83ff47cb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587b9f1e-962e-4865-b0b7-d2d58c55f9f7",
        "cursor": {
          "ref": "e87b5d42-8357-4973-b89c-a7f53ac4d91e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b5b1f77c-0941-4aa4-a339-36a0c7129093"
        },
        "item": {
          "id": "587b9f1e-962e-4865-b0b7-d2d58c55f9f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "42cedc2e-e071-4081-a1d1-29c0274c094f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29035a8c-409a-487c-97b3-836d30d8e422",
        "cursor": {
          "ref": "cffe79a3-2630-4893-8a53-c32f9ad205f8",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e3239bc4-220c-4bd0-b912-a2c4e9a22000"
        },
        "item": {
          "id": "29035a8c-409a-487c-97b3-836d30d8e422",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "826c406f-6b34-448c-a3d2-086b458402cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae530497-520a-4f7e-9f89-6533c3aa12c7",
        "cursor": {
          "ref": "3be36010-c1fb-4ad2-80a5-22c0ce2e6adf",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "78c53841-fe84-4028-981a-0b85fe617e0b"
        },
        "item": {
          "id": "ae530497-520a-4f7e-9f89-6533c3aa12c7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "67733548-976a-4562-b5d1-a49f4c7e8165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52d12c7-112b-421a-adca-c0cf288198cb",
        "cursor": {
          "ref": "0741f0a0-f4b0-4d11-95e1-81e9a9251a75",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2868c59e-3ebe-4ad4-9afe-9099acdd457a"
        },
        "item": {
          "id": "c52d12c7-112b-421a-adca-c0cf288198cb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8c156280-2b07-4044-b683-8f3c1a98399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf965c44-4b48-4098-967a-bcd6e3d39cb1",
        "cursor": {
          "ref": "411bf270-b000-40d3-ad5e-ceee2a1c6067",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b61c6cb1-a066-4ce3-ae2b-fec572a6ec9d"
        },
        "item": {
          "id": "bf965c44-4b48-4098-967a-bcd6e3d39cb1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a13fe515-5abb-4f1a-9eac-f623efdce124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303cb121-2a1d-450b-a652-a3310d0eb0ff",
        "cursor": {
          "ref": "92baffed-acd0-4cb3-8f29-63cee39f38c2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "61c1a321-a7fc-40ac-bbb2-158cf541612d"
        },
        "item": {
          "id": "303cb121-2a1d-450b-a652-a3310d0eb0ff",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "827d497c-4f09-4376-a288-9c31c066a884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b84afba-9d2f-48ea-84b0-5a1ab1404db4",
        "cursor": {
          "ref": "e060802f-796f-4ec6-81e3-9aecde272c55",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "15bdc93e-7a93-4376-ae6f-c30bb0c7c3b1"
        },
        "item": {
          "id": "1b84afba-9d2f-48ea-84b0-5a1ab1404db4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4b94fe37-ceb1-46b5-b0e9-39904e8bbdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb88a651-030a-4778-a284-6ba067fdb6cf",
        "cursor": {
          "ref": "92ec9e32-6325-493f-9d11-97db9f8741bb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1d45590c-dc24-43c8-b617-6f4a28859db7"
        },
        "item": {
          "id": "eb88a651-030a-4778-a284-6ba067fdb6cf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b18655d3-f02c-452b-9929-ae2b79a6d124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149c16a5-0d28-4129-aa58-c29088248a31",
        "cursor": {
          "ref": "4be569ea-29d1-4e97-9c9f-64e73e85f9c5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8e07be2d-00cc-4458-acbe-c523b9f165ec"
        },
        "item": {
          "id": "149c16a5-0d28-4129-aa58-c29088248a31",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e6628baf-82a9-42f3-9ddf-17300ed7c5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4af057-831a-4e60-8bc9-eab14f0c5d02",
        "cursor": {
          "ref": "5db3af2f-8e1d-47fe-b2fe-197c7a538a0f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6e92d754-21a2-4360-bf30-9bf80101ebc0"
        },
        "item": {
          "id": "6b4af057-831a-4e60-8bc9-eab14f0c5d02",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "efd9a76d-20f5-4f32-b07c-cb57e98b136a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7530630-4c23-4fe9-9408-e2169ead8483",
        "cursor": {
          "ref": "5aa59b6d-7360-49e2-b559-671a08d081d5",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e301df55-6a4a-43d7-8cd7-958e9228cdb6"
        },
        "item": {
          "id": "f7530630-4c23-4fe9-9408-e2169ead8483",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e06b5b6f-1d8e-4b85-a2ba-a765f87407e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad57434f-2ce9-46fd-b820-9f8411ee98d3",
        "cursor": {
          "ref": "c09ce4b6-b139-4418-b5b1-7303048e0bf2",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2ca5ae3f-4d99-40a2-868a-c7dd1673610b"
        },
        "item": {
          "id": "ad57434f-2ce9-46fd-b820-9f8411ee98d3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "be14033f-aeb1-4c05-aa0d-3a90ec112e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55637d16-2dc9-4f20-8adf-13d95748dc12",
        "cursor": {
          "ref": "046e7f0f-39c5-40af-8d03-26372f017885",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "af6bb6d5-2692-4bd0-8ab9-0f8b2d0ae54e"
        },
        "item": {
          "id": "55637d16-2dc9-4f20-8adf-13d95748dc12",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5fd9b050-aab9-4a19-a61b-152ecfa61f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c433faef-f71e-4598-bc22-336a0ca5188c",
        "cursor": {
          "ref": "4f072be7-8e36-4f82-8f07-3b9510ab3110",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b0bf76b9-88bb-46c4-8f4f-d3c0c0d350fa"
        },
        "item": {
          "id": "c433faef-f71e-4598-bc22-336a0ca5188c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fcfec612-68dd-42fa-837e-ec5f51da34ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b5d0f-cd60-451f-bc22-9fdc28a3ba6b",
        "cursor": {
          "ref": "40280ccc-8c95-4cf3-b5c9-79c4db5dce7a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "edb94a5b-fb41-4c7c-ac87-d8a3d1d4a358"
        },
        "item": {
          "id": "1b6b5d0f-cd60-451f-bc22-9fdc28a3ba6b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8c165a49-6d1c-4a59-9d77-9a30061f6010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad4dfa9-df49-4a01-ba7c-3893905cc0cb",
        "cursor": {
          "ref": "f7f9a464-35e9-4450-80e5-c13302103dd4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a8722b0d-39eb-4173-8e1c-a837fed6eed0"
        },
        "item": {
          "id": "3ad4dfa9-df49-4a01-ba7c-3893905cc0cb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "12c36b85-385c-40f6-bfc2-60c356ff5226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a3890-f2c0-4bf5-9b16-09ad530059d2",
        "cursor": {
          "ref": "9d16f3b2-42a8-4359-b579-fb9367db1c5c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "32d364c8-b580-4859-9599-2bad8bc1a7bd"
        },
        "item": {
          "id": "fe7a3890-f2c0-4bf5-9b16-09ad530059d2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ca617aab-dd43-49e9-b9c2-9398a5553538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a307ce-6388-4519-ab59-4807055eaa75",
        "cursor": {
          "ref": "322224d7-3040-4492-8600-412d39b14fa6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "005acbd1-ca77-4c01-8b8e-e046090a4cca"
        },
        "item": {
          "id": "92a307ce-6388-4519-ab59-4807055eaa75",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "46edfdf0-c2bb-45be-a926-e4265c8d93cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ede326-ece1-4b2f-8f3b-2a1625a8cd87",
        "cursor": {
          "ref": "7bba9b03-a8df-48a3-8588-398bc50055f3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2770a53c-00e1-4761-868b-92f22c6f40b3"
        },
        "item": {
          "id": "20ede326-ece1-4b2f-8f3b-2a1625a8cd87",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "78d53051-5485-4ae0-a60a-a7e4ea0fd0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea638a58-3be5-42b9-ad29-0e1a5163b85c",
        "cursor": {
          "ref": "5c221cb3-14b5-48e5-86b1-da18375110b9",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "34ccd023-3719-4fa8-b450-355e3f875d5c"
        },
        "item": {
          "id": "ea638a58-3be5-42b9-ad29-0e1a5163b85c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5504e7c1-e2da-410c-8d38-f133f6f1f542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdd68cd-4616-42b2-bcb3-981277e31558",
        "cursor": {
          "ref": "ff79d3f1-0000-42d6-a43e-670f8526623b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "52c8a63f-5db0-4dd1-b172-cb03563bb015"
        },
        "item": {
          "id": "3cdd68cd-4616-42b2-bcb3-981277e31558",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8ece8db2-8cbb-41d5-a1ce-c2a1e2a1f519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52468150-3e7c-4d0c-a408-73adb21f404c",
        "cursor": {
          "ref": "9c89678c-8e91-4f6e-92de-e8a75f740d47",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "55a6edb6-05e9-42d6-a9e4-97af699893ac"
        },
        "item": {
          "id": "52468150-3e7c-4d0c-a408-73adb21f404c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "536bf9e4-7595-4f13-a527-0aae8f871ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7057ba9f-f930-4f0c-bc92-2959f9b5ce17",
        "cursor": {
          "ref": "29f9fe3b-0468-43ca-b160-8ac5fa2a024e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "814e9ace-ca01-4eb2-a55b-cf3a93088f3e"
        },
        "item": {
          "id": "7057ba9f-f930-4f0c-bc92-2959f9b5ce17",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4235218d-54a5-47bc-b813-75be088ba73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811aee71-df82-4ea3-a73d-33bb2554ca09",
        "cursor": {
          "ref": "f606a81b-c38c-4d8b-b718-0be8592576f1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0b958605-828c-439e-aa84-8f50322a602a"
        },
        "item": {
          "id": "811aee71-df82-4ea3-a73d-33bb2554ca09",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e8d5a7d0-a9d8-4d2f-b281-4e33a1606cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cb5e2d-7563-4b9d-8576-63399b14dd9b",
        "cursor": {
          "ref": "962cef00-ffc6-4291-9a21-a1dcf4b60400",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1a984446-e05d-4ffd-8f06-c163630e31f6"
        },
        "item": {
          "id": "d5cb5e2d-7563-4b9d-8576-63399b14dd9b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "64865b5f-ee46-4f96-9a92-cce7cc35710b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d14f1b1-71cd-4536-8d30-cc1219b6d4e9",
        "cursor": {
          "ref": "17245c19-6206-496c-aab0-868df9eafbe3",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "835edc4b-9c5b-4ac2-b47f-8897bfd9beba"
        },
        "item": {
          "id": "6d14f1b1-71cd-4536-8d30-cc1219b6d4e9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "53b69cbe-dfa8-4245-bfea-dcf2fadb4272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9210dbdd-933c-4cfa-bcc0-7d9028453e66",
        "cursor": {
          "ref": "7baadb0c-e196-4169-bbdc-ae7fc47f4302",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "050a843c-2b4a-4c15-9441-ab7b0659edca"
        },
        "item": {
          "id": "9210dbdd-933c-4cfa-bcc0-7d9028453e66",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea25d34e-83d7-4858-a4bc-70ad3df65160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa0423a-1cb9-4eec-95ea-ac33e6ad7117",
        "cursor": {
          "ref": "b0cc8f22-3e67-4a0c-9cad-70c30222819a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c9db07d1-2794-434a-860a-0c61b352fc63"
        },
        "item": {
          "id": "1fa0423a-1cb9-4eec-95ea-ac33e6ad7117",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0e3bbbbb-72b5-4013-9fd5-a5f9dd9e43ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5b7626-51d4-4cdc-a317-97d875f92422",
        "cursor": {
          "ref": "5d101a38-6a7d-4727-8228-04955b8980ea",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e8271de9-3c9b-4869-91ea-7f0ea9e9d722"
        },
        "item": {
          "id": "cf5b7626-51d4-4cdc-a317-97d875f92422",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "27fd43f3-88f9-431a-84ff-dc09dd1464ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b737ac3-d4ee-482f-92d7-e88200cf3912",
        "cursor": {
          "ref": "c0307cf2-0dbb-44c9-a9b5-2740be406f49",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f362ed85-b2d6-4a0b-8d4d-1971c75554e3"
        },
        "item": {
          "id": "5b737ac3-d4ee-482f-92d7-e88200cf3912",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b6ae1b7b-c4d0-43cb-831c-4917c2aa9403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f06de1-9a8a-4135-82b7-ed31cee8d94e",
        "cursor": {
          "ref": "7188ed6c-f7f3-4441-baad-fd48aeb9074c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f5e9596c-91b0-4619-bcda-ad00cf0590db"
        },
        "item": {
          "id": "31f06de1-9a8a-4135-82b7-ed31cee8d94e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e1dd037d-f242-4b8c-95a4-8e5850ba4cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba2558b-82f2-47b6-b4d7-79bce1bacb91",
        "cursor": {
          "ref": "fa4c7fdf-fb46-4ece-8cdb-01d6b61f1129",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fa9b742b-3d7f-430f-8803-4691c4ca0824"
        },
        "item": {
          "id": "4ba2558b-82f2-47b6-b4d7-79bce1bacb91",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "56791d88-78b7-423f-9e09-3033fadaf638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5602aedd-f872-4086-b473-585abf29dd81",
        "cursor": {
          "ref": "5c319407-4e92-4886-8bbe-23bf8f638107",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4a5a771a-d9e9-4018-9505-ada2ebc04329"
        },
        "item": {
          "id": "5602aedd-f872-4086-b473-585abf29dd81",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "721bd32d-6433-4386-abe0-2c15060d3006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9d26cf-ccc2-4c99-82d7-770f5569e9bc",
        "cursor": {
          "ref": "4874b371-b844-4013-9ad5-5c6b3657b5d9",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "03936ef1-9f9d-4d27-8b52-ce3327102839"
        },
        "item": {
          "id": "ff9d26cf-ccc2-4c99-82d7-770f5569e9bc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "557da688-f998-4b98-81ef-84a7e448567e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c78595-67f5-4062-8c64-bb983e22c816",
        "cursor": {
          "ref": "1d715c76-466d-40a4-8303-5238a6b3e74c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a9066db4-8ac0-438e-85f5-103876f7bf7d"
        },
        "item": {
          "id": "c0c78595-67f5-4062-8c64-bb983e22c816",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9f525d5a-c2eb-4fa5-82fb-da38e488094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1bb9a6-df53-4cac-a0ca-3f6576c66a95",
        "cursor": {
          "ref": "3ed68fad-50aa-4f8e-b3f4-7b5344df1992",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c2997cb8-ebb3-4f99-94cf-f208e3c6fb55"
        },
        "item": {
          "id": "ec1bb9a6-df53-4cac-a0ca-3f6576c66a95",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aaf74c38-4be6-438f-94f3-e6a20a5a88c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ea9024-b370-4930-b203-c30711538b5f",
        "cursor": {
          "ref": "308ce8df-58ea-46a2-bf97-cb4a62cc60f3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2afc7191-53f2-49b9-932f-e23820266cd6"
        },
        "item": {
          "id": "86ea9024-b370-4930-b203-c30711538b5f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "65d3be2d-3f15-4fc9-8c36-7e7314c4603c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981d844f-20ed-4098-917f-7044b954a3bc",
        "cursor": {
          "ref": "1f2e7d17-66b2-4a18-8fa5-41e0de327857",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "25b04cc5-236b-481b-a3c3-ed66cf93a18a"
        },
        "item": {
          "id": "981d844f-20ed-4098-917f-7044b954a3bc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "60d39054-9ee2-4dbc-a4b3-12fb60deaf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad169ec6-8ce8-48fa-8be4-1854ad2f6a8a",
        "cursor": {
          "ref": "a14bb744-29d4-46f1-94a2-79962fe20c88",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f33a433a-8747-4b48-b42d-e8598a9a50ad"
        },
        "item": {
          "id": "ad169ec6-8ce8-48fa-8be4-1854ad2f6a8a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "38010b30-697a-4691-b4fa-a436321a9d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7d5dff-a0ef-4e09-811a-9823922975a7",
        "cursor": {
          "ref": "4078eba4-448e-4ec6-9350-9da814e48426",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c111629-7def-4012-8755-520454e76e90"
        },
        "item": {
          "id": "8b7d5dff-a0ef-4e09-811a-9823922975a7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cc91e25f-7691-4b78-9bce-2248ff5fa62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ec8460-8def-4d5e-823c-212fd34bca4a",
        "cursor": {
          "ref": "49a5bbfe-16a1-466a-9dcd-f027bf0e3e09",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0c1d46d7-5d9b-464d-9076-2f0f85a54444"
        },
        "item": {
          "id": "88ec8460-8def-4d5e-823c-212fd34bca4a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "387ff6d4-b1b5-43cd-baca-34340b539d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cbb632-30fe-4ad1-a00a-d3f41e310524",
        "cursor": {
          "ref": "108c3eba-6cdd-4128-aa79-165724a4fc7a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "72d16b0b-2ec6-4d0a-a1ac-f8f7183262aa"
        },
        "item": {
          "id": "f8cbb632-30fe-4ad1-a00a-d3f41e310524",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fb06e22d-c800-4635-b114-89ef69d17682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0429843a-6c04-48be-94f9-d7efd8f5fcc2",
        "cursor": {
          "ref": "6331ff19-ba2e-4a64-8dfa-7843e8964237",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ed19a57f-2e33-4e06-bd4b-ea2808614560"
        },
        "item": {
          "id": "0429843a-6c04-48be-94f9-d7efd8f5fcc2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5ae01d84-69cf-427c-a564-1389c59481f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe69b0b-3d07-4770-99cd-366e4f1955f7",
        "cursor": {
          "ref": "63c6ab57-2a30-440e-9924-31af29780520",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b73ac400-f7e0-4473-b308-dcf740a7755b"
        },
        "item": {
          "id": "0fe69b0b-3d07-4770-99cd-366e4f1955f7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c25830f4-4035-49e8-af96-8cddda62e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae25854-42af-4890-9c01-b8fa7b6dd6bb",
        "cursor": {
          "ref": "20146fa5-ee16-421e-a0e3-263c661d9479",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dd595f58-91b7-4400-98cc-89f96244d60f"
        },
        "item": {
          "id": "fae25854-42af-4890-9c01-b8fa7b6dd6bb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b5dcd874-5d4b-4ab9-b042-6c5f2addc1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40a4a69-5a65-4f57-9c28-3e14c7f5903d",
        "cursor": {
          "ref": "2592e870-c231-42df-9856-9d80e5e68396",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "14dca12b-9b3c-4116-9ed3-5257af98b9bf"
        },
        "item": {
          "id": "b40a4a69-5a65-4f57-9c28-3e14c7f5903d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7420ba23-cde8-4fc3-b8b4-45ab3337cd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69fa55a-5e54-43fb-a470-ae073928c578",
        "cursor": {
          "ref": "6d615d43-ad59-44de-8f15-79fc7da15234",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "015b7c25-0907-4470-8a97-8257cceb5fd3"
        },
        "item": {
          "id": "a69fa55a-5e54-43fb-a470-ae073928c578",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8b9657c0-66b9-4c9a-84f7-de1e759e0ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb56f82f-843d-4c67-8b67-0b95263fc486",
        "cursor": {
          "ref": "ad54073b-17e2-4e4e-bf8c-b68399647f6c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "202cdb04-14b8-4da6-9aa5-e1305ce19970"
        },
        "item": {
          "id": "bb56f82f-843d-4c67-8b67-0b95263fc486",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "61331b92-bfc7-437f-9d03-09885ef1bc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b899b5-5b78-4ebc-8bfc-48ebf6b3d986",
        "cursor": {
          "ref": "e0b6fcf5-569a-4d61-ac78-3abeb2810b9f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9d006ace-75c1-4cee-ad1c-c5ccb4095201"
        },
        "item": {
          "id": "d2b899b5-5b78-4ebc-8bfc-48ebf6b3d986",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c00f0d8-a580-4bc0-9f6f-93d4dd88db98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630fd4da-0e23-436c-a7bb-f8055a37ec26",
        "cursor": {
          "ref": "d454607e-6068-4168-bc92-0745963ecc79",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5605608c-f7d0-4868-8331-9d5d064f6e42"
        },
        "item": {
          "id": "630fd4da-0e23-436c-a7bb-f8055a37ec26",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e88ad40c-abdb-4c48-a034-fb8fab38aff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcef6e83-43c6-468c-8bb3-533b3fefc86f",
        "cursor": {
          "ref": "f190352d-e2dc-4022-9cd6-6855049e5501",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f161acc2-20bf-4bc5-8270-bf4a32b36cd1"
        },
        "item": {
          "id": "dcef6e83-43c6-468c-8bb3-533b3fefc86f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "27ea0431-4cef-4b4c-869c-265ad5b210a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53113241-07ae-4f4c-997a-200b1862e8bf",
        "cursor": {
          "ref": "e7619215-ed99-4776-a4fb-ba9bb2697302",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "87d1e5a8-a78e-4282-9458-250c3513c23d"
        },
        "item": {
          "id": "53113241-07ae-4f4c-997a-200b1862e8bf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a0205f31-341e-4019-8082-dd832243ccfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3426fe72-cc61-4b41-ad72-5b55ca822310",
        "cursor": {
          "ref": "a749f680-6392-4aa5-af73-edcab0f8dfd2",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7badf329-09f9-486c-92bf-8ac80a8d32e0"
        },
        "item": {
          "id": "3426fe72-cc61-4b41-ad72-5b55ca822310",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b4c81f8f-7310-4b4a-bcd4-7a17f2920479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933fbfd9-00db-4bae-b7b8-2dda10e0ed04",
        "cursor": {
          "ref": "b6e838f0-7059-4531-846e-8968f2b83c7b",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "77530dee-70dc-45af-baa8-f152d92b247e"
        },
        "item": {
          "id": "933fbfd9-00db-4bae-b7b8-2dda10e0ed04",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "793c4a1f-b57a-48c1-a7da-b3fbf1402bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6455cf-02be-4428-a717-c8f54402b99a",
        "cursor": {
          "ref": "db2e220f-d738-420c-b9a2-0f13e091d268",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a58b4b64-1e0b-4776-9d14-f2fca22a4b4c"
        },
        "item": {
          "id": "8c6455cf-02be-4428-a717-c8f54402b99a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50dc6640-549e-4034-898d-f33073d01c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89952588-8de1-4149-a8eb-6dc42649de14",
        "cursor": {
          "ref": "d6f5b84c-26ed-49f0-be79-77c401beeb11",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "64c23c94-f703-4804-acd0-264c1227e995"
        },
        "item": {
          "id": "89952588-8de1-4149-a8eb-6dc42649de14",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eca89aac-29fd-43f2-8563-178075805f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3180e8-d55a-4195-ab9e-b53a0d019233",
        "cursor": {
          "ref": "29465b51-aa94-4c2f-8df9-c3a65913aac2",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6c2216e5-8360-4d34-8388-12cbbc07b43c"
        },
        "item": {
          "id": "cb3180e8-d55a-4195-ab9e-b53a0d019233",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "35da8e68-5134-4ccd-8441-5d17fddc1b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c134cda0-0706-467d-96dd-8e8c9cb13c69",
        "cursor": {
          "ref": "42fe1a81-a1f5-46b8-b220-762216732116",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a82cd484-2df9-4f0e-b8be-7edf737d805b"
        },
        "item": {
          "id": "c134cda0-0706-467d-96dd-8e8c9cb13c69",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7ad0bb23-56c0-4963-9742-a52914b9dd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a11b15c-ef31-40c8-b962-cabc167076b8",
        "cursor": {
          "ref": "51ac26f6-fc8c-495c-aac4-ab0828acd3e1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8d018b2a-7d30-4d6f-8d21-584547aaf71f"
        },
        "item": {
          "id": "8a11b15c-ef31-40c8-b962-cabc167076b8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c7f58aae-f6e7-4548-a556-9af5da9813b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe2a176-7c34-40e0-9b6c-578ea857864b",
        "cursor": {
          "ref": "9fc9139d-987d-4ff8-afb7-c1da8005c899",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9098b812-039a-4e63-b46f-a196c3664300"
        },
        "item": {
          "id": "2fe2a176-7c34-40e0-9b6c-578ea857864b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3e582daf-38a3-43b8-801b-29d656f6fb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da040aea-e623-4629-b362-ada632b7ceac",
        "cursor": {
          "ref": "5beb1cdd-76eb-4df8-a22a-84bf3e8307db",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0788c946-110a-4191-a87f-2871f7fa932c"
        },
        "item": {
          "id": "da040aea-e623-4629-b362-ada632b7ceac",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c15432a7-d936-4e55-8451-c523b9856e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0e2a6d-4999-4049-bc16-ae6cf7b2bdf6",
        "cursor": {
          "ref": "8f7099ed-69ff-4dae-91c6-259156723ada",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0e29b401-d3ea-48b7-8bc9-0d241134641a"
        },
        "item": {
          "id": "9b0e2a6d-4999-4049-bc16-ae6cf7b2bdf6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "463f16c4-899e-41cd-aa33-def5895390cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68155096-e260-4511-8814-7068761bbc98",
        "cursor": {
          "ref": "cbf6cd04-0d49-4911-a2b3-c184e5f604cc",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "77df1732-3e74-4a3c-952f-d36739ca19a9"
        },
        "item": {
          "id": "68155096-e260-4511-8814-7068761bbc98",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cbdf70e0-8ebb-413f-b42e-135591ba0c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0d2d53-52f8-43dd-83eb-e8b9848f47d6",
        "cursor": {
          "ref": "a23b91b4-9d2c-4cfc-9240-579a8d81cb0c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6066426c-5a4b-428a-a117-af9ab3e12023"
        },
        "item": {
          "id": "be0d2d53-52f8-43dd-83eb-e8b9848f47d6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1caa0bb2-21e7-4f68-8b88-10b531b6f82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2515aaa-7ed1-42b6-a24e-7e805dac1a85",
        "cursor": {
          "ref": "5823ba3a-def1-411f-a3a4-8a2321dfba42",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d2d1094c-2b1a-494f-88cf-5813745985e0"
        },
        "item": {
          "id": "a2515aaa-7ed1-42b6-a24e-7e805dac1a85",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0027b57f-e289-40de-a19e-a6c0ee3111ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608a6c7b-3bd6-4f89-a5ff-0f30f29fb0ae",
        "cursor": {
          "ref": "fb9796f8-04ef-4e9d-bff4-3494d436a2c9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2c1e0d4d-4d4c-4af8-922c-3d049d2183fb"
        },
        "item": {
          "id": "608a6c7b-3bd6-4f89-a5ff-0f30f29fb0ae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "502ee068-ad3f-4ea1-ba94-1dabf553e537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d92f7e2-57d3-4a27-bf84-72013ade22ce",
        "cursor": {
          "ref": "272d4b8d-9e79-4a29-bd27-9f9e970a27a6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5129460f-4ff1-4abf-934b-68977caf6194"
        },
        "item": {
          "id": "0d92f7e2-57d3-4a27-bf84-72013ade22ce",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "371ae5de-bb67-482d-9e10-741a16d82f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d38bde-0e08-40f0-b3fc-45d9d45897da",
        "cursor": {
          "ref": "64d30f71-65fe-4526-97bf-281dbe959ca2",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6da6bac3-6ec9-4c3e-b2ae-10e77acb2a43"
        },
        "item": {
          "id": "44d38bde-0e08-40f0-b3fc-45d9d45897da",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e36f31fc-61a1-43bc-9b6a-0e6071c95e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faee710-0cab-4af9-ba07-3d79c4bb0f3f",
        "cursor": {
          "ref": "e60217a5-f8f4-4c47-8118-58a40bae1c53",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2446d585-c3d6-44f1-8c78-362d30fee2a6"
        },
        "item": {
          "id": "7faee710-0cab-4af9-ba07-3d79c4bb0f3f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "71747318-4cf3-4661-9aa1-c486ce12b185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3762318-f2ea-41ad-ae94-bd28414c9754",
        "cursor": {
          "ref": "e723d8fa-63be-486b-a3f0-96cc4bc57e49",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "235004ca-3035-4f17-9c0b-1d8b06409ab3"
        },
        "item": {
          "id": "d3762318-f2ea-41ad-ae94-bd28414c9754",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d41371d6-0d06-455e-9ef2-c824ef23922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a73057-e280-4fa4-8cb2-d64f6f68a610",
        "cursor": {
          "ref": "9e7c3861-f804-4774-aea4-d770181be1a8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e0250794-51e2-42f9-8eb2-b0d381cfe144"
        },
        "item": {
          "id": "45a73057-e280-4fa4-8cb2-d64f6f68a610",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "002b2c32-947a-4713-b2db-85e40b8fcb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de400ab-4caa-4525-bd36-acbbda470627",
        "cursor": {
          "ref": "9e92ca01-e4f2-41ad-8e10-548bf358aaa6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2eff7a70-c2ba-4572-8c78-69156156d7c5"
        },
        "item": {
          "id": "4de400ab-4caa-4525-bd36-acbbda470627",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9364511f-a2c3-45a0-97de-9bb4c531594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3851e98-cef5-4058-9f43-3ad16c04fd5c",
        "cursor": {
          "ref": "9214e661-8877-44b8-b0c5-990a7d9801b1",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "227e8aba-8a96-4d74-b30a-1c14b52552b8"
        },
        "item": {
          "id": "c3851e98-cef5-4058-9f43-3ad16c04fd5c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "71f510dc-c81f-49d3-8f64-7ba39859c53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b64784-55e8-40ac-a851-2cfe84854b00",
        "cursor": {
          "ref": "e614c93f-99f7-4142-b7df-33109a3878b8",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1a041d12-1e22-4865-9420-92678bb70d9c"
        },
        "item": {
          "id": "89b64784-55e8-40ac-a851-2cfe84854b00",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c0b6f599-94ff-47c0-a5ed-6137195c7c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48df827b-15da-4eca-9f21-5ef5893920e2",
        "cursor": {
          "ref": "1ff9a8c3-a8f5-4f24-9356-0f2906df4bc8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6d00c3af-e28b-4328-b4b3-95e38b21fae4"
        },
        "item": {
          "id": "48df827b-15da-4eca-9f21-5ef5893920e2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dd171fa3-cfab-414a-8000-af6759391266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b18e07-f9eb-4d49-a5a3-3e407c80eed2",
        "cursor": {
          "ref": "08d0d45a-2bd9-4200-a110-ef1951874f61",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c7123d6c-536f-4418-9d2d-ed6cb1973c23"
        },
        "item": {
          "id": "71b18e07-f9eb-4d49-a5a3-3e407c80eed2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b01b290f-69e4-42d5-b265-b5326e3a483f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c1a797-08b5-4109-bd8f-55772d06511d",
        "cursor": {
          "ref": "4fe6aaf4-682a-4acf-86e7-0cad4d54853b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e7f875a8-8c04-434c-91f7-5519efd35346"
        },
        "item": {
          "id": "03c1a797-08b5-4109-bd8f-55772d06511d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b4901fb1-1b22-42c7-a682-cf3bc465bf12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5a0bcb-63c4-4021-b1c7-fae92468730a",
        "cursor": {
          "ref": "61634db7-9ef8-40d5-bbc5-5a34f1ef2e31",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "824a29ca-bdce-41bf-ab35-3c8f1357d8c5"
        },
        "item": {
          "id": "ec5a0bcb-63c4-4021-b1c7-fae92468730a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ea509d2a-a4e1-41d4-b2c7-4055a220f8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be8c0df-b22b-44a5-bed1-133493b08502",
        "cursor": {
          "ref": "2ff42759-5c8c-4eaf-835d-dadcd8c49b46",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3a6eafad-79cc-44a5-b67a-7c8fba58906a"
        },
        "item": {
          "id": "6be8c0df-b22b-44a5-bed1-133493b08502",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8ba0863b-9f31-4d66-b973-19363f48cc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa1af47-7224-46e6-9005-7a3bb884d985",
        "cursor": {
          "ref": "d2bc21a9-bdef-4a9e-bb82-fea9ebc1bfeb",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6c17c332-1240-406d-a88b-e020844dd42a"
        },
        "item": {
          "id": "0fa1af47-7224-46e6-9005-7a3bb884d985",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "16355286-8830-44e8-a18b-b4b7ec761a9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d979935-be89-4379-b022-12287d018f7a",
        "cursor": {
          "ref": "f1405568-58ea-4af8-a67a-c65098aa785c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ebce0530-e304-48ad-a65e-498c86629b62"
        },
        "item": {
          "id": "3d979935-be89-4379-b022-12287d018f7a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "56fa7306-9d80-4ccb-8781-9b55a4dccce5",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4ce836-6b33-400d-a96b-1e3ab239939d",
        "cursor": {
          "ref": "68916b6c-0254-4ece-8b5a-f933bb2dc26a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fd03a2e4-57bb-4451-8f24-d11e4ecc9cb6"
        },
        "item": {
          "id": "eb4ce836-6b33-400d-a96b-1e3ab239939d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fca86f06-01a1-43cc-bba2-d9685cc10cf3",
          "status": "OK",
          "code": 200,
          "responseTime": 1434,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6fb94a-169b-4085-b6ef-7cc9938f772d",
        "cursor": {
          "ref": "b2f90ba7-6fae-4616-b042-939b644ac496",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9f570cab-bb95-4f4f-8707-eba75cb7c1b0"
        },
        "item": {
          "id": "0b6fb94a-169b-4085-b6ef-7cc9938f772d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a3d152d5-111a-4dff-9848-520c185553e9",
          "status": "OK",
          "code": 200,
          "responseTime": 1365,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e062e54-95c2-4c33-8bb8-092761964761",
        "cursor": {
          "ref": "10070f70-3c75-4de1-9095-829242a46fce",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1ea7cae7-a02e-4e05-bcd5-bae86a562165"
        },
        "item": {
          "id": "0e062e54-95c2-4c33-8bb8-092761964761",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f07ec4a-bb06-46c0-b52d-179399b367a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e062e54-95c2-4c33-8bb8-092761964761",
        "cursor": {
          "ref": "10070f70-3c75-4de1-9095-829242a46fce",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1ea7cae7-a02e-4e05-bcd5-bae86a562165"
        },
        "item": {
          "id": "0e062e54-95c2-4c33-8bb8-092761964761",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f07ec4a-bb06-46c0-b52d-179399b367a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a241f34b-e36f-47d9-9ef4-06e299a9dc51",
        "cursor": {
          "ref": "49a2acf1-7afa-4bd8-aec1-4412dd74e4f6",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "92e4f78a-8427-4c56-9911-a6bf0f1f5dcc"
        },
        "item": {
          "id": "a241f34b-e36f-47d9-9ef4-06e299a9dc51",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50f32d75-db74-412b-9b68-9b0e27f404fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9ec1ba-c7be-40ba-b3f0-01fa8afe68ff",
        "cursor": {
          "ref": "cf80e533-ac40-47e3-b406-8d5fd5ef1d6b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9a0ee98c-4174-4a60-808e-dee32e553181"
        },
        "item": {
          "id": "ad9ec1ba-c7be-40ba-b3f0-01fa8afe68ff",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d12e3f49-70de-4096-9212-79760c4c9a48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}