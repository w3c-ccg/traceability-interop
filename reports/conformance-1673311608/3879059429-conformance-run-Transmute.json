{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "20365bea-e0f9-48d9-8a31-5abdcfcf7fc7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "37c75e5b-30e3-477a-88c3-72d678df342b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2c72189-4e35-4925-8fc3-9a2363440d17",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0bf8548d-ac11-4743-8435-21140861c46c"
                }
              }
            ]
          },
          {
            "id": "a7bca5c8-1620-48b5-9b3e-2bb2cc4f84e7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "655fc2a0-7870-4100-87c4-0be00474bc90",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c652a736-1656-42f8-9c92-2c2c1eb420f0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a9b0bd11-d80b-408d-912b-fe30ee8faba5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3d6a6223-e279-4ccb-b1f5-52a2e28f3e5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9268b955-1174-4576-920e-cd0e6b8d12af",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db259062-888f-45cf-9492-a2293efb2fcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfaeab32-c30b-4fb6-90d7-15ceab6e7b4b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "080b53c1-c736-4946-8b69-b652475f2c20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a520384-36ce-43c4-aa1c-a11127e8c9c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e20bb7c-e43d-4efe-bd16-fec1c7be64f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b6eecf2-9c8b-4007-88f2-7debfc7ea780"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "203b5013-4b67-41cc-96f4-a0872d76f6b3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8dbfcd88-c1ee-4b5d-b234-9f8676eb00c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9274fec7-2251-4c8b-9f37-9f1465252937",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d3e1d95-5c27-4cf3-ad78-040573858139"
            }
          }
        ]
      },
      {
        "id": "b65df40d-ada3-4aac-8141-50569b6fc96c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "39136fc6-90aa-4b74-95ce-446bc89db986",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31903b13-e1db-4d57-a968-d6db907fe5e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ce02198-1bad-4a6d-9975-8a0fe469053e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c69cb4d-5d72-45cc-8d00-752af5180327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bceee35-cee1-464b-8ada-eb7cca3323db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefe7af0-cc12-4873-84b7-423bb77c63c4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a99d93e-2c7f-4ccc-8870-4db4dc5d7c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "232fe86d-a948-40a4-a224-50c7097b66db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e09efb-5851-40c4-92d9-14a4d8bef5f3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760863cb-cec3-4e14-be59-3490d4df8058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cc87f97-77da-45be-abce-45e3eed803d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44ddd1a6-c1f0-47d6-816c-e74c33e1d1ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4ab91e1-f84c-41a7-b104-f3dee044c576",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6134716-2e26-465f-b422-981e9b94e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b0b6c6b-7cba-49e9-80b4-a1cd0902156e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b628c6f-a9c8-4823-ab73-f781aec52e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d387a9-84ae-4e01-aa3e-3e3d8a22a98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe8baeb-732d-4877-93fb-1b42945c44c1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6095b79-9ed5-4294-bb08-6df3d2ae025b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "249bdf1f-27ff-4e1b-88ea-f8c59cdf79e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163bbba6-5ebd-4a2f-9278-4fd8aeca2e69",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "afe79e9d-3835-49fa-9808-04e2c296e0b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "734bd8ea-ce8c-4c11-a924-72179d47ea6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1945bf09-6f57-404f-8c31-b6c301fe93dc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03b2b4a4-7675-4b18-946a-6c3fbb34364d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "651cb848-ee70-4f13-919f-5f1a6b302c3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63d8dc67-755a-46c6-a51d-cae3f27d5b95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "628b0226-bcd9-48d3-b001-82366f428970"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc7c7342-7024-4bbf-87ef-2ac5bf227120",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "628c3cdc-41b0-4f89-a20b-3eefee38b498"
            }
          }
        ]
      },
      {
        "id": "dbab14bb-1746-4ecb-b95a-571699c99a0c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e6ecb92c-4b82-42c3-9c32-1e76cc04dc8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec28a6e6-4332-4394-affe-dd0ea75bf4d0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "51339963-d86c-46b6-9e0d-fde29de5b27e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accdf83f-8b2e-407c-a1cb-a9c4f31ddc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358e26a1-33a6-47c2-af96-a46f43fc59b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63b1d99-395f-4375-a35f-b3a08b90dabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1c1bb8a-022c-4d71-9840-e3a6e11e4675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b60196-8d12-4dc0-9ca6-9de1858cdca9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0075d6b9-586d-4896-abb4-925fe8ec7831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd3b996-0d10-4c7e-851b-b103b97f5b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602c2884-4545-4681-a2cc-fa039f8280dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa20f28a-f016-4963-9e7f-9c2cb0b1f79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712572b2-4519-4b11-be1a-8515d45145ee",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812ebce3-2313-4069-9934-ccc8c845d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8327e9d-6954-412d-a861-8a3399d8259e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5b6560-39e6-428b-9c54-0d3243d1bb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93ce3b70-3ea0-4217-8ca9-735f8831e9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8813b3fd-6435-46d6-895c-ce74a9b6e773",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10390bb-714e-4a8d-83e4-2bd8fb071e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782246e2-6977-4c3f-8178-b57baafa2166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7a0dff-6de2-405e-a243-cc820b10c509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3295320-dcf6-477e-85ee-9ec2707b3f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9826f551-35a5-4198-8c51-b7ebe4a517d4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acfda68-bcf7-4eff-9af8-18cb9e97e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fdabaf-64a4-4a9e-9af0-14188f1306a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2aba63-7931-40a4-b0ee-38510a588ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f7e278a-9bf7-4fa1-9ee1-96bfde1ba18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3923a1c3-395a-4db8-85c2-f3f94c185dda",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d56ff67-8660-4b6b-b2c1-7766c544de31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13fa52c-dc10-49ac-ac22-1d150d9176fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb9c70f-1d96-4d78-9359-3c25eb8044d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e6f43dc-188e-4760-ae54-56ec7748e5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a766d50-152e-419e-8917-f3c83f92e3a2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1549ab-b6b9-4b34-b99b-07889d473d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b86f00-cd41-4d5c-9327-0eb55b049fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6eb8a0-b0b3-44f8-aab6-c16474fbc4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52b505b0-2810-4188-9c0a-0d15737afcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cc243e-a875-4bbe-b1ce-e096b9d7d5c0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f67a176-f48b-4f12-a67b-1f732dae8d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e01192-3c2c-4f53-8b18-35927e7df8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc6c91e-55fb-4bc9-b557-be476cfd264a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c508296-e23b-40a8-a1cc-5cdf1c581691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad1fb2d-1c33-41a5-ba41-e3d7f0660855",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caec3b95-661c-41ae-89fc-dcf8b7adecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1f8cda-09e7-41cf-92c1-a93cc0794ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f409fccb-3a49-4c03-9a79-f2ac280989fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96459002-b0ea-423d-aebc-8e6032c517a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae686e25-21f0-4800-9a91-b479514584f3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ef457d-a981-4746-a191-a4ab0166e27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2257d63a-0227-4937-bff4-287e5ad48d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d8f94-e24f-466f-b58f-e2e375120cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b39fb810-e3f8-4715-b992-0eecc5058033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95534f38-13ed-41bd-9192-0d5c19e73b88",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850bb034-f689-4d95-bb81-3a2915164b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8569edf2-c304-4da3-b791-b53df9a9b26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae0b44c-45ad-4563-bb55-c19fc03da88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67a7a92b-4a51-4ef5-bc16-d1b308a70380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042d96f5-9bb1-491e-bb02-42a8e8eae4cd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd7c2af-eec8-448c-85cd-daf2d5412261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ea95dd-a065-46c9-bc8c-b132b1af9f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3e864c-c531-419c-b187-5d72f9dadbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "873821d7-3e50-4594-a3ff-76f0b8c3b1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfa417f-014e-4311-9a51-52ab1915f091",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec32a48-b5f5-4749-9404-761353bd76e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac458f4-b5bd-4e58-ba60-20eab1fe061f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd146424-13db-474c-be4e-1f894cac9f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf73f0bf-1a5b-4b79-bf50-3dd3ba03ed6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67819da-997d-40b7-9806-fb23cc1817d0",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043ad644-7dee-4a8b-b41e-32695d77fec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f482ca33-ccc6-46c9-a64c-ef1e7e18d2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8845fd9b-e96f-42db-bfa6-66b27b3579f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7031a03-456b-435f-848a-a2f9ac761f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96642630-de22-4d74-9f54-67cd528e3f49",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce63a839-66ee-41bb-a351-858ea0b62ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a4047a-5a75-42cd-9c91-cb2cc6ff3fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f729e1-139d-494e-8df0-17d0da046f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a36fd166-48cd-4569-89fe-ed28e78347c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a349f29-838e-4a5b-ac73-e1550bc95532",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aed0a5-ba59-407d-a15d-f13cef6e8158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e509cb2-0064-4bcc-a72f-ad49dac2a17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c31838-944f-4a99-831d-53ec99c1397f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a29d8bb6-9102-4f8c-b2d1-6d1757ac7ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38450d0a-6aef-4578-97f6-2f3094b5240c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d467426-310d-4feb-b347-c7e8b3a80c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8175efb-31d9-4ede-90e9-1dc5364e95db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a1c49b-30c3-47b4-a697-e696adf189a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b3cd4e0-d736-434b-b4a9-5935b30125ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4fc70c-1ba5-4bb2-9fd1-213accb1fe48",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6e6f7e-0cb7-4bc0-aa64-c30143a53c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66250453-81ea-465c-acc1-507549a5bedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2efb46-1463-4854-b175-b913dddb48ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9411ccb5-820d-4880-945a-6984a83aabca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca010b0a-75a5-42a4-b93b-aab5f66c0c93",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9d2a97-5dc3-423d-a979-fc3179915165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c59807-8397-4f94-a1bd-2743c6250135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cdf40b-e5a5-4d7b-b8c5-14b914c6001c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9d30762-1f89-42a0-b581-ea41e41fd34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e177f9-3367-42f4-a7ae-49b0028c9725",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7fefeb-d13f-429d-84ed-63b777ee75bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7c877c-a588-4770-abe6-d335245d7ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f33e0d-0dab-40cf-a6e7-1f5ed8f7e13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "123b4645-0332-4470-ac90-3cec7a25fd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d66325-336e-4708-a465-ab530d4fe058",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797194a3-778a-4cc0-ae28-3b7f7974513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc163a1-6188-48d4-bfc3-7c0afd68bd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e35b719-fb99-4c5a-9fb6-4f133ee07012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "192decf6-f1c6-4c6e-8b38-972a8800b6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc8d73d-1306-444a-be47-7eafc51bcd0c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bd6964-da38-4f12-8db1-80bffafde187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caa49de-9a04-4925-921d-e24f4400a00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362c53ef-3d9f-450d-9ab8-beffef2ec43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55859b3f-fc42-491d-bda0-7238aa26041f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e00a4e-7871-4c92-b264-3437ed3a1b52",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86babf5b-e32e-4b93-8615-9e678f011d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e86f99-0f42-47ae-a5d4-1c6d499dec8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b207ef-35f4-4c3d-b459-a63377c63772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff257524-f678-44f1-afe0-78eaaa7f7a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a159a38-0359-447a-a25a-4725db1ebef2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8424752a-394f-43d2-aa75-d5b25e14215a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e02bfd-a761-42a7-b555-7431f73ec758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57750e23-65f6-42ff-9584-27a0700fb7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b09a5f37-4c80-4005-a46d-f1db98e09748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07204d1-5c01-4c7c-a5be-36b6a23077c4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f182a1-5951-4c01-95bb-5cd78553d553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff889352-878f-4a06-ace9-d164948bb467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a79bc3-9dea-471a-a144-298a90f26594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9172987d-de06-4c1e-a7f2-f9549ae5ebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11ebe86-1c42-4b9c-ba4e-0f3d80bb7f2b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8164acd9-0a77-41d0-97a8-4b8564084d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25c5e89-5c01-4b0d-97f7-2d88cb9d2a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc38e974-1c94-45a5-b9c2-239046ef8984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e8e79d-50df-4f5c-ba8e-b1b62400d207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e03d72-aa4f-4636-a3cd-a67a73941259",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8ac630-9f15-4aee-808f-40c4fa37237d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddf4404-ae28-4c21-93f5-496463842bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99ea6dc-ca70-4c13-991a-d1d646fe510e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e1e8f1-e7ef-44e1-a381-1bfe0ff6127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc493afb-7279-4031-9cbf-2da384233433",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9224a0bb-2756-4f7a-9fe3-6d6727f91f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2c76b5-d430-4b80-a995-d8ea8c7d3f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6a7b4c-2b3f-429f-9512-9bdbfbf84b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f478e110-f48b-4437-8e42-93c56d808414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c40f6b6-e520-4bba-bd41-7db722f4cf9c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cdc950-9caa-41eb-a1ff-f94484db04c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99817559-d3e2-4f1f-949a-f9b502440ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c53e0ca-5084-4184-b55c-b8553e111a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77587d6a-1a61-4184-95cc-a7343bae2b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf43eb6-1f79-49e3-894c-963df7f669f7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e42c587-3454-4d2d-9b3e-01a564eb8f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a38c12-dcd2-49af-b509-8ce23bcb38be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03118267-edd5-4ca4-a24c-e3bfae998b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e1cb8e-1a7f-4a9b-be7a-2c21e17e8d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49567c9-a51f-4431-a909-e744d9a80913",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07d1090-3a19-48f2-a338-8d41159b1377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2f47d1-2dc5-47fe-bebf-72530ddedb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e5a189-b0ce-4bc1-9445-961b22157951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f18f54f-5ccf-477d-a416-561a504939a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3143f1f4-51b4-4aa5-9613-f3b510bfe0ac",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37056b0a-58be-4a1a-8611-aa0d8bd9cabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb09f3c8-e177-487d-8252-0aae618f118e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c54c4f-3484-45c0-a5c4-8280b4d5d1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "df9d82d1-cf9c-494c-a042-260e55aabe12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6610f2-12be-4b5a-be92-ef11a308bd85",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbed07d5-6ce8-44fb-82ed-7d46f8b7c733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f95a53-7909-41a3-bd29-0f836d5b124b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21b8a24-6c48-4cfe-9514-80f621b8baea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d09ab19-2b4c-41ae-9f63-2e4500d13ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85eb6e6-2813-427d-afcc-db8d5fb58261",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b421f982-93e0-4ea0-8824-451600eb5fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff2e567-97a3-4fe3-8030-a2dcd2e29c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d9c5c1-8a33-45d1-a669-c6598e52a9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3005b5d0-6ed5-4dc7-aef6-0c33d5460870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e0d614-a291-428e-bb3c-d41e31eef152",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c98ea30-36e7-4b68-8cd9-b1867d04200e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884254ac-8404-4f65-86f2-88319c9021b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222f1682-916f-4b75-a6cf-857544cc42eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4ba104-ee39-4a21-9b11-751baae37610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7a598d-1913-479b-ab45-b591af47ae30",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d860125d-cf58-4def-9c21-87fe24b73237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219cabb6-702a-44dd-b3fa-8e85604e52e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3cf7e3-56f4-428b-b6ba-7c305c521158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ff15ac-f205-495d-b316-eeecc7eb3852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d535a070-4e16-4622-8fc0-69663447e428",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65674af1-9e69-46f4-8c8e-02f0f3458800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0b8af5-f2e1-4b2e-a326-236a7790fb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f9fbc8-ff30-486a-b216-e8cba2d4d3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "208a49d6-c1a6-4a35-aa56-891f48e73291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0094068-6742-4fc9-8b51-42f66712f710",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb4b851-fbaa-4b60-9318-9c5e59443c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9005e800-3c73-4f5e-961d-4922cf9ba951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99140b5c-ecd4-4ab9-80df-17b0bdf2ac99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67284822-d757-47a9-8c92-3a6e9df75a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303f94e1-d236-4afc-8f9c-b1ae26eb0448",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03f5adb-075b-4771-ac72-70334132a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1134d78a-18ec-4c9b-9a0f-c8a7520c3b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08e85e9-e2bb-494c-b7e6-d091784852b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d849b60-b90f-41c4-bc53-c308fc6e99d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4068f371-e621-4845-a963-63fca7e9300f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a24c0b-5e24-43e0-837e-47f111b01765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040b486b-9f2b-4e22-9b3a-b8f5a24127a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39d8dce-3073-450e-a476-a2ee104f4bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe08182-c9b3-4838-b680-62ecf46b6a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7aa31e0-0ef8-4831-bb4b-aafc0857ff90",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55daf4f5-01d0-473a-8e48-3c777efa3d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25704c7b-6042-4d80-ade5-e3f93bb9919d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa78d1e9-661c-4983-ad62-e5cbdc6ed05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9d8b98-08a6-40ab-bfbb-f3a345f0644e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa83472-d58d-4282-b78f-1fb54e06b7b4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fe3737-0d9b-450a-8232-a2934e9ab13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4067f275-4a59-40c1-a298-7972d88f8b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544bdf42-2dbd-43b1-a343-e134760d4bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f00ce4-5736-4aef-b3ce-58f830d50395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04393488-b688-42af-9c2f-df97049a0271",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc409efa-c5bd-4ced-a9c7-ba2504e99e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7629fa79-f600-49c5-b9d3-58411a2467fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf9c14b-32d5-4879-8dc4-34b43422504b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6696bd63-7a0b-42cb-9307-8696fa10e0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e5a2bd-9f11-440e-9f36-e94cf1a326e9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91dc1f5-d0c4-4592-9f61-31ca28cdb43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f6b26b-ddbe-4860-b304-5df5b2d6773a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008ae634-c578-486d-90ff-6853792eb3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "836f9dc7-4bb4-44be-98da-d683d5b4359f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55cbec1-dd52-471b-85bf-68f0e96c4d58",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f0ea3e-cf3d-4126-8b76-2f31f4475608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32745b73-61b2-40c7-8f7a-cb32a5e8233c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a85edb-d7ff-4a86-86b4-d3ff2e823946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c9ad08-517d-4a06-a2ec-68abe06414e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883b1b4a-787a-4bf5-91c3-427dabfa7492",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d5c50b-7e3b-4620-9bd2-a609ad5857b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e50987-1d27-4917-be4c-1c21af24d3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aefa75-df0d-431b-8f45-303b5db4f745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e853ada7-5cef-4fd2-b64f-ff53c1d1e775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f680ba-9c64-4d8c-aaa4-405629ec88f0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195f081c-21ed-40de-94ec-02a58d6f3104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6c1194-5793-4d4d-9c73-c42d6ae98850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a546960-8aee-4165-ba85-6320ef431c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85528f4e-dfec-4b16-b6c2-5d8585679223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413e99b5-4e08-431e-9d26-fa3aabe9b60c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669f3deb-b7d0-43b6-b029-68aa8b5c3384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32410f6a-2280-4f04-b19a-fd7ab79e2840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12197e83-27d4-4436-990f-2c71d9f83be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f29f5f59-822b-4a6b-9730-a90771d699c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32838cef-b474-4acf-9274-fb98b06fb3b6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa41bbeb-1c3e-4956-9431-e57bc23c4016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff5484a-ae30-4591-b2e9-6069331b43b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdddd3bb-7c9e-4447-9027-5e256d0d23f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99496975-aac3-4864-b24b-b0bdee7e08e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8453fb1a-6866-4d5e-a96f-77cc528eff62",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffa9774-1083-4645-a9c0-5638d0676bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c37958-1126-4d8d-8b89-2189ce20e883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7535c932-8c89-47ff-a1f4-36c75b248b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a81bfe-1f9c-460b-875a-ddbaeeff8c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92b3aa3-2a8c-4bad-a603-37d4d0715fe7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ba1fdd-5bd7-4003-b4c2-577a6f69fced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9b58cb-5baf-4fce-bc59-c3420439e33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527decdf-eb2a-416a-9d08-485fe329d87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1057fdb-f999-4b91-9dd6-e95221c9d429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecdc346-0e12-4092-9bb3-193cc3f24aac",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21dea0e-ca6b-4216-b18d-49c398c38cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35157dbc-3743-40a7-84d3-cfaaca5e8910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f62288-27ca-405f-ae78-5813965eb6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b771883c-e691-465a-b9d4-1fae4db61861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cae735-5cde-4427-a1a1-fc4ede9dfc48",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7f3199-c325-4994-a949-753fb484ff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e950eb-bdd9-4149-a721-0c4ad7f2491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7fa0be-23a6-4a35-bfe9-1425923428d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "715c7d6b-c2e7-44db-9908-fe9e8009cee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47560a9e-902e-4cac-96d4-1441b0f015b5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fa0c50-bf4d-4393-803a-c6bf5e4c4a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94979e34-22c5-4f1b-8e0a-06fc58a16ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31874360-199b-433e-96be-51e9b6ca535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a88200-6efe-42c1-a4a5-71432f4b2ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d296b341-3866-419e-8c26-ba2062b0ebc1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c908b1-cdf1-4ba9-b108-d37183255983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9a705f-f99a-4346-b186-ff064fa02e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7541c1-8b34-4cec-946a-d4e151e3c16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92017406-c5b5-4dd1-8539-3d7549b116a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a88b8c8-17be-4b4b-a9c9-b9b2fa81e6c8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8d3623-4686-49d0-95c3-e703546c28ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faaf0fed-a97c-4dc2-9b3d-d12f4f1d6379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766926a4-2cad-4ace-9ae1-4ff56c437382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c074ba-2891-4ec3-b181-6d764517edb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59231cd-a5af-454f-ae61-9de34344d882",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f48d603-6f78-424f-a9a3-7fb4762efd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df0e8e1-f2c8-4dd2-af08-345bc4569d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f35526b-4ae2-465b-8c9f-65eaf5dc0b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50bc8682-925b-4bc6-9d4a-3daf1f6281c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f327105-a29f-4ef7-9101-2208d9627646",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56b8e7e-aad7-48b4-9a05-f5598997f467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9f8004-2e5d-4374-a720-5e4466f7b13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f3dcd4-73de-4d39-8d44-2a4237db9415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "766392c0-9c96-4ada-9e29-cd6b9e1116dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a39e35-49da-475a-8b5d-0c88971f12eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092c401b-a834-456f-aad8-e5fb67fb2d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f434560a-ac17-44d7-ac19-e4685d36dbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6035a53e-420e-47df-b0d6-b1856fa6cd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ef374f-af14-4270-98b5-addb21d1b4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3408bced-eb11-43e0-81e6-62e2de1934f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ecad59-2739-4b04-a514-a286e7a5e418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f7fb99-429d-4543-9a0e-4dc6f0f5af69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5743e9ba-b548-4309-a731-65afbb7311ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7bf106-ea90-4ee5-86cc-55082a30890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30cc716-6290-4dcc-84a7-18ff57027844",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1c5822-2221-4e18-b477-21cf51d0d8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ee77b6-b17c-406d-989d-e6aee91b9f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f31c0e8-68c0-49f3-8b82-5175eee0cbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98435132-82fc-4249-8f12-6b9f492f24ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d7c617-c821-4b3a-9ffa-cb73a95c1158",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bec396-254c-48e4-b254-5224bc7921d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69a5249-9b28-4108-9102-6a910c2a3384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5344aa-943c-46a9-879e-6a4a90915c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6cfcd2-adb5-4da4-8f04-5d4c3c8cab1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6dd3a2-b4cd-4bb3-bec0-e775688d0852",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834e6705-bf12-45c4-a11d-0c4ee3e99df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfd51e6-eb88-42f7-9b85-303d685279d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf133a12-77b9-48ef-ae10-ee247ea453f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a70cd2c-acd9-41fe-88aa-4d4a661d3f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05a4ee9-b364-43cb-96a0-f2962724a0fc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b90e70a-a33d-4f53-936c-6442d88cf19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfc2a46-3582-4031-9f9d-d43c5174b707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f38663-f274-496a-9192-30e701fba211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59ce218-a90d-40d8-97bb-f5df12118284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c949e6-9018-4c76-a70c-cbb73d007d70",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da120a-f2ac-4ade-9670-52628208038b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab019525-faf5-46d8-9cce-b72a48ee7962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2532fad-be9a-4c24-9e14-b55b9bc23ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "609e71d2-8919-4a1d-bfd1-73830e691815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600c550a-a98d-4c89-905a-7a6ff067d0a0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9361e4-e489-4fd7-af5a-6cb4a2379bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc9b086-7fa3-4181-8d89-cd607e4f8750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1932f97-f885-4529-bbcb-9ebf502790ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a464b213-af73-4670-bc0d-4a1f27c56694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26218c7e-cb98-4619-a1f3-104a52b76d6a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7923d58-253e-4c3f-b2f2-3816741fb315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ebd72f-4733-466a-8231-c4bac2069356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8126bb3-c72b-4eb6-9c7b-79c0e3e480ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53cce0ab-2475-42ee-80b3-9b7873502e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7b3321-5ffc-473a-84ff-11f510aed6db",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f102b6-d6fa-4301-85b9-9322f3015f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac64326-0d3d-49bf-b7c6-2d061537a9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cc3472-6d02-4d24-b3d3-a0f2719944f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25a1941-03d8-442f-ad11-ace8226045cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903d8b4c-6ffd-4b56-9a70-78dbefb20399",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f083495-e811-45e7-9902-f2201420804f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafab7b6-0869-41e2-a464-6b18e2cb31b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d765acb-fa7f-42cc-b14c-6277e28aefed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "115d079a-a2d8-4e61-881c-b5f53135b391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a8ff11-38a3-4aa1-960d-f5526d14f36c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72b9bbf-c8fa-4ccb-9350-13a1e26edf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a447029-750b-4dc6-ad6e-127f91605055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db55907-c3d6-470e-aa0c-9cec6d5ffe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7517c53f-771c-4ed1-85ee-83a91a031cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f893375e-e973-4b19-8b7d-696183e2d086",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cd58b7-7ef4-4237-ab15-d26e7e70a381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd1eafb-c91a-4089-b56a-b8c4cbc9f5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4452ab3b-b614-4695-946f-522cef4cf610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "554e71b6-007e-430a-8879-d7e319a47d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a36cfc-4a4f-414f-956b-c216eee8f9f9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d385de2b-dd29-43c3-abf8-4b2dbb2022ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca796c86-ca90-4a67-bd31-76b14df1c1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d714d60e-9f4a-455d-98b6-5f665f09ccc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1812609d-d61e-4b7e-bbe3-f0664f7ff337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f52e65-8c34-4271-96d7-3521cc339920",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ef780b-5621-4d0f-8dd3-ed857d17d848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa73bf75-d070-44b4-856f-4605a992234c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759408a5-48e8-422b-b774-8c2047722f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67db6eea-ddaf-40de-a683-d0c74f7d198d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0c95db-5770-4273-95fe-c6e51f08c7c9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d032d8c-10d3-4ede-903d-ca92a56b7c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc70985c-f396-4f76-9b60-c8d25ed9a7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d57d43-4feb-4bf5-bfd0-cbec37ac2f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfa4675-f2ec-499e-a116-25916eb63440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c297ee-c7a3-4fe8-8c2c-8c3548d54499",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc292fd5-4935-40bd-ab54-01d6796b3e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80cb2eb-ff50-445f-ba4e-7b3d46ae9759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7653c1fb-7959-4349-996e-68ed01344fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d41336-a53f-4fb8-a998-2cb930212b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2869ae-adc4-427f-8527-065d0a845e5d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8218b9ea-7c41-4dc1-830a-4b1a677f3207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eaaaab1-1edc-470f-9089-96e4afcf0426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2119055a-692b-400f-972e-963ac947730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "427b839a-595d-49c1-9d3b-1e6c53de851d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35caf634-d51e-4078-afdf-5f9dd02663a6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0479098b-1c1c-43f2-a7ef-71834e25e2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed7e3af-91c7-4e94-9f8a-42b77f54c5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206d7a76-72eb-4eb1-aedf-c6e5a64a23d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c3e050-c095-48b9-a718-710b013c74d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc1c018-d1f0-45af-b435-d3fcb69ba09b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751cb674-6409-47fa-a269-0ea4221ce317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0c2d5c-4599-47ae-ae4f-5cb63eb67e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737b7d6f-92ac-466c-967d-384b89fcf22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e978735-f8be-40d8-a3b2-2d84cf94332c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e5e18d-4672-43ad-855c-b2f3b28e0e2a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b463ced-a6e2-430d-a8aa-d1e7d16ed19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4beb49cd-786a-46be-9cb6-fb71a2e19671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3747d07e-ebc0-4ec9-8423-d6fa224e42a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c841b0-6f92-47e8-a5c4-d6c493acafc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edbabbf-c135-49e3-96ce-77a899848f56",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3196f1-7b85-421c-bd10-3551aff13ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a5f998-fb1e-42b4-8b22-96205e97b3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68948163-b845-47f0-a639-b67827ce3b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf2b268-6654-4081-94d2-0de552d79eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f5656b-7daf-4b16-a9ab-5e2e4e96fdaa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d762a5-2f35-4b99-8e9a-e0fb5a6e891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da0e5a0-c71c-4597-95e7-ac74c16fffe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd6ba0f-3d69-43a9-b497-5832435327f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8590ef-a9c4-4444-8ff6-a8fc2e082aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98fe347-7a1a-4ce4-b66e-da06a111236c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef3cdc6-3656-46ec-a313-ab0209f53130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027be43c-49f8-44ac-bf6b-243de88cc8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98d6c4d-e357-4147-8fbd-8181396547f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54b8486c-0653-4508-9bcd-a565144ac99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c43258-5e63-45e0-b464-31e18282597f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af73d12-bd6e-4287-922e-c4ccf6d87d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61531f34-3c97-4480-a0cf-2d0eeb5021d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b744871-129a-4395-9ab7-481fe67d2e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3780f2d4-61ae-4ed9-bda0-74f8b9e4d137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8c9369-d81a-4ece-a84e-c9ae201aaaf8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e06b42-8607-46b2-aed3-c68859ad639a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54574c0-a9af-4449-8323-18988934f7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c0dc90-1bac-4c61-9040-81579fba8da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03a69527-34e2-479e-be20-23c0f349b737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186c8f63-65e8-4874-b691-fbda341b6df7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec99f55-d4f5-4eb6-90d6-10c53b0a541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69b7f07-2b87-4c70-8725-2f012f76d9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff39946f-73cb-481a-8561-461d7a220ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de97419-a772-4ee8-bda6-5c1db0732805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4d52e9-1e35-4c85-b040-9845ad0ad9e7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c36dc2a-3a05-4b45-a09c-d198f477f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8c6a90-1c44-4d07-9f6c-d23c67200510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384e4594-a47a-4578-955a-f9a81e136f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d50daba-c837-4ef9-b900-b86c5270367a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c10ef1-c36d-45d6-b29e-d0899b7eba18",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a64ca8-0885-4895-975e-0a88500e03b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2f8dba-64d8-426e-8328-cb9ed08495b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4732be29-dea7-48c2-bc8e-7974c4e2acba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "453cf4d1-e4a9-4833-ba73-7a132a02d225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a2f22d-b9ac-4f55-acb6-751fe83f727e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d587f89-7e79-477e-ae25-76fe182f2386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b4e109-e46d-494f-8fbc-26a3248ccd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9ec032-6376-421f-bc6e-b97aeb54b81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4524eb0-e701-412b-b1b1-f5e1d50bc46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bcd8c7-6718-4dc7-b395-9c97e0b58835",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d57d9df-0573-4efe-a847-43b8aa822006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f5deab-525d-4578-be1f-37836575fbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103d27fb-81eb-4661-a1d8-af2f34ccac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2a1cef-4c1c-421a-b2db-19b1e019b3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a34eb27-eb24-4689-9864-e770838fe983",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce92580-7a0e-40f5-8968-eb32cac2ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96b5c50-0511-4606-b9b4-6eb2f7e3cfec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc35b1a-0f55-4656-bc42-34bb9af4e9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d219be78-3660-4d97-81a9-ab952548de8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f001d4-2fad-4449-b58f-035616b81555",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b06a203-bdbd-4109-8ec4-a6cea193ab29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e004d2-a5af-47fd-b77f-5af30cdbc4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3ef2b3-7ddd-445a-b66b-31ea96905f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1504790d-6828-41b6-9c6d-d36cc249d534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2997d1-99f8-45cf-bb40-2ae89ce54767",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae6ab1e-1521-4a77-a560-eeafc26eb904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00104433-27df-4498-8907-7c1061c25b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7626c61c-b371-49a0-bfb1-d96c5bb7b8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1470fd70-baf3-4c23-9e99-8d7e5213de97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a6c2ab-18d2-4d95-96d2-f0ba70b631e0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb617ee3-e5a5-4544-809f-e5cb61137324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad709d1-569e-4db5-a569-822a2df23498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3ca2f8-2cd0-45fa-b03f-bd8d3d6f43f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "de2a9abe-c9fb-49f5-98ee-4b8f9dc8d040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c0ef39-72b9-418f-9f7b-46d9eb64a867",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af410f3-b681-4ec5-bc78-7fd9a9aa1f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eb98a382-e970-4021-a96f-536a18f8e1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9050873-3d96-481a-850c-6d252eeff6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "83aefdb0-57bc-4f6e-a7bb-2a6c8c4698a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a80ff8d-56bd-4cab-b58e-0085f893f1a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba1080d3-9fce-4209-b052-dd01d5321200",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9882131-c6bf-4ae4-ae01-e092ed2dd64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da26b125-2513-481d-9e10-00a916958fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecbd53f-37b1-46b8-a7c8-c28302d853d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "75eaa5ac-63d7-4811-add5-bfa228155d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ec3589-1ea3-490b-9e4d-f9e73007a1b3",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aee67b-baf8-4876-b507-e460b144495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22106caa-558b-4a42-89b3-73494010c878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd03d047-bf20-4d61-9d09-c7a73bb8a26e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0f8a561b-2635-4236-984d-096d8ab78bf6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a92209c-e764-48a9-99d9-8aeff39c3c77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38ad29b8-9142-4171-8996-ec752f424548"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32ec73be-faaa-483a-927e-213e1555fbc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "595b2cff-7e37-435e-972e-cb07160be67a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b65cc40-e407-4fed-88a0-68f870f3a012",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57b0429f-79b2-4c13-9c93-07f42622101a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ccde9a71-54e6-4505-ae06-ccb5855591a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa182b8a-9494-4082-9369-ff560bfe25d2"
                }
              }
            ]
          },
          {
            "id": "f0800c08-f174-42fb-9246-00ac09f8af77",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7e2022b-c51a-4599-a587-35ee8f2784fc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ff8b0ef-40eb-4069-b2d6-84086f0b08cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af86526c-fbed-4f7a-948e-d7d66b8871f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e82f21c4-cd0e-4bd7-b504-698bc3caac84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10c35e93-79e1-4388-97b9-75e148d83c5b"
                    }
                  }
                ]
              },
              {
                "id": "ec1c9e95-451e-4790-ba21-ba7789fa996c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92f525f1-121d-4ffd-b445-83a78ae632ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ad36162-fb5b-43c3-8e54-406cb8c14da4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16f05be7-2fcb-4b82-8e93-33baabac7bdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47b089e4-5ee1-444d-b8a1-61238e9cc48d"
                    }
                  }
                ]
              },
              {
                "id": "76f3cb62-f2cc-42fe-9b3d-979e9a9bcc09",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b614812-07f3-4147-b17a-5d7227a52426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0eeafa43-0549-45ac-b03f-e355a8784a56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c7ab4c2-fc2b-45ff-a649-d9a8c6a4b56f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3a343078-ad84-48d9-821f-546df5c6c91b"
                    }
                  }
                ]
              },
              {
                "id": "70ffc3b8-4568-4058-9e62-81907e3c183e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e6efd04-4cd6-4986-a930-252e00b5b1fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32a11eb3-9e8a-44a6-9391-f7f4a4acca76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad81b61c-d048-4740-974e-9b97a495a8fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dfe38891-a72d-4247-aa61-f777426723a0"
                    }
                  }
                ]
              },
              {
                "id": "02e0ea47-09be-42e8-9f27-48d0cb26e965",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a44b6bd-fd1a-4bca-ac5d-489941e2cbc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e42e55aa-9ed2-45c5-a8e6-f69c27bacf86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd81b2d1-fe74-4a05-a87f-12a427fa4fe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b5f9c2d-6efc-4876-adb8-8bb29f59fc08"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e7949c1-cd85-4ff9-9f75-91d9a8c9ab3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2900c23c-5451-405b-b239-e73848baf34f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a052ccfc-dfcd-4d65-8068-000d0d2f6dff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e6e9c42-4961-470b-a79e-20a4223a634b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fc138df-d295-452f-9357-0b9d9e21a295",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "72397385-981c-4f37-be63-3bafe760127c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc10948c-26f4-4760-a194-8838366c6aee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "baadc5be-6a83-439b-a8e1-d181d98e683a"
            }
          }
        ]
      },
      {
        "id": "a05b48bc-1301-4d86-8770-069a92e2f4ca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8ba27b63-d9b1-42b6-87c3-81ace0cfaf9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef9d5960-7d6e-4ff2-b3a0-bfd7f5f3abbb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a24e991a-4f7b-4117-b0b8-b63be831cc8d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d19c75-726a-4c6c-a48c-6318aa9f47b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cef841-0f79-441c-9c14-1b18aeeea914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c50b6f-84c9-4821-830d-b888b73aa268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "15011961-90e9-469a-a2aa-cbc86b284432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620da0d4-f85b-43cd-8dc3-9a703ac53680",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4acc62e-b918-408b-ad41-826b12b2a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b6b28a-ddd0-4c4b-92bc-6db692b23659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cef18d-fda6-4c33-b224-83e18578ab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b67cb3e-5b51-4d16-9d10-7a3a29c41811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ece6a8-39ff-40b2-875a-1a175dfee3d8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcee4e69-0fef-49ca-b486-dbda7974148b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0144f87-7e6a-4c4f-ad99-4a660a167e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099bfa14-a9e6-4096-9c99-4c0a9b9245de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85170f88-994d-43a4-9bb6-f6c5813ba3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732c75df-fa11-4523-a161-bfcf952afa92",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f458aa4-3fdd-4ff6-b8f5-d3da2120b8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc59991f-4110-4191-be48-b3194e59e14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a668f431-fc80-4a24-bc5f-4991bfebc3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed1156a-4de4-4f00-b617-eca18940ca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9724191-243f-4d38-adf7-a56cb06f6042",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bc70ef-3b9b-421e-8fed-e8fcf501cdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71879436-1ee4-4162-ac20-2c482f6e04ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f453a4f-2d98-4308-854a-97a7d1d7e825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a96cbbaa-ece1-4111-9e0f-f68ff91af669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0a329b-3435-41a2-9d69-87c1f56da41c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c698036a-a56c-41c7-9189-dc04b0f86423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae92dce9-7486-4387-898d-c28b2d1e3adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ecf22f-b35e-442d-9050-d024f47626a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc12421-11d3-445a-82b5-b08915d0c1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07775af-cac3-48a7-ad3d-8d41b14c0637",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7340ea87-0281-4c35-83f9-9b5300efa391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58647108-4713-496c-bbef-f8365ba2d997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1aeaa6-bdb9-4084-aac5-30899d114a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f43c5dc2-cc3d-4b06-9de7-30c146b3f4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb31894-55ad-4701-a678-3ffe0fff7813",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23af53d6-4032-473e-9f10-179c340e6c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f063ef-14f7-4d1b-a509-bd128f9244cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bdeba2-8fdf-4cdf-9ab3-1833b334842a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9325e78f-ebe7-48de-8f87-af906dcf125f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f2eaee-3063-4f90-85c4-f9a631df1f22",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b3290f-25cf-487d-abcf-8e2329a037b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d1fc7f-4de9-4e92-ae28-f6079b02acc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaced7c-592e-4026-a07d-61d735446172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32cf83ab-b5f3-4efe-9736-2e0a2183fe8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579ec747-3ad3-4fc8-a228-292bbdb6c95c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cab28b5-8c71-4493-89e1-20082f4d1e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f13ddd4-c268-4ef8-b80a-049f875bb1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385fc6e0-437e-47e4-9609-ed0d093ffb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "156e571f-98cf-45a8-af33-0a476d9b83f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a139098a-71f7-410f-81d4-9bbdaed44d12",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e01065-f0a5-4893-924d-a9e077cd6b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e91aff-f799-4de6-a7f6-dded38376e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621475b4-ba62-4853-900c-9f46f00cfeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8d774711-cc8e-4577-891d-02bd09d42e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bfb81b-5225-45f1-9f40-7a605edbf665",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15705689-d4f8-4374-b7dd-e899f52517d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ff73a0-04f8-4991-aa47-e95bbca8f70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f306b25b-493d-4247-8f88-990df64d09bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78b61bbb-d700-4bd4-9c7a-56a0629b2ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92b12c6-b320-40b3-ad60-09ac222a40c1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36556fce-b5b5-4824-b717-b5c138e991dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77545d60-55a8-4f5f-b54f-1e64fbbe63dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5597c0c6-49c3-49cb-829e-2d97c42208cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3d7743-674c-41d0-950c-9a7b03939914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954dfd41-7ba0-4c2b-af60-5f47579b2bf9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271cd6d7-40ed-4b8e-a138-46f2424a0143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95503b2e-a703-4474-8815-6a2c0490d14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa49a5c-ee0d-4c3a-8ee7-210892092b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fff7857-a998-4ae8-9abf-c29515796a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f33856-eeb7-4776-82d2-e3eb77a6a320",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c697f9-837b-441d-8831-058ec56e7e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26ef6d4-5406-4a66-937e-28a4a383879c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431dfd24-266b-4d3b-9112-e187df84085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5f5f0d-2cd7-428a-83c4-eb9ff383aa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf643ff-1801-4820-a49e-6f048f549090",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a4d697-335e-4bb2-8e6d-b76fca98b4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330597b9-7ff5-40c2-a313-8102ae0bfaa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ae79e2-cb08-45a5-870b-8c3550d72fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6af133f1-af89-4d3c-95c7-dd7acb5d0824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623f31db-b65a-4318-ad12-f0d231f9ba52",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e90d4dc-3011-42bf-910b-7d3af55b5023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc55d0e7-2ad7-4b1b-89a8-5991c8a7b237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafeb910-7d47-4ab9-bdd3-22a492446744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "db40d1f3-c1bb-44bb-b9bb-321c7ca05146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a5d879-2563-4636-b609-d1211513354b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c104275-22da-45e3-a3e8-af7d69039e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca5efc8-ce66-460b-9285-5d11765355b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f919567-607e-451d-bc59-b2ae40187c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b92855cf-98dd-4ed6-a725-c424de5924f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d812b612-dade-4a21-9fba-e6dae3c4d1a2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ae801f-e98d-442e-808b-7c108b50dd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7164c09e-b0c2-4df2-b5e7-44cccd05520c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4659b7-7ad2-44f9-8651-5fd748a8985a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a66884-12a4-4bd9-acf3-0374e7d1b2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36c34dd-7c17-4044-bfdb-c349ff3022be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3323767-476f-4cc1-b9a6-dd4e856dbfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299fb62c-09c5-4300-9a8e-5372959d3489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b80ab10-aed4-4943-a0fd-03767e86cf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2c6ad9-aafc-45ad-bbc0-def6155f56c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4ea1b6-0cee-4e0f-8347-8add113f44bc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8001be6-89b5-48d9-8dbb-c788e21d4111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effc8dde-3672-422e-b6f8-b0d25c055814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458a38af-8d88-428a-8db1-ff2086c683b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "713770d6-6d6c-4631-8b70-4af1b464d82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafbf972-eeb2-44f2-8cb1-98153fb7a214",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88342e97-d43f-474e-9e7e-7c89654e8405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1010488e-7326-4a4a-afa6-eb6f593fc855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576f6c1c-65fe-4d18-90f3-5dbf3aab0c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea3fca6-3ee4-402c-9b0d-6846faaced7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e9ca94-4eb2-4e55-a6eb-dea322eb5b8d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532429a6-07f5-4e43-85db-eae9b219600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca0df09-269b-435b-bec8-285520fc1206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59362221-bd03-4c13-b2c3-d1560cdc52b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "494dd0c5-a7fe-47b6-955d-46118777331f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a40d61-2e50-47f5-98c2-e6c57383222d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df41405-0573-40d7-a08c-0cfe9f669dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c384738-926d-475b-a611-a76b9cbd7de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1261d46f-a467-486a-b2e4-8a74d1b4a0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5640ebf2-ca50-4771-8b50-d0929c7d2d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d01af7-182a-44d1-a9a0-c21bd5edae94",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbe0c54-7218-4c95-b8c3-b9812bea3aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb821bf-fd00-44bb-9be6-45ab801240c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca7aa4a-67c7-4e3a-88cf-5f6bee89433c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "629cf1fe-e892-4791-9c82-e6d3c6c4c33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f83f035-d247-43d8-97e0-1932d90376ce",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211882b8-f966-4dc9-8404-f917bff713d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69835623-7bb0-4f56-8050-f250d36ed12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc49979e-f13f-4cbe-814d-df647132788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "838cc527-af0d-4921-aaa0-3e8c8e34fa41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41a881a-f22a-4be2-95d4-4607964f39ed",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582f1987-bb71-4a0a-95d3-dc9ffb74e469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faed1cb8-a8ed-4528-b95d-fc28a797ab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cede297-fdfb-4a37-b355-39f6c80fe7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d61f5f-6c81-4836-b84a-201cb11fe163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee470aa-0a70-435c-8507-eb805a09d5f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be761723-ea47-4fb5-8f9b-3e8809d7b163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44319de6-54c1-4fd1-ae5d-e332f3344081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aedaba-2822-45b4-ac28-a986451b053d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e39bfcf-2d17-46d5-b109-edeadc1956cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaeef4d-32e0-4703-b55a-733619ffe7fd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf11905-b445-49d7-a456-19a705fe3ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32405462-ef54-493f-86c7-c99a3692f132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6460e2f0-9c8f-46df-bffa-6f30d4bfe637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a92734-b6c2-4c0f-b782-3a2dac988c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d90a8e6-1f5f-496a-ad3a-a376bfc1469d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd5b7b4-1d8c-49c7-9add-0fdd6a216379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3d73a5-21f8-441e-ad63-3e5b2b9bfc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df60b3f-04ce-4029-9d8c-01f1e46d4fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e302f5a3-e62e-4d35-bc5b-288328ccb7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bd442b-3cae-47f1-8a30-89466148e77a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e760147a-6105-46d8-bb54-a86b62d83c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5393216a-56a2-4f43-8038-7718fc5aeaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b450bb19-b115-4005-a70e-a8ec7bbbd112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "537c221d-90ec-400c-b449-058bad405bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72e2a49-c886-4bba-8d17-27e84a9ec518",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6288a60a-c142-40c2-a4c0-813152301b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49324ac5-6647-4220-a52f-8937a556ddb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22847c20-7260-42f9-8134-c1620325f3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7f4e4a-ced2-4df7-8b08-60ba37ece054"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e5da891-df10-470a-a4e3-5d77198e13b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce480b81-6244-4a81-be37-e6a2cd3f2fd0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33e5c11-af21-471a-b7bd-931b55ceaaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f521acaa-b1cb-4a6b-8c34-59f8f1504572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f676f3-088a-4699-be08-d78b65b25467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f4ea0c4-07f4-487a-b17f-9e415b64912f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc796864-53a8-4e1f-a244-9b128bee180f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fbb391-53dc-4650-8925-56a29825e0e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "1c011eb1-1056-461d-a026-117e576bca87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a99996a-da86-4eda-b79d-8c1854b707d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "100b0524-b698-4b33-8749-6df05af707e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08babd61-dd40-43cd-960b-8d0d399c9f32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4db0184-3940-428b-bcdf-8172c213b754"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bacd037-5c93-4ba8-b470-e2005acd336d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fd35ff9-b380-43d3-accf-5e6ec22cb5cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29495ca5-fed2-4867-8c28-2da8051ddf63",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "526c88d5-3392-4175-a30a-997b36e6355c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0724b14-74cc-4ac5-b6e2-b503ad02da90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c01efdff-98bd-478c-a7e5-b50510bb9f2c"
            }
          }
        ]
      },
      {
        "id": "81652d09-1c42-49de-aeff-93cc62c2a44a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "649b5370-91e8-4258-8420-80a44a102992",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c800ba65-dc47-4881-bc7f-6b55794cae57",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5731e544-46ff-44cd-86a5-7ce312bcc623",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc69e7a-a3cf-4c5b-a06b-30c75081b3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e33990c-57ed-4dd3-a6c5-171adb5afe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0788f40-fae5-493a-9d87-9587ea558591",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148cdfa7-9c87-48e0-8148-11576d6bc451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb64105-b4af-4dab-9710-be887273623d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2c198f-e0fd-43d6-bcd4-ccd91f12a7bd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82641d87-413e-4251-b7e5-ab26955d8eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bd56dc-10c8-4d22-8137-260a430f0141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491085df-f87b-4515-885c-f470d6c3405b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8709567-799e-44ca-aed4-8c3e2ddfe5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f936a2e4-1cbe-45d3-88a6-40a42abe4083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d21f231-f69e-4c35-85d6-06ae1c0753e2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ca7566-9020-4435-b77d-e1f680a6fc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca15a053-7ef3-46a2-a941-badae786286a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418fdd3e-8a87-43de-ae13-0ed9afbe1666",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b348c872-50ef-43fa-aff2-e9a54b4ef045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6543155-f96e-4336-83a4-852c816d1f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ec69fd-4c4b-42bc-9f9d-d3556f3f6915",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc44850-c352-4182-a15f-59c2f0cf967b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25429b25-e86f-4ce4-a281-9dfd0f060c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcf0568-1625-45bf-957d-415d4f4e8833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa06c3b-e2c3-49b8-aeea-aa83cba7d475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4038f3f3-83e9-451e-9e74-f758773a7501",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81beeb45-565b-4996-a094-c275d4f7e510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943f98e2-cbda-4815-b08c-1a3408bd09b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bb8c45-61ab-4542-b430-b9fe0657d3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d009c68d-d847-4d0d-a394-20bfcbf8d73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b31ab2-cf05-4a84-814d-f91866dea247",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26b417a-a008-48e4-af81-35a6a7188790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7988237a-9b11-4c91-a0a5-7906503f81c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972b86be-f00d-44dd-9158-f6ded8afb837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010fe9c8-7f32-4442-8c0d-4b47f1d182d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb80a9a-f015-45a5-9bf1-54f17f72d1b0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8827567b-8fcd-4fa9-9b0f-fbdc7783d3d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8820eb-d0fc-448e-9af6-1a54f08f56c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ccdab0-0549-4337-a264-22206bf3c4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ec3b5d-92dc-4442-8b2b-9020bc749d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca0e4de-18d5-461e-aad4-60b67ce8341c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c518a47d-c152-4294-943c-47b6c46c6ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0f9c10-116a-41b2-ac29-099aadeeb4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b825b25-44a3-4b78-8055-c18f87c8765c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebd8581-f376-4a96-9b01-0bc68b70c3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8588fee3-d13c-44ce-9803-58c95683dcee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d198e85-6771-4860-ab7f-39e03a31cf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02830da0-6160-4415-b147-63c516e36515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdbff89-c88e-42e9-a68d-70f41eb390db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f5e8b6-cd5a-4676-b912-248d76acd665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220c07af-7c33-412d-822f-90ecd32d1566",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f26f7ec-c298-4037-9d2b-bd56489d14e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f65dbd-2f23-4234-a7b8-63d45288a5ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88505bd0-e774-4275-804c-f454535fee29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fb7889-6323-42d3-a62c-fce3cfcdc43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baff1cd-ad7d-4627-b058-d65ea8eb8be1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bf482a-1899-46e9-90e9-82148f81817e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635de152-e1a0-4043-8e69-40786e365fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eddf5a-0ded-47c2-b1e1-7c09734b5d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558e2e26-13b0-452c-8327-a94740258933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc0ca3d-7cdf-4924-81d9-98c8df41c675",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c1e1db-14b8-476b-9117-ef3162d157b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abacb7fb-96f1-4cfb-b87c-838c6caacfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181161e0-8332-485b-9661-697909082c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0df1651-a920-4342-9885-7878ebcb8e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e95f9ab-aa16-497d-ab11-44b560b475c8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b51085-c619-46bb-91cc-35769996c19e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022dbf0c-660f-496c-994e-27ca0e41e1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5236a26f-86bd-46aa-95ca-904450e93ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fea3bb6-8c11-4eb8-9af2-7e57ed3ce4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08ffaca-323c-4627-9907-58c9f5bb4d6d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da291c6f-1cea-4ec3-bcf7-1277cc5ccb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed588f6c-715c-4021-8318-52046209b0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4e44ee-4e32-489c-aa66-69bee9faee41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96876a39-06f6-45f0-b6f3-33dc280d79e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff08656-5542-4385-83c6-c38c69290da7",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ca1a53-80a7-441d-94cc-fd485a3525ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8823d6ef-4684-4037-bcd6-91c935b94272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c08ab0-be0d-4978-af96-c5cb39c33084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8613301-c790-454f-84dd-fa73d8dfbfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfd1ce6-3ffe-4300-b519-6e86500af3a2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0a4bc4-1fb7-4fad-839b-30fd64a27540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8472b7e4-5308-4e48-aaa8-93aec89ced1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50af3254-45e9-4075-8fd1-0762e76c5006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b604cf2-00db-4c91-b74b-a1c4b08188b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a4b82b-08e6-4f61-a3f8-9f38076f4f74",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0023788a-0f4b-4955-a890-93a428802f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295da297-bae6-4fa4-a725-c93d32ce9daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fa8991-4526-4e7b-9180-0b6f981131dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bead3aed-9c46-406d-9558-60377c27d17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7d3e87-3cc8-4572-9997-04abe3c89ca6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07c0aa-177c-454b-9a38-9ae5dbc9b8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503eccf1-a9c0-468e-9451-cc8dea8a3c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f96d17-09a1-452d-8690-adb765a07d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd83de14-0d44-4a4a-a885-8e8f8cc413e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb83f119-fb8d-4d40-9b0f-d7c5d8cb52be",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5e2988-b670-4852-99ac-822200d063c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cdac37-c0c1-48d8-b1d7-2f3d84cc8e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475c87ab-8801-4f2e-bbb5-15d7b77600da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba8754b-e878-4619-a1b6-73a36a71c137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55948306-7634-4be1-bf0c-996ae53bb318",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f1260c-1576-4591-8773-8cb7c90882d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb1312e-d1ba-43fa-8403-84762c82661a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdb6702-213c-4f71-af0a-ef72be3acf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c4ee0e-6576-4918-8286-3fc395aeb2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f091725-9cc1-4e3f-97e9-8bcdb8c35b9f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66c4084-c5d4-42af-8c33-e7173715bb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc46943-1d87-40f9-a79d-936800e32c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea34cd3-d269-412b-b65a-32c7957b638a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2d1e6a-3927-4123-96fa-26149d45bd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be251bcf-cc7b-4ba8-8ce6-4466c868e174",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519e23e1-8cac-47aa-afb8-03f741e64c62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e46ac432-17c4-4874-a54d-814d3acfb506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d7da15-4c65-47ce-a35b-e4a5f5356dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ae818d-d09f-4476-9f9e-58bb4a4d55cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e0ee08-3b5f-4a61-bea7-6f207cd75f46",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899709e9-bd5b-4aba-a3d7-a1fb6aa119c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5513564-6bcc-4cd3-a42b-bd05c83f8693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b47641-e6d1-4ae6-b6c1-458322db59a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33dbda98-fc2e-4d96-bac0-a712d928fd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21a699b-6404-48f0-be11-990e94c63a81",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f4eef8-5846-46fe-ba84-81a418e6a4ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6dd54c-6f8d-41f8-8985-9c69d5824d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395a551a-6ecf-46bc-a4e5-5d7c57ec17f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba0718c-f533-452b-af34-5fda111bf3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c63d51f-0f8c-4c14-b120-e397e491ee8c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c7af80-7608-4b1f-8584-e74e52f4afe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d65dc5-0c3b-48dc-ab16-217c20d49b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc39c22-c2f0-450f-a828-3cc44e1c4813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d6461d-5a57-44e0-af2b-97c3f72217e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d588e7ab-e2c6-40bd-b637-281f6c2c02af",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b91d765-18a3-4e60-ad90-7acf8469fb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3b4338-0990-4234-a98c-bc83f3dc3e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9692019c-85cd-4eb1-a6e6-87a0351c3bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99608577-9575-4984-8f3a-a0fdfebe7056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ade002-0825-4f09-aa10-6663a0daff4d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baeefa2-ab75-4c05-84da-d5c87605df4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "908865e9-f57d-4f24-af5e-131a97f78c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec6762d-f792-4b4f-b473-2dad95c3ac1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e502978-bbe1-4f6f-820c-a7424f421b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c236e0f7-4422-4734-a284-b41ab68af164",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d136c-da6d-4985-bd3a-da054d23c173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65a4518-40cb-466d-9fa0-4f2c3cd27b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f8f445-91a7-4d79-947b-9b2f3301cd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6eefd93-3f23-46cf-87bb-0a4442200c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f79b67-bdc1-4583-ade1-7060bfccc539",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7096e34-c0b1-4544-8d4d-181e0cdd649c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd65936-823e-417d-bf80-102b798a96b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6140a6-2e90-40b0-8393-f189c16319a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a730b8-c206-4166-a56c-9c3c72d44e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634e5148-1409-4fd1-898e-fefe6f0c4211",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c052d130-e3ba-456c-bc1e-a1a4dd3e63da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81e17d8-184a-4835-84ed-26326d3eae7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23047c7e-d29d-4944-9d85-4e64edb7c5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f407f2-dff4-44f6-88a8-189458846d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536bb45d-166e-46ad-91fd-6418fc6ae48d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6854c0a-2954-4591-bdc3-1406842a84d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0741f395-d870-42e6-ad95-683cf0864f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d115761-b578-4a08-8188-2651b868ad45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf436f8-d4a4-4c7d-8194-ac8b1d890dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60efc714-e62d-416a-a6ea-51898f3023ad",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e303a9-2422-4173-afbf-3de411312bc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b95b1aa-986b-4a46-b73b-eb5b8f2b95f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9245fc28-e06d-4565-baf9-26e43b57adba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a364f1d5-224a-40c9-b704-b61a3b9ca765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92626da-161c-432d-ace3-c703be4ca779",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cd5220-14b9-40d0-a942-c30d8be580eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5810df-c0b6-4286-be6d-2a22f1c2ab58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1559c2f-463a-415e-ad99-df94c114a568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f76680f-9fab-406f-9c93-f43e31ceec48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5847d7-e0c2-48d5-8749-9a9b13af6c9d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b226836d-0e56-40bd-a685-1cd5710392da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40f2008-3a9d-419c-bee0-ba953a9401c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001af3ac-8e3d-4ef4-a0b5-d8c2aca70e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a3a394-09c1-4612-89eb-c69a4e20dc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc37943-81d6-46d0-9bd9-d8fc59c2b892",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd7c2a4-f4c4-4359-b814-22e2afb91061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6b7950-d2a3-4ba8-95d1-21c9ac39b406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9132aec4-0431-4786-984a-7cde2e00bb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca2b4b1-f389-45bc-a25f-88591ffe04d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8988d918-bd23-4f78-bbde-b370debc9a7e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82010e9-6a45-4c4b-923a-1cf70bdd6d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96328f31-abbe-4ef9-818b-5f135f2e27d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dcb6a1-c4e4-4631-b434-fde32839778b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fcef1a-ae72-4452-b321-ace997888812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f7d27b-9356-4ba0-9f70-a193ee67cbcb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92548f0-1b35-461c-bda9-b650bcabd4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82efa2d3-35a6-445d-865e-09a177c5d432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553dd305-1c13-4556-a5da-3914d5df7fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025895d6-3272-4312-b821-7d2e0ef64c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb55252-8344-4d21-9d27-4a865b608d53",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c6c7d7-f838-4fb0-8d66-12c54cb18ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c96d66-5122-4d2c-bd2b-043595b64e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb46de7-07b6-4d59-b6e3-baad909196ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e41f9c9-f21b-458f-8979-12fc00cb4ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f162497f-62ed-4082-80d1-4d4f4bc8e562",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a1d6a3-f909-4546-87bd-c0b91c6d633c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4f2609-aaef-4faa-a155-60d5cdf04e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db72082-b9b0-4a28-ab9e-f784a3dc6311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4149026-469a-44aa-82cf-e5a004117d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d7e357-87fa-40b8-8980-0d4051b23e9c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a8b5a5-637d-4893-878e-23045ff71918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1782d5a-d339-42ea-b2ab-02a6872aef77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d075a53b-532b-40ae-80dc-62b21344d687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7584147c-2be4-40c3-bf1c-906e9be8be8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fbca2d-52c0-404f-843c-dd9a26739d0e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91ce134-335d-4cda-991d-d606783eeada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef10f2e1-dbb9-4185-beb9-f934fc6dba03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd69f0b0-3453-4597-a45c-138d82ebff36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b8695c-fda5-4cb3-bd7f-d56ab3727b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea92ca32-5d1c-4537-a6ab-61a67369ad8b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41bd547-03b8-44b7-87b0-65508c201400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a093aa-b164-48d1-a8cc-cdef20338469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37199928-419f-44d9-992c-48ee7988f732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1e3f97-2d0f-4834-a440-5237bc1b1a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f50028-4b3c-4eec-b8b9-e7de33c25c0c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b7bee1-74af-40a9-9ac7-b76595a2b475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d04ea8-a37f-4538-aeb8-d7c35261aa94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0c3a40-46b2-4f6f-ba68-0e29c3fc400d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41600997-ae57-4ea4-bc3f-b1fd6e2b8be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0fc2ce-8245-40d5-9593-dc3c78d6e881",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34bf0a5-ea8d-42a4-b0de-c0f9347160ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a928f0c1-f249-4a22-b7cd-7a2961e8ad06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa54b562-f3bf-471c-9362-a98f9c711342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2de0bfe-5da9-4625-b050-a7bf6400894a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7213bd-1328-4d95-be15-b30c82c6542d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df0d114-27e4-413f-868f-3d2a81a1b53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7787a06d-4d5a-4a14-a627-a29892054eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd0e1c2-02af-4637-8a90-f8546e75f2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffc0e65-25a7-4aa7-85f5-aa7b86003ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e24954a-0cd0-4473-8390-299f5b42e7ee",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95125cb7-67d4-4a99-b33d-e0a406044863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5172b5-2414-400c-a416-73a27db31c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d819e8-cbf8-4b55-9ec2-f05a63cb78b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15e1aab-fb26-4d34-b30c-bb4ffa757f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc6e405-c218-465c-8ccd-e695d8546a45",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0384b083-89f3-4d73-bf7b-294f0e88f351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb573de-f5e1-4108-9a53-6dfaafa90210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e6b2a5-79bb-4675-bf86-f9e519830f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3a7157-80e5-4ea2-afbe-e9d84755f06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5859580-ae67-4d7a-b22c-76cc06165b9f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dc5502-c75c-4a07-bdf6-62abdf29a4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24abe8a0-9855-44f4-8581-67ed8fcbd861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fd7646-09c8-4a5e-8373-19da184f6695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ef71e6-0a5f-43db-859e-2f43f08bdccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8922a791-4f1b-49ad-92bd-80e016a80bce",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4aaabe-a02b-49fa-a3ac-0adc6298ae77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4937ee68-c81d-4735-9ecc-bef668880b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf72b81-5b44-4911-be60-813c834be5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29b7ffe-e901-4ca0-8cce-f67943e7ba51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c765f5-a742-46af-899d-a359df039677",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7ce481-4838-4bbd-bac5-a89c90049365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fabb52d-93c7-4bf2-a6ed-d72e39ddd745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375813ef-444b-48ed-bbdc-bd255eea0969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931919bb-807f-434e-a605-9e70d5b4bbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02564612-706c-41b7-91f7-3546fb16365b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cef9d3d-f340-411a-8c31-bd6bd3e17c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3e2949-c25f-44e6-9cbe-a7d2169a5c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a39a850-7555-4f35-a77b-9d7a8f703022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f7f358-87c6-402f-bb74-3e803e580dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588c42ac-0c18-4fbf-b1c3-397de754f80b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f64352-078a-485c-876e-e5018c2d4644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd18a324-388e-47a0-8d51-f9cd64955400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d42cd2-f0b8-40ab-ae95-7edfea51872e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41a4882-f8bf-4fce-ab88-767ae10d058a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7262dedc-a01c-4231-adf3-96907f7e400e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46aa96ad-94f8-4bc9-af02-49c3b756e82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab92177a-f1e5-48da-94c3-a3483466738c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b65f66-2657-411d-b060-6166986d8ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89408e1-0aaa-453e-96a3-d1afb2d6acd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091168a8-a1af-430b-9448-42d0bd93af0c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ddf306-c682-4f40-bebb-3a6db69bf1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e40303-5edb-4889-bda5-28025fd93282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8db28e-68b7-4b48-893b-413ee8ab059a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1858b068-f6c4-4750-a87c-ffdca549c825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ab74d9-548b-4015-81a6-eca9a5eb66e1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435f6b3c-095b-43b9-98bf-96c79f8c34f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd5438a-8528-42a8-8077-cb6f52595f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846ac23e-10db-439f-8338-a38ec9c4ed0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1235e9-f7de-442d-9e82-7b77cbaffd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c23a96-843b-4fe3-b491-d5535f6b99c8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2f4985-3327-40cd-bfb2-f8dadee034f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c2db45-32c1-4736-abda-d051ee7f3ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008f586e-af57-4085-8cb0-12483908022a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db128e0d-4221-456e-9aee-6ca45f218ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccec982-c352-4fd5-912a-58c61335873f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a40679-d018-4b2d-bf75-c42279ffb639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a38bf9-b1fe-4e7a-90a2-5e9351f95a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02586d43-2275-4b89-865f-1160347630c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba6ec77-3808-4219-9b9e-e67ed54d1458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ed3d06-916c-4531-b995-599ccc54b4fc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6443acf4-9ac5-48d0-97ec-2cc61b787dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024d484d-09e7-43a9-9192-4f38e3a3e944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524a23aa-6f0f-41b1-a72a-8e220eaa8a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4361b94f-1e8f-451b-9fbc-b0e6acf8aab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a02d2a-69f3-48c7-95ff-c387ac683cac",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbcfed2-bcff-48f9-9d97-e6ea8ce4fdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16732117-2be9-4da4-b83e-1e8deae0b818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fa0a2b-ef78-41b5-8ce4-11830a0ed096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b793dc-b419-442e-bd64-2a04f4b24965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a55904e-63b6-41e5-b349-4ef122a9a1ed",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38264b9-b5d6-475c-90a5-32b44bcfc959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a66bf6e-bcbf-480c-9847-0f9182b2cf65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1917110-46b1-4558-83ef-6a3cc8a3fe04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1262e1d3-9f4d-4dac-817e-23410b19f43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b4dbe-daa2-4d7f-b909-2ca756bdec45",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296cfdca-0a10-4f1b-9396-8e945d6c72fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072fe6a0-ac12-46da-8904-8dc3482a226b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6646b5fa-4e04-45bf-a48f-127be0479f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7648d2-6814-4f77-bf6c-f52dd889675c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3621bafb-11e3-439c-a81e-cb5a73da120e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3567505a-cd06-4858-8c99-859ab0fc7fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000b2d60-f98d-4357-8324-2b3631376fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b241bb8-db76-4377-a1e1-32117f6b9cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3954336d-c1de-43d2-80cd-5ec2984051f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34d976f-4224-4d99-b59d-feebea3f123a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743bd02b-b384-4ae5-8473-5d4ee7d9dbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7766d65-1fb7-4204-8816-cb6bc4e9343d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec238e3-026b-4696-a037-16e623ef058d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67f366a-0602-4049-ae06-57998b2ac5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1ae205-da98-46d7-823d-135b3eef9f56",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3abfd1b-70cc-448d-b4cb-5b50fd573770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7161d060-0122-4c91-9f6a-1d4ff092f538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c288faff-0969-41fc-80fa-da81bd30e665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27539bda-8f03-41a8-8d07-52fcb53f2b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9629da-19c1-434d-ada1-78e782aa39cb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4ca2e2-cd94-4983-8195-37cbf94573bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0dbdfff-9d73-4653-8cad-761069e5b69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91e1f69-b066-45cf-b5d1-cbe58e0d08e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63776aaf-ead3-4684-b161-630ecf434f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f935a8-663f-45e4-8ffb-50b2847f32a2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37d5b35-a81c-4e84-bfac-c56ed0da9e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b209a21-1f9a-4847-8847-903db75a2669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c935633e-1ddd-4405-9970-26edbeff50da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b0ae2e-b2dc-4319-8358-487b20400779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cb2f51-7b64-47f3-9bb4-0c802c48166d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e7018f-f83c-4375-846b-967d565bfa6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f005f89e-6c03-435a-9136-c78a9397cdfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915d0a6d-3e51-4304-8a06-63d2d1f77f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfa7093-ff36-41aa-a25e-947616185793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b60e5a-4260-48ff-80b5-d62a654e471b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9c5422-a9fc-4690-bae7-34728ca3d221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "339b9117-f20f-4176-bcac-8f51d3e12bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e944184f-28f2-4730-a925-0f4948a8a8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e314c33-06ae-4c7a-969f-a1119f97e613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f152cb2-a703-472c-9170-2c625ef93867",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77de6297-f49a-4ff4-af7d-c787573af166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5548259-1de1-47d8-aade-132547b65f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f243b9e5-d5cb-4401-8757-f65ebb8a8927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48c0955-6e98-4d05-8353-267fb7aa0f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c6025e-13ad-4938-b90d-709103df089f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7380be9b-37a1-427b-b96b-9bd96ad7def5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc21133-5357-4e28-ba79-5c38b31d158f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f54d52-2bf3-48d3-8253-11c608aa53d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c2eb72-ffe6-4705-a7e2-c4bdf6ec2dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95576a62-964e-41e0-8673-5ae57b609290",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1fbe9c-2ecf-4038-8809-b0b7a2ecee04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15085df8-faa3-4cf6-b53f-adcc1a584fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff7b665-d55b-4077-ac31-9564ab426f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91a37db-8a7d-4b6e-b890-3e91d374ea4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2f6168-14cc-42b2-b452-84363113f600",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7c1037-d1ef-4761-b2e2-5ff54fa28e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "726fb4e6-a832-45b2-bc7f-7ed9d0361c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100b1b78-2d61-415b-90b4-81dbb298a7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060e1c65-93d8-402e-9ac5-75335369cf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e0d706-2f03-432c-8fd5-1185839192d5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f4e7bd-5a5b-46ee-89d9-e18522a0210f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36eec64c-2b73-46a8-bf86-4e74915854c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8ed6ff-e346-498b-a266-8c4d792e1d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cda056-203d-47e8-a50f-5fe4108c0bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c41e6f0-89ec-49bf-966d-4b02d6cba7fc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c8c37b-81bb-4705-87bd-85e8ae8f648d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6fbb3a-7342-489b-afa8-ba4ab714a2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a39e41-685b-4c61-8859-f5f8da2801a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9e3965-4df5-4441-9bcc-49cb900209a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae33db5a-6272-4cad-800f-914d81e29b22",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114e8b84-3b7b-4c84-bf99-c701ec41b064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5232ad69-a060-4141-85a3-de39e2a5958a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64af4f25-13b2-43f8-ab52-e7f9808c2d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d333818-0cd3-4672-a941-cf29b76de532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef2fe15-bbc6-4964-a55a-59906656eef6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90f7096-896c-426b-a8ea-4ae433ea3777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f2f7000-4f32-4a94-a74a-62e86ce31cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc842825-75d7-48ca-956e-e002739652f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a50255a-8f9e-4dda-aa10-108198868317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0917d390-3fd1-4295-abe9-d17b45ebf170",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31080e2-4a3e-4b5c-bf0a-04916640e03d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2d89c4-e0e4-4b5b-b20d-ed09042be0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542b2141-6d76-482e-b099-05dd5fe26588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff965ab-ebc0-48e4-9d81-d302c8d2b44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabdf353-e11b-4f9d-af09-8b256031973d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637c7834-c496-44f4-a0a6-dee9e6f00143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed5b5c8e-101b-4fe7-bb08-9d2cd03837d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79600eb1-b2d3-4284-8ce3-e2f870abb84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace70fd7-d74f-4f7f-b3ae-2ed5adcc17eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16d31a6-9ad7-41af-a277-100158afd2b8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503283a0-75f4-44f6-97d9-0dcd2e485272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a041ed-fd45-409b-b50e-d8431aa77c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e01382-c288-4948-a61c-df3fe89cd249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdf3e92-c511-4176-81c6-303f35e033fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2655e248-df6f-482e-ad8d-c3503d69e337",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3977df42-0188-4cbb-87c7-ca99cb856fdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d6c033-0ace-43b1-9c07-91eee64bb707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eff33c-19ef-4b0e-84dc-1bb25bce6b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb472d4-cb6b-4410-93e5-cf1f183c8b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e033bc3-8a81-45a7-9ec4-baffd32930f9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbb8f45-9356-4559-b745-2b2b79ad13e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a8d11c-b5f6-400c-8668-8b5efea9cf7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb41346-d465-4e6f-a0e7-0d6fc8a704e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99082f3b-70d3-44f1-ad4b-fb5977b1ada5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204b49e0-8825-4eda-b655-cb8f5a19ce0f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e641092-bbaf-4ed0-8b36-d76d7592ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "717d56b8-8396-4df4-957e-cca93bff41b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd66740f-bafc-4356-b8aa-757ef7a2d4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0100a3c0-96ec-4485-8ef1-c215b57434ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a18f0b-56cf-4b2a-8d85-46117e19cc98",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de2ee87-bc6c-43ba-a775-0c8d827c7576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90a29dd-5750-4c90-8176-8a39fa8a0380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff53f4-7223-4409-ac15-17a4554de2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcbfcdd-14ff-4583-8381-6b737ecbd917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0905cf-02e6-4a1d-bfa5-0436e3a372a1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7177eb60-705b-4078-a5c5-1249f899fd7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2be9ebd-c176-434c-aa61-c841dd17b718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edc30ee-072b-4fdb-999c-8ec8a4669986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57130dda-5c28-4c57-9a22-6da7a1421e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e00e96-b61b-4d70-bf48-f987b53054e9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99463838-ffb4-4ae9-ba43-ceb3e7510612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8044ecd9-43b2-49d9-abef-e0532a213a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a235d3-f02a-49a5-b5aa-121e9896e7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dce8dcc-0402-47f4-8041-eb4ae6ddb069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b51af5a-86f4-4092-84eb-2554ea55c793",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66acd9f7-00d2-43ff-ad12-0815d1178907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0a10a5-ee53-423c-8bdb-996ca98a84c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ffd513-a8b7-4b72-9a9f-e86c9b45741c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd332580-6c9e-41ec-843b-32c0988823f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ef990a-02b7-4c94-ae7a-83eb999e7946",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fe6fe3-5c14-4e62-8a0d-b44e54fe6a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b0e3b2d-39ad-4464-96cd-d3a3907bc096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a71984a-33ad-4bca-bc99-9fdf2d4f8504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04a30d1-5a84-4264-8583-9b0781186cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442a4bed-53e9-4939-b9a7-7a373bd9c4fa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0229f3-d5e0-4761-9a41-32027a28e2fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81a4d6d6-3ae2-4658-95b3-a6a24b929138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd12b67-032a-4267-85df-a6c6167eaae9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dbc8eb-c7ea-4d2c-9262-fd921064d987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729b26c6-2c85-4637-a5ee-9152e611bec2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3b155f-a3b0-46cd-86e4-76d6194cc7ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d0de261-3359-4d3c-8e97-3ce2b203ba5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da81cb33-61e8-45b8-9ff1-984ebab6900c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8b5342-9d59-437c-8b49-1ca417d1786b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54751f50-a56e-4fe5-8bcc-49028f048990",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b59c0f6-b43d-4944-8781-4d7d9a4200f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c50f7b-f75a-42ac-bcdd-2fee3ae700c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706200bf-1ea2-4318-a5e7-20558d8577b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc29710b-5e38-47cc-9f96-c26ce5aa6be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43adb393-2e53-4907-9e2f-690c0142c1f0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebdce28-f424-4b59-8b26-4987873a4881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a2c377-6046-4c90-8786-1f263b7dd9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c4b17-5b28-48ee-b952-6bc85a83ff88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ac57a0-0d55-4ee1-a40d-a82c85f7c58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d148303-5f52-45b2-8130-5e2871e4e317",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6513e08a-4b1e-4544-a665-787421564027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f1f409-e7af-4089-857e-f88a072e5045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef9d837-a44f-4815-bb86-8cca8b1cdd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b7ecc9-f3f3-4b1a-ba58-ac87e61e7442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807639c2-8518-463c-92cd-026c2adee2fd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f939242-d0a8-48b0-bff6-1a3087d7264c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f3b5ed-13e4-4b7d-ad20-6882a0a814cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a992f419-5f48-483b-9234-9b3eaaba5356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5856c1-3a5d-4954-ab47-157ebd1a5c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee63f2a5-24d7-497c-b683-9e78a5085a37",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734b1e23-8551-47b9-ac85-b664d2c6ce4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2014e4ff-47f1-4e31-936d-119703567a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1ff4ac-c385-4ad9-b66d-0f9d4fb2c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b2ebe3-6a55-466f-8a74-fdf1d8c06d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb45c018-f37d-42e5-915a-3a1a3d3f01b6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a05b99-cdc9-429a-9dbe-fb16944a8df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc9cf78-4fd7-4b88-8e4f-9386fcfc9f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3538468c-437d-41c3-a91a-634bd4fee042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78a2dae-2cef-4bf8-b273-733e2a0bfcce"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92cab294-16ab-423d-9e7e-d8d034acd050",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e91148c4-12ac-4fe0-8988-0fc5ed8055a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e574ea45-1592-464c-ae58-e39a77abddb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69408d07-c5e0-4793-b5e7-4eedc6e67400"
                    }
                  }
                ]
              },
              {
                "id": "4fa06165-0965-45aa-b61a-179727b2c0d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3519f867-cb1c-4ced-ad66-cd04756ad45e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896385fb-9e7d-4de9-a3f8-1736fb3d6072",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2a9e9d65-ee81-49cd-a689-022a3375bcd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc45a45-939c-4f39-9ce5-7f1d294fa986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9fab15b-446e-4c27-a7dc-ec3aa09aa4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c2bb4d-c627-447b-8f7d-76f2fcda0fff",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c3a96b-997b-46a4-8ab8-ce077dc4d19f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "69989c5a-e249-47c9-a042-3893912a913d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6ccf0d-aaa9-4e6b-9552-abb519d7caf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5adba12-b364-43f6-907d-d8bc006aa6f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee61c18b-741a-40ae-9ef8-bcdd330142c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8827bdc2-d0d8-47e2-93e3-d1d0ae8596b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f58927f8-dd4b-4464-a846-8e3be526cf9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "999242f8-9440-4e2e-8f06-0472d57ae0f3"
                    }
                  }
                ]
              },
              {
                "id": "5980fce4-2127-46c4-8464-1e0994893716",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a2de94b8-45e5-4c51-9e72-35fae94bc437",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad034789-7893-401a-88f0-d2f5faab70cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c428dccc-35f2-4ae6-ace1-ff87c06d87e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c72664-bbc5-4d0f-8323-40652396eaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe4bf79-b216-4483-8932-cec486401b91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b8e31be2-9b07-4c79-9445-07a47164d694",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37ab9bae-5741-400c-bd1c-03949eafa9d5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1a1608d-2e7d-45d9-9036-ef5f9ae7b16e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e1efda2d-ec44-4ac3-8b5a-c58bcaead460"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c40e6d40-62af-4af0-97ba-737e0e9cfb52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc7d1397-5adf-42cf-ba0b-d67648594a0a"
                    }
                  }
                ]
              },
              {
                "id": "d7b63296-bb3e-4b73-afe6-2573103f0f07",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "126f02d1-bf30-444b-9792-f067211702b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "472d9369-cacc-436c-9fe3-6a34c014ce5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0977c545-7c79-4f60-ac34-a3c7dada1a3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23308c9d-4829-4005-b363-3deb06f67b90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53e2cfb4-9078-414e-990f-5801e9a6e3d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "01133d5b-4ad1-44a0-b037-d357d9d61972"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cb4e707-76ac-4470-be74-00610778766f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00899ec1-e068-4d53-b0a6-a3ac279cf157"
            }
          }
        ]
      },
      {
        "id": "53b36ea4-c4e2-4187-b90f-b4968b9b2ffe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0364d7a0-5fb0-4053-95a0-bd5594d851dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d053368e-d26e-4649-9ff6-4c5207e4b078",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "295d5722-a3c9-47d4-9df7-6716dbebe82a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ca8a17-6328-45b8-932c-aff0f37ff8da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0feb5cfa-dc7b-4ff3-a712-42ec4edc4f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d79c04-210d-47fe-aa63-fdefcf97e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "716c82af-3b01-47a9-a28d-a52ad8dc6e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8ab577-907b-4c69-9903-6e72592ee717",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822dc379-4714-4101-a2cc-9e628a9d4ac1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "db6affe6-e8c9-4367-8d75-a7af06c704e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79280330-baf9-48f5-9be2-64d226fa28a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22103605-f1be-475d-b764-1c3c68e5ce9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2839a7e-6154-4abd-b12f-cf9277941b2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8780595-9914-42ec-b233-146de6e914ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4746c8e3-5b10-4375-90c1-35891e1bbafa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a83a7fec-ed07-4e7c-8078-75be840aa610"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15be297e-89bc-4870-aac9-915b845b5ee0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6692ebb3-b92e-44d0-a6b3-882eaf2c231c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df5d68f7-08d9-49cb-8e95-f329cd27450b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8269f1ff-dab8-4d3f-bcfc-2b6cb80f672e"
            }
          }
        ]
      },
      {
        "id": "491a769d-52e2-4447-a364-c522dd702c8a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b191b87-7785-403e-8712-54f464e01194",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11ce3108-9bf6-4e61-ae3c-2056fbba77b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "138b8d61-ab48-426e-94d3-9e0a30b2eebe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd0ec89-97e4-4775-89e6-c8a3fc4d0b04",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "67904dd2-bf59-4df6-9421-a2e965dc7695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d244f0ab-225d-4542-8571-a2e8b0699d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8c98f94-b867-4466-a720-4a4d4aa414b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad8ec8a-54e5-45e1-8617-8382ebb14a31",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471305e8-dad0-427a-beb4-03b453972353",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8753d5e2-63a6-4764-bfa3-dc6eaf92b68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32cdca4-7cb2-4608-b778-8103badaef44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a26b2b0-0e21-4927-a843-b20e660b85d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a32273e8-58fe-4924-8b6f-90aac2ad8d24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdfa5fe5-25a2-44b8-b786-4972bd9dda06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8e84197-76aa-4a67-8a14-a302b38ca3d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "343c1ad3-6887-4fae-bb4a-41d97d49aca4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bbed299-9a59-4c53-999e-455a741be7e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9aacf4ab-41c3-4a87-bcff-5cad3a7ed604"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35349418-51fb-4cde-99a3-a43adcc5839f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af49a3a1-7f15-4082-ac83-5d7998db64ce"
            }
          }
        ]
      },
      {
        "id": "ba3e228f-add9-4b41-9af6-541bf5001214",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "512dae85-7e5c-4ffa-ac87-9d12bf5afb4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "168e9bec-805c-4b77-b2ac-a8b45a0726b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75685858-c45c-4306-bec1-ba5db4f347b1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00c91f6-b753-4622-a2e9-a60ae6065874",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b4f2c7df-fa6a-40d4-abd2-d763884fe742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe95d29-1c9b-4ebc-934a-ee979d9f1b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94b23640-e050-42c6-90e3-73bd8eaf3d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaf894f-512b-4aa5-a5e6-5513e962699c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923c3391-789e-427f-819d-c69f321d8852",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8510e5ef-bde9-4aca-a3ec-8dab5e649eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7453df-6ac3-446b-b82d-9c16ce5696ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7362badd-db57-4f32-a86f-6f4ad654d22e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e94efaa-36e3-4ffc-98b8-0f6559724e1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a27f304-0dfd-445d-a7fe-79007b6a6f65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e3045d-aae8-4df1-a52d-2b83fba14a58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4571037-25ad-4f26-8860-a4df29f913b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d118d6f8-df7e-4d32-a151-53a0d5f755b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "21364579-2344-452c-ab5f-c9ebe074f231"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "577191df-2cb4-4504-9dff-c10da8417033",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e368c35c-bfde-429a-8d14-fc15da74cb8b"
            }
          }
        ]
      },
      {
        "id": "c59a1a68-4b21-4b64-b192-a1238bf75975",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c758a14-f2a9-4ebf-ae5d-fb36645dc2f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31484a9b-558d-4c64-9eb8-9755532a228c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3471b490-556d-4ffe-8f95-d0cc57586e04",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c59287bb-bc99-4fdf-a16a-1cfaaa6694bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62798de6-cdf0-4796-b65e-9fac0bc704b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 580.6870229007636,
      "responseMin": 20,
      "responseMax": 5505,
      "responseSd": 656.5086185020527,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673311265283,
      "completed": 1673311428074
    },
    "executions": [
      {
        "id": "37c75e5b-30e3-477a-88c3-72d678df342b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c1e1dad3-421a-436f-b245-a098c81cc6e1",
          "httpRequestId": "bfee2765-b3c4-4f06-98c1-13b0d44315c1"
        },
        "item": {
          "id": "37c75e5b-30e3-477a-88c3-72d678df342b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d26b56f6-ac4f-4625-891c-53e750cd782e",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "a7bca5c8-1620-48b5-9b3e-2bb2cc4f84e7",
        "cursor": {
          "ref": "c6b1edd1-7bae-494c-a6ef-57917153d519",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "12b7c383-49ca-4862-8808-0911fb319364"
        },
        "item": {
          "id": "a7bca5c8-1620-48b5-9b3e-2bb2cc4f84e7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fc1604cf-ae50-4c45-ae98-2682dcd439aa",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "9268b955-1174-4576-920e-cd0e6b8d12af",
        "cursor": {
          "ref": "37d3ea0b-fd68-427f-aefd-9fca798a68d6",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ac0a723c-650c-4551-a415-2830205b888e"
        },
        "item": {
          "id": "9268b955-1174-4576-920e-cd0e6b8d12af",
          "name": "did_json"
        },
        "response": {
          "id": "178c8dc7-b7a7-4c04-9001-aa0c20f0775e",
          "status": "OK",
          "code": 200,
          "responseTime": 1377,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce02198-1bad-4a6d-9975-8a0fe469053e",
        "cursor": {
          "ref": "ec77c03c-5a15-449c-8e88-666fcd41584b",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b22121b-7596-4511-af3d-7363dc9439c6"
        },
        "item": {
          "id": "4ce02198-1bad-4a6d-9975-8a0fe469053e",
          "name": "did:invalid"
        },
        "response": {
          "id": "35540360-05d3-45c2-a2b5-0c771b221b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1220,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce02198-1bad-4a6d-9975-8a0fe469053e",
        "cursor": {
          "ref": "ec77c03c-5a15-449c-8e88-666fcd41584b",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b22121b-7596-4511-af3d-7363dc9439c6"
        },
        "item": {
          "id": "4ce02198-1bad-4a6d-9975-8a0fe469053e",
          "name": "did:invalid"
        },
        "response": {
          "id": "35540360-05d3-45c2-a2b5-0c771b221b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1220,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefe7af0-cc12-4873-84b7-423bb77c63c4",
        "cursor": {
          "ref": "f4a8df9f-f278-4275-b0cd-78172b4dcfb9",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6bce9dc-5614-480a-8759-33034207efc8"
        },
        "item": {
          "id": "fefe7af0-cc12-4873-84b7-423bb77c63c4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b782c67b-ecc6-4248-9bc5-d2b83daf0477",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1024,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e09efb-5851-40c4-92d9-14a4d8bef5f3",
        "cursor": {
          "ref": "53e189de-6c2b-4733-a6aa-17861354dac5",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "41997078-e432-43d6-845c-62906ebb875f"
        },
        "item": {
          "id": "c0e09efb-5851-40c4-92d9-14a4d8bef5f3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "647778c5-1791-42eb-ba6e-5583332e5094",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1010,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ab91e1-f84c-41a7-b104-f3dee044c576",
        "cursor": {
          "ref": "6feea144-0d65-4176-ae6e-ede65f884c83",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f023e92d-5c23-4d62-8539-61b09b709917"
        },
        "item": {
          "id": "d4ab91e1-f84c-41a7-b104-f3dee044c576",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "32bf9b85-9126-4633-ac0a-2ea51afca271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe8baeb-732d-4877-93fb-1b42945c44c1",
        "cursor": {
          "ref": "7638b2de-2917-489d-b768-2035ac8f4a85",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2eba74ae-15bb-4376-9c06-5994de88e05d"
        },
        "item": {
          "id": "bbe8baeb-732d-4877-93fb-1b42945c44c1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7244c36e-ca5f-4a80-9473-aef2a3e9af17",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1027,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe8baeb-732d-4877-93fb-1b42945c44c1",
        "cursor": {
          "ref": "7638b2de-2917-489d-b768-2035ac8f4a85",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2eba74ae-15bb-4376-9c06-5994de88e05d"
        },
        "item": {
          "id": "bbe8baeb-732d-4877-93fb-1b42945c44c1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7244c36e-ca5f-4a80-9473-aef2a3e9af17",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1027,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1945bf09-6f57-404f-8c31-b6c301fe93dc",
        "cursor": {
          "ref": "5e70864d-580f-4a5e-a9a4-6a0165596030",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "91c86dc3-4c05-440f-8fc7-35591675cd60"
        },
        "item": {
          "id": "1945bf09-6f57-404f-8c31-b6c301fe93dc",
          "name": "identifiers"
        },
        "response": {
          "id": "a7669120-53df-4d0e-bfba-97f0a589280b",
          "status": "OK",
          "code": 200,
          "responseTime": 835,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51339963-d86c-46b6-9e0d-fde29de5b27e",
        "cursor": {
          "ref": "aa150014-cb8a-4b82-8062-e9cfdf88ad1f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1e3dced6-cbcd-4edb-a6e0-498b2e9cc7f1"
        },
        "item": {
          "id": "51339963-d86c-46b6-9e0d-fde29de5b27e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "315a2856-d759-45bf-80b9-a2106c9b30ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51339963-d86c-46b6-9e0d-fde29de5b27e",
        "cursor": {
          "ref": "aa150014-cb8a-4b82-8062-e9cfdf88ad1f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1e3dced6-cbcd-4edb-a6e0-498b2e9cc7f1"
        },
        "item": {
          "id": "51339963-d86c-46b6-9e0d-fde29de5b27e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "315a2856-d759-45bf-80b9-a2106c9b30ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b60196-8d12-4dc0-9ca6-9de1858cdca9",
        "cursor": {
          "ref": "79cc152e-cfb4-4ee6-9326-de2c0b00ba0f",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9212898f-2446-4350-b5d0-29cfcd73eed0"
        },
        "item": {
          "id": "26b60196-8d12-4dc0-9ca6-9de1858cdca9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1fab598c-a390-4915-ad2b-389591d76907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712572b2-4519-4b11-be1a-8515d45145ee",
        "cursor": {
          "ref": "caf884f7-2199-43d5-9f38-91b789d46736",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fa3c4cc1-649d-4563-befe-065cded1ba24"
        },
        "item": {
          "id": "712572b2-4519-4b11-be1a-8515d45145ee",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "d47964ea-d783-4ebd-b2a0-53ed4c0b0604",
          "status": "Created",
          "code": 201,
          "responseTime": 2614,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "8813b3fd-6435-46d6-895c-ce74a9b6e773",
        "cursor": {
          "ref": "9111d6db-0c86-4f7c-b1bb-9149147e9d8b",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "07c3b4f0-c016-4fd9-b0d6-3ecee54127fc"
        },
        "item": {
          "id": "8813b3fd-6435-46d6-895c-ce74a9b6e773",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b3efb801-93c9-4f23-aa2f-a0da99602a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9826f551-35a5-4198-8c51-b7ebe4a517d4",
        "cursor": {
          "ref": "8b2faf36-db1b-4e40-8a12-9d7282788195",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c5b07d27-0ceb-4f5e-be4b-160600c9d918"
        },
        "item": {
          "id": "9826f551-35a5-4198-8c51-b7ebe4a517d4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1ea55fb1-1d69-43da-9419-1dbabec78284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3923a1c3-395a-4db8-85c2-f3f94c185dda",
        "cursor": {
          "ref": "4facc023-bb94-4f4f-a071-dae34ba857b7",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b731468a-5126-4191-bdc3-11764e49a63a"
        },
        "item": {
          "id": "3923a1c3-395a-4db8-85c2-f3f94c185dda",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2b02e0df-9d70-4b32-940c-55e3154a5083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a766d50-152e-419e-8917-f3c83f92e3a2",
        "cursor": {
          "ref": "7161cf00-b7b0-4462-a7a4-2347de58f180",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4eee69c7-da38-4294-b4b3-d5adb3ef7bfa"
        },
        "item": {
          "id": "0a766d50-152e-419e-8917-f3c83f92e3a2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2cb1018f-5f20-4b19-8a56-2dd357fe4c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cc243e-a875-4bbe-b1ce-e096b9d7d5c0",
        "cursor": {
          "ref": "17b6bb09-95ed-487d-bece-30143a9d205d",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f2347ef3-0599-47aa-86c0-0a88f49185c9"
        },
        "item": {
          "id": "43cc243e-a875-4bbe-b1ce-e096b9d7d5c0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a9ccb38c-c6d3-47e9-8833-403334c77464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad1fb2d-1c33-41a5-ba41-e3d7f0660855",
        "cursor": {
          "ref": "7d1da3a6-6e5e-4422-89d8-1b9f7562a1a7",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "879ae4f1-4c2a-4e0a-9f4d-c83d86cb2b53"
        },
        "item": {
          "id": "fad1fb2d-1c33-41a5-ba41-e3d7f0660855",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "706166ad-043b-4c3e-90e5-93a75d68da94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae686e25-21f0-4800-9a91-b479514584f3",
        "cursor": {
          "ref": "12aeea2e-0213-44d9-82e6-51745401b109",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7db6edd6-1e3b-4366-9830-baee688b3a83"
        },
        "item": {
          "id": "ae686e25-21f0-4800-9a91-b479514584f3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "abbcc1ef-2298-4c2d-8f80-6254b3fdbc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95534f38-13ed-41bd-9192-0d5c19e73b88",
        "cursor": {
          "ref": "b5681577-c244-4c7a-9f43-6eda906faaf5",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "97533cd6-432a-440f-8fdf-b31d9486db18"
        },
        "item": {
          "id": "95534f38-13ed-41bd-9192-0d5c19e73b88",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1e030615-d00c-45d0-a7da-27ce387c4479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042d96f5-9bb1-491e-bb02-42a8e8eae4cd",
        "cursor": {
          "ref": "52f0ee42-6359-4ca0-a5fd-dd3369c93a7a",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3fc6c9d0-d3d6-485b-b998-f7c1cb6982f4"
        },
        "item": {
          "id": "042d96f5-9bb1-491e-bb02-42a8e8eae4cd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c61500cc-9fc8-4937-a649-9a5fbe9565a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfa417f-014e-4311-9a51-52ab1915f091",
        "cursor": {
          "ref": "873e5f83-b72d-4571-8b72-88c50c75379b",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "182d276f-ea7c-40df-b92b-69bc316a25c3"
        },
        "item": {
          "id": "0dfa417f-014e-4311-9a51-52ab1915f091",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "57918e76-c236-4cd4-9a44-9857bb99534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67819da-997d-40b7-9806-fb23cc1817d0",
        "cursor": {
          "ref": "8311c18e-f3cc-49fd-b353-9a05c375800b",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9272c7f0-9c91-4dbf-80f7-da6a006ffbec"
        },
        "item": {
          "id": "c67819da-997d-40b7-9806-fb23cc1817d0",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "ed87c268-69a0-4fae-a936-e2675276ec20",
          "status": "Created",
          "code": 201,
          "responseTime": 4349,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "96642630-de22-4d74-9f54-67cd528e3f49",
        "cursor": {
          "ref": "035160b5-0222-4aba-86c7-3191b55bd95b",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "108c2ce1-1ff2-420a-845f-65a53966ef22"
        },
        "item": {
          "id": "96642630-de22-4d74-9f54-67cd528e3f49",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bd0f3d8e-7724-4540-9224-8b39dfcb97bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a349f29-838e-4a5b-ac73-e1550bc95532",
        "cursor": {
          "ref": "b705b10d-e46f-41f1-a94b-63b69dd74471",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6e5cd2ec-b58e-44cf-895d-1fdbc442c9e2"
        },
        "item": {
          "id": "0a349f29-838e-4a5b-ac73-e1550bc95532",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "209a1fb8-d228-4422-a50e-aecc1bda9be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38450d0a-6aef-4578-97f6-2f3094b5240c",
        "cursor": {
          "ref": "e70ee52d-353d-4b05-ac68-eb89d8e88ebf",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0f335abc-e747-457e-975c-718f33495c62"
        },
        "item": {
          "id": "38450d0a-6aef-4578-97f6-2f3094b5240c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e81f93ac-1192-4c18-99fc-b13e7a588c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4fc70c-1ba5-4bb2-9fd1-213accb1fe48",
        "cursor": {
          "ref": "c2e389de-e25b-476a-8846-1a51cd0dbbd4",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "48d3112b-9674-4656-a6f6-945d9e02c8c6"
        },
        "item": {
          "id": "4e4fc70c-1ba5-4bb2-9fd1-213accb1fe48",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "545e54df-b0ba-44e7-923f-b3dfc73d6910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca010b0a-75a5-42a4-b93b-aab5f66c0c93",
        "cursor": {
          "ref": "cd0f76ac-8212-41b3-8559-3265178409b8",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "27b54dcb-4528-4ec5-87ed-61f70b79a61e"
        },
        "item": {
          "id": "ca010b0a-75a5-42a4-b93b-aab5f66c0c93",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bc7b10d3-5d86-48ae-89f6-4870f9d39c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e177f9-3367-42f4-a7ae-49b0028c9725",
        "cursor": {
          "ref": "d211a305-3cb0-4414-9221-7971d9e5fb70",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "451597d0-ddbc-4872-bf57-4095f9eef03f"
        },
        "item": {
          "id": "c3e177f9-3367-42f4-a7ae-49b0028c9725",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "74f4c98d-b3aa-4cf1-ad4b-0950d677e47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d66325-336e-4708-a465-ab530d4fe058",
        "cursor": {
          "ref": "93b73075-8fbe-44a6-943d-46e8313be89b",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2efa29ca-20cb-4f77-ad38-a38500712d0e"
        },
        "item": {
          "id": "05d66325-336e-4708-a465-ab530d4fe058",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ea72a317-fc8c-49b4-8124-e9b8186d8b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc8d73d-1306-444a-be47-7eafc51bcd0c",
        "cursor": {
          "ref": "8de1bda5-5736-4faa-8075-d84ec6245fed",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5e6a6e87-d60b-4ed2-868b-8da52cad7852"
        },
        "item": {
          "id": "dcc8d73d-1306-444a-be47-7eafc51bcd0c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "86b4e427-9109-4f53-aedc-96288b18586d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e00a4e-7871-4c92-b264-3437ed3a1b52",
        "cursor": {
          "ref": "b7342c7a-ad44-4f8d-a812-f57f33165a6a",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "06663274-083b-43f0-bbf9-0b44b5e33ae5"
        },
        "item": {
          "id": "73e00a4e-7871-4c92-b264-3437ed3a1b52",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6487381a-15dc-4783-be79-dfc0ed13a2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a159a38-0359-447a-a25a-4725db1ebef2",
        "cursor": {
          "ref": "5bdeb102-eb96-453d-b74b-150a36aac291",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "48bde6b6-a31c-4304-a8bb-5eca6de483e0"
        },
        "item": {
          "id": "0a159a38-0359-447a-a25a-4725db1ebef2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a51133eb-8e34-4ba9-8492-df775056e8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07204d1-5c01-4c7c-a5be-36b6a23077c4",
        "cursor": {
          "ref": "c7e19b43-6ba6-4203-b867-845f839d564d",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e7029e98-83bc-4598-9b60-e6f159770aaf"
        },
        "item": {
          "id": "d07204d1-5c01-4c7c-a5be-36b6a23077c4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2aaa7864-55a1-4748-82e5-5142cac4fb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11ebe86-1c42-4b9c-ba4e-0f3d80bb7f2b",
        "cursor": {
          "ref": "fb82e1b5-9611-4305-9657-eea603648843",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fd41cdd4-e8d3-4721-8b20-7a02add34bc1"
        },
        "item": {
          "id": "d11ebe86-1c42-4b9c-ba4e-0f3d80bb7f2b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3205b5be-f405-41b6-9ff3-872ccf6f83f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2714,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "b5e03d72-aa4f-4636-a3cd-a67a73941259",
        "cursor": {
          "ref": "a21f7459-f6c8-43ef-8ffb-6c348b512c4f",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "75dcbfd9-15e8-4c29-83ce-d2fa41f5777d"
        },
        "item": {
          "id": "b5e03d72-aa4f-4636-a3cd-a67a73941259",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9fb2971a-f80f-4237-873c-36c9c7e43c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc493afb-7279-4031-9cbf-2da384233433",
        "cursor": {
          "ref": "6c9e04bb-84d7-44bf-9b0e-5c71fa938f14",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4ec88cbe-129f-4635-ad49-ae7d981192cb"
        },
        "item": {
          "id": "cc493afb-7279-4031-9cbf-2da384233433",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a4c7197f-dd9b-4499-85ba-cb3fe248c28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c40f6b6-e520-4bba-bd41-7db722f4cf9c",
        "cursor": {
          "ref": "1765aecb-bdc7-4666-90aa-0980dc991d99",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a54ef2cb-c925-40e8-8688-a8faffcf9044"
        },
        "item": {
          "id": "1c40f6b6-e520-4bba-bd41-7db722f4cf9c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ffbc3b05-47fa-408a-bfa3-21449016d741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf43eb6-1f79-49e3-894c-963df7f669f7",
        "cursor": {
          "ref": "80bacf19-38d3-4fa8-a952-bf3d31397400",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c77a44d1-c664-4eef-9c36-832658cddd7d"
        },
        "item": {
          "id": "eaf43eb6-1f79-49e3-894c-963df7f669f7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ec7a0af4-9c27-43c2-9c32-6f9327393411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49567c9-a51f-4431-a909-e744d9a80913",
        "cursor": {
          "ref": "6b491b81-d256-4a0d-8b00-61522c561d02",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "269b1a0b-ae76-4c69-8879-02c6f3bc570d"
        },
        "item": {
          "id": "a49567c9-a51f-4431-a909-e744d9a80913",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3eac702d-14f8-431e-b7dd-0134d60d7335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3143f1f4-51b4-4aa5-9613-f3b510bfe0ac",
        "cursor": {
          "ref": "e6d133af-88ac-42b6-8f14-0ccdc5971617",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9e1a3169-76d4-45df-89e8-a34d7e913fd2"
        },
        "item": {
          "id": "3143f1f4-51b4-4aa5-9613-f3b510bfe0ac",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "494b7291-8c6a-47cf-bca1-28cbf8e884d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6610f2-12be-4b5a-be92-ef11a308bd85",
        "cursor": {
          "ref": "deaacef5-b70e-4cf6-876a-3771aa6e9609",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2f0f3f75-bee4-43ca-8e8e-d8427de7ec3b"
        },
        "item": {
          "id": "8c6610f2-12be-4b5a-be92-ef11a308bd85",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2cb30436-e8da-4b06-a3bb-e0137853175c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85eb6e6-2813-427d-afcc-db8d5fb58261",
        "cursor": {
          "ref": "2f118ed4-b35e-4866-a283-8e475b986018",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5962a18f-9234-4c97-bdb2-560961c7b6c1"
        },
        "item": {
          "id": "c85eb6e6-2813-427d-afcc-db8d5fb58261",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "48cef0d9-e54b-4410-86ca-91d6d40a9306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e0d614-a291-428e-bb3c-d41e31eef152",
        "cursor": {
          "ref": "e80dc4f4-27d6-440f-9eb6-b884d9f23a88",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "caccea4d-edf0-4834-bdfd-d1f3044e13f0"
        },
        "item": {
          "id": "80e0d614-a291-428e-bb3c-d41e31eef152",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f8e653cd-c04b-47ec-b9a3-a0a472f52d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7a598d-1913-479b-ab45-b591af47ae30",
        "cursor": {
          "ref": "69a261e4-baee-49a5-b6f9-62b77bcadf79",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f9a505ec-4c38-4a37-80cf-cc2bacf774d0"
        },
        "item": {
          "id": "ea7a598d-1913-479b-ab45-b591af47ae30",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "69cf7449-b169-4974-a2d5-ac6d9bffca8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d535a070-4e16-4622-8fc0-69663447e428",
        "cursor": {
          "ref": "40e8e508-b177-406d-9004-df34ac9fb317",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fae064a9-48ed-4a80-8891-6305f20b2d97"
        },
        "item": {
          "id": "d535a070-4e16-4622-8fc0-69663447e428",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ee5791d8-f686-4e5d-8cd8-3607d2a25d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0094068-6742-4fc9-8b51-42f66712f710",
        "cursor": {
          "ref": "89bb8239-d986-431a-9809-f57bf16635cb",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1b00a3d6-9845-4c94-83a4-198a6f073db7"
        },
        "item": {
          "id": "e0094068-6742-4fc9-8b51-42f66712f710",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "70f55765-b787-43eb-b6fb-a694fdd0175a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 595,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303f94e1-d236-4afc-8f9c-b1ae26eb0448",
        "cursor": {
          "ref": "3e85bcde-c87f-4765-8554-5f7d602a675a",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "11fac0be-13f2-4677-8fb9-675e9fb9b4cf"
        },
        "item": {
          "id": "303f94e1-d236-4afc-8f9c-b1ae26eb0448",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f432e05e-5752-4940-89f2-652bb54b6f8e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 502,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "4068f371-e621-4845-a963-63fca7e9300f",
        "cursor": {
          "ref": "92230fc3-0c69-46c2-8d5b-84e4d58d724a",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bd2af076-bc05-46e5-bac3-03b18396567b"
        },
        "item": {
          "id": "4068f371-e621-4845-a963-63fca7e9300f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ca839d53-fb0b-4601-ae41-3f2da8c11fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aa31e0-0ef8-4831-bb4b-aafc0857ff90",
        "cursor": {
          "ref": "3796dd8d-d8c5-4f19-a944-c724f19c073e",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9d8b9a81-c8a1-492a-a4fc-711c59a96a46"
        },
        "item": {
          "id": "c7aa31e0-0ef8-4831-bb4b-aafc0857ff90",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "959182fc-e655-4ef1-8002-bd34578a79bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa83472-d58d-4282-b78f-1fb54e06b7b4",
        "cursor": {
          "ref": "bd7a41f7-2f97-489c-87eb-d40e3b728498",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1d5ce7fb-59a2-4310-bd82-40851df1fff8"
        },
        "item": {
          "id": "3aa83472-d58d-4282-b78f-1fb54e06b7b4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "99adbc27-9ad4-4aea-b065-532b52006374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04393488-b688-42af-9c2f-df97049a0271",
        "cursor": {
          "ref": "0a43a009-492f-49b3-9844-1b46c4824826",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "86e5d78d-3b19-4880-a126-ca3f563d6da1"
        },
        "item": {
          "id": "04393488-b688-42af-9c2f-df97049a0271",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f8cd39bc-ff22-4d10-8539-3016d45ae114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e5a2bd-9f11-440e-9f36-e94cf1a326e9",
        "cursor": {
          "ref": "9e770878-8eb3-4971-80c1-6ff0182bd94a",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3014504d-285b-4a76-97c1-119ba1608a23"
        },
        "item": {
          "id": "09e5a2bd-9f11-440e-9f36-e94cf1a326e9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "03d5d52c-06e0-42b0-841c-4cd0f72e0597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55cbec1-dd52-471b-85bf-68f0e96c4d58",
        "cursor": {
          "ref": "e0b13574-ed42-4187-8b12-256ac4a0e591",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6194db80-2c92-4565-847e-7f62fb3afeb2"
        },
        "item": {
          "id": "c55cbec1-dd52-471b-85bf-68f0e96c4d58",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cc46d6a9-10fb-457b-99e4-5a0cf024a684",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 570,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883b1b4a-787a-4bf5-91c3-427dabfa7492",
        "cursor": {
          "ref": "bd98a605-8fe4-42e0-9427-78242fac5295",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1c538293-07cf-411b-865f-4d524339d184"
        },
        "item": {
          "id": "883b1b4a-787a-4bf5-91c3-427dabfa7492",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5720aa0d-9606-4052-8355-ec8c86b30acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f680ba-9c64-4d8c-aaa4-405629ec88f0",
        "cursor": {
          "ref": "5756a9ba-36a5-4bbb-a590-a1a2885b9ca2",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1a1b3f3a-dd92-4c5e-b2c4-93332cc56b94"
        },
        "item": {
          "id": "d3f680ba-9c64-4d8c-aaa4-405629ec88f0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0f3de60d-8547-4fa5-a52a-ca57ec10e358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413e99b5-4e08-431e-9d26-fa3aabe9b60c",
        "cursor": {
          "ref": "fb8af95d-7850-41b5-88f4-cf32527936ff",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "455042df-6c40-42fe-89bf-ae89dd0c2bdf"
        },
        "item": {
          "id": "413e99b5-4e08-431e-9d26-fa3aabe9b60c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bf5811f0-8531-4625-9f43-b6adc9354e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32838cef-b474-4acf-9274-fb98b06fb3b6",
        "cursor": {
          "ref": "a7342a83-81cb-4d11-8e93-77a98f427394",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "01f55bfd-0f3a-40c8-85ec-7123a9a128ed"
        },
        "item": {
          "id": "32838cef-b474-4acf-9274-fb98b06fb3b6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "924cb573-a2f0-41f5-88c3-2025c29094e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8453fb1a-6866-4d5e-a96f-77cc528eff62",
        "cursor": {
          "ref": "ad45cfc3-ec5d-43a5-960d-03847a823640",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "96048460-f78c-46c5-8e87-ae770d41034c"
        },
        "item": {
          "id": "8453fb1a-6866-4d5e-a96f-77cc528eff62",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b12512a5-f32d-4ad5-8a86-617db585ac5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92b3aa3-2a8c-4bad-a603-37d4d0715fe7",
        "cursor": {
          "ref": "385af6e5-cad1-4c6b-b3ac-355bd72e6cde",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "30db9df1-e9e1-4975-88c7-e02c7f13c87b"
        },
        "item": {
          "id": "f92b3aa3-2a8c-4bad-a603-37d4d0715fe7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1e268330-fb7a-4645-92c8-ea2c5d50bf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecdc346-0e12-4092-9bb3-193cc3f24aac",
        "cursor": {
          "ref": "86bbe5ae-36b4-4b33-b977-0b3fe81e2a95",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0dd6bbf2-1834-4aa1-b0ec-bb73099eaa4e"
        },
        "item": {
          "id": "cecdc346-0e12-4092-9bb3-193cc3f24aac",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ef62f070-fef0-41d8-ac41-d445885ef466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cae735-5cde-4427-a1a1-fc4ede9dfc48",
        "cursor": {
          "ref": "d18458ad-f7cb-4f08-aa7b-19f0de393266",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5aa2abf1-9ad8-445d-aee1-a60f07e52bd5"
        },
        "item": {
          "id": "d1cae735-5cde-4427-a1a1-fc4ede9dfc48",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "619e5259-5df2-4023-be5a-3533b0dd0475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47560a9e-902e-4cac-96d4-1441b0f015b5",
        "cursor": {
          "ref": "a2b19ec9-90b6-4eed-a404-c6d02458dcbe",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b6025ac3-e4b9-4ae1-bf49-387e08d99ea4"
        },
        "item": {
          "id": "47560a9e-902e-4cac-96d4-1441b0f015b5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8fc93b43-fa24-4f34-b4b6-fc4d27f525e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d296b341-3866-419e-8c26-ba2062b0ebc1",
        "cursor": {
          "ref": "aba76e59-66f0-4d28-bc2b-e645b16bb897",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e9572cf0-b6d9-4c4d-92ae-85e1a0807170"
        },
        "item": {
          "id": "d296b341-3866-419e-8c26-ba2062b0ebc1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "41ffb358-b213-4799-89b7-20c35af06ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a88b8c8-17be-4b4b-a9c9-b9b2fa81e6c8",
        "cursor": {
          "ref": "455a27d6-7f74-4737-8174-18dc935409b0",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7301b36d-828d-4f42-9c72-9094e1df05f2"
        },
        "item": {
          "id": "8a88b8c8-17be-4b4b-a9c9-b9b2fa81e6c8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6d1bd17b-d770-40bf-b994-4251ebfb447d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59231cd-a5af-454f-ae61-9de34344d882",
        "cursor": {
          "ref": "a4356276-e320-4078-9780-213b4e54c775",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "814ea337-c9eb-4f40-a1c0-7e8226917274"
        },
        "item": {
          "id": "d59231cd-a5af-454f-ae61-9de34344d882",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0861b34e-bbe0-4309-a73d-2e915b580102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f327105-a29f-4ef7-9101-2208d9627646",
        "cursor": {
          "ref": "18e0537b-bb96-4f7e-afbc-4e1bfd999fd8",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aea13c64-8632-417c-8757-b873cb293ec5"
        },
        "item": {
          "id": "4f327105-a29f-4ef7-9101-2208d9627646",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f505888-a293-4c8c-afc7-33be0c1e1738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a39e35-49da-475a-8b5d-0c88971f12eb",
        "cursor": {
          "ref": "16859c18-ad81-4b98-8607-0f7080f43c03",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b968cd6e-fd8e-4e1b-adb3-0ebf2edfb895"
        },
        "item": {
          "id": "38a39e35-49da-475a-8b5d-0c88971f12eb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "00c498bc-1fba-4ca8-aa30-af42ab02c10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3408bced-eb11-43e0-81e6-62e2de1934f8",
        "cursor": {
          "ref": "f6d940c9-3cf8-485a-96a3-002752e7666b",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "94736c33-694f-4c81-b4d6-ebbc3e2a9249"
        },
        "item": {
          "id": "3408bced-eb11-43e0-81e6-62e2de1934f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "22107387-66d9-47a2-a8d2-3fb9f897ff89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30cc716-6290-4dcc-84a7-18ff57027844",
        "cursor": {
          "ref": "39d66d48-5c98-42ed-9ff3-ccd79de4597d",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b9f8beac-c71e-4f1d-8af2-b7bfe4edfae1"
        },
        "item": {
          "id": "a30cc716-6290-4dcc-84a7-18ff57027844",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "376f0a8b-5960-4e8a-bd25-6841d1894ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d7c617-c821-4b3a-9ffa-cb73a95c1158",
        "cursor": {
          "ref": "32fe28dc-90ad-46f1-bbbb-f5199390aedb",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b58c35ca-154b-4e5d-a13f-c19c246aafc9"
        },
        "item": {
          "id": "b2d7c617-c821-4b3a-9ffa-cb73a95c1158",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c42c06d9-f1bf-4a6b-a220-57c8db01c790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6dd3a2-b4cd-4bb3-bec0-e775688d0852",
        "cursor": {
          "ref": "6a47cb48-946e-4a8c-94f6-806af70c7107",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1cd8c4a0-bd9f-4d10-9aa4-bcbc99fafb68"
        },
        "item": {
          "id": "ea6dd3a2-b4cd-4bb3-bec0-e775688d0852",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "62e8ce3e-3446-4384-818d-b58fe2033032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05a4ee9-b364-43cb-96a0-f2962724a0fc",
        "cursor": {
          "ref": "3f5c2537-ff8a-472f-98bc-67151aff963d",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b0f09894-11e4-4b84-b963-6b5c1321805d"
        },
        "item": {
          "id": "e05a4ee9-b364-43cb-96a0-f2962724a0fc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0cd02fe6-c613-4b82-9f17-a123b869920d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c949e6-9018-4c76-a70c-cbb73d007d70",
        "cursor": {
          "ref": "c468498b-2f4e-41fd-bb34-2d00726cdaa5",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "94782ec7-ca80-47c9-88f8-3605d2e5d099"
        },
        "item": {
          "id": "c7c949e6-9018-4c76-a70c-cbb73d007d70",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "145fbd15-c9a4-4300-bcbc-37c1fb5ba6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600c550a-a98d-4c89-905a-7a6ff067d0a0",
        "cursor": {
          "ref": "6c37d4a1-18ef-41ac-83e9-2827042e3b5a",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "00a19655-ca11-435a-b8c0-c94aecaa81c4"
        },
        "item": {
          "id": "600c550a-a98d-4c89-905a-7a6ff067d0a0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7d7d4d95-d007-4858-85ca-c240157473e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26218c7e-cb98-4619-a1f3-104a52b76d6a",
        "cursor": {
          "ref": "856829b1-ba59-4ebc-9879-dc0a4dd3b4ff",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6695ed7a-2c19-4b68-8753-e4d48bb31f45"
        },
        "item": {
          "id": "26218c7e-cb98-4619-a1f3-104a52b76d6a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "af7df715-576e-42f9-a5d1-34ffd038eecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7b3321-5ffc-473a-84ff-11f510aed6db",
        "cursor": {
          "ref": "adc3e659-8e69-4784-82d6-34088f8de938",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fce628c6-4c81-4477-aa2c-6b2b0cea9b41"
        },
        "item": {
          "id": "df7b3321-5ffc-473a-84ff-11f510aed6db",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0abb5b22-d8ed-4a28-9afb-d5e2ed1d87ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d8b4c-6ffd-4b56-9a70-78dbefb20399",
        "cursor": {
          "ref": "eea2e8e2-db75-4b49-b1fd-6f9026a05058",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "77e344df-d315-4200-a221-ad274425299d"
        },
        "item": {
          "id": "903d8b4c-6ffd-4b56-9a70-78dbefb20399",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4578664f-9284-408e-a42c-692bc4fcb77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a8ff11-38a3-4aa1-960d-f5526d14f36c",
        "cursor": {
          "ref": "f1cee0d1-1928-489e-aaaa-a260d931794e",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d22424d0-b979-486d-ad35-d386cd1b04b0"
        },
        "item": {
          "id": "55a8ff11-38a3-4aa1-960d-f5526d14f36c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f36639ca-bab5-4b4a-9621-811edcbc0142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f893375e-e973-4b19-8b7d-696183e2d086",
        "cursor": {
          "ref": "a83e837c-338a-412e-834e-d4373356286a",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b4d513b2-4c55-4f9b-8d1b-4b8bc5bef18e"
        },
        "item": {
          "id": "f893375e-e973-4b19-8b7d-696183e2d086",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e4a3cbaf-7afa-4344-9928-a6674f4ad77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a36cfc-4a4f-414f-956b-c216eee8f9f9",
        "cursor": {
          "ref": "25c8885f-9754-4e82-823b-cd48c8e30d99",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "182392c2-e48b-451c-b3bf-aa52beb974c3"
        },
        "item": {
          "id": "89a36cfc-4a4f-414f-956b-c216eee8f9f9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "789d0fa0-fc64-47c8-9712-7442ecee692d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f52e65-8c34-4271-96d7-3521cc339920",
        "cursor": {
          "ref": "a8a0a8ca-8d85-42f2-960c-3f17f7adcb9b",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "85163f9c-a62c-4ec2-9c79-e07aa2cb61e7"
        },
        "item": {
          "id": "99f52e65-8c34-4271-96d7-3521cc339920",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "966cc437-0eab-4c9e-a53a-73c72f77f262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0c95db-5770-4273-95fe-c6e51f08c7c9",
        "cursor": {
          "ref": "0546b381-1614-4af8-86fa-15f6769cb712",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e0215652-eb52-4e2c-8944-da8625f9b990"
        },
        "item": {
          "id": "6c0c95db-5770-4273-95fe-c6e51f08c7c9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2ea4d626-cef1-42d4-9806-112c2867a0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c297ee-c7a3-4fe8-8c2c-8c3548d54499",
        "cursor": {
          "ref": "84f84bd7-1a7c-47ac-92c4-ec23688b1e0a",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1ce3d479-4ab6-4026-92f4-1563720aebfa"
        },
        "item": {
          "id": "21c297ee-c7a3-4fe8-8c2c-8c3548d54499",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7aa358d7-1f38-498c-bddf-fe53f2fde020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2869ae-adc4-427f-8527-065d0a845e5d",
        "cursor": {
          "ref": "05fe8678-c6a4-454b-abb6-baadbb60f347",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2932a3ce-3fa8-4765-8a4e-b69d824a95bd"
        },
        "item": {
          "id": "6d2869ae-adc4-427f-8527-065d0a845e5d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8de2140a-5cc9-456b-a33b-bd8b5cdc9a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35caf634-d51e-4078-afdf-5f9dd02663a6",
        "cursor": {
          "ref": "afa37790-d106-4071-8f95-263bd5f28ea5",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9e8c2f91-c9c7-418e-a020-7fbabab61cd1"
        },
        "item": {
          "id": "35caf634-d51e-4078-afdf-5f9dd02663a6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3b210f35-6f6b-460c-9864-736cea595297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc1c018-d1f0-45af-b435-d3fcb69ba09b",
        "cursor": {
          "ref": "1864eb86-634a-4f22-9e1c-c583b3cf5718",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a4016b6a-42a3-49bc-926a-7eed86a789b3"
        },
        "item": {
          "id": "0bc1c018-d1f0-45af-b435-d3fcb69ba09b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3f02e298-dcd0-4e00-aedf-e0b61d1f0030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 946,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e5e18d-4672-43ad-855c-b2f3b28e0e2a",
        "cursor": {
          "ref": "259c6934-2ccb-48ca-92e8-51080fc2317a",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "73864337-57e7-4dd1-aeb6-40de2cb37c94"
        },
        "item": {
          "id": "17e5e18d-4672-43ad-855c-b2f3b28e0e2a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e2381b18-42c5-4bc0-9397-c1fb5494f436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edbabbf-c135-49e3-96ce-77a899848f56",
        "cursor": {
          "ref": "732295da-3f5f-4246-bff4-e7bfb6bea1d0",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "69db5f18-5579-4d63-ac9e-ff1b023aa4fa"
        },
        "item": {
          "id": "3edbabbf-c135-49e3-96ce-77a899848f56",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e49fcbb3-f733-4f0f-bace-2a8f2d645b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f5656b-7daf-4b16-a9ab-5e2e4e96fdaa",
        "cursor": {
          "ref": "c3bea57f-5090-4137-93ac-69ae87436f69",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b7772028-87b0-4d36-be97-8485159c0b16"
        },
        "item": {
          "id": "85f5656b-7daf-4b16-a9ab-5e2e4e96fdaa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9d408e82-c1ed-41c2-b87e-9c33b5259983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98fe347-7a1a-4ce4-b66e-da06a111236c",
        "cursor": {
          "ref": "27e86edc-dfec-4f0a-8ea6-89959f3ac5bd",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "af9a4fab-919a-4639-bd6d-57ebe477cf9c"
        },
        "item": {
          "id": "d98fe347-7a1a-4ce4-b66e-da06a111236c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7eec2262-6963-4f79-8a47-35e2a34d5417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c43258-5e63-45e0-b464-31e18282597f",
        "cursor": {
          "ref": "09c3d3a0-4c12-4c68-a1a3-c7efdf3d7b95",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cfabdb81-3fcf-4104-bfb0-d38dea720579"
        },
        "item": {
          "id": "e2c43258-5e63-45e0-b464-31e18282597f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b5b1f25f-ab49-4142-a0cb-0df31bbbf029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8c9369-d81a-4ece-a84e-c9ae201aaaf8",
        "cursor": {
          "ref": "4c6a5690-24fe-4fe3-aedc-151f32d8f906",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "42009553-a236-489b-afb9-e903c58d487e"
        },
        "item": {
          "id": "1c8c9369-d81a-4ece-a84e-c9ae201aaaf8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e7cf99c3-0f07-498e-a8a9-b83c2d3d91ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186c8f63-65e8-4874-b691-fbda341b6df7",
        "cursor": {
          "ref": "ce567bce-9abc-479a-bf07-491e20aa0087",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "05aa8c63-eba0-4a7b-b266-3b330f17cd00"
        },
        "item": {
          "id": "186c8f63-65e8-4874-b691-fbda341b6df7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cd4a41f9-9090-407c-973d-6c085beb8b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4d52e9-1e35-4c85-b040-9845ad0ad9e7",
        "cursor": {
          "ref": "49702ec7-9acf-44e3-9430-62fc7506e3a0",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ed4586d5-8011-4b6c-a0b2-ace98ee0cae4"
        },
        "item": {
          "id": "cf4d52e9-1e35-4c85-b040-9845ad0ad9e7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dbb2fbc4-d39f-4c1c-8480-a5c9361db3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c10ef1-c36d-45d6-b29e-d0899b7eba18",
        "cursor": {
          "ref": "6bf01263-0551-48d5-ab32-bc33ef960a9b",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "12b9c361-c2f5-4f2c-b698-67cc6f37b2d6"
        },
        "item": {
          "id": "72c10ef1-c36d-45d6-b29e-d0899b7eba18",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "53aba7f7-f801-4d92-aadd-9bf87178ec71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a2f22d-b9ac-4f55-acb6-751fe83f727e",
        "cursor": {
          "ref": "56d1100a-c859-4279-9bcc-3eebd795be06",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c50a05eb-99ab-4eef-8596-1772b422ef4c"
        },
        "item": {
          "id": "b8a2f22d-b9ac-4f55-acb6-751fe83f727e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "08453a88-c421-4bbb-a810-09bb90406622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bcd8c7-6718-4dc7-b395-9c97e0b58835",
        "cursor": {
          "ref": "53d92d78-681e-42c6-9e3c-c9fd2d0328bc",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c9dbcf59-5eab-4431-b413-7000bd1bd2ee"
        },
        "item": {
          "id": "e7bcd8c7-6718-4dc7-b395-9c97e0b58835",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "673cad89-62c5-4470-a7a2-634667ab11e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a34eb27-eb24-4689-9864-e770838fe983",
        "cursor": {
          "ref": "d40c7a3b-0f9c-4f25-8a15-fe543263d80a",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4c4070d3-7056-477d-8f69-8be62e3ed8a4"
        },
        "item": {
          "id": "8a34eb27-eb24-4689-9864-e770838fe983",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "43886098-3d68-49e1-ad5c-26d29b806842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f001d4-2fad-4449-b58f-035616b81555",
        "cursor": {
          "ref": "7b1e5bc5-1921-47f5-b3cb-d265566432a4",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0ab5a297-998b-46c3-bf57-1338449fbf5b"
        },
        "item": {
          "id": "82f001d4-2fad-4449-b58f-035616b81555",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4d01bfd-4e38-4545-aec7-49b6187484f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2997d1-99f8-45cf-bb40-2ae89ce54767",
        "cursor": {
          "ref": "5d2548c8-ff35-4ef2-a7a2-209dec501983",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a746c27b-eb31-4f0b-b166-cde6710db948"
        },
        "item": {
          "id": "9a2997d1-99f8-45cf-bb40-2ae89ce54767",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f849f58e-1351-4f73-afbf-94c7886a7329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a6c2ab-18d2-4d95-96d2-f0ba70b631e0",
        "cursor": {
          "ref": "7fabc110-0393-4e53-9655-d0253b915032",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b9a6dae7-665e-4666-9875-7dcf072b425d"
        },
        "item": {
          "id": "e6a6c2ab-18d2-4d95-96d2-f0ba70b631e0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "32e4b555-3573-44a3-8a37-3e39c50b2db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c0ef39-72b9-418f-9f7b-46d9eb64a867",
        "cursor": {
          "ref": "4936e044-8140-4e1b-8cd9-b79cdfa27338",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "53f15012-4766-4585-95d5-32fe16e16cb2"
        },
        "item": {
          "id": "81c0ef39-72b9-418f-9f7b-46d9eb64a867",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a7c1f650-bace-43dc-8127-87040bb78eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1080d3-9fce-4209-b052-dd01d5321200",
        "cursor": {
          "ref": "f61feb7b-4e0d-46a5-ab22-4eda91dbeb4c",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "489cbc00-4384-4a5c-a7d6-9bf0c27b2f0e"
        },
        "item": {
          "id": "ba1080d3-9fce-4209-b052-dd01d5321200",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d8bc4c64-32b9-48d8-8c92-895a1381fb7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ec3589-1ea3-490b-9e4d-f9e73007a1b3",
        "cursor": {
          "ref": "df96d728-3568-4c56-bd0e-388745ad3c34",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "15a62c49-aed5-4770-a48e-6c771413cba6"
        },
        "item": {
          "id": "92ec3589-1ea3-490b-9e4d-f9e73007a1b3",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "92c57411-2a90-4da0-b9b4-c04144ca2d7d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 532,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e2022b-c51a-4599-a587-35ee8f2784fc",
        "cursor": {
          "ref": "f5199f5c-fc82-4168-88a8-1745241f04ec",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6b1bc019-0943-487c-ab4b-b5d145b981a5"
        },
        "item": {
          "id": "e7e2022b-c51a-4599-a587-35ee8f2784fc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "62ebaf30-7499-4659-a04e-6f3a9856fe47",
          "status": "Created",
          "code": 201,
          "responseTime": 5505,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "ec1c9e95-451e-4790-ba21-ba7789fa996c",
        "cursor": {
          "ref": "11afbfef-0347-4a7c-9a36-e7c6c4b169eb",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "829c3497-6958-4591-b247-34a07b1295dc"
        },
        "item": {
          "id": "ec1c9e95-451e-4790-ba21-ba7789fa996c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dd9f0a85-3336-47f6-9898-a89bee63e045",
          "status": "Created",
          "code": 201,
          "responseTime": 3970,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "76f3cb62-f2cc-42fe-9b3d-979e9a9bcc09",
        "cursor": {
          "ref": "0c30c8a2-6877-4b62-9ba1-d2b117b48db6",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9e2c0929-f2bc-421b-8af7-c61a74b57a6d"
        },
        "item": {
          "id": "76f3cb62-f2cc-42fe-9b3d-979e9a9bcc09",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8a4f9ae7-4d90-4694-b296-4a620b74dfa0",
          "status": "Created",
          "code": 201,
          "responseTime": 3641,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "70ffc3b8-4568-4058-9e62-81907e3c183e",
        "cursor": {
          "ref": "51663efb-0a18-48c7-8e54-bc65eb0abe95",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eb604850-dcfb-495f-9c62-8a10f8cb8809"
        },
        "item": {
          "id": "70ffc3b8-4568-4058-9e62-81907e3c183e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0c455761-10b0-4444-9bd4-f552537a100a",
          "status": "Created",
          "code": 201,
          "responseTime": 3739,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "02e0ea47-09be-42e8-9f27-48d0cb26e965",
        "cursor": {
          "ref": "54dff257-465b-47ea-94c3-82163a383560",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c29f45e3-59ea-480e-9fea-db3c2c61f40b"
        },
        "item": {
          "id": "02e0ea47-09be-42e8-9f27-48d0cb26e965",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c096e2ac-e749-4e66-a90b-0f110e68108d",
          "status": "Created",
          "code": 201,
          "responseTime": 4721,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "a24e991a-4f7b-4117-b0b8-b63be831cc8d",
        "cursor": {
          "ref": "0845475e-2573-4ade-87cd-6db9ac7b4597",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f74621e3-3b1e-483f-9598-c0c768f9700f"
        },
        "item": {
          "id": "a24e991a-4f7b-4117-b0b8-b63be831cc8d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cf776b92-35e1-40f8-bc23-a03108c54b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24e991a-4f7b-4117-b0b8-b63be831cc8d",
        "cursor": {
          "ref": "0845475e-2573-4ade-87cd-6db9ac7b4597",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f74621e3-3b1e-483f-9598-c0c768f9700f"
        },
        "item": {
          "id": "a24e991a-4f7b-4117-b0b8-b63be831cc8d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cf776b92-35e1-40f8-bc23-a03108c54b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620da0d4-f85b-43cd-8dc3-9a703ac53680",
        "cursor": {
          "ref": "a67c5f82-38db-4bbc-bc6e-8ddb77d729ed",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ced76331-e771-4ad6-956b-0aea98a159f6"
        },
        "item": {
          "id": "620da0d4-f85b-43cd-8dc3-9a703ac53680",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "38cdf574-1b9a-4a56-92fb-93100f1d07bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ece6a8-39ff-40b2-875a-1a175dfee3d8",
        "cursor": {
          "ref": "ad5757ec-bd10-4462-97f2-d390a04c804d",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "acf10536-b026-43a4-a241-b89360b04368"
        },
        "item": {
          "id": "59ece6a8-39ff-40b2-875a-1a175dfee3d8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "53215d62-9aa0-4998-8bd7-49d699efde59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732c75df-fa11-4523-a161-bfcf952afa92",
        "cursor": {
          "ref": "08c74777-dbff-4b1e-ab7b-e7febe8e8429",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "625ab2d2-1f79-4290-aae8-8bfd97f71152"
        },
        "item": {
          "id": "732c75df-fa11-4523-a161-bfcf952afa92",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d12cc5a1-6aae-4343-8ceb-b22812b03ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9724191-243f-4d38-adf7-a56cb06f6042",
        "cursor": {
          "ref": "bc6207fc-202b-4624-9dd7-1d9bcfbad5e4",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1d1f86af-4da6-401a-84a6-e335e6548d85"
        },
        "item": {
          "id": "d9724191-243f-4d38-adf7-a56cb06f6042",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b580a268-2747-4d07-8695-7fe861513b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0a329b-3435-41a2-9d69-87c1f56da41c",
        "cursor": {
          "ref": "50602d63-6f3c-4ab3-9849-dbc10265fa17",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ac490e30-9ae9-419f-9dd9-2a3886ef0c7f"
        },
        "item": {
          "id": "3d0a329b-3435-41a2-9d69-87c1f56da41c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ff41ba05-0c8d-406b-8f1f-6c104a1431e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07775af-cac3-48a7-ad3d-8d41b14c0637",
        "cursor": {
          "ref": "83055776-ab73-4231-a117-bb8d27d75a78",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e610eee0-70b0-4b2a-a32f-dfde7b64008c"
        },
        "item": {
          "id": "c07775af-cac3-48a7-ad3d-8d41b14c0637",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f7e17335-1747-43e9-9e73-e76669d8a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb31894-55ad-4701-a678-3ffe0fff7813",
        "cursor": {
          "ref": "838aa9e2-fff1-477e-bc63-ff8776ad9efd",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d8453c6a-c501-4cff-88cb-c2c9f4de2df6"
        },
        "item": {
          "id": "6cb31894-55ad-4701-a678-3ffe0fff7813",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ef28f258-f160-48cb-8d1a-044e0b41a2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f2eaee-3063-4f90-85c4-f9a631df1f22",
        "cursor": {
          "ref": "726cabb4-7d1c-485e-aa28-3c09e36b43e2",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "07cf157e-82bd-435a-9e2a-5240c5fc5536"
        },
        "item": {
          "id": "71f2eaee-3063-4f90-85c4-f9a631df1f22",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "66bff35c-391d-4f36-8c41-356a29333ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579ec747-3ad3-4fc8-a228-292bbdb6c95c",
        "cursor": {
          "ref": "e1d0a3f1-d0e0-43f3-bbb6-5ed40e5c07bf",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "488ff368-ac41-4351-aed8-53640fb0bdd2"
        },
        "item": {
          "id": "579ec747-3ad3-4fc8-a228-292bbdb6c95c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c0741ad0-a340-4f1d-9872-a3c2c70bff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a139098a-71f7-410f-81d4-9bbdaed44d12",
        "cursor": {
          "ref": "b47ff560-674c-40b6-a24f-c9b2c4e7a271",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4f5c4e23-3779-42b5-a170-c9b1bb537cec"
        },
        "item": {
          "id": "a139098a-71f7-410f-81d4-9bbdaed44d12",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "11a08a2f-5200-467a-bea0-c0b54cddaf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bfb81b-5225-45f1-9f40-7a605edbf665",
        "cursor": {
          "ref": "2010a759-14e9-4731-96a0-313d419b5afb",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f8e501ba-5653-4660-88f5-0a27998eb35e"
        },
        "item": {
          "id": "03bfb81b-5225-45f1-9f40-7a605edbf665",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "957a82dc-eb2e-42cd-8181-17a45a29b787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92b12c6-b320-40b3-ad60-09ac222a40c1",
        "cursor": {
          "ref": "2b3e3d7e-cb16-4583-ba48-84b57d69df2a",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b3fe0fc1-9bac-4770-8cc0-8efddd1a198f"
        },
        "item": {
          "id": "c92b12c6-b320-40b3-ad60-09ac222a40c1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "79a6cbce-c760-41db-b407-c9a0961d6990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954dfd41-7ba0-4c2b-af60-5f47579b2bf9",
        "cursor": {
          "ref": "351ed165-af25-4a78-977b-6f4f57c019a4",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f51c8ad5-d8c2-4b28-8669-b8a8cbfcac59"
        },
        "item": {
          "id": "954dfd41-7ba0-4c2b-af60-5f47579b2bf9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5933e35e-f699-4a39-98e3-1c272ca722b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f33856-eeb7-4776-82d2-e3eb77a6a320",
        "cursor": {
          "ref": "43afca1f-ac5c-4179-8179-c4727b782ae7",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7bd27471-e9e0-47e8-adf8-d97e63115281"
        },
        "item": {
          "id": "a3f33856-eeb7-4776-82d2-e3eb77a6a320",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1adc588f-aff4-4b9c-accb-11ea8109e0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf643ff-1801-4820-a49e-6f048f549090",
        "cursor": {
          "ref": "f95fba69-5198-4265-a36b-0fddc9fa39c8",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4d6b1534-abd7-4162-9343-c965d9ed1016"
        },
        "item": {
          "id": "fdf643ff-1801-4820-a49e-6f048f549090",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "574a2581-6c05-4a11-891c-4bf9097f70d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623f31db-b65a-4318-ad12-f0d231f9ba52",
        "cursor": {
          "ref": "2cdd3c7d-06ff-4fad-a384-4b6636afc805",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "00aad369-5841-497a-ad0e-7c6c4b8264b2"
        },
        "item": {
          "id": "623f31db-b65a-4318-ad12-f0d231f9ba52",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fa7e90e2-8ccd-4dba-b2b1-01734c333533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a5d879-2563-4636-b609-d1211513354b",
        "cursor": {
          "ref": "6b93e56e-d638-47a1-81cf-cbe56d092676",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "855f26b4-9101-466e-87b5-7959fa639044"
        },
        "item": {
          "id": "39a5d879-2563-4636-b609-d1211513354b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "55eb0173-9e1e-48f8-b456-9617ced30422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d812b612-dade-4a21-9fba-e6dae3c4d1a2",
        "cursor": {
          "ref": "8275e574-edf4-4e38-bcda-2058dbb959f2",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "968ab1ef-b35c-4ef9-8459-d2c92763ab52"
        },
        "item": {
          "id": "d812b612-dade-4a21-9fba-e6dae3c4d1a2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08631b32-67a8-4823-92bd-29b91d0bc473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36c34dd-7c17-4044-bfdb-c349ff3022be",
        "cursor": {
          "ref": "576b68f4-e52d-4f8d-8fee-eba89fbb3459",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e0ff04cc-e573-4527-91da-fdb4a1057d6c"
        },
        "item": {
          "id": "d36c34dd-7c17-4044-bfdb-c349ff3022be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "73a8e42b-5bcd-42e2-8578-d184e79c5b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4ea1b6-0cee-4e0f-8347-8add113f44bc",
        "cursor": {
          "ref": "9b559224-43c5-433b-ab2f-5dc2fe604ba4",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8c1ed6e6-041e-4682-beab-bb1fbdda8284"
        },
        "item": {
          "id": "ce4ea1b6-0cee-4e0f-8347-8add113f44bc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba6ceb82-1b31-40d8-9db3-73bdc5c608cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafbf972-eeb2-44f2-8cb1-98153fb7a214",
        "cursor": {
          "ref": "97fe9a05-2c93-4399-8190-95db9e95938b",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aaaa8796-5c71-4763-96a2-7e79d26c04ff"
        },
        "item": {
          "id": "bafbf972-eeb2-44f2-8cb1-98153fb7a214",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "86008a7a-5c6d-4c8b-8967-1ac02f239c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e9ca94-4eb2-4e55-a6eb-dea322eb5b8d",
        "cursor": {
          "ref": "3db4d3e8-6bbb-49b0-8c3f-24d2ae3831e0",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4c0dca32-eb02-478c-a6dd-16c266289c49"
        },
        "item": {
          "id": "e5e9ca94-4eb2-4e55-a6eb-dea322eb5b8d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cd57ae54-566c-4294-ab6a-afb2409ab471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a40d61-2e50-47f5-98c2-e6c57383222d",
        "cursor": {
          "ref": "dc99c202-f683-4181-ab29-ee629563d98e",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "59917716-af03-463f-acb2-0ff68b22343b"
        },
        "item": {
          "id": "f3a40d61-2e50-47f5-98c2-e6c57383222d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e4e4436b-1171-468f-8c4f-e9206a65b889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d01af7-182a-44d1-a9a0-c21bd5edae94",
        "cursor": {
          "ref": "dea78ee4-1862-4365-99d0-42beff282678",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a152c076-acc0-4afa-a814-4a8ca0168a98"
        },
        "item": {
          "id": "e1d01af7-182a-44d1-a9a0-c21bd5edae94",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a3926fd0-2d79-4ac2-be98-8cf13c26b2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f83f035-d247-43d8-97e0-1932d90376ce",
        "cursor": {
          "ref": "55a3c0da-eb93-477f-87ca-5ed1c6fd4750",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5aa0879c-059f-4376-8be5-1d8bb6424f51"
        },
        "item": {
          "id": "2f83f035-d247-43d8-97e0-1932d90376ce",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "58073f34-96d8-492b-bb92-259c58d9eac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41a881a-f22a-4be2-95d4-4607964f39ed",
        "cursor": {
          "ref": "d4d1a01d-3949-40b7-9775-6177604bb170",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d5e9f451-fe6f-4fd5-a93d-0731a3cfb3df"
        },
        "item": {
          "id": "e41a881a-f22a-4be2-95d4-4607964f39ed",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "546e61f9-9cbd-433f-8db0-bbdd150b720c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee470aa-0a70-435c-8507-eb805a09d5f7",
        "cursor": {
          "ref": "95715afb-4ed5-4730-9d64-f5dda7cabd75",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dd40273b-75b4-45dd-bb36-6bd89989563f"
        },
        "item": {
          "id": "6ee470aa-0a70-435c-8507-eb805a09d5f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "82119ce4-3734-4e26-a617-5cce8c081ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaeef4d-32e0-4703-b55a-733619ffe7fd",
        "cursor": {
          "ref": "29eb37d0-ebf6-49f0-af02-427be0247073",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1da8b81c-8bcc-4dc8-8041-067ae91a9b80"
        },
        "item": {
          "id": "bcaeef4d-32e0-4703-b55a-733619ffe7fd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "28d6fc94-b917-4818-bbe7-def572f0f31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d90a8e6-1f5f-496a-ad3a-a376bfc1469d",
        "cursor": {
          "ref": "ace69c88-08dd-4d21-bf2d-b0f3db9cca98",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bd26ba44-64b5-469c-8a97-be71ed07fe3c"
        },
        "item": {
          "id": "0d90a8e6-1f5f-496a-ad3a-a376bfc1469d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47e5d75d-d0d0-4ac0-ace9-1e8dad8eadda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bd442b-3cae-47f1-8a30-89466148e77a",
        "cursor": {
          "ref": "cd2b0496-ef99-4259-9b0f-1a19438b856f",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "624e5dcd-23b8-4657-bc12-dbb47e01d1a6"
        },
        "item": {
          "id": "15bd442b-3cae-47f1-8a30-89466148e77a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bfd52cc6-b26e-4738-9f6c-5e39cc0dbafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72e2a49-c886-4bba-8d17-27e84a9ec518",
        "cursor": {
          "ref": "eafb93f1-5627-41d9-a788-fb622dc8bf84",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "06fd0034-3e08-4086-9d30-e2089ea20cde"
        },
        "item": {
          "id": "e72e2a49-c886-4bba-8d17-27e84a9ec518",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ed99136f-5e3d-4c47-ab67-160086bfdd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce480b81-6244-4a81-be37-e6a2cd3f2fd0",
        "cursor": {
          "ref": "dc898950-5211-4be8-a711-b101c7817ee5",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b5e743bf-19d3-46cb-aaeb-f8f02601b494"
        },
        "item": {
          "id": "ce480b81-6244-4a81-be37-e6a2cd3f2fd0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "66a4b8e0-6901-4344-a6b0-217a2aa79293",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc796864-53a8-4e1f-a244-9b128bee180f",
        "cursor": {
          "ref": "6c2dfcd5-563a-45fc-8b54-7a723c0cb59f",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "abdb448e-b45d-49ca-9fec-f4d2aa9ec53d"
        },
        "item": {
          "id": "cc796864-53a8-4e1f-a244-9b128bee180f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e785e6e4-95cb-4995-a95a-c0e95cde951c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5731e544-46ff-44cd-86a5-7ce312bcc623",
        "cursor": {
          "ref": "903366d0-d25a-4d86-8cce-f35cb496981f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "61aa8569-0545-4248-adb3-16d5f4493e06"
        },
        "item": {
          "id": "5731e544-46ff-44cd-86a5-7ce312bcc623",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0a690c09-635a-4b51-9f81-050073bdfd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5731e544-46ff-44cd-86a5-7ce312bcc623",
        "cursor": {
          "ref": "903366d0-d25a-4d86-8cce-f35cb496981f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "61aa8569-0545-4248-adb3-16d5f4493e06"
        },
        "item": {
          "id": "5731e544-46ff-44cd-86a5-7ce312bcc623",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0a690c09-635a-4b51-9f81-050073bdfd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0788f40-fae5-493a-9d87-9587ea558591",
        "cursor": {
          "ref": "34f8e2f7-5443-47ac-a2b9-79da70aab886",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0cd12d11-d5a3-4254-941d-268b0b75d93c"
        },
        "item": {
          "id": "c0788f40-fae5-493a-9d87-9587ea558591",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2f5c8fd8-c96a-4563-a523-9b15b164d6ca",
          "status": "OK",
          "code": 200,
          "responseTime": 288,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "de2c198f-e0fd-43d6-bcd4-ccd91f12a7bd",
        "cursor": {
          "ref": "9e0f7715-debc-4bb1-8c00-f6593a8c9bed",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5a84be7e-eff1-4aec-b31e-1786abe601e3"
        },
        "item": {
          "id": "de2c198f-e0fd-43d6-bcd4-ccd91f12a7bd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6b6bd216-593c-4131-8eab-f2562691d65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491085df-f87b-4515-885c-f470d6c3405b",
        "cursor": {
          "ref": "9cdb4dee-e634-4ea8-905f-b46983568178",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "05ef5f6b-2ef7-4d6f-98ad-8bf657e535ba"
        },
        "item": {
          "id": "491085df-f87b-4515-885c-f470d6c3405b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9e426bee-ca1c-42b2-929e-e941e31e161a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d21f231-f69e-4c35-85d6-06ae1c0753e2",
        "cursor": {
          "ref": "791d8ee8-e589-46bb-b3a4-5211721dfb0b",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "51e414ff-2516-4490-9384-9a179d27df3d"
        },
        "item": {
          "id": "1d21f231-f69e-4c35-85d6-06ae1c0753e2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "882cff03-8207-4a9a-a28a-439f40ffd4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418fdd3e-8a87-43de-ae13-0ed9afbe1666",
        "cursor": {
          "ref": "19baa3d7-839d-40bd-a637-03ab32a79a14",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "02a1892e-c900-4dc0-ba80-b3a4656f07ba"
        },
        "item": {
          "id": "418fdd3e-8a87-43de-ae13-0ed9afbe1666",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "041e8e97-25b5-46d5-beaa-28fc8f9aeb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ec69fd-4c4b-42bc-9f9d-d3556f3f6915",
        "cursor": {
          "ref": "cbb61e0c-3518-47d0-9e6f-b97100984f8e",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cc3e686d-d2e8-44a6-b4bd-ba0820d04539"
        },
        "item": {
          "id": "b4ec69fd-4c4b-42bc-9f9d-d3556f3f6915",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "994ef441-ab28-4528-9f75-49c449855d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4038f3f3-83e9-451e-9e74-f758773a7501",
        "cursor": {
          "ref": "1c0d2ae6-c5c3-4079-b78e-06917e250a0d",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4a8e3609-e44d-4355-ae7c-da648ce1a958"
        },
        "item": {
          "id": "4038f3f3-83e9-451e-9e74-f758773a7501",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "73ec6c19-0af0-417c-b8e9-e9231fd8a78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b31ab2-cf05-4a84-814d-f91866dea247",
        "cursor": {
          "ref": "ea5ae132-53be-4554-9d7f-f1c6276511ef",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a15f2c4d-3037-40ca-b0f2-7c62d2078b78"
        },
        "item": {
          "id": "43b31ab2-cf05-4a84-814d-f91866dea247",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6c8d0ee6-331d-46ae-823e-8f380d5fd43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb80a9a-f015-45a5-9bf1-54f17f72d1b0",
        "cursor": {
          "ref": "52b8f4b5-bcb3-4477-bd52-69c3dd2c77ea",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "22a372ef-5a0a-4542-a36a-d03ab289e3ff"
        },
        "item": {
          "id": "beb80a9a-f015-45a5-9bf1-54f17f72d1b0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ced71da5-e40d-4055-b0a9-bdad80fe113f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca0e4de-18d5-461e-aad4-60b67ce8341c",
        "cursor": {
          "ref": "8db7612a-3c3a-45b3-b8f7-01b980a2a500",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f4c65ae6-dab2-4332-886e-579aebe616f3"
        },
        "item": {
          "id": "cca0e4de-18d5-461e-aad4-60b67ce8341c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "27deb9e5-baa5-4962-b9e1-3b15f9e6fbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8588fee3-d13c-44ce-9803-58c95683dcee",
        "cursor": {
          "ref": "d2c9c3fc-b701-4428-8005-ed11a3286fc2",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3f1cd06d-3655-4e12-93fb-9eec0859d456"
        },
        "item": {
          "id": "8588fee3-d13c-44ce-9803-58c95683dcee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "95b885e2-a202-4402-b7a0-5d6b6b086ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220c07af-7c33-412d-822f-90ecd32d1566",
        "cursor": {
          "ref": "ac02b378-c4ef-4d44-9e6b-28b32ffb58b2",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2647f424-540d-4e56-b22c-f962563718c4"
        },
        "item": {
          "id": "220c07af-7c33-412d-822f-90ecd32d1566",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e7a1383c-e12f-47c8-895f-a01965f1304d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baff1cd-ad7d-4627-b058-d65ea8eb8be1",
        "cursor": {
          "ref": "74e1ef34-07ed-4228-8df7-751822116307",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bfd3ac36-bc78-4327-b09e-ffb2aa5af0a7"
        },
        "item": {
          "id": "1baff1cd-ad7d-4627-b058-d65ea8eb8be1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5c83b0f4-10a9-49f5-9b6e-a90bbc17f0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc0ca3d-7cdf-4924-81d9-98c8df41c675",
        "cursor": {
          "ref": "b26f8012-1fd8-47fa-bb0f-147d2b9bec3e",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "affc3746-daaa-4076-b1a5-9dbc437a447a"
        },
        "item": {
          "id": "3fc0ca3d-7cdf-4924-81d9-98c8df41c675",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e51d64ca-cff0-4b8e-950c-cbafeeaa7e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e95f9ab-aa16-497d-ab11-44b560b475c8",
        "cursor": {
          "ref": "c66576b6-af87-4f7b-906c-17480a44aad9",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7537fcef-31ed-499f-9130-bb93138ac3bd"
        },
        "item": {
          "id": "3e95f9ab-aa16-497d-ab11-44b560b475c8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9e445a4f-8812-45d6-bbf8-5e47e16780eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08ffaca-323c-4627-9907-58c9f5bb4d6d",
        "cursor": {
          "ref": "4e107458-8e73-42b6-979d-ff640455a922",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "edf9e4d5-5876-4476-a834-425dde73371f"
        },
        "item": {
          "id": "e08ffaca-323c-4627-9907-58c9f5bb4d6d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "47ae2c35-96a0-42f7-9075-54e0cf28f0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff08656-5542-4385-83c6-c38c69290da7",
        "cursor": {
          "ref": "e9297aac-1d5c-464d-be23-cc02dc228d5a",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "25755184-eac3-4157-9759-549de458cf10"
        },
        "item": {
          "id": "5ff08656-5542-4385-83c6-c38c69290da7",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "8b0164b8-3232-40ec-bb49-9e4a5c31be85",
          "status": "OK",
          "code": 200,
          "responseTime": 2179,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "3bfd1ce6-3ffe-4300-b519-6e86500af3a2",
        "cursor": {
          "ref": "3fe4d375-a4a5-4a62-9ba2-0142bdfb2633",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e75f75a8-d3d1-4ec4-b537-97288088cd5f"
        },
        "item": {
          "id": "3bfd1ce6-3ffe-4300-b519-6e86500af3a2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "86e633d3-0de0-4518-a20e-66294c1ac420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a4b82b-08e6-4f61-a3f8-9f38076f4f74",
        "cursor": {
          "ref": "a6a8a187-e2b9-4632-88ec-bcb59f94600d",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7dafafad-ed66-4918-9d31-2750caae63d2"
        },
        "item": {
          "id": "b5a4b82b-08e6-4f61-a3f8-9f38076f4f74",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "149c9e26-6dfd-4e13-a323-c2566f6f04fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7d3e87-3cc8-4572-9997-04abe3c89ca6",
        "cursor": {
          "ref": "b483919a-87bc-4562-9fd3-8d844552b45e",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7cb103fc-4a72-4316-add2-ee9a3793a4bb"
        },
        "item": {
          "id": "cd7d3e87-3cc8-4572-9997-04abe3c89ca6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9261f04a-e281-40c6-ae54-5d2205a9e4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb83f119-fb8d-4d40-9b0f-d7c5d8cb52be",
        "cursor": {
          "ref": "8e5bbf08-2268-497b-a7a8-274c3d0089ec",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f875da19-d2cb-4431-b72b-fabce0c1c8c4"
        },
        "item": {
          "id": "cb83f119-fb8d-4d40-9b0f-d7c5d8cb52be",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "50893ede-f3d8-4c8f-b673-ef6ade50a061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55948306-7634-4be1-bf0c-996ae53bb318",
        "cursor": {
          "ref": "27200a9e-5ada-47b1-b203-c395c9903ed1",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4d4af100-5f6f-4ac4-a71b-4852a7b0bffc"
        },
        "item": {
          "id": "55948306-7634-4be1-bf0c-996ae53bb318",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "745913be-64d4-4480-9329-a99ca788df8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f091725-9cc1-4e3f-97e9-8bcdb8c35b9f",
        "cursor": {
          "ref": "7126f913-3e62-4bc3-9615-a17b9dba2bfe",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f1c6d7e8-10a3-434d-91a1-db6f5e275388"
        },
        "item": {
          "id": "4f091725-9cc1-4e3f-97e9-8bcdb8c35b9f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "12faa6ed-a0d1-4451-9d3f-5226f6dacc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be251bcf-cc7b-4ba8-8ce6-4466c868e174",
        "cursor": {
          "ref": "35fc52ab-1863-4973-8a22-2019989449c2",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f18c36f7-2c03-4d6f-b6ff-0f611ee0c66f"
        },
        "item": {
          "id": "be251bcf-cc7b-4ba8-8ce6-4466c868e174",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "11d66e36-74e9-405c-ba0a-ee629798353e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e0ee08-3b5f-4a61-bea7-6f207cd75f46",
        "cursor": {
          "ref": "3e01ea38-9ffa-4b23-898b-4bb8e1bea872",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "74f6ad12-3ecd-4e6b-9d42-e8317cca0e96"
        },
        "item": {
          "id": "89e0ee08-3b5f-4a61-bea7-6f207cd75f46",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b05e040d-2922-4566-afb4-18bbba80ac50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21a699b-6404-48f0-be11-990e94c63a81",
        "cursor": {
          "ref": "3936313b-cadb-4fc0-9b40-f1ecc7f8f7ad",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "af0ed55f-2a38-400d-8ed2-049c1e2a3019"
        },
        "item": {
          "id": "a21a699b-6404-48f0-be11-990e94c63a81",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ab8f161f-5ba8-4859-8936-4012c265752f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c63d51f-0f8c-4c14-b120-e397e491ee8c",
        "cursor": {
          "ref": "5b421bae-28bb-4230-89d5-e00973d6faa9",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a4e2bfe6-316d-488f-baf0-384d5d502b95"
        },
        "item": {
          "id": "3c63d51f-0f8c-4c14-b120-e397e491ee8c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fe582cdf-5865-4a34-aaf4-eeef38b1f08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d588e7ab-e2c6-40bd-b637-281f6c2c02af",
        "cursor": {
          "ref": "2fc595ab-0d3d-46c0-9917-61b872acc88e",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f3fa1d3b-7f4e-43fb-a5e4-98c12ec65b6b"
        },
        "item": {
          "id": "d588e7ab-e2c6-40bd-b637-281f6c2c02af",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7c82c23e-5544-44af-9843-97f8942eb683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ade002-0825-4f09-aa10-6663a0daff4d",
        "cursor": {
          "ref": "fef41f6e-b24e-4b83-81ad-eeed68d36753",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "47347b09-ee0e-4849-8230-0b8ade2a352b"
        },
        "item": {
          "id": "02ade002-0825-4f09-aa10-6663a0daff4d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c20f37f1-aa80-40d9-922a-c9815d324fdd",
          "status": "OK",
          "code": 200,
          "responseTime": 303,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "c236e0f7-4422-4734-a284-b41ab68af164",
        "cursor": {
          "ref": "048d74b5-e840-449d-9c0f-2e0d218edd64",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7a1fa353-30f5-43cd-ae0f-69cf53d1b88c"
        },
        "item": {
          "id": "c236e0f7-4422-4734-a284-b41ab68af164",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f5541fe4-5a63-4ff9-a002-753f2653b33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f79b67-bdc1-4583-ade1-7060bfccc539",
        "cursor": {
          "ref": "d3fe9484-c40d-4e8b-9e57-d0426eedf660",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d56df958-be32-4961-be8f-275f7297c926"
        },
        "item": {
          "id": "a4f79b67-bdc1-4583-ade1-7060bfccc539",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e7e93977-074b-48ad-afe1-c06b7932b3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634e5148-1409-4fd1-898e-fefe6f0c4211",
        "cursor": {
          "ref": "e1027cbc-a6af-4a01-a3b7-f53513500b6d",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "38d3817f-abdf-436d-a3d6-a789a2973f3d"
        },
        "item": {
          "id": "634e5148-1409-4fd1-898e-fefe6f0c4211",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1b11f0a6-90eb-4819-aa98-de7245573ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536bb45d-166e-46ad-91fd-6418fc6ae48d",
        "cursor": {
          "ref": "014453f5-47c5-456e-b03d-1f7748d2f7ad",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "78829a9d-b682-4e73-862d-cd47e97f1147"
        },
        "item": {
          "id": "536bb45d-166e-46ad-91fd-6418fc6ae48d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b5f9b047-32a2-4374-9a83-0696ce64d7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60efc714-e62d-416a-a6ea-51898f3023ad",
        "cursor": {
          "ref": "4047ea72-5acd-4f86-bd8c-50b15aeabfdc",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e74e4aa4-ea84-4f97-99db-68a63db54e55"
        },
        "item": {
          "id": "60efc714-e62d-416a-a6ea-51898f3023ad",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cd1e310f-5133-405e-ab24-12d033d15e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92626da-161c-432d-ace3-c703be4ca779",
        "cursor": {
          "ref": "6fc28909-8be3-4bff-94cf-8bb16e124275",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c90fc138-98bc-4beb-b062-14e15de11503"
        },
        "item": {
          "id": "a92626da-161c-432d-ace3-c703be4ca779",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bbdedef0-3ea4-4340-ad41-38e11200df57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5847d7-e0c2-48d5-8749-9a9b13af6c9d",
        "cursor": {
          "ref": "f1d5780b-915a-452c-a56d-37e8741521af",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "babc63c6-4ec2-4f3d-a929-e1c41b4d6763"
        },
        "item": {
          "id": "ec5847d7-e0c2-48d5-8749-9a9b13af6c9d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "67753074-bbf1-4253-b1ef-6675791a4459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc37943-81d6-46d0-9bd9-d8fc59c2b892",
        "cursor": {
          "ref": "b06f0868-b7fe-417a-8a4e-6529edb5135b",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "844ea5e1-52b1-4777-a30c-a43b52823f80"
        },
        "item": {
          "id": "5bc37943-81d6-46d0-9bd9-d8fc59c2b892",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "83124e27-11af-4ee3-b653-6bd3fd0f50fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8988d918-bd23-4f78-bbde-b370debc9a7e",
        "cursor": {
          "ref": "6a043647-e278-42e2-ac3e-098e806f4a90",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "65ea07d7-ec9e-4a24-8627-cb39c9cd2d13"
        },
        "item": {
          "id": "8988d918-bd23-4f78-bbde-b370debc9a7e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6185edc3-fe29-47e5-8576-3a1c9c57a254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f7d27b-9356-4ba0-9f70-a193ee67cbcb",
        "cursor": {
          "ref": "13a3512d-3178-468e-b06e-339070369481",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e1b920f2-51e4-4024-b49d-7e703f860b09"
        },
        "item": {
          "id": "c9f7d27b-9356-4ba0-9f70-a193ee67cbcb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d9489d77-4acf-4a7e-bc65-a84d85bac653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb55252-8344-4d21-9d27-4a865b608d53",
        "cursor": {
          "ref": "a09d34d9-b179-498b-974e-838b27c4cd8f",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5fd16bd9-d9be-4788-a351-b249b3c66549"
        },
        "item": {
          "id": "6bb55252-8344-4d21-9d27-4a865b608d53",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4e786aa6-f704-4457-be7f-e21cfb767921",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "f162497f-62ed-4082-80d1-4d4f4bc8e562",
        "cursor": {
          "ref": "418aaeb1-d667-46d7-972f-36c81657ab6e",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f99efa52-19d5-4b9d-8f8c-c1fc789242d9"
        },
        "item": {
          "id": "f162497f-62ed-4082-80d1-4d4f4bc8e562",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1b484e25-bdfc-4ec5-ad23-4c548290e26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d7e357-87fa-40b8-8980-0d4051b23e9c",
        "cursor": {
          "ref": "53934017-e72d-466f-9ba6-1d88af55f2ed",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "caa2e095-872b-4d6b-a839-55eefd86b9fa"
        },
        "item": {
          "id": "20d7e357-87fa-40b8-8980-0d4051b23e9c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0419f72e-d39f-49c8-bac0-524ae81ac277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fbca2d-52c0-404f-843c-dd9a26739d0e",
        "cursor": {
          "ref": "097d10a1-aa51-4ab1-a3eb-87e3b156a612",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4c40d8f8-d6c8-4774-9138-e4b929f07f75"
        },
        "item": {
          "id": "57fbca2d-52c0-404f-843c-dd9a26739d0e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dab041c8-aa33-4e83-86d8-e265cf7ecd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea92ca32-5d1c-4537-a6ab-61a67369ad8b",
        "cursor": {
          "ref": "0959e0d3-9e67-4025-8da6-bcb44242d6dc",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d30f28c-ac89-48a1-bab3-b8e8ed6b36d5"
        },
        "item": {
          "id": "ea92ca32-5d1c-4537-a6ab-61a67369ad8b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ca919913-2558-4f26-a1c4-03f39f0d4902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f50028-4b3c-4eec-b8b9-e7de33c25c0c",
        "cursor": {
          "ref": "38a75535-b35d-4a32-9572-2d6d3aa83974",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4d0f0468-163c-4b6b-9ec7-6e37b82b13b2"
        },
        "item": {
          "id": "02f50028-4b3c-4eec-b8b9-e7de33c25c0c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d60c9f4b-e410-4233-a3bc-378a9abb730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0fc2ce-8245-40d5-9593-dc3c78d6e881",
        "cursor": {
          "ref": "7af3117d-44a9-47f9-bd6a-4d39bfeafc7c",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8ac03a60-19cd-437f-9c50-bc2d0aa570a0"
        },
        "item": {
          "id": "4b0fc2ce-8245-40d5-9593-dc3c78d6e881",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6c6fecff-e327-4fec-9a01-454e50d981d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7213bd-1328-4d95-be15-b30c82c6542d",
        "cursor": {
          "ref": "8847ac92-1387-4547-b85c-8609ac67db10",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "61810d98-baee-4b8b-b69e-9323ef088886"
        },
        "item": {
          "id": "3a7213bd-1328-4d95-be15-b30c82c6542d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "72534769-db08-480c-aff9-4726aaf624c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e24954a-0cd0-4473-8390-299f5b42e7ee",
        "cursor": {
          "ref": "092f9a94-eb7e-487f-ae78-efae10448f40",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7eb836bc-1318-4a86-932e-598f164d9d96"
        },
        "item": {
          "id": "6e24954a-0cd0-4473-8390-299f5b42e7ee",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1726d15d-bd68-4133-876f-6510f79ef35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc6e405-c218-465c-8ccd-e695d8546a45",
        "cursor": {
          "ref": "c19b7500-2809-4b1f-a1cc-18bc16338268",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9d23944a-c6a3-46bb-b430-394b0e301707"
        },
        "item": {
          "id": "bcc6e405-c218-465c-8ccd-e695d8546a45",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2f3aa012-3c60-461b-ab17-8772348c32ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5859580-ae67-4d7a-b22c-76cc06165b9f",
        "cursor": {
          "ref": "3e46edff-d145-4e4f-9cdd-2c095e68c664",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cb34de6e-0678-4d39-84ee-48d806f2dbb3"
        },
        "item": {
          "id": "e5859580-ae67-4d7a-b22c-76cc06165b9f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "698c2f6f-c62e-4934-9acb-89ca39d7f27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8922a791-4f1b-49ad-92bd-80e016a80bce",
        "cursor": {
          "ref": "aca89054-e675-4684-bebe-13c7e838df10",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d179bcb9-5f2d-4e46-bc82-4272e0a6dcbe"
        },
        "item": {
          "id": "8922a791-4f1b-49ad-92bd-80e016a80bce",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "00719064-3f8d-4310-8aa5-9e56389737f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c765f5-a742-46af-899d-a359df039677",
        "cursor": {
          "ref": "38d048a8-7826-40c7-8ccf-8b4cb4b11ebf",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6bfd8d83-7c47-4037-978e-99bec7a6f128"
        },
        "item": {
          "id": "f1c765f5-a742-46af-899d-a359df039677",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "47e8dc03-9acd-43cd-b5a9-e3b96476dd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02564612-706c-41b7-91f7-3546fb16365b",
        "cursor": {
          "ref": "373c45bb-7768-435b-88bf-b1e10ef7f527",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c489cad8-1519-4784-9175-4e0f752583e6"
        },
        "item": {
          "id": "02564612-706c-41b7-91f7-3546fb16365b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "99a397f4-9659-425f-b7f6-2944a3167453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588c42ac-0c18-4fbf-b1c3-397de754f80b",
        "cursor": {
          "ref": "f7a9a6e9-3254-4497-9b20-b62eebae367b",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ba0b6a59-1051-47c4-b00a-96d796ea921b"
        },
        "item": {
          "id": "588c42ac-0c18-4fbf-b1c3-397de754f80b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ecc6a1db-f50d-4b19-9558-64cf7a7972f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7262dedc-a01c-4231-adf3-96907f7e400e",
        "cursor": {
          "ref": "0a1d95bc-55d7-4d71-8e6d-a8d76b4618ca",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a79b4e02-b710-4569-bba2-90e8d1044ad5"
        },
        "item": {
          "id": "7262dedc-a01c-4231-adf3-96907f7e400e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dc85a341-7fc1-41e3-8e35-e0bc8074fc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091168a8-a1af-430b-9448-42d0bd93af0c",
        "cursor": {
          "ref": "2ae54ebf-2c09-4b4f-90df-f6ba3fdf6fd0",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d6c98941-c998-42e9-9c09-c04f8b2a3043"
        },
        "item": {
          "id": "091168a8-a1af-430b-9448-42d0bd93af0c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b10d075e-cb33-4ace-b49a-70d06284f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ab74d9-548b-4015-81a6-eca9a5eb66e1",
        "cursor": {
          "ref": "79db50c7-8a9a-41c3-9105-4651f3e85e44",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "60fb63b2-bc57-4fb9-b574-c5e995befea3"
        },
        "item": {
          "id": "d8ab74d9-548b-4015-81a6-eca9a5eb66e1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c99ed165-9d6e-4671-80d2-9f30916af1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c23a96-843b-4fe3-b491-d5535f6b99c8",
        "cursor": {
          "ref": "2d897c74-ea5f-41d3-963b-182297422c09",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2bc492c9-97c6-44c0-bad1-1baebe300284"
        },
        "item": {
          "id": "09c23a96-843b-4fe3-b491-d5535f6b99c8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2d967b97-6ee2-4963-88b1-5150534842e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccec982-c352-4fd5-912a-58c61335873f",
        "cursor": {
          "ref": "c044bac3-7b1d-4bd2-bbdd-34326bfa773a",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "32543319-0ed4-470d-91ed-094ad52db138"
        },
        "item": {
          "id": "3ccec982-c352-4fd5-912a-58c61335873f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "579d3f87-a060-4f08-892e-726afcbec8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ed3d06-916c-4531-b995-599ccc54b4fc",
        "cursor": {
          "ref": "d59a92f2-8baf-49a5-9f3f-1dcc2dd3f14a",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "127a15af-5fda-4c2a-b5fb-25969f2cbdf3"
        },
        "item": {
          "id": "63ed3d06-916c-4531-b995-599ccc54b4fc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f391fa13-3611-4a38-803e-34295456238d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a02d2a-69f3-48c7-95ff-c387ac683cac",
        "cursor": {
          "ref": "0a6e26b3-f15b-45b4-ba15-bbd527ba3289",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aac6dfe1-79ac-4183-a06a-8a94e9a94491"
        },
        "item": {
          "id": "34a02d2a-69f3-48c7-95ff-c387ac683cac",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2210022e-f172-4430-b764-b42cac13a8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a55904e-63b6-41e5-b349-4ef122a9a1ed",
        "cursor": {
          "ref": "98dc0d4e-e183-4678-b465-98c5e05eed95",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0dea907b-4792-4532-a87c-878c79628c00"
        },
        "item": {
          "id": "3a55904e-63b6-41e5-b349-4ef122a9a1ed",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6e7414c5-2d3b-4462-83a9-bc7b2cd43d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8b4dbe-daa2-4d7f-b909-2ca756bdec45",
        "cursor": {
          "ref": "370d4dad-6930-4251-becb-bf0096b51965",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "79ce6b45-21f3-4e57-ba31-a284190e7be3"
        },
        "item": {
          "id": "4f8b4dbe-daa2-4d7f-b909-2ca756bdec45",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dbc343e3-a36f-499d-908e-5bf6c2d37131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3621bafb-11e3-439c-a81e-cb5a73da120e",
        "cursor": {
          "ref": "de664c0d-161d-48df-8b1d-a2fecbe6e9ad",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "239ce2dd-f6a9-4af6-a67b-b27d7256b742"
        },
        "item": {
          "id": "3621bafb-11e3-439c-a81e-cb5a73da120e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4889517d-2158-47a5-9c0c-1afc489fe869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34d976f-4224-4d99-b59d-feebea3f123a",
        "cursor": {
          "ref": "eb9c4b77-ffd8-48e3-9e3d-520fe008531a",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c2b48942-c598-410c-af04-27755a0031d6"
        },
        "item": {
          "id": "e34d976f-4224-4d99-b59d-feebea3f123a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5c773acd-6354-475b-bf5c-3744f6441409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1ae205-da98-46d7-823d-135b3eef9f56",
        "cursor": {
          "ref": "f8701010-26ce-4b6d-8f5e-781ddf5f83fb",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "069903f2-aba6-4e91-b380-bce77ebe754d"
        },
        "item": {
          "id": "8a1ae205-da98-46d7-823d-135b3eef9f56",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "087541eb-4b9e-4c29-93a8-a6da6e4a2472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9629da-19c1-434d-ada1-78e782aa39cb",
        "cursor": {
          "ref": "97465790-e184-4d66-894c-61737217d025",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "26bb1a4e-1eae-4cc1-9784-cf28169fed04"
        },
        "item": {
          "id": "7e9629da-19c1-434d-ada1-78e782aa39cb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5ba0656d-085d-4f42-b480-1419b0c69f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f935a8-663f-45e4-8ffb-50b2847f32a2",
        "cursor": {
          "ref": "a75de5a5-8538-4e00-b68b-cc0db816048a",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5dbc7a05-a7c4-45fb-b74e-916939f3b941"
        },
        "item": {
          "id": "32f935a8-663f-45e4-8ffb-50b2847f32a2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fc25a2a4-9f43-462e-94ee-1ac5c07de206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cb2f51-7b64-47f3-9bb4-0c802c48166d",
        "cursor": {
          "ref": "984251d1-c86a-4829-a218-bce2515f5555",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "68187ce7-3cb2-4e7e-a5a9-38c5c904d4eb"
        },
        "item": {
          "id": "45cb2f51-7b64-47f3-9bb4-0c802c48166d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "99ae0c51-9adc-4ce0-829c-5ed184c53f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b60e5a-4260-48ff-80b5-d62a654e471b",
        "cursor": {
          "ref": "41e526db-93ee-4779-91e3-bfb48b792b70",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3f85476f-0fb1-4a47-a34e-4d0b7e6a0839"
        },
        "item": {
          "id": "a5b60e5a-4260-48ff-80b5-d62a654e471b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "69b51953-cd7c-40c4-8c5f-0a5784084fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f152cb2-a703-472c-9170-2c625ef93867",
        "cursor": {
          "ref": "92727761-e2c5-4597-9e4e-095a9a164bab",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "432e36f1-40b2-4849-9aa3-d59bf6077471"
        },
        "item": {
          "id": "3f152cb2-a703-472c-9170-2c625ef93867",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0c9f1431-dbac-4815-aadb-205915f488cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c6025e-13ad-4938-b90d-709103df089f",
        "cursor": {
          "ref": "a8d9d2f7-9a47-4acf-8716-75e54266b59a",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a086a0a2-3bc6-44c6-bef3-b45a81721b04"
        },
        "item": {
          "id": "35c6025e-13ad-4938-b90d-709103df089f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1dcb9ca4-6293-4c2a-8282-1a809a698886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95576a62-964e-41e0-8673-5ae57b609290",
        "cursor": {
          "ref": "a4d4987b-49ec-416d-b662-cc3018c1dce8",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "31f03d09-81b0-4a2c-a761-ff92d8835f23"
        },
        "item": {
          "id": "95576a62-964e-41e0-8673-5ae57b609290",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d8b0c7b9-e6a1-4546-9818-a123312d258c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2f6168-14cc-42b2-b452-84363113f600",
        "cursor": {
          "ref": "3ec59041-902c-478e-b606-64d57969fecf",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ff785724-b12b-4257-bbda-ae53d792cafb"
        },
        "item": {
          "id": "3e2f6168-14cc-42b2-b452-84363113f600",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "260d76ac-fe18-492b-a7c2-8dc32200134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e0d706-2f03-432c-8fd5-1185839192d5",
        "cursor": {
          "ref": "954418ef-d60c-42aa-8047-11cdf8785c19",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4048717a-ac61-48e6-997a-1e7fbb70e0ed"
        },
        "item": {
          "id": "63e0d706-2f03-432c-8fd5-1185839192d5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9a2dfe74-5415-4467-a9e6-d04657b185ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c41e6f0-89ec-49bf-966d-4b02d6cba7fc",
        "cursor": {
          "ref": "88d7c386-a778-4fe3-a70d-87a2e6a441dd",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "05d2de9d-4f3c-4dee-b0ba-e4582ac26ff8"
        },
        "item": {
          "id": "3c41e6f0-89ec-49bf-966d-4b02d6cba7fc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5037adcd-5cba-43f2-a0c7-50be16117af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae33db5a-6272-4cad-800f-914d81e29b22",
        "cursor": {
          "ref": "eddf25a7-c9e6-4083-b16e-ff6cb3591012",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0e3af761-0f0c-4993-95d6-b73f1241baf0"
        },
        "item": {
          "id": "ae33db5a-6272-4cad-800f-914d81e29b22",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2a7f11c4-ca43-4192-8617-77513f3a79d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef2fe15-bbc6-4964-a55a-59906656eef6",
        "cursor": {
          "ref": "8cced5d2-8c18-4b58-9338-c15eed0b00a3",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "433d2360-95c6-4200-8c7d-16ad8d4fc5ee"
        },
        "item": {
          "id": "fef2fe15-bbc6-4964-a55a-59906656eef6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "837dd046-584b-47db-b369-1673a034c9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0917d390-3fd1-4295-abe9-d17b45ebf170",
        "cursor": {
          "ref": "89243a87-91e2-4097-a14f-f0b11f8129bb",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4c628432-61d9-40ec-bb42-3e3a1d8febd1"
        },
        "item": {
          "id": "0917d390-3fd1-4295-abe9-d17b45ebf170",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bf60d65b-86f9-45f3-ad90-844a1d893adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabdf353-e11b-4f9d-af09-8b256031973d",
        "cursor": {
          "ref": "fbe4456d-d2be-491e-9d13-52dc0ba2a874",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c59b0143-390d-4c17-ad4e-448532bc925c"
        },
        "item": {
          "id": "dabdf353-e11b-4f9d-af09-8b256031973d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "707c4682-7343-4032-b124-63a15d1df81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16d31a6-9ad7-41af-a277-100158afd2b8",
        "cursor": {
          "ref": "82ec37c5-83f5-49da-8454-e9c1d8e8e2c0",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f52eb815-ed58-4e57-a87b-3f0ed25eb260"
        },
        "item": {
          "id": "a16d31a6-9ad7-41af-a277-100158afd2b8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "04105626-0770-4dc8-90f1-af7537974909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2655e248-df6f-482e-ad8d-c3503d69e337",
        "cursor": {
          "ref": "da7c3dfa-fa9a-40fc-8fb1-bc2e25e3e973",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4f198c6c-8ee4-482d-9f36-1197c6d80018"
        },
        "item": {
          "id": "2655e248-df6f-482e-ad8d-c3503d69e337",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "05762148-5870-4bda-83be-fdb543c5c904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e033bc3-8a81-45a7-9ec4-baffd32930f9",
        "cursor": {
          "ref": "84536a2c-15d6-48fb-9b5d-5db2663a8d3a",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ce4db0f7-f465-4390-aabc-06054ba82ff2"
        },
        "item": {
          "id": "8e033bc3-8a81-45a7-9ec4-baffd32930f9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "af97e50d-fdab-49c2-a375-6f9f372e2807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204b49e0-8825-4eda-b655-cb8f5a19ce0f",
        "cursor": {
          "ref": "922a59bf-4113-45d7-a81b-5dee3e4e9128",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8fc8ac37-398a-49d2-9b75-3334ed9bbed5"
        },
        "item": {
          "id": "204b49e0-8825-4eda-b655-cb8f5a19ce0f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "21c78f2a-9028-4907-8f6b-ab7c19ac7dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a18f0b-56cf-4b2a-8d85-46117e19cc98",
        "cursor": {
          "ref": "9407ea2f-1993-45f5-afd7-6cad2ba4f5a6",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "31f8d9ad-c2e8-40ae-a815-c3f333154603"
        },
        "item": {
          "id": "b8a18f0b-56cf-4b2a-8d85-46117e19cc98",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "94e48e3f-e4e0-4544-95b2-08c7536e55e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0905cf-02e6-4a1d-bfa5-0436e3a372a1",
        "cursor": {
          "ref": "74b508cf-7109-4a48-9526-0faa147180ca",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e4773c6d-843f-477b-8368-84e9bf87b745"
        },
        "item": {
          "id": "4b0905cf-02e6-4a1d-bfa5-0436e3a372a1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0ef8d44d-973f-4dc9-a77d-81169efd0356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e00e96-b61b-4d70-bf48-f987b53054e9",
        "cursor": {
          "ref": "4b599577-cd4b-43c4-a446-dedc9889193b",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "71836d69-9ec1-4595-9b9e-b3c9db081c1f"
        },
        "item": {
          "id": "b6e00e96-b61b-4d70-bf48-f987b53054e9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "193f85c0-1091-4af3-9ed5-b5d04543a4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b51af5a-86f4-4092-84eb-2554ea55c793",
        "cursor": {
          "ref": "1e9e2f03-5e6e-41a5-a2fa-68139c47bb31",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f46f8e46-591f-4f71-a754-3067f8d1c472"
        },
        "item": {
          "id": "3b51af5a-86f4-4092-84eb-2554ea55c793",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ebbf5b35-8161-4718-a297-d5de1059f68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ef990a-02b7-4c94-ae7a-83eb999e7946",
        "cursor": {
          "ref": "0148f866-83f8-4c70-8b5c-6642bc795683",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b6b98625-5aff-4c62-8a4e-3fb552eaef24"
        },
        "item": {
          "id": "61ef990a-02b7-4c94-ae7a-83eb999e7946",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "105a671c-9707-4595-b7c2-b874a63875df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442a4bed-53e9-4939-b9a7-7a373bd9c4fa",
        "cursor": {
          "ref": "730b2c61-a1e0-47ae-9e58-c74df71e2405",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e59dae96-0a24-4d12-8783-9912a49331df"
        },
        "item": {
          "id": "442a4bed-53e9-4939-b9a7-7a373bd9c4fa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ebdffc09-fa78-4b38-a79a-004fa56639b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729b26c6-2c85-4637-a5ee-9152e611bec2",
        "cursor": {
          "ref": "1b7cc707-0328-479a-8677-fe19691f4b0f",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "06904bec-217d-4b0f-80af-270b63a0d788"
        },
        "item": {
          "id": "729b26c6-2c85-4637-a5ee-9152e611bec2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5b67e45a-786b-4931-8f2e-6415adb751a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54751f50-a56e-4fe5-8bcc-49028f048990",
        "cursor": {
          "ref": "8051504e-290a-4920-ab2a-3d50dfeb883e",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9bf029e0-ac7b-4c49-aad6-9aa072e05898"
        },
        "item": {
          "id": "54751f50-a56e-4fe5-8bcc-49028f048990",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "983ce971-3ad9-4920-87f5-a9d77a6deb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43adb393-2e53-4907-9e2f-690c0142c1f0",
        "cursor": {
          "ref": "fe1a6657-c3bc-49ae-a095-fbe4fde9ad85",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cd42b103-c2b3-43c5-82ed-b2c5d989c74d"
        },
        "item": {
          "id": "43adb393-2e53-4907-9e2f-690c0142c1f0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b171cac5-b04f-485a-8ac8-018cdddfe23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d148303-5f52-45b2-8130-5e2871e4e317",
        "cursor": {
          "ref": "3e0e37f9-5dee-49ae-9e06-744fb61327e6",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d8c4147f-414f-4b01-9374-84724967bfeb"
        },
        "item": {
          "id": "6d148303-5f52-45b2-8130-5e2871e4e317",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "31068ff8-fc56-47c0-a303-6ff42c392d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807639c2-8518-463c-92cd-026c2adee2fd",
        "cursor": {
          "ref": "078ffc8e-8309-4109-b399-867207c0ff53",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "60a98db1-84fc-46b7-b4b0-f15f164eb2a9"
        },
        "item": {
          "id": "807639c2-8518-463c-92cd-026c2adee2fd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ed19aa22-9a4f-41dd-9e8b-7d411c1f4743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee63f2a5-24d7-497c-b683-9e78a5085a37",
        "cursor": {
          "ref": "12dcaa1e-5a98-4751-95c1-4263318e660d",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5673d7b4-79ec-404d-8934-80c4becf47c8"
        },
        "item": {
          "id": "ee63f2a5-24d7-497c-b683-9e78a5085a37",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d413ebcf-d8b7-4824-9610-609fb8e5dbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb45c018-f37d-42e5-915a-3a1a3d3f01b6",
        "cursor": {
          "ref": "90a45da9-3596-4347-8564-eab25be015a3",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20a0dc7d-c4c0-4233-912c-9ee3507dc77c"
        },
        "item": {
          "id": "fb45c018-f37d-42e5-915a-3a1a3d3f01b6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c5c723eb-6f57-4b22-8893-952afbc7fd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3519f867-cb1c-4ced-ad66-cd04756ad45e",
        "cursor": {
          "ref": "8b18edb4-9523-43f2-97e5-fd867e126e2e",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "04b0aa12-012a-406b-b6b8-08826931ff99"
        },
        "item": {
          "id": "3519f867-cb1c-4ced-ad66-cd04756ad45e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dcca4bb7-a0ee-4899-9be3-52aa088fcb76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c2bb4d-c627-447b-8f7d-76f2fcda0fff",
        "cursor": {
          "ref": "7295d0ad-64f6-4fdd-b760-19140a543bf9",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3a950b2e-fe37-4dc7-9545-f2e9a35c43e5"
        },
        "item": {
          "id": "24c2bb4d-c627-447b-8f7d-76f2fcda0fff",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9a9e355b-914f-4623-8101-d80950ccbf7a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 289,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2de94b8-45e5-4c51-9e72-35fae94bc437",
        "cursor": {
          "ref": "1853e8e7-b162-42ba-b57a-aabd65f06b7b",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4ce145c8-c552-4746-879e-557ab577b9fd"
        },
        "item": {
          "id": "a2de94b8-45e5-4c51-9e72-35fae94bc437",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1f96e157-f34b-428e-ad4b-6eaa61dcedc7",
          "status": "OK",
          "code": 200,
          "responseTime": 345,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ab9bae-5741-400c-bd1c-03949eafa9d5",
        "cursor": {
          "ref": "642192f9-c92a-485f-b57d-144745de39e1",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f5891f3b-9022-42c0-8252-90191f486b61"
        },
        "item": {
          "id": "37ab9bae-5741-400c-bd1c-03949eafa9d5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e0bf6053-eb91-4d98-9c3d-a4a52e828c6c",
          "status": "OK",
          "code": 200,
          "responseTime": 1868,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b63296-bb3e-4b73-afe6-2573103f0f07",
        "cursor": {
          "ref": "95bbb831-608d-4e6b-adf0-9af40bfbcae8",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "47b85949-23db-4e67-b752-48c766b9f050"
        },
        "item": {
          "id": "d7b63296-bb3e-4b73-afe6-2573103f0f07",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ca3ca069-738b-48dc-a902-598620a0c073",
          "status": "OK",
          "code": 200,
          "responseTime": 1689,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "295d5722-a3c9-47d4-9df7-6716dbebe82a",
        "cursor": {
          "ref": "e03acd79-d1b5-4df0-bbe2-e48ead45e193",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b956a41-a508-4cab-8b54-0090d0e248ef"
        },
        "item": {
          "id": "295d5722-a3c9-47d4-9df7-6716dbebe82a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "839963de-22ff-4b78-8136-02bba8b32e0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295d5722-a3c9-47d4-9df7-6716dbebe82a",
        "cursor": {
          "ref": "e03acd79-d1b5-4df0-bbe2-e48ead45e193",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b956a41-a508-4cab-8b54-0090d0e248ef"
        },
        "item": {
          "id": "295d5722-a3c9-47d4-9df7-6716dbebe82a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "839963de-22ff-4b78-8136-02bba8b32e0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295d5722-a3c9-47d4-9df7-6716dbebe82a",
        "cursor": {
          "ref": "e03acd79-d1b5-4df0-bbe2-e48ead45e193",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b956a41-a508-4cab-8b54-0090d0e248ef"
        },
        "item": {
          "id": "295d5722-a3c9-47d4-9df7-6716dbebe82a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "839963de-22ff-4b78-8136-02bba8b32e0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8ab577-907b-4c69-9903-6e72592ee717",
        "cursor": {
          "ref": "c17283a7-a2f2-4e77-9d49-d1379914dfdd",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aaf72373-8d9d-4370-986c-4c6b14b9e0cb"
        },
        "item": {
          "id": "4c8ab577-907b-4c69-9903-6e72592ee717",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "81742bbf-241d-4947-aa8d-f0098f9597c2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 323,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138b8d61-ab48-426e-94d3-9e0a30b2eebe",
        "cursor": {
          "ref": "4fdbc54e-e2e3-44fd-97e6-ac967a18efad",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3832a883-c79b-4931-9709-48aab2c20480"
        },
        "item": {
          "id": "138b8d61-ab48-426e-94d3-9e0a30b2eebe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b9ca5599-f361-49b4-8023-ab24020661d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138b8d61-ab48-426e-94d3-9e0a30b2eebe",
        "cursor": {
          "ref": "4fdbc54e-e2e3-44fd-97e6-ac967a18efad",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3832a883-c79b-4931-9709-48aab2c20480"
        },
        "item": {
          "id": "138b8d61-ab48-426e-94d3-9e0a30b2eebe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b9ca5599-f361-49b4-8023-ab24020661d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad8ec8a-54e5-45e1-8617-8382ebb14a31",
        "cursor": {
          "ref": "f4d966fa-4a56-4ea0-ba62-b550749d9bc2",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0c840138-96a5-443e-84b5-1b3f7bbe6a83"
        },
        "item": {
          "id": "bad8ec8a-54e5-45e1-8617-8382ebb14a31",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ec724278-644c-4b0a-afe2-30095867ef06",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75685858-c45c-4306-bec1-ba5db4f347b1",
        "cursor": {
          "ref": "5be93ce3-982e-4e98-9100-3d43a864f448",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4c572812-d077-4932-b299-d9e4dcfa4a5d"
        },
        "item": {
          "id": "75685858-c45c-4306-bec1-ba5db4f347b1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c31b480-7d06-421a-9819-412e3f7db37e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75685858-c45c-4306-bec1-ba5db4f347b1",
        "cursor": {
          "ref": "5be93ce3-982e-4e98-9100-3d43a864f448",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4c572812-d077-4932-b299-d9e4dcfa4a5d"
        },
        "item": {
          "id": "75685858-c45c-4306-bec1-ba5db4f347b1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c31b480-7d06-421a-9819-412e3f7db37e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaf894f-512b-4aa5-a5e6-5513e962699c",
        "cursor": {
          "ref": "40234483-c872-46b9-b059-330abb2d76c4",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0afed6ee-87e4-4fda-b98e-b5cfd6edacbd"
        },
        "item": {
          "id": "bfaf894f-512b-4aa5-a5e6-5513e962699c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f87053b9-66cc-4da5-a517-f8f3714b6c5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 529,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}