{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "12f478c7-a73f-4d5c-aa43-f2be8396d09c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "da4520b8-9f98-4656-9958-ece815486a6a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24f845e3-8812-4429-9445-0683b1e2591e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "66454f80-5016-487c-95ce-2cf0255524c3"
                }
              }
            ]
          },
          {
            "id": "bc7389be-2e0d-40ab-b434-57d3bf146f5c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5215dd84-4993-4d63-ab44-157e0a24f4da",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01fcfa2b-3083-4216-8f0d-4f2de271f381"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5c4a0670-32a8-4d7a-a74c-54771c87bf8d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "90873a0a-3826-496c-b570-b00cd4722aab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2acee7fb-7bf2-4b81-a7c1-1cfe5cf2004d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01a178e0-0f9e-4278-82fa-d31002f29923",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f61d3ee-5932-4db9-90c7-faeb10f454dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c86f653-0ad7-4e9b-923a-394a4548003d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d3c2c1d-860c-4af8-a5ae-0ed74fc0c676"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0d0fa9b-c382-4ebe-b5c6-e1a1bd397f6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f1e7188-c684-43ec-97ec-e6eef5db3c57"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be59befd-5b17-4bb3-bbfe-77b8c1458b29",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e06637cc-48a5-401b-b526-05bec68f87bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a289db17-6101-4ff4-b97d-f976e8ad9cc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57b29f5e-74ae-481b-8f94-319fd7dcf823"
            }
          }
        ]
      },
      {
        "id": "1deae320-7778-4463-bd5f-9650b7d66c31",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a2609798-777c-4de5-8edf-0bdcdcf5855a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "414ff365-4da6-4129-9714-a9a77bc771ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9886bc7c-d49b-4821-adb1-f87811107aab",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8d7cca-723c-4fc7-8812-14b01b4b20e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c06c8d84-3b37-4ac5-9095-df1b2406eb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71d12fe-7563-4d3e-9d18-26abc9aad537",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212a633b-d978-4672-b782-a4d6f2f223ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "502e5c34-d117-481c-a94f-089902501ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d6a0ec-fd0e-4d5d-ba73-8e3e619e741f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d739853-4b8a-453d-9e50-9a035110854f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4926ad90-808a-4e94-8a6a-4c95582faefc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76254d4a-4291-4fd7-8bc3-3dc0b3346253",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "726a8f5e-a388-41d4-a7e6-8d877cf7caf1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f329bc3-bd0d-41ad-b46e-b217804d268b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef9b35ae-d109-4123-ae1a-5fd0b64677fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03371a0-20da-42ca-b252-a4e1ca259966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774c1a25-baa5-4f62-b23d-b850b72df16c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a7bf4132-e000-4e72-8a2c-c3c850fae173",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7de82900-e682-4665-b55a-8fb132c76187",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6dc012c-d7e6-405f-89c6-9319cc9818f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bfbe5617-340a-4c21-89ef-589800bac27d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d1b387c-9bbc-49b0-b01b-19096a4464b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b657fd70-9178-4987-8f5c-1af4a9f4e10c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93b56fa2-25a2-453c-b6c7-3d6cf522c79c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4355919-23ca-48db-99b4-46af06a1c0bf"
            }
          }
        ]
      },
      {
        "id": "1aba9185-83c6-48c1-9188-a890a3ba99e1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "976f5540-ef47-4f0a-aa7e-5d6eaca54f3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93b9c345-15d2-48cb-880b-d680e8bfd52b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e98ec823-358f-40e9-b920-767249fc6a52",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4657988d-d5cd-42c3-a3ac-c42ebf3c1c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec8bde5-db70-4877-a06b-79ceccacca40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288d8cac-ecf4-4924-8549-1c4fe125bd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22363d61-8b8a-4460-8400-e56f2ab7d542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc330bc0-1e10-468c-b678-fe7e200dd0d3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdc0fcc-7690-4677-acb4-9875ee3aac08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c086d2d-66d3-49c7-a712-1ab4c6caecbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fce0c3-3d2c-4f45-a832-df76bd8200d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "871810c7-34bc-49f5-bad0-813f3ca821d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b3d8a2-a083-466b-895e-95947a1e3193",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeb52a7-63cb-4ee8-ab62-9775ebc1c8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e1143c-dfe2-415e-bf8b-4dda46110382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fd9b65-6d49-4160-93a2-e78639d79a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ee468b-f33b-498d-8837-68725cb2fde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c58cc72-8fc7-4005-8e7c-e9d051fc5426",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c726c2-cc8e-4590-93d8-6dfaa6f145fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d7da9d-8e11-4ce1-8d11-dc72d12af7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c207ea03-7d4f-4e21-909c-6a586598bd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddbfe72e-2305-4846-8687-b4348bb07dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b9d729-326f-49ed-87ee-5fa325e18158",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6225157d-c752-4125-b8d0-cb1cb27a9841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97aae371-cabe-4032-81d2-d10e0f4187c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d468bd3-bb8f-41b5-9dcb-0a396bdda493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94f83f2a-1a2c-4080-a265-88a2e8fe03d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd8ded9-d671-4778-9524-63ac4f7fb0bd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3690a54-fc72-4f71-9393-443e1fb04550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a805c50-b131-4bd7-b91b-d1d3e9a77f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95840d1-511a-4e87-9361-c7ba14d27630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d6798ef-b35e-4a5b-81c7-4d699126a62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbb42f1-8ec9-46bc-a3d9-e95f6b7ab8a6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584bf2c4-03ea-4e4a-9a4f-621832e83d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d93a18f-6e06-4778-a66e-881366f10c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b490f3-0abb-4fb3-a35d-d4ae6c6c8193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "107f5a71-a0a7-4733-95bd-cb6b85bc80ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04bb80f-305a-487f-9ee1-85da3f6fd7f0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8b4518-4a81-4323-9838-be3c6c08fc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec89a002-243d-4101-993b-1204d66795ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfcfe9f-bc39-4997-92b0-52b511253535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cecf3afb-8496-4f71-b111-f75de1e2592d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7740d8c-2b66-4340-98b6-fecc3d2212b3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4d5429-4fbb-44a1-9523-86b98744f8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1026e20b-dfc0-43ba-8a89-ce9c317d7649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6ce7d7-f7d1-4a08-9922-466c0fe2d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e70ff06-b522-470f-801e-73e60aae921d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7310150-be1b-4c45-b361-9622c2346d9d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59960903-e714-4984-8d15-8c550eea3bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a68297-8695-4094-83b0-d948a6430f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3daaa02-f792-4aff-a62b-74d0c1d41876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "818f53e0-c925-4e6c-98dc-b728fcad990b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27ac7b3-d3df-4cc9-9ab6-1040a221ac2d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1816d1e-5c14-4ed8-aedd-801dffdabc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbcfe26-bc12-41f7-94d4-36b6ffed5ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abd3ef9-bb8e-47e7-aa67-a6d8ec871fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f594045-d883-40be-b2ae-74bf15e56d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ac45d4-9746-4aa5-a73b-fd46050610aa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3de527-74f0-4072-a940-45f7599246f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d7d5ee-760c-4333-b303-3d4e7f627f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cc9251-82a1-478c-a436-907a27f8babc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06b78ce3-15d5-4333-86bd-e9db076b5683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2d15ad-2500-4864-8634-0650beb8655b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b95d11-d62e-40e3-a66b-08dca747dd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc35022-6895-4942-b522-bbebfde6580f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d90dcb-7bb9-4ab8-9d65-f8d4d36fd755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "469edf08-edd2-41ac-9313-61a5aa2cc499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e3962b-9076-465d-8e5a-b70fa936b7ea",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c38fbe-c457-4a87-8a24-8cc55ae99e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdff2fb8-3723-44ec-a116-734bdd81ffca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea914c4-0a3e-4fb9-9615-2d7481ec4e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02441e1f-d5bd-4bed-a0ca-a6502c89fd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9879a28-79e1-456d-bc1d-0cf0b4a3e012",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8c9137-37ec-47cc-9294-2e42bbcfa27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac82ac9b-126b-423b-a2ed-1c51e987991c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fe0848-1dde-4d5c-a4d9-db917ecd73e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07e0d21a-a0ef-43a0-85f9-854402e4e0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e05300-6cc0-4085-be73-eed6509ea5fc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda635a8-cf62-417a-bff6-1922a7a6612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6116f2c-d0c1-4aa7-9190-f0737b0467c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ed52fc-8f01-4a96-b6e5-1082fc24e3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b482fec3-461e-4cc0-9bc0-8b6f2ac2d437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be72518e-31f8-4bfe-91d9-ad902cc5e5a7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a195d61-4481-4f3e-b32f-140bd4e09f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fd2450-4c09-410f-ba4b-93d0518dab32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26529b6e-19a0-4637-85ec-cf931ed3781c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cd350f7-8ec6-410a-85c1-d1c965bcd55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d51d9fd-8ee9-441b-9375-0a329187090a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4419eb39-5c8a-4a7a-8f14-b53f1fd1dff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b08848-3377-4d54-9676-bb210a0fcfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3de1d7f-035a-4189-9d7f-c6d108ede0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7a2186-bfdb-4dbb-876a-5b46ed475fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7032167e-67ab-490c-9e8a-6285c52828f9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0450e07-a3d1-49b3-9db8-60474388e802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355d565f-30f5-4887-a4e1-a7d2ed9d5df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c4e531-38e4-49e9-a49e-4544dc8a9021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "038e3463-23db-453a-8105-8f0457a3fbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ee12dc-c8f0-4cb5-a820-346c0cbcdaea",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612d71b0-9e41-442a-85e9-2a6fea30f74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2788faa-53ad-4b08-b5fc-a0113e9e2bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651d5c2c-42fe-4bd7-a16f-8a72be6dbaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b1fc23-966c-40e9-b705-cf577b81679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88fa00f-8fed-48ae-8bb6-f3ba76ba98a8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6b214f-fd9f-4191-b72d-ebf7cc74d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7ea6fa-b875-4cdd-86c9-7413b1dfdb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9f0e1f-ab16-4b8b-9d98-eaa7da2d93d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4b3762-4a24-4b61-a275-c6aba4248742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034d4d9f-b919-4d54-8192-f63a58d3c509",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fc8f5a-3994-4c49-babb-5f8e858a4458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689592df-1c93-4d73-b78c-92723ff03551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df81817c-0460-405b-97b7-39e03c376de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17980d83-a326-4aa8-8842-e45a692bbe32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d0b570-1605-42fe-bd7b-4ed8e41a46a5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9b9f56-0b88-43c3-9798-e82e7475345a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046bfbe0-3a65-4e42-a5cc-d90f683bd994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865d8a22-8643-4ee7-91c8-f3e8cc3e7e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4430baf9-a258-400e-b368-b3b0fbbc9f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4c0384-da7b-4e15-a539-1af166a78867",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328d5c30-7007-4470-8ef1-c8eb93df27d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb53ba5-809c-4159-8af0-8ddd5ddc8257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50a82a8-3d7b-41f7-ad6e-9fd215c53faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13c7a7d-8b19-464e-bce9-a3fea28f353e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94406c91-8412-43b2-8e6b-a6fd9c95e28e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85e3d12-55bd-4141-ab4c-622d86301a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467aecf7-03cb-4013-ad3f-5a3df65b4ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338ca05c-1d3d-4507-922f-91f475791902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa4b076-b143-4f6c-8ea9-e8d9bbe0f009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd6e397-b941-460d-9140-a63750dff698",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea1b0ed-e347-462e-b8f7-9dcc27b5556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd212aa-3fea-4c23-9817-7cbdf8eb0c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cafa35-9903-475a-8894-dbe5c4c6ea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a638d9bc-4732-4ad5-8bbc-f7a4bb47971b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484257fd-1c09-488e-9015-c214bbc27e5b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834df68e-90ea-4a77-98b6-5145c3db8ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf6ce61-6099-41e8-ac3b-b7d5006c2de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb93cc3-57f4-41c4-83fe-616819e99370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbfe1da-2411-4ce8-ac20-d507eb7a7df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84266677-6a19-4872-aa08-c7b1c0a8c354",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46433a34-db81-4fe4-a8a1-64a9d309e44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8910eb74-964a-402e-80ba-dde2e5e6a982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd27b08e-9a98-4303-b466-c14fb9ce422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f04f9540-b0db-4a21-80d3-260bf98d95dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba0374f-7bbb-4782-90b0-2e8a211374fc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0160d5-ff3e-4faa-b3a4-58c2c9fb8ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d42dae5-9a3f-4d45-ace3-dd68f504ef90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04278f9-71a1-4393-a314-25293b86e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67212b4-cda2-4051-b87d-3a7710c8b163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1020733f-f021-4f3c-89c2-e18adcbbb34c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47cece5-637f-4708-b2c1-b4548cf7789f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3531f5d-4436-4a50-8ff9-9b5c00c25f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0081242-7750-48c6-a526-bab80995a4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "65de9d01-bc9e-4458-9b05-c4eddc426cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc3be8b-1f42-4fc2-9743-32b3b8104886",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c57c3-a89c-4606-a2e3-9d74b17c8f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc77b592-c31a-47b2-af6f-7c5e518b1496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332c98e1-5af9-42e4-b08b-6ed266e09878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1215d6b-8106-4361-ace8-7470cc556ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b98a450-4040-4f45-b8eb-6fbdad158c60",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb13a32-1d3a-4875-8fa7-d6ef3eda4190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f12ff9-3c8c-4835-8177-7c9524e14feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626a9ad9-21b1-4324-ad86-a444b8ab2716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd5b262-9e6b-4070-aeb5-a7378bf8b219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294a4f26-6ee5-4612-8e72-c7506e1e78b8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dc52a4-d07b-4c8c-8e9f-7e074fafdd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a8a688-6c5a-412e-8ade-53d365c3b8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce1f276-fd8a-44cf-8113-e316a9df7ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "281ef82c-3356-4c94-aab3-213fd659e186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1455b4-f9d9-494d-ae56-76055dc4a2e9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafc7f44-f5cf-4793-9b32-d34ad19dbc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90066d44-7011-4e9e-94a0-c8f2da384a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19eea8f7-2211-48bc-97de-86daeca4a75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d346b63-3b77-4805-ad28-f2ba888f261f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29e8acb-6467-4abd-aff7-bc51783aa1af",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc6e9e5-e01a-49d9-ada5-78e338fdf324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669a19a0-a3c0-4e8f-9370-f859bcfd3586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0934ea65-e52b-4853-8714-ad5c3a13b537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "57f194df-27e9-4a28-9e43-255cfec13b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726f78bf-c84f-4f36-bc2a-e5368b7a6ef6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceec493-2628-4ac3-b1f9-9b4495532796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd66b5a0-ffa5-49b6-a73a-94e79e6cd8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9d3f3b-5be8-4e7a-bea9-e88ac84e28af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "694dae82-d03a-4b2e-8f73-d363770c1305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3aed393-c9d6-46ca-9959-17ae023a4a9a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e9deef-0817-43cb-a822-4be86794a22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2729131-6329-4450-a37b-ff2bff079b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3b697f-9363-4e72-96c8-87e5a23a3e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64ed3230-22da-4240-a0a0-a6c273acaf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824ac510-d115-4317-aaee-86cb65c338e8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737be40d-ac97-449a-b107-c0adad3d36a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41da0832-4023-4def-a4d3-679aee8f6313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b5ee1c-d16f-4520-aac7-ac4fc477f2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d41fd5-26d1-4a42-9702-9f093a63b223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2c7558-6194-4fa8-8bb7-1a8c819b7e5b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d22050-bdb7-4a96-aac2-363319a6515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db4acc8-53d7-4890-a30a-d46bb57777c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba18a822-d9c0-4ad9-a82e-d5b19a8043b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c84b8d1-96c7-4b1b-97f9-545100cd114f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cd76bf-5f9d-477c-b354-d349f4bafc44",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71119c13-ccfc-4f69-bec1-72ede73ab23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5568da16-5002-4603-a16c-3266141d8328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4c0692-0f25-45ce-bc97-3f66f137ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "387a5ac7-464d-4dbd-b923-669e9dd12488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f60446-7411-431d-aaba-7583f7b6b6fc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa31ec2c-d064-44c6-b19c-a9f678dac90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffb65a8-615c-47b0-be34-c41545f66993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493bcb87-480d-4a8b-8edf-25bbb06238ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "17ce31f1-e86f-41bb-a2ad-bf5944745f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b3c803-8436-43ce-9ad1-f2f2b60faf31",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98b1308-afea-484a-9837-c1cb631057f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a9ad65-4d94-4e4f-8da3-94b58572a9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6135fac0-42cb-484a-9142-f1f51d17873c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a544c40b-3254-43df-8f58-149ca9aa87d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0809ee5e-adb2-48dc-818a-ca3edc81e00e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d02b09-8dd5-4e56-bfa5-ef4722bfa928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9551c87a-911c-46c3-a06f-fd1d7074c629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95526059-3631-43de-9ac8-97709edf8936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a35038-c7fa-4ea6-8443-b4e7048bdada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48404ea-25c4-489b-a0bf-a57cd862f048",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fcd71b-1caf-407a-a1cf-8b08b9c60555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb8a2ac-34f1-4a87-8127-9d20b2092cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05088016-2cf4-4e1c-b3e2-772fa0d07c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2736c82b-0ea2-413b-92fc-cb7eeef66b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592def46-b0cc-4cba-a133-6b1cd05cef99",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a07d9d7-b85d-497f-94f4-6f2036837ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec415c9-8d17-47d3-9f04-c5cd65ff7a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21f15ce-7c1e-4cae-aebc-f0cb9c3c3af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20fb6388-577e-4371-945f-bc5d0cd3bb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2189924-a9f4-457c-9664-c2261dba8400",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8407a458-202e-4a67-b784-5a1db815569a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d255003f-d6e7-4610-83a7-b644b93bee29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac6ce8-9efc-4a9c-8b72-c35d05546ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcc9efe-0e2b-486d-a05f-84b552157027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb074144-4ef9-450e-af50-e6f31afe8a65",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d08ccc1-c0ec-4d69-a74e-15ea4c92adbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a80fc8b-4d01-4aff-acdb-cb657039e355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf8929e-6e71-487b-8a13-5be9a5ea00ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e798858d-b008-40e0-8248-1c5bd6a3712d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b5e255-1696-45ed-96a2-743d28cb471a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c1403c-bc4a-4853-a37e-a92fd259bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c265eac2-e99e-4316-bca3-8fb383dba920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20aabb54-fe6a-4f4a-bba5-427ac301e3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ca35e1-6429-47dd-a50c-514fe699b7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5420f4f2-0b3c-49c7-b6ac-8e3248244861",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89aea21d-9228-4c09-908d-df9f41108c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4e3620-4d33-46ec-bf73-7b17272d5b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c117fd-50e4-4554-8037-1c083bbe4e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3786b6-7893-4a65-a82b-9e66ef40d69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf30207-ce61-464b-9c7f-9d817272c441",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b43f2e-c806-484b-943f-b6770a1b88f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbba8625-192a-44fe-a02b-1f1deebdaffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378aca40-6bd0-4345-b448-9f276838d0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8376c91-ed98-4221-8259-269877f19e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b437fe3-98ce-4975-b8c1-f71c7133d3cb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a4105d-21fe-4c00-93cb-12bcb4ed3385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a91abe-9c37-484e-ae18-34f42033d3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fb002c-2af9-4434-a866-663ce633e1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3f8315-fd0b-4bfd-8e36-955a16f1f97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2f9972-955a-49ea-b55b-8c9cf634cfb9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be771dcf-82d4-4aa7-baff-fa58628afaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f0614b-146c-4834-a4ea-b11651b3eb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6a70b1-aeb9-4e70-a917-8859db795458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "439934ff-0810-434d-aab4-399ec1c92609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de3ffbe-6e68-4422-b56e-1031cd290928",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8039cfd9-4df8-48c8-8fa5-01aa4c628bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a92f53-1a28-4af5-bf87-498e10a29ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58313dd3-c089-4c84-8260-06efb7e4c172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "791d90f0-188e-48bd-923e-bac5ff42edf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524b1722-7e7f-418f-a7c7-e19d3f6078b2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70def9e3-abcf-485c-8d16-83fe70521e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893aa65f-a673-4b52-bd42-168797daf9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b80e3d-abd1-4384-87d9-154626444137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e318f8-1e49-4612-a150-819fbea32f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a95eb75-2def-4ada-8da7-cbcff9413bb2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe985c3d-0a48-4e76-a74c-a910ffea8dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c5c7ea-0401-45c3-8994-a5912e74c2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6fa922-622f-40f8-a1be-86576876ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "704f0f48-3d8b-4a33-940c-9990d4b9f026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe97cce-5613-404c-93a3-074640aaa896",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aca267f-1a19-4cc7-95dc-184d5e0a9a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4467e2d-f4b4-4115-9eb0-894fb640c19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f069e8-7249-4b3c-a5fc-d6a9b20fca1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "24ecb327-3988-4cb6-a7d6-461a5657786e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0d0fdf-713c-4ff0-8a19-d23d240acd4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388d55a7-7ce9-4595-972e-102c9a632dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f15323b-f893-4aaf-ab75-b2ddddc3a1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00841574-d7cb-44dc-a017-da9e0de93005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b72979e-cab5-4d29-9522-87b7655aff2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9615509e-32a7-4f66-9576-ee00e62b9612",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02a8412-87eb-4c93-a2d0-207df72e8152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449b53a4-49a0-43a1-8c3b-57cbea5d6a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399a1368-308c-43c0-a3be-ce8ed611cada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9022d251-ab54-43e2-a2e7-c48a03991086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbe93d8-246b-4a2c-ab6b-1708f60e77a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d4b9eb-1169-4635-abe0-3f4a5bfc52ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63f44ca-3e23-4eff-8dff-ac6b64c7b6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3ee3ae-89e4-4621-89e0-478f73554f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d695eb4-8947-40b9-84be-7f0f8edd4d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4d8ef7-4715-4798-a9a2-2d4cbd7a27bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261d10e4-0111-47ce-b094-face428bd512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd96858-d0e9-490d-95c3-39e6554f084e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5985e9c0-e986-4256-8d9d-c616655436c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b893b0ae-9924-4584-89bf-57c99cd6f1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6df182-27d3-466c-9b72-9899fd869713",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157f5034-04ec-44ff-b530-77149adc8ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5e3552-b078-4b0f-b3ae-e3f9b3ea8360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaade701-149b-4090-91b8-f342187f5371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b787072-68c3-4127-8baa-e06d81164976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c86dd0-0df9-4548-891a-7b2ed7a70cb2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6561cd3-edb6-4b6b-895a-dd9f44a91ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19de169-e4bb-46cd-b76f-a9576f80bf5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca85dd9-7e60-4e49-96e5-7c102317c986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3325fb20-449a-4b11-a5e7-4b7beb6c8b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9877ea0d-c502-4767-905c-96984460816f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378d85d4-7a42-494f-868e-2f9b6f6b3396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0b1765-08d3-4223-920b-3b19b953c82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633b96ea-15b0-42a4-9733-5c89fa3f3dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8498a6e-8d46-4076-8bd7-bfb0ef627764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5e7e26-235b-4f34-87e0-2df11784335a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2f1eed-5e6e-4544-ae41-ee21cb2fe18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e88b284-5dd7-48bc-a6d8-40ff95ec5cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608d7ff3-34ff-4ff3-902a-ff8fa1d0580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f287394-33b7-4206-aa28-e5e40965c439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1654408-47cf-4aa2-b0e7-f847f25cefa3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0a082d-7af6-4795-aa51-5b586a55adb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dd2577-14fe-4cd3-ac44-965ab7efa1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7163d7-d178-4e8d-a198-b682581cd847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11239795-21f4-4e6a-b8c5-6d922ae011f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242f6f5f-e16b-42d0-b23b-4a07a7fda273",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5fa646-59cc-4740-b39f-7287cbcd06b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32841ae-a2b2-4ab8-921f-2f800cc2a403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899de05f-4a33-4c4c-9727-df6120f9c360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8502ddb0-57bb-412b-8c8d-2bbf24a1112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33b5cf1-727b-4bff-aa32-41dcb8bb9de9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ef5967-2d6f-40bf-992b-d0ff117bd0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7ba046-50b7-4fa3-ace6-4144e73f4174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d34533-075a-4731-ba6e-f8671a37b938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "141078d8-36cf-44ad-acc7-32ee24488253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e172d33-4b1f-4438-a35c-dce8c5b7f4e3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf45061-d6ca-41c5-a3b0-91f412a4a76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc365aaf-59f3-4661-aeeb-b237a2944436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e788a3bc-f33f-4953-811d-7730711c158d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98b92c4c-2713-4b0b-9fa8-c72cfd14dbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d4f848-6143-40f6-86fd-ab3a522b49a9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01244640-23a3-4b0b-a768-0364cddeb74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3dc81b-3ae3-4239-9f8e-db0803fdc1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6982e2-23b4-489c-bac2-8f0285b6e990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a23adb-3d47-42f7-9e33-3f8dfc9d1d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2836eb9d-7082-4379-b3b5-468959f7e804",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baf3936-2536-45b9-85ce-7bc10708c000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e349e984-e657-4627-93c2-9ce9035fbea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82879283-b49f-4307-84d1-fd6a03f05919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4df53f1-0281-40a1-a612-d6289c180715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79ed538-ff0e-4b6f-a0ae-8abde7addfff",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8af9cd7-e520-48c6-b9af-eef3ae0d3b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a67ca54-f390-43d4-b196-f0027b05c67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde40984-fe93-4559-bdbd-ddc1bf81c502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9823c0c2-6492-4e1e-a165-bd88a29222d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00387388-10cd-459f-a3da-173450023fc2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cad5cb-526b-4954-b899-8c130bf72212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f33feac-e16d-4395-98e9-e5b05327fc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5af738-3705-4796-a5f8-b239ef7f17eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f4bdb1-f292-4287-806e-f8c399098732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40d9f0a-504e-416e-8ecd-8f0aea002aa0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44691004-f97a-4bf3-86f0-aca2423fd0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d806466-1b0f-4c10-be97-cdea060b0469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c40326a-90c6-4832-b4fa-60341a9e1c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a688934c-db45-4859-b620-b0cecc675643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1b9869-45f4-4b76-b90f-97c6fa792690",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c461902-8187-421f-bde0-db33be1707be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb4c111-2e86-4271-b3f4-8af621e696ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff982b2-dc40-4299-856d-cffd1900a2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "540748c3-c504-4841-ae16-5ef78b2b71cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cb1d25-db19-4e82-b34d-b907c07a9bbd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41435627-db8b-4428-b63a-91ded2c4bdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890cdb63-4412-4b1c-a923-9d5cff967d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91384db3-428c-493c-8e41-91bc4943da4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "146500bc-57d5-4f13-907e-82c247307e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41fa7a1-1fc0-4942-8bd7-b5e326a055ad",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c74e915-a5b4-4d55-850f-6e2a4757ba81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b411a0a-a87b-4f27-b394-1601df126501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7210e3b7-aae1-4a44-b3e5-1668a0d787b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09399b2-b2e4-482d-a217-b469bff1a64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9f4f12-19f4-4596-a7f6-173a698b0d02",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbcc0a7-79cd-4a12-a691-a8286a5749b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b39da6e-58e0-4ff0-9ab3-0a0c9f378b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35c50fe-f0e0-4193-9db3-67d8700d52f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44c42752-388f-412e-b201-89b8562ac375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1b01d7-aaae-4c56-a987-31bd2b234dcb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2b2927-ee61-4be6-9319-92014f64fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebe0cb3-cd85-40d9-9acc-1381a3768d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a751340-8f1f-40ff-b8cc-721c844e898b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa9ca6a-43c1-4403-afcd-254af4255a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2803971a-29c4-4614-b357-fcb7c974eed0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e86503-071a-48e6-9a06-8e9dbde20c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26b0f86-a4d7-407d-80ca-81a23fc763e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777bda5b-36ba-4ff1-b6f8-c1cd7a212c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82d8a7c2-1596-4705-b458-bf02f307655f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc21efad-0b95-445b-9f61-a853bc28884c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e289347a-bc23-435c-9b78-bc41ff1a95dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f464b8-e5cf-45cb-8296-2762a37f82f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fb5eaf-ea34-40eb-bf6a-bc455414752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d53f1591-4888-4c9e-891e-9db8b6bca894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20af7390-a8c0-4527-a472-9028af77c0ec",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b1bee0-68d1-46ea-b67a-b79c4aaffa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8f6570-dd0a-477e-9c56-40428af78f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc20fd4c-2c62-41fb-a41d-76a0f9a14a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a5d53a-71e2-460e-85c1-db7841f4f5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f1de67-6cd5-413c-add0-56bb5419e704",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24093657-07ee-4a7a-9a3d-7317f37203c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9793a1d1-c91c-4c81-a016-c5b5192370d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7804c63-af2a-46cd-b5c4-f5d9e1fa721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bfde8e-2ea9-4992-9f15-fe1779ace2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc979aba-7eda-477a-bae8-4c144f6d69a0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30698b8-cf21-4b38-857c-fa9ba5732abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e824846-48bb-4f69-9bbc-9bb52cefb743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339940ec-7e91-4635-a35c-9a00cd09d940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0919f24-1b34-4b41-b5b0-2443b05d473a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27170cb-ff4d-4ed6-bd71-c1545df6cef7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f164cd5a-576b-4422-8a81-f0f97b7ac0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a197912d-1fb3-4968-96a5-3ef556325a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7787ecf0-456c-4454-8417-b4b618160c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "012ba963-d1ee-42a9-be54-623c12997396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424b891e-7e20-4bfb-bf24-8c76034334a3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d6912b-60a8-4ebf-ae4e-b1562ac62d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cad394-34fd-4573-8e5a-cbe30fc6f1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b8cd81-afdc-4d64-a443-02923d4d9df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edb6d215-86af-4af7-bee6-3a1e56287a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbaa54b-c147-4c83-acd0-a3065c3533f2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04c5b35-1e63-44d7-abc9-b5e95eb35cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680d2871-4e12-4a61-a56b-1990a7757690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6520a20-f840-4406-b231-024799dc387b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ba0843-4989-4f17-9a40-67e493094790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80196e5d-74e8-4ba2-a52c-f9701e9f4a66",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb710ef-241b-49ef-8e2e-a27194aaab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d129ee-4012-43d6-b4f1-bb1e1761b3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663da7d4-7511-44f7-9da0-586a43e14767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6349043-9978-440d-b5e2-3a03ddbaf1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b133aa99-5d95-459b-a9a1-abdd9b76e75e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dbe08f-9560-4d0c-b428-ea4e5a69a887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8582edd-4982-4993-866a-b3eb10c65161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27269959-ec9a-4be6-873a-b091b622ba09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "51510990-a091-405e-afd6-b1ca42a4214f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36ad815-bc83-4505-8725-d5a3cc5adc64",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1ae2b7-9122-4e94-bbef-cef6e7da96a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662e5688-1993-4c37-91db-95dc09b0c789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733ba0f6-0949-429d-b6d9-70c7f0d58347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa112432-19b6-410d-bd64-7567820255f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2431ab-595a-477d-8f74-0ad2f9d99548",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc94326-89d0-4dc3-b1ba-6a4a8a861a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6513d435-5797-415b-a62b-8fa0d2273786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104e655e-39b5-4c45-be6a-a46b2f28ba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5b30e0-a33e-490b-a536-6182815fb5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4114dbc1-d7da-4d2f-aa0e-40d24fb61f27",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e064a55c-36c8-4628-b637-d3427ab10679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84971e01-88ac-433b-b310-5db96782ea62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150a576a-ca6a-4667-84db-8ae777871ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed696ae0-bf8c-42f7-93e0-a7101f9d62fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1ce664-9ca3-4ec5-ba25-b6078cb7fbc4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1deb47e7-719c-42f0-84ad-61ec4de29158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8e20646e-c2fe-49f9-a24d-d9f7a70a7643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423f785e-7ec7-45f0-a44c-4f16916dba38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3856b1bc-0126-45b9-b579-e02fb0dd1951"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f285568-5650-42d4-ba7a-ec59b6dc2e2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c84de9b0-3529-4031-8a7e-187def00d24e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e6a974-c359-4a7b-a0d4-a6ed47a894bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dde5b19-2dfa-4070-8716-fc82f9090f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556876e6-f9ec-42d6-a586-b1f27634bcd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b67ee6f-c010-4ce5-9fff-ce717abbd781"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb28bcb3-fd09-40be-a4f1-f40c13e0c457",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc3b1b6e-b601-4ffa-aa30-c1697c8a2416"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a58bbd7d-e3ac-4566-a167-3e8caeb8fd03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01bc6a24-5893-45a3-a9e5-0e348af8687b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4114c045-a225-4c34-8649-f4b6fdd80f8d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b180a0a6-2179-4bb3-839e-5aaf54a38fb6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "047c3f33-63aa-4cf4-8b7f-a9d4c5be357c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce716b35-299e-4f79-9b05-51c0ec09e453"
                }
              }
            ]
          },
          {
            "id": "e6360ef7-b38f-4406-81d8-f6926ddae4a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e806c94-bf0e-45bb-b6ed-d757c9c0ba9e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2ed545c7-7d08-47d0-b131-88328aa2f14d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fe20b8-3fcb-479a-9f74-314ef4298464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "126a2e7e-ce9e-4a13-b7df-f7e4798f5884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3747455-82a0-4fab-9950-fb0a54fa46aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a20887b-42b6-4d39-99a2-25ed06fba3f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7578c289-57fd-4d0e-a002-f770b78104ed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dfcf1e8-3269-4d4f-bed3-bccfd025f1e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5df40c00-69e0-420b-a265-01b03077f344"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c38c5e35-b06a-406a-a281-e31151734639",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "056dc1bb-19e8-4b2a-93c9-e93ee6ba25c2"
                    }
                  }
                ]
              },
              {
                "id": "69f79ea3-b1c6-4f0a-8150-459e23e7be5e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88153377-bc00-49cc-abfb-2a70a1fb876c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "827db34d-3827-401a-bd47-a7ee6a1c2fb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1ba003a-c387-4a9d-8dd8-f3c8d501b1be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f23fa22f-cd08-4877-874c-462b9738aae2"
                    }
                  }
                ]
              },
              {
                "id": "55da8d49-e697-4513-b961-864fe1db7dcf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd462a1d-ea16-4a40-9007-66cfc3262560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d170b354-7ffa-447f-bbf0-5050ce34ab1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3b38b3a-4c4e-4425-86ce-c5c30b5574e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f92631c7-78a6-4f80-90ff-b261158d1405"
                    }
                  }
                ]
              },
              {
                "id": "61bf12e6-2023-479d-bd06-edb4ded6f270",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93f2e32b-c3ff-49e1-9890-82b5a90df8a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f19eb245-9c63-48b3-8d8d-d8d422d0de74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b8a7206-6719-4030-9b4a-dfd8c1919864",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3b6c1873-f2eb-41eb-b297-e12d77889e57"
                    }
                  }
                ]
              },
              {
                "id": "cd7ddf54-a052-4ddb-ab5e-46faa55091d9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "403e3675-c4b6-43e0-8efd-4545af1cb223",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc028ca1-52ff-4b9f-8a7d-1280b630929e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc6af0d5-a6c8-4566-ae18-8656f53846b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9a306245-eb6e-48b1-afb2-184d44c3411f"
                    }
                  }
                ]
              },
              {
                "id": "6eff172e-e7ed-4a56-abe8-d7ac724564fe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfefc839-0d40-4da4-8e86-d5908197ff2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4ce52c8-1940-4558-b4f2-3df4af73c9ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca7b2aa7-9fa2-48f6-9b71-4653d92fa045",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f2cfc1e-8975-4299-a6ec-0480501fce7f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7799add-4075-473f-9fc7-a434bace3ac0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7c21afd-6aa1-4f37-800c-ad86910a98e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6b944b15-6209-4259-92a4-8db6cc40dffe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7382f1d7-c7c6-4612-8543-34cbd15c88a0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "923892e7-b867-42a5-b79b-6761a4d499f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b2bdf699-88af-4c0c-9e83-408953b21181"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f646a0f5-bf11-4439-b396-52134ed938f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf54f9f9-bf69-40f0-af0f-ecca5f20105f"
            }
          }
        ]
      },
      {
        "id": "cac13119-bc09-4315-b7cf-0aacdf70ce46",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4f780c76-31c5-4130-becc-46d249dba3c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59d6eb0f-a539-44e6-8609-3bab99a4a019",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11478517-9a98-4c2c-8335-bb9b01f25b35",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a0ab76-e20b-4368-801d-fe3cb12c6ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf57d45-c953-4659-ae9b-35f7c076f0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c66a799-e876-4715-97df-b4554a72427e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f480dd3-a45f-494c-9ed4-86df5dcdea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626d92a4-f1dc-4a87-8521-8b15dbab618e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a00ada9-c406-4178-b97f-70461de6d828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374330cd-fc24-4e27-9a00-c077d931cd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93862ec3-04a8-402f-a2fc-0a2460965c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ab873c-5595-4f2a-acac-ab5ee0490db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a308ac-95ca-4fba-9716-9526daf99123",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ea375e-eb5e-49ad-8f7e-b1c5cc4031d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8d1981-f991-42d9-860d-aea0d06f896f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e44c038-167b-4432-b7ce-26205896c67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a16165-bcc2-45ac-8e29-911e0e21c676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83597543-6d21-40d7-bbfc-ba529b89330f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c3d48a-0c12-47be-9154-1866471e2e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b61d18-80c3-420c-9631-e78aa29dbaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4c6d10-8557-48bc-9b3d-e512210c19cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25dab0a-f98b-4561-acea-cb36941b685c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b8ae6e-f1f6-4512-8aba-71d749c8c619",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9811503-24dc-46f3-9e5f-db7f671d6c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35794398-ae58-479c-bc64-828e10e16d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba78f291-2274-4d8f-a021-55fc2a2ff1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a29ba7-53f5-45da-91f6-f8d0196600b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6d4913-7b3e-4be3-a541-d785caf0a36a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e5fa91-946b-44e0-99d9-001b30a2702e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d23fd8-9ac3-4e5d-888d-a73147621ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb2ca58-9939-4005-acd9-12d0dd49b6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d83ecf8-318a-429d-9ea5-a4415f48431b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8355572-c731-4c0f-82f2-ddf900a5c532",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5ab5ba-6650-4e1b-90f3-ff03cf24c749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85113cdb-bf9b-42b1-997b-a22544499603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d1ff9e-49e5-4c06-8073-00827260b848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cc1df4-109d-44a8-b118-7963b7f02bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6d38b7-82fd-41e9-9009-3be42392a365",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279e679c-d116-4c42-b245-e2b9aea4ef74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f56b6e6-30d6-43c3-ad06-84c32c102725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3edd8cf-2e9f-406c-8359-c6f5d76879c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed390c3-8cbd-4d44-a492-db998155082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee38cd91-e615-4d1a-b57b-e74f2fef40a9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e63c9f-d751-4da0-9961-b748c40d3795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724415b1-59ab-4137-aa78-1e500cd4a898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea53eff-2029-4802-85e2-f8050c209734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10897e1-cfe6-4423-9222-e6e1fa379e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c392e3e0-6282-4bb7-b817-7ee2bab42e66",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0093da71-435b-4bb0-a398-4cf28cb1fb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65834c7-acc8-4483-846c-841955890851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cda2f80-6737-4485-9515-20407dd705e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1dfbc7-9130-47e9-9b72-fa073de2ed6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae4dc86-7e06-47d9-96d9-ba0941766235",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212313e0-14e3-40d4-bc90-f4f42d03350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4471ae1e-0c9c-413f-885d-64878e3c13a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fb27f6-1d2f-4969-b5b7-c1baa666027e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6a0638-db84-40a2-9d21-7059463c7258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09ebf66-39ed-4e2f-aa56-a38dfde9c381",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc1c97d-8417-4f06-a7c5-d2621a450728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2bec9e-61a3-4e14-a1fb-3d22d4628d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a08b65-adde-43c3-894b-4722807003a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99bf68ea-db78-4705-b59a-2f02ecd08725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dac9f1c-b32c-4174-a168-9f42f00efb08",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589f92eb-4199-4709-9c7b-489147bb908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2f2043-311a-4ae3-8eb7-6e9467c2eb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75ed2b8-1740-4ab3-b415-3ebcde001b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4291b15-faf4-44e8-8619-8b426b8be117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58424c2-35b1-4653-870d-e6173dc2982b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0d2f4c-04f2-4fce-9f1b-f55d7c829b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4ca0a4-4dbd-410f-b3ac-36c0618ce843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fdb5b0-7611-4ad3-b38f-d7a19f8bc196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b7a8c7-2218-4be7-836f-c1249b29d6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d6644f-04b2-4410-ae41-557aa6cdff00",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f11fc84-e6a7-4bfd-80d2-934157d50532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda70302-b324-4b28-9991-da0f72dacbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daf3eee-6610-479a-8230-e052844dd5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe1cf3e-52d0-4f6f-ad5a-d4595c835bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e10759-afb0-4f8c-b64b-c547d031eaf0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0370e3e-a859-42d9-8969-7588034f46c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2952ba57-702c-4640-b21b-d69e04f9c5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735d65d1-65f2-486e-b002-2cc9648029bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdd8e60-72db-4d67-9ccd-e166d5190e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d5c579-47c8-4ece-a679-157683dcad5b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a88be6f-5af4-475f-b3fc-5b68562c19a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca563833-212f-4d8b-a1b8-e69669e45169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb979fb-a3a2-4652-95ca-dc9498886683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ee4252-0d1a-4012-93ac-7f3d27cffb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e2809f-96fb-4f04-bc48-715c5f3fef68",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1279040c-889f-45ac-9e9a-023f39a7155c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae79240-f3e8-40a2-99d5-4813e368f5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07695028-ebff-4f3f-bf83-19941e4ad9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b76b50-f1f9-42b8-bafa-ef8db502cc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9012f3bb-7c79-4447-9439-a1cbe02ff1fd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92db2d4e-8374-4328-b17a-018d27e7cd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf2a2bf-7581-492d-bc20-a99d9dea7503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec2322c-e638-4cd9-afb4-22cc8fb41d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60af9ad7-2649-4cfd-aaa5-c33e111e69a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212e376f-12d3-4e48-a744-14934023cabb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d526735-9b1b-49d3-9b42-e197a2b56a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49093f04-f5a0-43b0-a47b-fbb9a3bd19f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c77157e-d8b0-4717-8d28-b111ef0bf40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312bded1-208a-47cb-bccd-5ce9375513f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9131fab6-6945-4ec2-b2b6-2c4470efde73",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84a5661-380d-48a5-92dd-2b9b1fe34492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb3ff83-924c-4c74-9428-3d5550cf84b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bde42e9-0691-40a3-ae9f-3fc313862b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c682a56-7e4e-4bab-bdc0-2795c2955f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd010606-1995-4ac6-bd00-198966315e59",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c72a3c-f7a7-48ca-a8ab-04430804d180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744a26f5-b82a-4821-adca-52ea4a527e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8212fae-d2af-456f-bd2e-2732f7627715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf7c0b5-8476-4189-af1b-d8c891f45f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c593ab85-aa02-42ec-969e-1c9513e38232",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c58d51-ca8e-453d-a178-2e8439eb8344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d58d63-a0c7-4f16-bb85-b0b329518527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd79c05-4607-4088-a0c5-eef11b59e534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ef9d01-1383-486f-9a39-31be353be1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76672454-85e5-4c5e-b6b1-b87ded286208",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206b2a17-1ce4-4ac8-9957-fef3c1dfbeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28325992-b64d-4951-b5e3-b33ae0aeb008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba3c815-6c77-4410-9d10-72f795256742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2bf5e1-2957-4635-aa6f-79f40a69ef1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2453672-c1e5-42d2-97dd-0caa603d9afd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960197df-804e-4a01-a41c-1a2a74005c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e522cef-655f-4f9d-99ed-6d687c7b85a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8e7bf7-3725-4702-97b7-c1ca0a17e778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c66c1dd-e9ba-4116-b35b-288f7c4ea129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf27e4b4-e676-4667-8236-e6710cb81500",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0e0bd9-c843-46fa-975a-38ecf0621e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1683ae8-0b8c-4679-9b5a-ea2b4981676f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9526f1-9031-4186-be4b-fe7730b2a6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8219e1-0820-44af-b461-179160fb37d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba45194b-c10f-4ec4-89e3-b65b1b275bae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8991fc-f051-45b4-b4e8-3e8dd939c637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23ba178-5e88-4f69-a013-fa8e17bcd6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353ab612-ecc2-4148-b7f3-e4328f05bee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff013e1f-3040-4432-94b7-57cd58825e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875a9c23-49e7-4c90-b063-3f969eb988bf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f268d82d-d31f-41f4-983b-2b383b26572a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ddd980-7063-481e-bd53-e7887575d5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f1ff68-9120-4de6-b51a-c04689eee911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a95dd7fa-edfc-49da-aa5f-1ed6f9a63e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6889d5cd-2334-4580-9ae3-a4d22e15048f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc76c62a-0530-4476-9ff8-0fa74615fdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e16333f-4dc1-431d-b853-afa82d812a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4175e87-b20d-442b-87c0-4731bebe1cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c363ec2b-3e7d-473b-85f8-187ed6151984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26572364-55d9-441a-94fd-0c41ab1ff949",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b67f158-96fc-42bb-b9e5-e7e6e29fec20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56615fe-32cf-4e7d-a654-8e05a8ce24df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12b73dc-fccf-4c93-95b2-01a61527cefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "762591b3-a2c0-4f70-9c9b-b4bdb4282105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9ef940-8fde-47c6-a7d6-bfa391b5e9c0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c9e233-2a80-41e1-aaf7-704848e377cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c0d58c-a3d1-47b5-b6ba-f9df141b9aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc466da6-2408-4fe7-bcd3-4b9020e29058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c807ee-5f14-4fb0-ba9e-2392c957f3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c0382d-e188-4ed0-94a1-e2e9308b724f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da30778-62ec-4099-92a6-e59a232e570b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e133bef-e2d1-482c-9b3e-1b325370a356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d52774d-c190-486a-b0d4-fb7095d4a62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b7b163-62e0-480d-b1b6-5a804809bb24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "103c9cc2-6410-4131-a917-8632ea0dd6e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2992ae66-a0f2-4cad-9a53-b698f884d194",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b0552d-d129-42e1-9f30-c97c001e8ea2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0dcf4b-507a-47c6-866d-98eadda20992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac42f8a4-20a0-4edd-b71e-4686333d475f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eea3c347-b3e6-4aa0-9b65-ecdbf3ef14f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8577d2a2-d6fe-4272-8163-9b16abe8aa0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b94c37-d00a-4315-89a7-584da8f4123d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "729204ca-2976-4e2e-b2bd-e4726bc12d08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06977ec0-2fc7-4165-a07e-76d1cdc8b7d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dc96c10-c0bb-402d-88fa-8054bf14a0fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e97a198-4f80-4bb2-8a36-143ac9812a7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "509a1e1f-72ea-4c42-b042-14313ba1024a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42571358-c36a-45bd-89f3-203e60fe6f06"
            }
          }
        ]
      },
      {
        "id": "c6d0d7c3-b31b-4c1e-a248-f6f42b4b1cc0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b2315d54-336e-478e-8393-11217b1500e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9046ddf2-ffff-4fa4-9037-5c0e9b469d2b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d83499c7-d10a-4ba3-bcc1-9c4fa947af15",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4b9060-5777-4af9-9235-3f3ea0206488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a455ad7-0c21-40df-8049-46cd50c86c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9dd866-b8d4-4e28-b0df-d7b3636df874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b757227-066c-4800-b6d8-36adbc74cd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8761a25-2e14-4ae9-a0c7-93871684d5e8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f53ea15-4744-4306-9529-5d8a5c4caa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b4ce63-aea6-40a2-b3fe-bcbd379afc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a526cc87-5c60-4fea-a3b7-931e19a85af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2929a927-e050-4050-961b-3f64add434c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d3372c-8049-4b97-8040-328249dc2444",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86af6a60-70bd-4f7b-8d8d-ba8d9ba5d2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8d0526-3df4-446a-8fcb-ed5d3d8a4be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d57c31d-4fc3-488e-9e4f-f4df5966e26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8895e703-6023-4185-96da-b8deb853f084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b81ee25-f1ef-4a7f-bde5-2be879d3502b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5491af7-3776-4b31-b838-69f310fcfa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bf7b12-97bb-4303-bcde-0af8df688c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcc9475-97a7-4d58-a558-244f0ecdf052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b88bbfba-de69-46d4-8052-d82ea976dfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140f15f1-f75b-4f88-aebd-fcbc41ae8f49",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e20788-c461-4651-81e7-d4a6419245ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baaa986-ff7f-4b9e-a673-d6673cb13f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bc7279-76ac-4fef-bcd3-b4294954d689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60f825d-ca6e-4dff-bfa2-12df8e0c5ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db5507d-de25-4775-af97-7d4cf7faefcf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8251760c-d3b8-4327-95a9-b3443b68c862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf7eb36-d137-4045-8c2e-ff01822c946f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd331ff-5e4c-4a02-8613-30e9ed7b3965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5976ce6a-38f8-4538-9d98-08282a424d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1ac683-9e8b-4de8-b552-128de7a9c0f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f43f009-b10c-4369-bec9-cc26db626f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93af648-cd6f-4974-92c5-8f295a392327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49237df-961b-4c82-8263-63679a6489a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "45046c8b-85e2-4500-a013-0d43d65e88a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4d7487-fa76-40c9-a28d-57465603cf02",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debf427a-d51b-4d89-983f-08d11e7e19dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993cff34-c502-4065-a1a3-1c6f05557a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abe5be4-3e6d-416e-9c50-37211223ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b9ce12-e549-4f9d-b11e-4ae1fb45b569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b537354e-8293-4b16-b3a1-74dde85a3901",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f4d9d4-0b76-44f7-acc1-f08872141398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0beff5f6-2d01-467a-9155-d3127770f946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c8743f-adb8-4046-9742-b48b9d6535c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "169bd571-3167-422f-8468-3034edce24d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cb4d48-654d-4730-8b5b-fbbfa184074e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b40ee0-e3db-4956-9602-66730c99f33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4991deab-1bc0-458b-8ce9-ce93317480f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95207f0-246a-43f2-a02c-126b3bc23ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45e39368-2c52-40d5-a468-69b92bbe8582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a71d18-f187-44b3-bc06-e78f8e05e073",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a93cf46-814e-4944-9ea0-233bccf2fc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5c5939-cd44-4d15-89f9-fc8c152ae935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecf2ae0-ccc5-4fdb-9ec9-b634bb318587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81940e87-50f9-4692-ab3b-07c15e7edfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6328d615-cfa2-447d-bbbc-dfff6548f675",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b45888f-9f88-41da-8749-369da35c5d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654db073-10ca-4609-a940-62c13faca051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6eb204-1342-4dc3-ac8f-5ae4bdd8370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c1b69a-8f4e-4bc3-b82b-015187ef4c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b0a611-c7bb-415d-ba6b-ec469e08f710",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1863b55d-d4ac-4ba8-aa74-1f1fea1c3a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71b8206-e6bc-4a08-8e70-bff43e821feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550d6130-e2ca-4c0d-9898-92aac4ad8cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15956b52-67dc-4bbe-96a7-0152a6adb96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4f5f53-a574-43d2-9906-7fcef55132dc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c5e648-8f71-4f2e-a019-23f6c110a780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6837f9c1-e94a-41a0-aec8-799b27add4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dd3a31-527c-44fc-96d9-3923c4e575fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0abb68-8ed1-4c68-9069-cbf6fe53688a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc08b11-9407-45fd-a6d7-b4a7600acd8d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04110335-0f68-458d-a195-7a6ca4982429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49332485-2407-483e-aa96-f093301848ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9e34af-61f4-4920-bb0f-afa1d6cfe285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd9c012-885d-4091-921e-3f0b5b6e9823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84647781-daf7-4237-902d-3e425a6f1140",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706f8e4f-e307-4ec3-8087-a1bbe4d7ca1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74147229-ccc9-4489-bb7f-3c68c8427468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb15345-5205-433b-be00-f4e3e8bf90a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a5f1f9-0343-49bc-a1d1-597e38fef283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb89224-4bd8-4ea8-9d2d-f77ba28dd169",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fab0f5-dd62-4975-a56d-f01a03f48ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16576337-41a8-4051-aca0-3956d7fbcd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c864f5c1-7469-4ca2-b432-bb9299630f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19c2968-3584-4288-8b74-96fbf24151a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664958f4-c493-42ec-8bc1-85106fd2a645",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fbb629-f7c9-47ad-9ca1-e4b8d74ab1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f858c1b-d29f-4364-9aa9-971d2cd5696b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192a6cdf-1603-4cec-9a2e-c974561a3d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8335cb-fae4-441c-bd21-33aa67c7e484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b460ee1c-50cb-458b-af11-994401d9695c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1fe683-f02b-4ec5-af45-293bba4812cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e5893c-3f93-4194-8678-085aa5e3feb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8026fd9c-a6fd-4fbe-93ed-3d4c14d2622c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "668f7eb2-3586-4e61-888e-c303c8207aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3ea03f-e7cc-4806-8fab-c18856034c8f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4fb1bf-733e-4553-be57-e7d17955f124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e933d0-27b4-457d-885e-075b9b88bdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d16d0b-00bd-4921-a043-afb4bb0a07c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f180d4f-85fa-4d45-a221-bb3f5d9ec3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a488355-f6f2-4132-ae3e-cb0c9c1bf63d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abaa154-0c14-4dfe-b655-d7e9818e9916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dadb33ec-7441-4265-823e-44b4fa577684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e1aec7-fa11-463f-b488-1f5b621e8a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db03975c-9d90-42b1-ab84-64ef8ea81bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c0becb-e79d-4c84-998e-585c1d41632e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790dd9cc-4e9f-457b-8758-85c2c2fb487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28ad4ed-935e-4cd6-9f65-0cc09fb60fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c50d51-30d4-4705-b420-c92e67931a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398c0faf-1ef3-499b-b759-b3590f08a94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6aa65a-31fb-47fe-873b-b5dac9196e14",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3970424b-26cf-44ba-b591-5013173ef9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da727991-3f8d-4f9d-a60b-779ffc1abf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ed7e4c-13cb-4c31-87c6-30c77f5073d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "056005fe-a7f0-4aa2-9747-ca9962f432ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6093bf22-2ba3-417b-8eef-a8fb826add8e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9591124e-9fe2-4b43-81ed-b675a24c8ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccb4a73-1b2e-4bea-bc65-68018353edad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8ee04d-01ea-4dd4-84db-8ddd0e50c95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7651185b-9dcd-4aec-8c33-4b5b8e47797d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9015908-e3de-48c4-a590-e6664df7e0b5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fa9e14-2119-4c51-8d27-c3d4b5a54af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a1015d-23eb-4ed5-a851-77d7fe579801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac9a1a6-01e3-4126-b7b8-a99b7e008311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4877648-d0dc-419c-afa9-517f809a35d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ec4e83-90e4-4afb-b360-d917dd78b14b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7c8dc4-8f01-4f63-9fcd-c7b72feae4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ecc841-a94d-46fa-9758-09f89518296e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bacf88-f069-45d9-9236-b12dd2d8e935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfe3d76-7939-4225-a71a-69a1c4c308ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26945c68-0b42-40fd-b7f8-a2e6abccf5dc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d498710-124e-4be9-b177-ab127abfee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5365525d-d103-460e-b6c1-0aa5e4180455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dea2e92-3564-402a-b819-9f2edab5c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5447a182-66be-46dc-ae56-a64b2ed45f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fae3ec8-7591-472a-b947-4dc19da6a76b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb51478-aa0d-4904-a6eb-4d33689ad037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e99716f-6dd6-4495-805d-cdb11a6691df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a339db7-1af8-4d7d-9a23-2b5a7fb98e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1b2d77-41fd-4e69-b5d4-797c73753544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfd1645-5a75-4f3e-878e-0c48a892e368",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa52c990-94e5-4dd9-bf89-f73b38703423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1aa60a-5d07-4d70-8bfb-9e164986f693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bcc44b-c075-414c-8f4a-78cbb84b113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d6a113-ecbe-4d1d-8f4a-6afd15d584da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cde4a0-540b-427d-9068-5ded8c5b4cba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c3730b-316b-4eb3-aade-220df5972a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ec1a54-7600-4d25-8cea-a1a7302ec765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76834149-266e-4310-b2c5-32ff369b014d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2810b5f0-aa07-48b6-84d1-92d69268f207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504f3ab1-19e9-4c41-af2a-16796be883bb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3e3173-319c-41d7-9ff7-1f34981861d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7f8de4-fc3d-4a48-a8b3-f57a0a02889a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7027391f-404c-4554-bbf9-41d972f4d28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f94b0f-3967-4aeb-a937-678fa72ed4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa6fe4d-0c8b-4236-ab96-f125207abf49",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eb4092-16a1-4f37-b99c-4fa4cd682d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945ad558-8cd7-4c59-abd8-bf966e234469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e879b9-b676-48e6-b00f-d3cea53b35d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30eaf978-2b9d-4ac9-9cc4-e6e07927a3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf7e32f-dac7-4205-ab90-38de86c261e5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f929e8e-a71b-4f69-88c8-653f83692569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0635bf-9d04-4382-abd7-cc009b56d2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc8dc82-59f1-4306-bfe9-b3926c69a258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b5ec6a-281f-4394-8852-4a0fd93f96f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769504a3-3d89-4f74-bfff-3d661a03b7c6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1b51c0-5f9f-4878-a648-d2bc75252ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f5fb23-236b-4c16-83ba-4099b9c6c3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a10cae-fe20-4d18-9c1f-92857213b632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3afb9c1b-dac2-408f-ba1f-eda1d2a907bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e3ba0d-3d7e-498c-b196-4fb956429cc6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a500d354-beae-451e-98be-d82c3a498166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f722286-2635-467b-8128-6d4a531fcf93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33a93f2-ee1a-4c8b-a000-5ad3c5a5087c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24d8881-9abc-4b14-8704-384e0dfb8ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef618ea6-085d-497c-8dd5-e21e2c15378e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42881350-a2fe-422d-bd68-fc95932fbfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6da86e-1ab7-4bfc-b7df-164bed699f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefb87d6-4806-4c02-b13b-4210d4411874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d84941-38f9-4f80-b85e-5d9497a91786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2c25f0-f861-49a8-b86e-9f9560327f85",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c929d6f1-4b63-4bae-8edb-fc1fe3992175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6f5816-1a06-457f-92ed-0d7549dcd05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4e809c-9334-4e5a-ad39-4669d1bd703f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "788c994b-e02b-4405-ab6b-cd8c7385c4e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ac1c7e1-0cbb-47aa-a581-5214f4f32a31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d35e96ab-907c-4fe5-8f30-0373cbff6cda",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55edab41-d961-4fff-9a1d-979be9052bec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b115ce07-b1bb-44fd-995a-f884a44c5a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c11f33f-9420-4f0f-941c-433b1f08285a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d101f6e-72f2-4c9b-a16b-fea94d17c83e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e44a0c1-2ce8-4899-9e03-42539b87c1a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e33a759-703d-403a-a126-be392eaee530"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81b2faa2-0809-4c58-af98-9b6e45f45e31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52328774-808d-440a-95b6-69035e6c6db9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a54af0fd-d285-4009-9496-9fbefc4f7464",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f009962-92b0-48ce-a3d6-e44958ec8ac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b21e926-84d1-4068-a281-bcf695591349",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43e656ec-8498-443b-b7d3-d0534fd548b3"
            }
          }
        ]
      },
      {
        "id": "76907d13-cee2-42d6-a99e-8e955109a09f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b4378b69-c999-47cf-bcd8-371dd1cb8e34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "237d844e-b235-4843-b66c-c96a22b7a2b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cfe9c41d-91db-4694-8d9a-8761a8e1348d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b85686-4a10-4654-886b-d57587a6b8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e18c248-8226-40e8-adfb-5c77ee7869f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a39753-42ce-49ea-9849-906e48375677",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfa0cbc-6530-4ced-bc04-345d2fc8f2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499e7557-b55c-4262-b47c-a1174034d1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf0e743-fe0f-40bd-a326-ac4a2424b12a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5e3cad-cd11-4451-97dd-6f858cdeb218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c243c4-9de4-4f0c-85cc-87e013f847cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8482e2-0c6a-428c-a427-48de6b9ea3f2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9a355a-4372-4a9d-8435-789843f3e165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac86af1-2ba0-45b2-965f-b91df19e428b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6467b91-26a4-4a21-b592-2ba22ec383de",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54f63b7-ad00-4f85-8917-dc15e47136b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ead2536-d15f-49fb-994d-1ffd240ff2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba0e250-819f-4314-b09b-1e0523a42150",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7680c311-d2c7-4bf4-8d6c-d45c12df4b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff4f073-f7ab-421a-af47-f479deb6c24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85462c57-53ba-4db0-a866-725fe1960276",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de094759-ab04-448b-aa60-0a9464239ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8236ce53-8b0d-44f4-a108-775e5ad0131a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e09b281-b6f7-452f-8053-dfeb6f731f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db48fc5f-f915-4f68-928f-d3112003d017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3902c09e-541b-44d8-b5d1-40b822fe8751",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3678c7-5ef0-43a4-8928-bedeffaf15ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e08db9-cc51-497e-9245-5482efc82419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c6191f-f335-4c1b-a3ec-77f1f02e4e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595376f3-1b2b-4b9c-b027-3b8e96a17723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1276fee-fdf4-4e2a-8da9-4960a8876f78",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf4e1cf-3425-4cf2-96e4-eaa4fd6467f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88e9c67-2bc6-4daa-abe4-129f3fdfa62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e6cada-a509-4807-a58a-fe9f28fe6a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca544a8e-de50-46bd-abe2-83b00ec1d95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa500016-6edb-4f38-bce7-565d57159cc7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62353f7e-95a4-4abe-8caf-00ea0ec753b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00cba6c-69e3-41f5-bad2-6e9b8b29d50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0103568-6d5f-44ce-bdae-97ca375fc490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a48316-af2c-4eeb-b734-798ac8baf5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44d92ce-56f7-4040-9146-03512b25c4b7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f580a6f3-c226-4f88-b9c9-8207d1ef47a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d20268-fb13-4738-981f-27e6862f5d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ded0a2b-56a5-4e4d-8e69-773597954331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f364a274-7812-4258-8033-2febfc8667ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa074f00-bde8-4086-9258-89c01c0d0503",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e142c80b-b7b9-47ab-8337-fbc4af8413a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984cf44f-741d-4d85-a1ff-eb0a19abe918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582806f4-8d31-436f-bbc4-d2d17dec84bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3691c8-3bf5-4c87-b352-cf5caec4863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a30d11-493f-47b2-b4e6-b5548b9c4a35",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0803444-d6f2-45ec-a244-8dcfb3b22f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec02b419-523a-4eae-b016-4e4698cb3af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da024f76-79cb-4770-8060-44dee6b1db35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ac19ab-3d48-4f0a-8b48-e8a116b1d21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0fea2a-804a-473c-b49f-d80022cc8d0c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e19452-6d6e-4e76-8b32-b852ccca7118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29c0423-6a1b-48b1-857f-ac3ca11f1f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dccbae-a5e5-40b6-b8da-9e609089438b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debfa9b8-af0b-47be-a27d-21374b81ef2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c75cd7-1498-41fb-8935-c2195bbe8dc6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82212c64-664b-479e-9a15-1b68d8398100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8207c89-fef2-496f-bac9-d6188ae073f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27182dce-0cfc-43cb-bf23-7e230b6a34c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b7cb47-3d60-4cc2-8ffd-9a7005751109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191e11cc-5202-4876-b084-bac2fbba54ce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2689b0f4-3540-459b-9fbc-f21dfd35cbc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a4db3b-87b5-432c-b0e9-7c04ed130222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5ec733-85ad-468c-80c3-4009259a31ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfb3d49-d7cd-4f69-9c1d-8a4db369fcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b01da8-0e2a-432c-8fb3-dfe8e87e15ff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb1a595-1fa6-4436-8efd-22d31260b440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019e4746-80e0-49be-acbe-9d94e2a9d82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c79d65-7e0d-4cac-ba0b-be64787b5541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61067a5-d62c-4985-a455-fe4762d0956c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9645f4d0-ae33-42a7-b7fa-e180a5ad6a0b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8850a840-ce70-4dce-8b25-763abb4321ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8586280-d1dd-4f0e-bdc5-b4cea5d1c697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abd62c4-23cf-4dfb-8d4e-e1b3301780a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9b2612-5e5e-4d15-9452-e139c5205dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7014fdb-3e56-4c5f-b150-5bf0802e6f08",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d940bf67-f21c-4474-9452-ccfaec0ea4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c608573-a214-4fd8-b8ac-ad487e7444e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21622be0-3248-416b-9c8b-61d5d3c3d85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2827396-5fda-40f1-9274-5bf402cbf8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b616895-520e-43d8-9ddd-ee2a4a72ec25",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ff3fbe-55b0-4189-be53-366e417c6786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75186e29-48ea-4987-831a-290cfd63595e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef43c9b5-333c-41a3-b638-94dbfa945bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5102b30f-13ff-400f-a2a4-4147162b941e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ad3ab0-8aae-42af-874a-498e02e45625",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928084ad-2530-4c80-891c-4b287be37c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86e422a-9270-4496-b9bf-234fe12da9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736344e7-6b59-43a2-a324-2a57af2233c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598e2429-79b5-43bb-93b4-e788d83714d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ba2151-2b02-4eb2-8e73-d8c33def3ac3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e7099-50fa-41b0-a947-09902a37fdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78e7bda-86b9-42ca-acc0-0a1ca4ded190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311b46b5-1852-4ce9-a7c3-eb8c2c9d3540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc8284f-8232-4986-8fd1-10cafa25c507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaf286a-8e8a-4b48-923e-e483ba9dddd2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cd1e3f-ef86-4ef2-9361-e6678d5da907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a86ba1-3a8d-404d-a46b-f7c45ca6d952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d2f771-67b1-4908-b946-c3d21eaa0682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c0993e-1936-4102-b320-19addc356ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0235f17b-f757-44fb-a17d-648387919179",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874190e2-2179-4ac6-8ef5-c3f0f5d8889b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49a512d-8c24-4392-be71-f98ab51fff6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d461298-4d03-408e-a4e3-174bda1199ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c728848-1465-4333-8cec-6487668b3061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b193612-5ceb-41fb-81a3-c20f9bdb7bec",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34d2fb0-c7cb-47b7-8923-c81bfdacbb19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c883c301-886d-44ab-8364-6b36eed2e0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588637d9-d0a8-4825-a0f2-89c582c22583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa4e30a-1311-4948-9284-891353b30b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1587f32c-6656-4900-b705-bbaacbc2ff40",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cf7a6e-fb5a-40e4-9a46-a70fd28db3ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed11265-4fdc-43f2-b879-c3235bd50662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b530fffd-eeca-42c8-ab96-6e35fd529c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc48f455-e4c0-4d3c-8697-fd67e5129ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dfba1b-f878-4ca2-8844-e9110c08322d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddc79f3-9057-4485-888f-d9437a127d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd6d4a5-e173-4a48-9c0d-0dcab256d07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff30a0f-a917-46a5-8e7b-2e0c737a6c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbb93ea-fa15-4249-9466-d8181677dd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1577a3-5a06-453a-b404-ef47c08c89fa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84244869-762b-4f4d-b7de-f370f6f5bd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e6965e-2216-45be-99ec-62ccc9a56a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1f75b7-8c19-4f9e-86eb-ec68f94a1d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0355f775-0410-4409-a57d-74e06a7084d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a656efd-8a41-479b-903a-2ac311badd88",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d22f1f-1d58-482b-9c53-76e766d8bd78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38bc0430-b2f2-498b-accf-d5761a44df6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef54e50-1236-4d7f-a6ac-4f77895ca6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df36704a-ce56-4241-a70b-c6763b281ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b489fdd7-b277-43fb-968c-46a4fdb466d5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226d1438-b746-4846-a4a8-5bb30f6b1e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22d6476-57f1-4c4f-945f-fa3fc92e8efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839dea38-bbd1-43eb-9d19-abfb025d22d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bba6d04-9b13-4dbd-9edc-2b6c7b93aa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2d2595-df59-4845-9b44-8d9016a0a586",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a45de9e-55b3-4b6d-8a70-e5d518eaf41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ec3bf6-848e-4b85-ae89-d74214966eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2e4548-4683-422f-90f0-6156cb552b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241cec23-2d12-4e0e-b2bf-2d119c094fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c04443-8578-46d8-83e5-e3cd09940da3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1a6e84-1bdd-4e88-9fd2-6ef196602298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e4dd0a-b6c3-4559-9bfb-ab04fadf5070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f903ac22-9529-4186-bcae-bf3470c21f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c09bba3-aeb5-467d-b4c4-b0e5881a555d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380b7550-df31-47be-a855-092f13696c4c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cc7cdd-ce3b-4c05-85e9-e22089bcfcd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e997088-9c6c-453c-b998-d450bc867632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2386d32e-7579-4171-bc08-f2ef26114ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72ed9f8-7700-4fc0-9049-263287ecfc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f518cb9-c2c9-433f-8a74-3327bd4090b6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf409693-ee41-4b5c-a6a7-9ebc749af368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8091b74-437c-46f9-9c63-b94a32efeaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c94316-2e08-4a60-947f-b4c50c0a7ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105a4a49-dea2-41d8-9e2a-a39566f0d7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d57cfc7-2f62-4f9b-bd65-86cc27e0d4c6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f022354-514e-4abb-94a3-b89eb8dbdaaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65699df-eddf-492b-8770-943c63aa4043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d194c6-f70e-44a7-8aeb-83f1941692b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bbdb2b-87fe-4718-96ee-c28a28249b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5432fc-901f-4da4-9fe4-07fa9e867685",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6ec37c-57d6-4a6d-89fc-7465eed61923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceceb5fc-fafc-4fbc-96e5-30b63be5268c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e574da0-33c3-4447-aefd-88c495ddb376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64699bfe-d4cd-4bbd-b451-236823896545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4df426-c2c2-4b89-bb5a-8e1767954200",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189a6257-cd8d-496b-af2c-c6870365f324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ec6de4-05da-443c-a959-2bf3dc7c72e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5190be8-c537-47f8-b1aa-383618487893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390d5fe2-d2a7-44b4-882f-e3223efef371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ef8a07-52fc-4a75-ade7-c4b741eef440",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cfea59-fbd9-41ed-baf7-120ced2c8d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa9c544-7be3-4d10-a07c-4b4e42f5a337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791d97d0-4676-41f9-9619-fa4fc18e201c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe5c64c-da65-4d63-85d3-b6f7cd911613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524509cf-4931-43f6-8b9f-63d51347edef",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d6301a-4180-4f7a-bcd9-fafc6482a9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ee9b7c-e696-49d3-afc5-5f7393bfe25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dec3b5-1cdb-4016-ae45-f7eadd409cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbc6c43-20c1-4a7e-a7f2-90ea608fcd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c16e35-dde0-4699-a056-1e80a5bcf5a9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4583fdd-f9b3-4203-a42f-43cdc1c2ca75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccace59d-4bc2-40fd-a587-190a9ca8866e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425532ed-33d0-49e5-a47d-59943dcb9583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46dfbda-2b61-433e-9fcb-82ad29965e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4971fe6-f452-40a8-a05e-6ff8bd0ee2da",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa3ccd7-053f-42b4-b969-0180ae2c71fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250aed75-b195-4d36-b7ee-9e4af1fcbdfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86c227a-921e-437b-9e8f-102205a701cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32d910b-6953-46a9-b774-12d773edff25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b222b96-90f9-4849-b2bd-9f0303e82504",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ba00f7-1150-4d29-8c0d-8046a07f7d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1c7df2-a5a7-4e25-8412-1075a08c05b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec57aa95-c7a6-4fc0-a8ee-c7ff09f40c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c155b70-dc60-4df6-a52c-41013749c8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490bffdd-dec2-4fba-8820-5a10e8202175",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41655c8-844a-4562-8527-1686454bbb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa116497-ff51-47be-9d77-e134d17d8245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dcead3-e37b-4f64-8b49-4e21f8437fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e147413-66e0-45dc-b9cc-7572e316e282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df229b1a-ae76-4463-8440-92b8c0055dba",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c911c19-f944-41b4-8804-be26d380dc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a7d9af-63fe-47cd-8822-9abef7aeef3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8814a054-7a9f-4d00-8175-b297a0b3c898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8561d136-3b8f-4a2a-b361-231c9ccef83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2a9bcf-3382-45a6-a942-9d5566303bcd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2c5e68-d2c0-4530-8fc9-9af88177594f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04c9d13-74e1-454f-94fc-f45cac7cafb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40521049-d385-45c3-9bc4-bb4c79e5bf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4fa755-9839-427d-bfc5-6f96de05b23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdb6bf7-54b8-4744-b350-86902bd37abf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dae1d63-2a5a-49db-8f77-d6edcecb420e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b93bf6-804b-4cf6-8b7d-c6f0b414ae9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3555eb-a777-42aa-936f-b0fdd535a3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a501a8e2-587b-49e4-9c46-3fd9cba5f47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c944ad-32dd-464d-8acb-e367b84b3acd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172f3306-ae14-4a74-a1dc-6e73f674be2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6008bf02-53d5-4647-a608-662ce9160723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0657acd0-b2e5-4335-abde-34c070402107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9533b4-db7a-4e4e-9efb-2158cb097a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ba86f3-a80d-4b4d-af69-ea6f04a352b2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5776ebe-af25-45d3-9892-33a8d94d9db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055e7c54-fd19-4bd7-b0bf-5648c79cb77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf54b239-8b1f-4db6-b187-f165cd96a40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceffa9a-b49e-400d-9778-55555467ed87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f89966-949e-4213-aa16-37a9d0744c2a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2f224e-847b-49d1-a78c-99032e9b9656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa49252-ff2d-40c2-9fc8-c80b5cae9da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723de14f-f51b-4165-af84-8bd201681098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603e42cf-1c40-44de-89a7-83fa23277d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2759ba-afed-4465-a09c-ddb54224c913",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d02008-73ed-4a19-ae0b-309cad0f03be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24dd045-62ac-4f51-abfe-b314c5f16e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d99fb1-d40f-41e1-8b94-2300fcd2aa49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b4f0f3-213e-4572-9c9e-0e2fd8ff20cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c893d86d-357c-4067-9a5a-6478b040e472",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00bed5a-6a4a-4d64-a319-e5e8d5088a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761b86b6-02a2-49c2-99d7-71d11a435ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5885ce-52c0-4617-92a7-b7d367e695f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae34f8f3-6610-4411-bb1c-32716b9b6d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bce008-fca0-4901-a9fb-b6a96fef1202",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84387677-ad43-4dda-b4c1-6fc8d5ca0d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6875e9-b30f-4a25-85ca-664087acc74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184cdc20-c35c-4126-bd86-b7986f8c0e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b899e9cb-8f84-4e80-8e56-ce6b34c91ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da037b9-d4c8-46ed-8d81-33f00a9fafb0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e1d1f4-8178-4cd6-9681-9f8336b804e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2d4f0e-14c7-4f6e-9aa4-c31906f83d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6da21e-9f32-43c2-8430-f83cd6f8192b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a63f420-5514-428b-8964-0ccb320faed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8a997e-d278-4ef1-a54b-603e3af945ff",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4d5a9f-909b-47c7-967f-c205dfc41068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc5a9a2-acfc-4ce6-a020-9508cc6675be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebfde07-bd32-489c-a04b-56b277a13a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0883c71-b9c4-4908-aa35-07c423099690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fffd15-3b53-45a5-8c1e-7b3dcb21f309",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6163a7-88a8-47a8-990e-be783f6e2f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b41a63f-3b49-4b4f-9ed2-1f4524a9a5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cfc6e6-5069-406e-93cf-3c0d381ddf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad3ba1c-727f-4118-9588-68926e67034d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29132624-a8db-4143-b40c-227cffa3f4e4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e484be8-54d9-442d-bd3e-f32be3fed4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7156dd-a9be-4908-b7f4-55c7214ad3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31db8c35-35cb-43ff-b7df-75bb6c260bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d4968a-6f6e-4c85-9d27-9e057d82872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5ea934-eb08-4189-a7e9-f0156d36ff1a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f621ae1-894f-4f38-a363-a8bf73717e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27315095-6598-46f9-9625-4241243d17fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee65a482-131d-4846-8c12-445733a0a584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b12be8-72cc-457e-9415-16c0b08c8d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de225f6-5db2-4d79-94e7-d6cdb4cc6e23",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ee9443-58bb-462a-806a-c892009da50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c3f4d1-f539-49b3-823d-59fc9f79631f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668aba93-831a-45e9-b0c4-4ac5544c4320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd77fe49-0dc8-4340-83e3-5f2189156d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8706bff8-c4f8-4a7b-b269-d0c7d760affd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a56197-adeb-4ea8-a958-6b31c4c8ff02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa23560-911b-49c4-a68d-7a8051381db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c12c813-660f-42fe-95a5-d3eb62290ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7371f469-50e2-4fe6-b94c-fa0a3112b667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1009fc-9bc9-4635-8db0-c8c2cedae1a9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4292369a-c3bb-4bec-94a5-02b0863cf440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952bb1c8-e438-49c3-a5b7-e2d85974c4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc928c9-f350-444d-a205-0b7b65ea3f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05adc91f-08f5-4466-b4d8-2da3a38bd8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcd6ca3-b672-4662-8e65-a5eeb12694fb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79c24e1-e794-424f-a319-0e7312494e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5b3ad1-232f-4d48-ab7b-5cef59501962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c152366b-2992-4329-b48b-96167a5b90ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9155287b-1db4-4484-8bc8-974e1290ac61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0d08d0-2a1f-4dec-9c86-cade097420bc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7cbe7c-d229-4f92-9405-8d60ab360107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c757e4d-e823-4bc5-8753-11abc60893ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6079009c-49cb-4ff3-8a99-8e5b9027603e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab638ced-3a09-4583-b42f-0e9848268bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeb99f1-f3a3-497a-8094-3b40b77856ee",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ee82f3-549c-43f0-a678-e0a5c6d64fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa215a5a-a372-40b3-a1e3-2157d18278ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c021da8-8f0d-4c1b-a1b3-73df2bf66fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0719507-ab2d-4ab3-b8df-c163840f89ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57fec8-5d79-4f52-b820-cdcee1dac8fb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03ad97b-f357-40bb-b069-a3bb8ced19b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3749a71-6355-4745-8df1-ec12b55861bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c8eeac-7c71-4e08-8f19-048bfc51d47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af62192-a417-4ce9-ba42-1a77da117210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8a0541-9408-4902-b8aa-c6a7f9464913",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb6409b-6c5c-4285-93b8-abf86131dc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad34be4-80c2-4fdb-b367-75135aa8bfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e017b718-3c4c-4f3e-8128-387573fa29f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3054ce-f54e-42e8-9684-f61101234867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2d4d22-5193-4c08-9f4b-173117150ec6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6bacae-a661-42cc-acb2-19cd90c3bb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0062b5ef-e356-4d63-919d-ffb5559fb501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e437bf-6110-43cb-a1e7-6f402bd7cc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4deb5b63-096b-4492-be34-fa6b49676ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d186d221-1a7f-43d7-bb21-69467fb91cfb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0070f10e-a16f-434a-aa1f-b3f994c69d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06afd2ca-9d1e-49a4-bc25-7655e46cb739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd051d9-5d1c-492c-b44c-2919b525396a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb5350b-8dc7-4fd5-a861-10591f3e99df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad98024-87ff-4777-925e-d1f8af5200b7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffd2d72-e39b-4eca-b382-a793ce47a611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3ee211-8b09-4414-a823-bfa1f02c65fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0771857b-8699-4296-b5b7-224dc2bfef46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b5645c-257c-4953-b35d-abc59337e5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300685eb-6793-4b90-aa5d-9595d822bb50",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d91ea8c-f522-46d4-a752-ab5ca0482852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bcbc9f-7b0b-41d7-8a67-be071c26c541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe5a7f3-2c4f-40b2-81d3-c0cf2c8868aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08123ba0-33f1-4c06-a828-442d137103c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a51b3d-7acc-4554-ac1d-307079cf7d93",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0fa801-5256-486e-921f-0eff247717a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be10dc43-5e88-4fb8-83e2-a8070dbdcd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98379fc5-f3f1-4f65-8514-3d5b5e63fc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbc9f49-728b-4e9b-8826-718c0b0ada70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d86055-46ea-49a3-b0cf-4ca9188041c1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63af3fa4-b780-4e95-a1d3-d3e7ec39e72f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e14b9a-5a54-449b-8b06-0dbe4e9eb1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b114ed-c9cd-4aea-b924-09f53274d7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590943dd-5417-49fb-8a0b-f1c3d4970e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0068b01-a319-4972-b073-05df84bcddd9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6f9172-670b-4a57-9b17-c16c57f0fa78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5582b8d1-18d4-4bed-8ab5-6b8b65dc4273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25984f42-2dd9-4630-8eed-52bdd756ecea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27b294a-4cdb-41a1-89ae-2f84939671ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1208fa1c-2178-415b-be9b-0e73f9739608",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b4486f-e45a-401a-935d-8d4266045136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a130759-2849-4ee9-8f9c-e930caefe54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b93ff7-1f6b-443f-9463-303108cfdef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2aec3b4-9cf0-478c-8b52-00e7274adad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb2b2de-7368-4a57-8141-ebc02d6e009f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bd841f-71af-4f37-bdc1-38f277bfb37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee992757-ba21-433c-8afc-c411918bcb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83e8d17-5898-4b23-ab73-d32d5784425c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8cf300-2d31-40ab-9fda-15b258efd9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead9a79f-6ccb-4db6-8bb2-ab6c85581680",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3b4c65-91d4-4587-b86f-518286edeec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6f4b6b3-024c-48bc-a59b-7f3b9c54208b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07d91e4-8359-4ea3-bc56-cada6cc26023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1f898e-a02a-4d1b-9d84-0be74ee45e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6230ca-0e6a-4885-93e5-d48ba0040b26",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ecdcfd-f9e0-4612-a29a-5bdccd70cc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e979ffff-f254-4eff-9aec-a264c5c12fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaab534-25b4-4156-93bc-5a4adde31e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f11876-cfdc-4c97-923a-3f99a12a6366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f31cd82-a6b3-4a50-a68b-efc8d2fb3507",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cb5dd5-4181-40e4-b12a-e9e65aed94a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c58df4c0-aef9-40a1-9f5d-c5f5820f7da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dafc76-a749-40b8-b566-c2cc77ce2911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408b073f-a4c1-4ea3-a87c-121fb171763a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489c8f0b-5f25-45f7-8eaf-ed4fd1045797",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b788e83-a8e6-4ac3-ad85-4a00d2ad634f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5de1520b-3ac1-41e8-b119-eee6bd269f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4b82e5-9a12-4841-9d59-a57406d4cb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9b70c1-8dbb-478b-917e-215bb49cefef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cf5650-3b4f-44d9-885d-a782e846e5f1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b731271-e42b-47be-8dc5-152be13f2101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0174931-17d5-4880-b34e-c1d1c18e43c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0fa59-792f-4a7d-80c7-0abda6123461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb0a4a1-1607-48d6-8b94-6b5ab2dd537c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7c3061-7bba-4bbb-97f3-f70942dbd4de",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e765e50-b92d-4794-a816-ae2073a702b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfbc001b-efe9-4f59-86c8-93f307b338bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891aa0b0-9f60-4e5f-a9fe-c3b75b9b9aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99a0ec1-2e2d-46c3-ae39-64f439c4cfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f92187-2ecc-4e97-8e15-299080c0d37f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab41c470-2cd9-47ef-93be-de5f03ee8583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32f3478-e46b-40c8-be67-ea89d829c6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2974ca0-3690-4b84-b1e0-127c5f7d79f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2d7ca3-2576-4e5e-949d-2242d77b9a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115d8179-8d6c-4303-a651-e07d406b352e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dd87ca-5a73-4e6f-9943-25fe0a2da0d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "860c3a1e-3aad-4d58-a4d2-c03da7f114d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89cccc6-150e-4694-bb83-3185517746e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2908a5c-2244-45da-8ad0-e6dcbc15d96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fe4f86-0efe-4741-9fdc-fd1d74da9d65",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dcfedb-015a-46e0-a72f-4493f32eff35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372e573e-42be-4310-b0f0-498d5a744607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b720a75-8293-4669-8fac-5b3e2fdcbe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607dfc5a-bbbd-4767-819a-a25dbfec85ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122171dd-583f-402d-ba45-3de32f52b657",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025fd8e6-57c6-4c98-b2db-511bc1c61065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd8a3f1-f561-4f00-aeaa-c82292418fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53709bb9-3ef4-483a-9c2f-99e7e13abc7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67fddef-966f-437a-94fb-9b760e514c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498d5bc5-786e-453a-8337-da49a1c053e7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084e0df1-637d-497e-bc12-9c97533a4742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e339bb6-ef8a-4812-a017-af8ffd878c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff8e38d-1d20-4db3-89b2-81c248be6161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e66c32-1400-4e73-86b1-e0df8c703145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33d8679-aa0c-462a-9461-ce2876d1b3e1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beee8b0e-c94c-48e2-84ed-b46742cc847f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8229770-d873-4531-aedd-635ed87c9b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886e5561-1418-4cc4-82b9-e483453c929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9a3c3b-5a25-44f7-93eb-b0e72679ff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa897d3-1364-4644-b676-e8dd412918d1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025cd8d4-7b06-48a6-9915-3db7dbe145f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3264bac8-ac1a-4ee5-87b1-e35c7ddaf825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbca45d-6916-4ae3-ba0f-22eaf7ca9198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca2e4e6-dd09-4b89-a23d-3ea5c41a1b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17d5f17-f9bc-4ceb-999a-60ed4f476d7b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f330f61-2502-4211-b78d-037e9401a3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d21554-32cb-4e2d-b437-d83b4d0ae500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5cc191-e644-4082-86cd-fadf1d8fb274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d60743a-2551-46d2-8772-a99a4f81e25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9765ea5f-ad73-4466-904d-5584d5c2f973",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974a8660-aebd-4cf8-bbee-97d4f9099d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ee3147-e1fd-4e2d-8a8f-3f7f589c25cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cbd5de-3797-4a97-aca2-73641e37c1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c224891-95dd-4225-982d-251130d97bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e877e9-96f4-4e33-b234-aed9519ee634",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f157b389-afc4-40dd-92a5-523d4205f3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef2e0a9e-f6e6-4951-9d6f-fd05410ee254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784246dc-a593-457c-bd91-f06813cd032c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d26be2-cf44-4ce4-8050-e49330726077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23ed3e0-50c5-45b6-9fa2-7fe2dc41b0fd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77135c9a-6567-4080-abd3-f7b66a96fce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b294b857-5cc2-4592-8717-eaaef55fb81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd0bee5-30cd-4f68-b8a4-832ad561be46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1c1a18-cbaf-47ab-a31e-ebdf7b5f30d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760a07a9-e2b5-40f7-8797-8857ceb7bf2e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22e69d7-e9a5-4751-93b2-18aaeda0d84d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3b2232-f1e3-4d38-b3c4-67b6bfb136af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4423a308-5760-41db-b8b6-2fd9005660a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab10b13a-602b-433e-8204-6065215c7a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d6ae0f-506b-4d9d-ac6d-49cc42d2b654",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91920cd5-c51a-4039-a0fa-c28bcb4c6961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c7a1de-1c71-4620-ba45-95dd9963f15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598fe30b-7a46-46ea-be01-0e7c45167e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752a40ed-d4b1-458a-a666-f7733a4e34b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d4d39f-3f8e-4a52-9c5a-a5098c5651c2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269e8513-9c90-48a3-87b9-b964c3e9a849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f279c6-c3d5-4baf-8d9a-f065f90f73d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad01b6c-4ec8-4a1b-a3cc-45d5ed7e37c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c93e2d-73a2-4506-b963-56e881b83f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b6be96-8739-4356-b7c0-64d369d38229",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e578c9d-dbed-40da-834e-ce1e7504722b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c667d022-834c-470b-90de-868759d02b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cae2fd-0c03-4561-9830-e02a82b79a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07891383-62dd-4117-ad62-dc240b548060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bda374e-a014-4a3b-a7f1-5a86fd71dac0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d709699-5e1f-474b-a5fd-e5479c9a3e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d91f3c-8516-4da6-9f9b-d3004fd3d168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07c7d26-52ce-4d5c-b337-97da04d04d5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3922acc6-f2d5-4716-aebc-62761e04a510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4b0e2-1c49-4390-9c00-ae7029d516b0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662cf2cb-3393-4b61-99d1-a632f59070f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5101d8fc-607f-4c2a-863c-271966333d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ce2d61-ebb8-496a-9559-f2a982daf957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c7359f-66db-4cc1-ba97-68ce39f2fe59"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bf379c1-0cc8-4bc2-9ec8-49e8ff80bdbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "448d5425-e715-451e-a852-47fc9b69d45d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18d9fc1f-9300-4f91-9294-3bb1b8242da2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34e97ceb-d236-4709-87a4-1cc12fb8b60d"
                    }
                  }
                ]
              },
              {
                "id": "885c20d6-e57e-4a45-932c-ca9effd73364",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c67ecf7-cd5a-4b17-95dc-9de133371695",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a1d3d5-9f3e-4859-8a65-ff7a2ab89e21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a6436814-4a80-462d-91f5-859c03958924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820f04f4-e7c6-480c-9b8d-2b2c42512699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e75fbad-5516-4bde-8bf1-b85334f813e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08a99c64-e7a8-428f-9144-5c679e2989d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70e4bfc3-6e94-445f-9471-46bfaf42fa0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6acbdb2-0df2-43e9-9567-d5ecd07146d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01db9c48-ba6c-4f73-8580-dac0a0c8c5f3"
                    }
                  }
                ]
              },
              {
                "id": "985c43b5-97da-4ff6-90a4-eb2593bbf90e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ded0e047-0058-4ac1-bb87-82091b7f4f58",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f8c194-b150-4729-8f0e-455bd1371909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1fa1f1c4-3eee-4acc-8ed0-70e5261aa869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1db199-cd51-4555-8847-806493dc3967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f633732-3c2b-4104-9c42-2096181f8ae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f30d593c-2ad9-4d93-b743-1fb697684633",
            "name": "Positive Testing",
            "item": [
              {
                "id": "676da676-0911-4094-be8e-9e33289dd9b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f053271d-45a9-4c48-ac60-45ead8ee8ccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0322cb19-59ff-41b4-a185-86a6f7ea991b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fa0199e-1aa7-4992-ab74-4be3c0a01272",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc6624ff-7d6d-40bb-9be4-2ebf8809f44e"
                    }
                  }
                ]
              },
              {
                "id": "d45a4369-bbfb-49f6-9192-741bd8aed1c8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "807f71ea-ae42-4aa3-90ad-56c97ccbfb88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7dd71c63-7675-4ba2-a9bf-b49ff1b9dcb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "219f6d3a-f5c9-476b-9055-7a81c7d0c55a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "369ddc93-3cce-4426-a442-838b2a70cbaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9290ac2f-2ac4-4c91-9ddd-9e1de459fb55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ee600cfd-5361-4861-8350-6f81e78e2195"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e9c24de-8f6d-4032-9cb3-fffa0a9bd4eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b8aa7d7-f104-4336-8ac3-36862f675093"
            }
          }
        ]
      },
      {
        "id": "4604ae33-de20-40cf-9eb2-6559f6d5f098",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "23caf930-68f6-476b-9dc4-3a21274de957",
            "name": "Negative Testing",
            "item": [
              {
                "id": "417f687f-2bea-4709-860d-05e3ea8ae777",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e006203-18ec-4a5b-a31a-aca8eca1ec87",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fdd5f8-8dab-44f6-8d53-84c7f2c0604f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d8f9ff9e-9b73-4d4c-844b-cee5f8382e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d6e7c7-c870-4304-8310-0f79c1cff553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d7094ea-c723-42c0-9ccc-46147fd08f23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce739d8b-cd84-4783-bcb7-707b1186a172",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4aff689-c6a9-465b-949d-efe232044a94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "286ef97f-d705-4a18-81bc-267c48c1cef4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f02d87d6-36d8-402d-8e06-90619506f794"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef082748-22cd-49bf-8b54-432bfa289dcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "acccdbe8-a13e-422c-b8ae-f793cb8b0189"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8f873bf-c6c1-47bf-a1e7-972585fa27a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c64eadd-f76e-4057-a35a-c41f6effc080"
            }
          }
        ]
      },
      {
        "id": "ff054c7f-3f46-482b-b6e0-8fc7793a9cd3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9710891f-5b7c-4502-8e94-b942f4383d32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a51ec1f6-5101-460d-902d-08b6c09cdabb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc61e92e-6e77-43d9-9057-5d548460ec0f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f91c250-57a1-420a-880d-42a746bffeec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cc667e8-fd8f-421c-b256-ce267f241f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4473d4-7467-4f0e-b750-863a7c80df23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf1a1142-7bd5-4b82-a68e-4b9851f1e0c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3d66094-7da4-45c2-8d48-04ab3d24521c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6473f18-568f-4542-a95c-5bee0ea252dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f69e9b-e244-47e1-9f1d-08e8f5e7cc55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b1698f1-90ca-4f63-9130-53e121d3affc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a51d745d-806f-4689-aa3d-813ec275369a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5324e254-1f7d-46e2-a81b-781d0f3d6d86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c69f6d8-a984-444c-a29d-be8569924c60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47a35c4a-94c5-4dc4-808d-ebd29c885cd2"
            }
          }
        ]
      },
      {
        "id": "eb9434a2-a134-4599-b7d0-07b2b3e56151",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "030b2899-7367-4ab6-a222-f025685ffed2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6fafa57-485b-4924-a336-e4d80ada8f3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "554f02d0-d857-425e-b28e-918d44e6701d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afdc874-b82d-404c-921b-a6592c791fca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dad74da7-5367-4cf3-8291-ede77f0d7bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf94387-2e4d-4240-a935-853098204825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5297577-763c-4ea0-a6ac-1c1ec77c84a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "205c7f36-16fd-41af-aaa9-a706456ccd09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5baf689e-70ac-4e4d-9902-748b394c19ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c99ccd1c-83d2-4c92-b1a8-e069dd4a6eec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f54f8b7f-e1fa-49d5-ac91-43f711e1d60e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bebe48da-bed0-4d3a-8a87-76e96a8ce557",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "772e3844-6e0e-4740-9e09-0372cff4cc40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d004319-6834-414b-aefe-63cc39558049",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a24d7582-b276-4c6f-a663-ea4eccd5f504"
            }
          }
        ]
      },
      {
        "id": "54ff611e-2819-47ff-8271-1061723de821",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0a403d8-d3c4-413c-ad52-3633d54fe07a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68705eff-f689-49db-b4c9-feb5f526a2fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b023c4cd-6a53-411e-90c3-bbdaac2bc174",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "826e3300-7b75-4c14-b770-3f6b6187911a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c92706f-3ea2-4fcf-884f-7f04e2785e3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 139.18947368421044,
      "responseMin": 9,
      "responseMax": 16434,
      "responseSd": 999.2053926652437,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708821416995,
      "completed": 1708821465890
    },
    "executions": [
      {
        "id": "da4520b8-9f98-4656-9958-ece815486a6a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eb4a934c-395f-46b0-b410-759315471011",
          "httpRequestId": "af3882bf-d96f-4c4e-b35b-a5e7605d37ef"
        },
        "item": {
          "id": "da4520b8-9f98-4656-9958-ece815486a6a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b988a5b4-910e-4bb5-888d-f8d07b10e3f9",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "bc7389be-2e0d-40ab-b434-57d3bf146f5c",
        "cursor": {
          "ref": "361f5d14-d5c9-4bb5-9f4c-191590fa4db5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bfd180c9-7e5d-4f9e-931e-a74c8f231fe8"
        },
        "item": {
          "id": "bc7389be-2e0d-40ab-b434-57d3bf146f5c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "92613857-fd3a-4fa0-a276-03e0b8b834a1",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "2acee7fb-7bf2-4b81-a7c1-1cfe5cf2004d",
        "cursor": {
          "ref": "e1e9c316-b670-4ba3-8f9f-473b50eb6546",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8c9a7424-f543-4e08-be57-f75aa615ee4a"
        },
        "item": {
          "id": "2acee7fb-7bf2-4b81-a7c1-1cfe5cf2004d",
          "name": "did_json"
        },
        "response": {
          "id": "c5cf530e-abb7-40c9-8c01-9c79f5f8ae5a",
          "status": "OK",
          "code": 200,
          "responseTime": 265,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9886bc7c-d49b-4821-adb1-f87811107aab",
        "cursor": {
          "ref": "1d240868-3f2e-447e-a80f-3efe7a360143",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b3e59722-176f-4003-96d1-d7ae91663340"
        },
        "item": {
          "id": "9886bc7c-d49b-4821-adb1-f87811107aab",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a23f83d-ce61-4658-8642-a511fa792294",
          "status": "Not Found",
          "code": 404,
          "responseTime": 485,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9886bc7c-d49b-4821-adb1-f87811107aab",
        "cursor": {
          "ref": "1d240868-3f2e-447e-a80f-3efe7a360143",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b3e59722-176f-4003-96d1-d7ae91663340"
        },
        "item": {
          "id": "9886bc7c-d49b-4821-adb1-f87811107aab",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a23f83d-ce61-4658-8642-a511fa792294",
          "status": "Not Found",
          "code": 404,
          "responseTime": 485,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71d12fe-7563-4d3e-9d18-26abc9aad537",
        "cursor": {
          "ref": "f5a558d0-4ad2-444e-b0a7-672250428c5a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f05b6006-5140-4d70-ad9b-a3c5cb764caf"
        },
        "item": {
          "id": "c71d12fe-7563-4d3e-9d18-26abc9aad537",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7b6bf28e-c476-4c25-b02a-bee064b1b5ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d6a0ec-fd0e-4d5d-ba73-8e3e619e741f",
        "cursor": {
          "ref": "9fb0fa3d-b704-47b5-8bca-f2c1acfb2471",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0973a5e7-4397-435f-9240-97ae55caebbf"
        },
        "item": {
          "id": "45d6a0ec-fd0e-4d5d-ba73-8e3e619e741f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0bee262b-d9f5-45ea-91fc-949f7a74194c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726a8f5e-a388-41d4-a7e6-8d877cf7caf1",
        "cursor": {
          "ref": "ebc2ef9c-cae2-42d6-90a4-9061b140e0bb",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "af5700fb-74a8-4117-9ca1-9eca9f1c111c"
        },
        "item": {
          "id": "726a8f5e-a388-41d4-a7e6-8d877cf7caf1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4ec94106-41dc-4411-8571-6b32daed5e3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de82900-e682-4665-b55a-8fb132c76187",
        "cursor": {
          "ref": "0cde9e05-8bd1-4bc7-b995-8195d315f513",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7904f526-5611-4de5-b775-8c80c89dabd7"
        },
        "item": {
          "id": "7de82900-e682-4665-b55a-8fb132c76187",
          "name": "identifiers"
        },
        "response": {
          "id": "02d6da33-731d-4f75-8a2a-25fa744b78c7",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98ec823-358f-40e9-b920-767249fc6a52",
        "cursor": {
          "ref": "8bb5d68b-0371-4370-8d6b-a608c952cb98",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "939b2189-76b3-4709-8bf1-c4abe9ad8188"
        },
        "item": {
          "id": "e98ec823-358f-40e9-b920-767249fc6a52",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "662a67d7-3542-4a77-8228-a6df730e3ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc330bc0-1e10-468c-b678-fe7e200dd0d3",
        "cursor": {
          "ref": "cd1c7d05-a670-4cd3-92b3-74e07a3a5613",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fbef5d6d-8d24-4d51-871f-04b3179e568f"
        },
        "item": {
          "id": "dc330bc0-1e10-468c-b678-fe7e200dd0d3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0be9c3a1-fbbf-4251-b15b-59ee8d465a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b3d8a2-a083-466b-895e-95947a1e3193",
        "cursor": {
          "ref": "54582136-5436-4ccf-8f61-d5e38a5eda0e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a261a1be-23f0-42ff-becb-4f878377cabf"
        },
        "item": {
          "id": "b2b3d8a2-a083-466b-895e-95947a1e3193",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1b959f75-2df6-44ac-8f27-fc9518b60d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c58cc72-8fc7-4005-8e7c-e9d051fc5426",
        "cursor": {
          "ref": "1a373aca-061e-4b40-a84a-6e21b05fc864",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "74efea9a-c10b-4e80-9f80-2d48cd204ed8"
        },
        "item": {
          "id": "6c58cc72-8fc7-4005-8e7c-e9d051fc5426",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "28dd9dc5-5c98-4267-9a9f-f08f51db3e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b9d729-326f-49ed-87ee-5fa325e18158",
        "cursor": {
          "ref": "8aca7424-39d8-4c5f-bce5-4e69d61151df",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b1263a0d-8a3f-45a6-92ec-b1b59c767ccf"
        },
        "item": {
          "id": "f3b9d729-326f-49ed-87ee-5fa325e18158",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c258b80a-99ab-40c6-8442-7319fdbc519e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd8ded9-d671-4778-9524-63ac4f7fb0bd",
        "cursor": {
          "ref": "d09b6410-21b5-4d43-86dd-5ea0102dad00",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "20ea76bc-4647-4d6a-958c-547bd3e827b1"
        },
        "item": {
          "id": "1dd8ded9-d671-4778-9524-63ac4f7fb0bd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "18c162b1-dfdd-471b-a749-c61daaa25652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbb42f1-8ec9-46bc-a3d9-e95f6b7ab8a6",
        "cursor": {
          "ref": "189fb725-c52f-4dbf-85e6-66d245e2dd01",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a11becee-f405-4fd0-9278-14cba7957b5e"
        },
        "item": {
          "id": "ebbb42f1-8ec9-46bc-a3d9-e95f6b7ab8a6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b15e9dd2-0cff-4087-84f2-1cae0dcc831b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04bb80f-305a-487f-9ee1-85da3f6fd7f0",
        "cursor": {
          "ref": "672c76a4-acfc-4c33-b1d7-776bff3d5b07",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ddde6b45-ca32-4199-9875-f7a3f5e8bdab"
        },
        "item": {
          "id": "f04bb80f-305a-487f-9ee1-85da3f6fd7f0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4f124e7d-f9cd-41fd-b571-8ea62b9fed0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7740d8c-2b66-4340-98b6-fecc3d2212b3",
        "cursor": {
          "ref": "de7abe78-829a-4eb7-a513-04ecaf96663c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2a5ff349-f9dd-4143-a7a4-d029e8923e8d"
        },
        "item": {
          "id": "b7740d8c-2b66-4340-98b6-fecc3d2212b3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8e8d9120-6e66-441d-9729-83997521690d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7310150-be1b-4c45-b361-9622c2346d9d",
        "cursor": {
          "ref": "d0f75b9f-19eb-4b6c-8355-5203dc2f2f7c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5a5c0ec2-b08c-4184-89a3-1d4aa2c51bef"
        },
        "item": {
          "id": "c7310150-be1b-4c45-b361-9622c2346d9d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "678aa58a-be3d-469b-9a56-b6c2c8cfa0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27ac7b3-d3df-4cc9-9ab6-1040a221ac2d",
        "cursor": {
          "ref": "f9cdda14-6c1f-4e15-b534-52f4bf6a6eba",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4314f956-a46e-4408-908b-f596dcb0a047"
        },
        "item": {
          "id": "e27ac7b3-d3df-4cc9-9ab6-1040a221ac2d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ffb627ee-9d92-47b0-9d68-da7510bb62f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ac45d4-9746-4aa5-a73b-fd46050610aa",
        "cursor": {
          "ref": "50fbec01-64a4-4a15-bb1e-4f44419a7752",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b2af9154-a428-488f-b1ef-40e4c3f694b2"
        },
        "item": {
          "id": "91ac45d4-9746-4aa5-a73b-fd46050610aa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4c3e7432-3fff-4635-86eb-e6c2feb5d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2d15ad-2500-4864-8634-0650beb8655b",
        "cursor": {
          "ref": "b147c5ec-835b-4662-9648-0e7b426457f9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0e760795-c151-4dff-9d8c-ad00304102ae"
        },
        "item": {
          "id": "8b2d15ad-2500-4864-8634-0650beb8655b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "813baffc-d527-4b51-ba33-b345e6c4aff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e3962b-9076-465d-8e5a-b70fa936b7ea",
        "cursor": {
          "ref": "4827c608-7838-450d-b1d4-ebddf0be2d3f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "58df4a48-2c0d-44e5-be03-cead6d0a2a07"
        },
        "item": {
          "id": "82e3962b-9076-465d-8e5a-b70fa936b7ea",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f697db7b-a65d-44d4-9dc5-5ca6369ac6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9879a28-79e1-456d-bc1d-0cf0b4a3e012",
        "cursor": {
          "ref": "1743e59c-0854-4972-becd-aa03f457a0a0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6b2288d8-922a-4d1e-9c34-45e75ce12d6f"
        },
        "item": {
          "id": "c9879a28-79e1-456d-bc1d-0cf0b4a3e012",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e9d76d69-707f-4c91-8628-3f44a13f6717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e05300-6cc0-4085-be73-eed6509ea5fc",
        "cursor": {
          "ref": "cfb084dc-d0b1-4fcd-a130-d9b6f224d904",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ba1f7df5-6fce-4e18-86da-c193e0e36212"
        },
        "item": {
          "id": "07e05300-6cc0-4085-be73-eed6509ea5fc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2377a088-7bb3-4625-bba8-36ad7b0144a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be72518e-31f8-4bfe-91d9-ad902cc5e5a7",
        "cursor": {
          "ref": "fa0fb4fc-adfa-4b55-ac91-af2b46f98e5f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fab6a0f8-7d22-4219-9a0e-79e15b45ce7d"
        },
        "item": {
          "id": "be72518e-31f8-4bfe-91d9-ad902cc5e5a7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "50896fef-8085-4fa5-8fa5-48c0dafefef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d51d9fd-8ee9-441b-9375-0a329187090a",
        "cursor": {
          "ref": "9e166523-2406-46e7-ba99-418868d187c2",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c6c29132-64d5-4f9c-b0b5-7b07bbd7276f"
        },
        "item": {
          "id": "2d51d9fd-8ee9-441b-9375-0a329187090a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5757edb4-033e-4063-b3f1-1795ab2e6fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7032167e-67ab-490c-9e8a-6285c52828f9",
        "cursor": {
          "ref": "854535c0-74c1-469d-90bb-b5ce7e165027",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c04f4761-b83a-4e9f-a6db-6bc9de596bd0"
        },
        "item": {
          "id": "7032167e-67ab-490c-9e8a-6285c52828f9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "35d54016-9cd5-4e1e-9979-815890de911e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ee12dc-c8f0-4cb5-a820-346c0cbcdaea",
        "cursor": {
          "ref": "bbc65f36-2e80-4f99-b8a5-96ddb87a0c6f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "13b6e7bd-4a19-47a5-a089-6b5dbd0f96b0"
        },
        "item": {
          "id": "e4ee12dc-c8f0-4cb5-a820-346c0cbcdaea",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6fc26e83-f2ee-42fc-a07d-5883e8baf87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88fa00f-8fed-48ae-8bb6-f3ba76ba98a8",
        "cursor": {
          "ref": "8056eeec-63c1-4c1b-8a89-93c755056676",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7f4e0e8b-cd38-4dc8-9063-d9fbc976ec94"
        },
        "item": {
          "id": "e88fa00f-8fed-48ae-8bb6-f3ba76ba98a8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "542736d7-2107-44cc-bfec-c3cb2377cb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034d4d9f-b919-4d54-8192-f63a58d3c509",
        "cursor": {
          "ref": "01c2c225-bbd8-4433-bf33-0d36a83269b0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "db35d474-2722-48b6-840d-9f4debbb739e"
        },
        "item": {
          "id": "034d4d9f-b919-4d54-8192-f63a58d3c509",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "62730bf9-1a89-4490-bb8f-62f64edaea1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d0b570-1605-42fe-bd7b-4ed8e41a46a5",
        "cursor": {
          "ref": "e27a27de-489a-4c39-a51f-65284189f59d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5c8e3218-1643-4c7d-85ce-640f042b7b58"
        },
        "item": {
          "id": "54d0b570-1605-42fe-bd7b-4ed8e41a46a5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a82be785-ce4c-4198-9a1e-aeb21af80cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4c0384-da7b-4e15-a539-1af166a78867",
        "cursor": {
          "ref": "d65f19ef-c0e4-4b8f-a7ba-32770a92b47c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "afade222-f8e2-44ce-88e1-9e8cf94c1e46"
        },
        "item": {
          "id": "ab4c0384-da7b-4e15-a539-1af166a78867",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "21e1957d-9dca-4592-9713-95a27b24c79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94406c91-8412-43b2-8e6b-a6fd9c95e28e",
        "cursor": {
          "ref": "6300bb21-21c9-46c6-80f8-d92d1cd34702",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "26b1e385-f014-4c94-b1e3-175e52963852"
        },
        "item": {
          "id": "94406c91-8412-43b2-8e6b-a6fd9c95e28e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "522ada13-e357-4ea6-ab7d-3066e3d21820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd6e397-b941-460d-9140-a63750dff698",
        "cursor": {
          "ref": "e30d527d-db6f-4130-a4bf-481481d3f2d9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0fa9f5a3-9556-4ffe-8dc1-093bd4708351"
        },
        "item": {
          "id": "8bd6e397-b941-460d-9140-a63750dff698",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1e46ee4c-5498-4e74-8a0a-78e9bfb0ceae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484257fd-1c09-488e-9015-c214bbc27e5b",
        "cursor": {
          "ref": "3959219f-0fa0-4f0e-a3f6-5ae11f1f749b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6b1d4e77-6d78-4b52-93b4-b0c6529baada"
        },
        "item": {
          "id": "484257fd-1c09-488e-9015-c214bbc27e5b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e9f0db23-67fd-4e8d-bba9-588ad63c6fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84266677-6a19-4872-aa08-c7b1c0a8c354",
        "cursor": {
          "ref": "7a04c502-25ed-4227-9f89-d00873bfb73f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "73b031f4-5160-4004-a956-ff26b0483d0e"
        },
        "item": {
          "id": "84266677-6a19-4872-aa08-c7b1c0a8c354",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4f10059c-9e92-4969-8cdd-cac3932a4021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba0374f-7bbb-4782-90b0-2e8a211374fc",
        "cursor": {
          "ref": "d5d1df11-8d6f-43dc-86ca-7e7162a8b4ce",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dfc8bf84-96cf-4190-8233-028943130f83"
        },
        "item": {
          "id": "8ba0374f-7bbb-4782-90b0-2e8a211374fc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "67f10aaa-58e0-4681-9054-e0dc50524347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1020733f-f021-4f3c-89c2-e18adcbbb34c",
        "cursor": {
          "ref": "874c38ec-2d7f-41df-8e74-133160cb9ac2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "82577310-ad4e-498a-962a-ba3c667fc694"
        },
        "item": {
          "id": "1020733f-f021-4f3c-89c2-e18adcbbb34c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a4c9741d-a6e3-4967-9295-a10b720cbd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc3be8b-1f42-4fc2-9743-32b3b8104886",
        "cursor": {
          "ref": "246b842c-dbf8-46fd-a60e-35707c4a858c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3ada9766-9b50-44f0-beec-dd4f632e5933"
        },
        "item": {
          "id": "1fc3be8b-1f42-4fc2-9743-32b3b8104886",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6afcb7a2-2184-4d4c-94ff-820d0f447d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b98a450-4040-4f45-b8eb-6fbdad158c60",
        "cursor": {
          "ref": "55e7c652-2616-467d-a0b5-ebb5c8ce0917",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c4f468f0-8b60-4d22-8a65-f45527db0308"
        },
        "item": {
          "id": "2b98a450-4040-4f45-b8eb-6fbdad158c60",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5b8b3ed0-1dfc-4125-b461-d4ebb311f5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294a4f26-6ee5-4612-8e72-c7506e1e78b8",
        "cursor": {
          "ref": "a33b1f38-4546-47b7-b874-75b4764a1104",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3c046a71-a1b8-4195-9208-3bb4defa48b7"
        },
        "item": {
          "id": "294a4f26-6ee5-4612-8e72-c7506e1e78b8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "23ea6cbd-3f30-424d-94ca-bab681a39da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1455b4-f9d9-494d-ae56-76055dc4a2e9",
        "cursor": {
          "ref": "530280b4-3308-4660-88c1-25c8f8b3aefd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "012bd0b7-3540-441c-89fc-ca0b7907b274"
        },
        "item": {
          "id": "ad1455b4-f9d9-494d-ae56-76055dc4a2e9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9d5cab66-937e-4c5b-b955-cf4c5c65c8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29e8acb-6467-4abd-aff7-bc51783aa1af",
        "cursor": {
          "ref": "76a7fcf2-72cf-478e-ad7b-0259b1fc438b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6cc1ef7d-fe90-42bd-9edb-f0613bbd6137"
        },
        "item": {
          "id": "f29e8acb-6467-4abd-aff7-bc51783aa1af",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e936ee2f-337f-43a5-87f0-acdedaa7e6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726f78bf-c84f-4f36-bc2a-e5368b7a6ef6",
        "cursor": {
          "ref": "873befd8-0f72-4097-a7f1-638569438765",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7592ed8a-9a89-423c-82fe-36b4f25a766b"
        },
        "item": {
          "id": "726f78bf-c84f-4f36-bc2a-e5368b7a6ef6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2580e826-363b-4480-b7dd-6ba04c210e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aed393-c9d6-46ca-9959-17ae023a4a9a",
        "cursor": {
          "ref": "52659178-e63d-4313-b1bc-a96be65afd14",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "68e69359-5b5e-4bbc-9edc-f00ea39c99e5"
        },
        "item": {
          "id": "c3aed393-c9d6-46ca-9959-17ae023a4a9a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2d6873ab-0c5f-42b8-8391-3b9481d49eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824ac510-d115-4317-aaee-86cb65c338e8",
        "cursor": {
          "ref": "d2a685cb-7028-4f69-b716-e3ef24e5f60d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc0b1abf-58a7-4574-b969-8df28dcdad3a"
        },
        "item": {
          "id": "824ac510-d115-4317-aaee-86cb65c338e8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "55273f94-63d7-438c-a29a-7d2c48cef266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2c7558-6194-4fa8-8bb7-1a8c819b7e5b",
        "cursor": {
          "ref": "a6e4ca29-bb0d-4c53-a487-0d7fd676f7fa",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ba0a15a2-fc58-43af-ba61-9b9c9d81526b"
        },
        "item": {
          "id": "6c2c7558-6194-4fa8-8bb7-1a8c819b7e5b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "737eddfc-85cd-4d28-9953-3d76f608b1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cd76bf-5f9d-477c-b354-d349f4bafc44",
        "cursor": {
          "ref": "fae56f74-a783-4866-863c-048d0e854b80",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80fe6116-851a-450b-8a87-1b04bb41bf7d"
        },
        "item": {
          "id": "b8cd76bf-5f9d-477c-b354-d349f4bafc44",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5614df87-c1ff-4335-8031-9e49f1e586fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f60446-7411-431d-aaba-7583f7b6b6fc",
        "cursor": {
          "ref": "55cf3731-0a9b-4085-90dd-b4b6457bc187",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "32cd523e-7e5c-403b-ac9b-6a94f11d977a"
        },
        "item": {
          "id": "51f60446-7411-431d-aaba-7583f7b6b6fc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4109661e-bb37-4fcf-aaa6-fea015909277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b3c803-8436-43ce-9ad1-f2f2b60faf31",
        "cursor": {
          "ref": "59495837-c95f-42e8-b05e-c8970b56e323",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0c9f9ff7-c875-483a-b883-48a24d54bec7"
        },
        "item": {
          "id": "61b3c803-8436-43ce-9ad1-f2f2b60faf31",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aaf3314b-6ec8-499e-ae26-8d422a22d03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0809ee5e-adb2-48dc-818a-ca3edc81e00e",
        "cursor": {
          "ref": "659888bd-9462-4bca-966a-5f395549953a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3266d04b-1207-4ecd-8704-b21f0fc3685d"
        },
        "item": {
          "id": "0809ee5e-adb2-48dc-818a-ca3edc81e00e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bba4589c-8202-4aed-a401-e9b9b1fba4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48404ea-25c4-489b-a0bf-a57cd862f048",
        "cursor": {
          "ref": "99f2f826-0be4-4fbd-b732-38ff71121331",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "06274887-55d3-4294-b3d2-e29d9201360f"
        },
        "item": {
          "id": "a48404ea-25c4-489b-a0bf-a57cd862f048",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c9cb205e-4a79-4732-b6cd-e4706d851bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592def46-b0cc-4cba-a133-6b1cd05cef99",
        "cursor": {
          "ref": "1bf59334-6d7e-4669-a70a-239d25ae2e55",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e6c14be0-684c-4123-a1fc-d5dc5547b411"
        },
        "item": {
          "id": "592def46-b0cc-4cba-a133-6b1cd05cef99",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "333c153f-a652-406a-afbc-e1f83c6d673f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2189924-a9f4-457c-9664-c2261dba8400",
        "cursor": {
          "ref": "0a39d2b4-ded0-4925-99c9-7a6d6c71f397",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "db3d261d-3df6-41ee-898d-8ead96bd399e"
        },
        "item": {
          "id": "c2189924-a9f4-457c-9664-c2261dba8400",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13a59e76-e733-4939-91a4-c9c1ab09a50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb074144-4ef9-450e-af50-e6f31afe8a65",
        "cursor": {
          "ref": "af799be9-9ccf-4b5e-8c64-55a8f04d3c8f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1b51fb4d-5ebd-4e70-b12e-3a9cb03c3273"
        },
        "item": {
          "id": "cb074144-4ef9-450e-af50-e6f31afe8a65",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "05c98f69-7033-4ebe-bb30-4efe1dff06a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b5e255-1696-45ed-96a2-743d28cb471a",
        "cursor": {
          "ref": "ae9fdf18-4eb5-428d-bbf3-b8a2ee37ba0b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5e49a770-15f8-4f07-8174-a888ddd17079"
        },
        "item": {
          "id": "51b5e255-1696-45ed-96a2-743d28cb471a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ca2d4d46-fe68-4d88-bcb3-cd66df4c1cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5420f4f2-0b3c-49c7-b6ac-8e3248244861",
        "cursor": {
          "ref": "6dfd098f-819f-414a-8e59-14f609f6986c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ad440125-5691-491b-b267-bd651039ecfd"
        },
        "item": {
          "id": "5420f4f2-0b3c-49c7-b6ac-8e3248244861",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed8b90a3-e1a0-4670-8c79-e3a43ed62104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf30207-ce61-464b-9c7f-9d817272c441",
        "cursor": {
          "ref": "bdc0ee3d-fef3-48dd-855e-5de4e4a1919f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6d869fb2-f334-4faf-8e70-752a56e1822a"
        },
        "item": {
          "id": "daf30207-ce61-464b-9c7f-9d817272c441",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "afb208ab-6a78-43ba-8c63-ce1ac30ef4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b437fe3-98ce-4975-b8c1-f71c7133d3cb",
        "cursor": {
          "ref": "5fb31ded-24ad-4a85-b901-1e51b63540b6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fd4bf02d-58c7-44d9-bbce-34fcf53c3edf"
        },
        "item": {
          "id": "5b437fe3-98ce-4975-b8c1-f71c7133d3cb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5802ce35-9dcb-4671-b6cd-d546046a43d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2f9972-955a-49ea-b55b-8c9cf634cfb9",
        "cursor": {
          "ref": "5716f5c5-ac96-4896-8179-f614e27caebb",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a41bc9e8-dd14-47fc-ad91-f7e9884de1da"
        },
        "item": {
          "id": "3b2f9972-955a-49ea-b55b-8c9cf634cfb9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b76856c4-ed20-4023-9661-11704439ab16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de3ffbe-6e68-4422-b56e-1031cd290928",
        "cursor": {
          "ref": "4c0863db-a08c-40b1-b2b8-185cc2526c71",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "02f93353-8ab3-443f-90df-c82e823a8a0d"
        },
        "item": {
          "id": "4de3ffbe-6e68-4422-b56e-1031cd290928",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e06f6d4-e642-44ac-9260-026eb973c5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524b1722-7e7f-418f-a7c7-e19d3f6078b2",
        "cursor": {
          "ref": "b20c4da0-56b9-466d-801d-8a858f6a97cf",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9cefcdfe-e27d-4f52-b239-b5fe1df4ea25"
        },
        "item": {
          "id": "524b1722-7e7f-418f-a7c7-e19d3f6078b2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d9336f2d-a9b8-4ebe-9265-466173242b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a95eb75-2def-4ada-8da7-cbcff9413bb2",
        "cursor": {
          "ref": "f28a9187-1740-4b83-81c3-e2c3d71d0852",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d65391c-ba1f-4452-b65c-c453d31388b3"
        },
        "item": {
          "id": "7a95eb75-2def-4ada-8da7-cbcff9413bb2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e4d22f57-726a-42ac-8fb1-5ccd55052075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe97cce-5613-404c-93a3-074640aaa896",
        "cursor": {
          "ref": "972468c6-7c5d-454e-9ed7-bd694d1c53d1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8e57eb5d-3a14-4f5f-9c52-7ef5f69601ca"
        },
        "item": {
          "id": "6fe97cce-5613-404c-93a3-074640aaa896",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "333bd42e-2f6d-4c89-aac9-1dcc9981ba41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0d0fdf-713c-4ff0-8a19-d23d240acd4e",
        "cursor": {
          "ref": "60d10279-5e69-4a0d-934d-63ee774cb43a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "af0ac58e-7c10-4467-b66c-71ac35565831"
        },
        "item": {
          "id": "3e0d0fdf-713c-4ff0-8a19-d23d240acd4e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2315dec8-277b-41a4-920e-7ff909a3ae37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9615509e-32a7-4f66-9576-ee00e62b9612",
        "cursor": {
          "ref": "98e1d786-6e11-4d4b-93cd-ebdb183054b9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5e692386-c471-4bb8-aa51-b92c7321ef4f"
        },
        "item": {
          "id": "9615509e-32a7-4f66-9576-ee00e62b9612",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e33d1274-19cd-40aa-9045-ef33a8165919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbe93d8-246b-4a2c-ab6b-1708f60e77a0",
        "cursor": {
          "ref": "b681180d-ed60-4a74-bad4-57e35cb472ba",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4c86df55-7b31-4efb-bf6e-3380c44db3b6"
        },
        "item": {
          "id": "ebbe93d8-246b-4a2c-ab6b-1708f60e77a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fed81b2f-dd36-4a43-b798-f735dfed3d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4d8ef7-4715-4798-a9a2-2d4cbd7a27bd",
        "cursor": {
          "ref": "cade95c2-5884-493c-b649-98d2850fd222",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eae87afd-251f-4d77-9c4e-65ed63e4942a"
        },
        "item": {
          "id": "9a4d8ef7-4715-4798-a9a2-2d4cbd7a27bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ddfafbcc-175c-43aa-a308-c6dd66747d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6df182-27d3-466c-9b72-9899fd869713",
        "cursor": {
          "ref": "c2c3b51b-4ab1-4d2d-af76-5989a3aad56d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dc37bd34-54d3-47ac-9766-61809bdf0c27"
        },
        "item": {
          "id": "ee6df182-27d3-466c-9b72-9899fd869713",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "24942e8d-e0f5-4d35-984f-59c481d2916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c86dd0-0df9-4548-891a-7b2ed7a70cb2",
        "cursor": {
          "ref": "b24bfb26-e8f7-459a-ac43-b579e3f2ee08",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "50305f84-c15f-44e9-8ab0-72576daf69a7"
        },
        "item": {
          "id": "d3c86dd0-0df9-4548-891a-7b2ed7a70cb2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "798456c8-9837-47d7-9c7e-968ba04b2f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9877ea0d-c502-4767-905c-96984460816f",
        "cursor": {
          "ref": "a570b81e-1062-4ba6-a1d5-ec5f50892ed9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c9b829f7-7d82-48ca-9a3a-73d59aa2d38a"
        },
        "item": {
          "id": "9877ea0d-c502-4767-905c-96984460816f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ecf4e6a6-1949-41ab-9ad3-025b26623605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5e7e26-235b-4f34-87e0-2df11784335a",
        "cursor": {
          "ref": "b276f038-0df1-41c9-8a13-55fbed692872",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d7c0882a-a648-4068-b4a9-8a762817c163"
        },
        "item": {
          "id": "ce5e7e26-235b-4f34-87e0-2df11784335a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8732c311-cfeb-40c5-9d08-bcebf9a7ba4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1654408-47cf-4aa2-b0e7-f847f25cefa3",
        "cursor": {
          "ref": "457ea293-9146-4788-b956-599504b5ed83",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bd02fb6d-7440-430b-9cf2-4226a33532f3"
        },
        "item": {
          "id": "e1654408-47cf-4aa2-b0e7-f847f25cefa3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "411c4e2c-4526-4e52-b93d-4b4849c3a997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242f6f5f-e16b-42d0-b23b-4a07a7fda273",
        "cursor": {
          "ref": "4bef732c-f0b1-45f4-a81d-d6d05f0e5fc0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "341a53bf-959d-4aa3-a7ee-9f4bb5159e85"
        },
        "item": {
          "id": "242f6f5f-e16b-42d0-b23b-4a07a7fda273",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "be0c2215-43a8-452a-927e-a96fd1107914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33b5cf1-727b-4bff-aa32-41dcb8bb9de9",
        "cursor": {
          "ref": "941c7f9f-d489-4b49-a1d5-d0e9e2edd4c8",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bbd9cbce-945c-42aa-b305-db26a08f09e8"
        },
        "item": {
          "id": "b33b5cf1-727b-4bff-aa32-41dcb8bb9de9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2e3969bb-2bfe-4f52-ace0-8a7e091663d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e172d33-4b1f-4438-a35c-dce8c5b7f4e3",
        "cursor": {
          "ref": "ee9323a1-2762-4286-ab03-f8298f52fd55",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6ed8b5c1-0cc2-4b6c-972e-6f0fbe49b5b0"
        },
        "item": {
          "id": "7e172d33-4b1f-4438-a35c-dce8c5b7f4e3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15f10bd4-575c-4c57-8496-835defddc1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d4f848-6143-40f6-86fd-ab3a522b49a9",
        "cursor": {
          "ref": "8bb7af94-9860-4d11-9b55-e0a5c5f76a04",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ff7758f4-76f2-48a2-a8a9-6e24b5967485"
        },
        "item": {
          "id": "14d4f848-6143-40f6-86fd-ab3a522b49a9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fbb76e34-cc59-492e-8875-49c68cf82b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2836eb9d-7082-4379-b3b5-468959f7e804",
        "cursor": {
          "ref": "e8efa74f-dbce-4d94-8bd1-310b22739d24",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d7dd286c-c9a1-42aa-ba64-d961b0817e5c"
        },
        "item": {
          "id": "2836eb9d-7082-4379-b3b5-468959f7e804",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "59f3a2c5-a1f9-4215-87d4-887f14c62841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79ed538-ff0e-4b6f-a0ae-8abde7addfff",
        "cursor": {
          "ref": "eedc9f17-d4ec-4026-b460-f7e9e288f5fe",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "faac41d5-24bc-41f9-8e97-b01055a0b639"
        },
        "item": {
          "id": "f79ed538-ff0e-4b6f-a0ae-8abde7addfff",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c7eb5627-94f0-495b-8c78-ee9c14ebdb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00387388-10cd-459f-a3da-173450023fc2",
        "cursor": {
          "ref": "1191ebf4-0e82-4ba5-861a-d39576ca65ab",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4050ebcd-43a7-45ea-aa1e-91ee72310f11"
        },
        "item": {
          "id": "00387388-10cd-459f-a3da-173450023fc2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d9c9b63a-4bbf-442f-b639-427706e68f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40d9f0a-504e-416e-8ecd-8f0aea002aa0",
        "cursor": {
          "ref": "242776c4-c2da-4202-b252-0f1b8c3f0423",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "89476704-8cf6-499d-9367-b2ba98ef3aab"
        },
        "item": {
          "id": "d40d9f0a-504e-416e-8ecd-8f0aea002aa0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ae2e1c25-6d28-4b41-98ae-4c627b389e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1b9869-45f4-4b76-b90f-97c6fa792690",
        "cursor": {
          "ref": "79f944ab-64fa-40b6-aaf2-f8de24bedc4d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7b48d149-442b-4032-a10e-df100ec73503"
        },
        "item": {
          "id": "0c1b9869-45f4-4b76-b90f-97c6fa792690",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ce71e1de-2d52-4fbf-8a0b-d26767f026af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cb1d25-db19-4e82-b34d-b907c07a9bbd",
        "cursor": {
          "ref": "a755d708-7ad2-404d-b505-d16592707588",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "088496a7-ea52-4257-85f3-3cd2f91e2666"
        },
        "item": {
          "id": "12cb1d25-db19-4e82-b34d-b907c07a9bbd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "208c5949-16a6-429a-9314-75b3f96acbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41fa7a1-1fc0-4942-8bd7-b5e326a055ad",
        "cursor": {
          "ref": "d3ad85b1-66ab-4c3a-87b4-52eaa6b8a5cf",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "887bfcdc-1e9d-4d67-94bb-84de9801fd26"
        },
        "item": {
          "id": "a41fa7a1-1fc0-4942-8bd7-b5e326a055ad",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "54bbd589-6493-4675-ac7c-f6634e37ca8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9f4f12-19f4-4596-a7f6-173a698b0d02",
        "cursor": {
          "ref": "c339cf01-91fb-4f50-93d4-4fc1b3adfce3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aa81310e-814d-4d17-9c0f-0a17a6c88908"
        },
        "item": {
          "id": "2f9f4f12-19f4-4596-a7f6-173a698b0d02",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4f9e9d1d-3497-4e92-b31a-56871cd5072a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1b01d7-aaae-4c56-a987-31bd2b234dcb",
        "cursor": {
          "ref": "964e01cb-590d-4298-a787-60d31ac5ae37",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "141179dc-ea0b-45d0-9222-f24f5fb5daaa"
        },
        "item": {
          "id": "cf1b01d7-aaae-4c56-a987-31bd2b234dcb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "68f9a60b-84ec-48c1-bc7a-804a3a1e3ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2803971a-29c4-4614-b357-fcb7c974eed0",
        "cursor": {
          "ref": "8139fd7e-a779-4e6e-ba1e-0d6d9d6e2d16",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d67e427e-cf89-4caf-8567-9448145ec1b0"
        },
        "item": {
          "id": "2803971a-29c4-4614-b357-fcb7c974eed0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "deae93b5-386f-4286-919a-bf6667a9ea4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc21efad-0b95-445b-9f61-a853bc28884c",
        "cursor": {
          "ref": "91f1bc7d-78ab-4684-b75e-86429d11ae7f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "344e6578-f599-473e-8126-6bb542f8bf25"
        },
        "item": {
          "id": "bc21efad-0b95-445b-9f61-a853bc28884c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "030a6d52-40ab-4032-a357-88e1896c81a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20af7390-a8c0-4527-a472-9028af77c0ec",
        "cursor": {
          "ref": "a65297e5-f6eb-4609-ae85-943a244f9d88",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "75b63897-a41f-4e99-984b-fba954d08291"
        },
        "item": {
          "id": "20af7390-a8c0-4527-a472-9028af77c0ec",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7ba83ffe-edbb-4cde-9b68-d895f8df5c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f1de67-6cd5-413c-add0-56bb5419e704",
        "cursor": {
          "ref": "428b4776-c23f-4766-9ce9-4c45d820345a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5aba4e72-f414-456d-8909-02b475cacf59"
        },
        "item": {
          "id": "a4f1de67-6cd5-413c-add0-56bb5419e704",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7d39fc9b-07c3-418c-8868-90d2f4819657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc979aba-7eda-477a-bae8-4c144f6d69a0",
        "cursor": {
          "ref": "2e441cf9-dddd-46cf-977a-e1ecb8f0ccea",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "71c4fbea-6e95-4d4e-9eae-f67d5bbcf7b4"
        },
        "item": {
          "id": "dc979aba-7eda-477a-bae8-4c144f6d69a0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e1200f76-8aa8-41d0-bd21-b495a0d01cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27170cb-ff4d-4ed6-bd71-c1545df6cef7",
        "cursor": {
          "ref": "469d30c7-1ca2-4e64-b883-e1a3316f9a80",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b4a60332-3bf4-47eb-a5b7-44811be4f953"
        },
        "item": {
          "id": "e27170cb-ff4d-4ed6-bd71-c1545df6cef7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "37eb0a2c-eed3-48d1-805b-a950e0e031d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424b891e-7e20-4bfb-bf24-8c76034334a3",
        "cursor": {
          "ref": "bd97600e-2ef4-4994-8f20-79702b351689",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0d10a7c0-a42b-4e51-94a7-0e7c730675ce"
        },
        "item": {
          "id": "424b891e-7e20-4bfb-bf24-8c76034334a3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0c06b8ec-307f-4ec7-bac7-b50614a4912d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbaa54b-c147-4c83-acd0-a3065c3533f2",
        "cursor": {
          "ref": "6ec8c932-0185-4a24-9795-223a73918ab0",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "458f128e-8477-44ed-966c-1f4a2db065ce"
        },
        "item": {
          "id": "6cbaa54b-c147-4c83-acd0-a3065c3533f2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e5d91ef4-e09e-4d9a-853f-8e47d4a75938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80196e5d-74e8-4ba2-a52c-f9701e9f4a66",
        "cursor": {
          "ref": "80a2ff90-cb8c-4057-8bdf-8dceddf985b9",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e523c7d3-a071-45af-a90b-414f4bea36a3"
        },
        "item": {
          "id": "80196e5d-74e8-4ba2-a52c-f9701e9f4a66",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "550c7df7-31f2-4c1d-b4c6-f493e9cefd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b133aa99-5d95-459b-a9a1-abdd9b76e75e",
        "cursor": {
          "ref": "10680d94-c718-4adc-bcad-018ba1b2bb61",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "94599c29-6def-4720-bc74-2533b63192df"
        },
        "item": {
          "id": "b133aa99-5d95-459b-a9a1-abdd9b76e75e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "125e3ed3-d852-4edf-b9ff-c2975a07b86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36ad815-bc83-4505-8725-d5a3cc5adc64",
        "cursor": {
          "ref": "a2672c0c-ab5e-41c2-a43c-cd894f691986",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d9be42d6-6a45-4f2c-adb8-c518d571fef4"
        },
        "item": {
          "id": "c36ad815-bc83-4505-8725-d5a3cc5adc64",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1eed633a-bd40-4c12-a751-da710f91e087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2431ab-595a-477d-8f74-0ad2f9d99548",
        "cursor": {
          "ref": "b1462af0-3b97-4cfe-91f0-907af12113f3",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "df0cc461-a917-4919-a6b9-45c5ab160b69"
        },
        "item": {
          "id": "4d2431ab-595a-477d-8f74-0ad2f9d99548",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7542bade-cdef-4b84-bda7-de239bed62a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4114dbc1-d7da-4d2f-aa0e-40d24fb61f27",
        "cursor": {
          "ref": "6c61dbc3-75ca-4141-a48c-a436fbe6752a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "becac409-ae6c-4a19-b01b-2c01879ea4ba"
        },
        "item": {
          "id": "4114dbc1-d7da-4d2f-aa0e-40d24fb61f27",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "de7dbd85-9101-470b-bba9-50faa72874a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1ce664-9ca3-4ec5-ba25-b6078cb7fbc4",
        "cursor": {
          "ref": "79ca6465-0fe4-49af-b925-70b854347f93",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "10dd0838-2d5e-480f-91cd-ee0c5f99e9c9"
        },
        "item": {
          "id": "2e1ce664-9ca3-4ec5-ba25-b6078cb7fbc4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7b055dfc-3b34-4335-a908-e055a379781f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84de9b0-3529-4031-8a7e-187def00d24e",
        "cursor": {
          "ref": "7fd9cdd2-96e9-4e11-a8e4-7dd554f0e369",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "13911674-aea6-478e-ab0c-77505e486f8d"
        },
        "item": {
          "id": "c84de9b0-3529-4031-8a7e-187def00d24e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f81bb65d-7802-4ec3-a981-f160e4ffdcfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed545c7-7d08-47d0-b131-88328aa2f14d",
        "cursor": {
          "ref": "f735fc92-7f45-4d5a-be78-6b173035188c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "39a4ff3b-3dc2-4df1-8973-76f13681112b"
        },
        "item": {
          "id": "2ed545c7-7d08-47d0-b131-88328aa2f14d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f025b473-0c55-47af-9a64-8f620d703419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7578c289-57fd-4d0e-a002-f770b78104ed",
        "cursor": {
          "ref": "e906c2cb-0f63-4357-9ada-fb0859a12b6b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ef574edc-2382-4041-baab-2c953c804c3e"
        },
        "item": {
          "id": "7578c289-57fd-4d0e-a002-f770b78104ed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "caa95166-4a09-42cb-81c1-e77335c0cc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "69f79ea3-b1c6-4f0a-8150-459e23e7be5e",
        "cursor": {
          "ref": "5266b8b2-0ae4-49c6-a870-8b67570fa1f3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b91c6fa0-58f1-48ab-8d6e-432b052de218"
        },
        "item": {
          "id": "69f79ea3-b1c6-4f0a-8150-459e23e7be5e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "442a1651-8cd7-40e9-8b3c-5e0059f8257f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "55da8d49-e697-4513-b961-864fe1db7dcf",
        "cursor": {
          "ref": "e05368e9-f5a8-47f6-b727-a8d7c842a88a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "59a7bc0b-e3df-4022-a643-20f69d609b2f"
        },
        "item": {
          "id": "55da8d49-e697-4513-b961-864fe1db7dcf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "933d8aba-bd04-491f-bb81-dde551c6bc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "61bf12e6-2023-479d-bd06-edb4ded6f270",
        "cursor": {
          "ref": "dac0733a-ceef-4b14-8aec-048086adda58",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bbd9b6b8-3c73-4eb1-85cf-3defefecd16e"
        },
        "item": {
          "id": "61bf12e6-2023-479d-bd06-edb4ded6f270",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "175f337b-66d9-4f19-8254-ae57a887d571",
          "status": "Created",
          "code": 201,
          "responseTime": 16434,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7ddf54-a052-4ddb-ab5e-46faa55091d9",
        "cursor": {
          "ref": "d4008d91-0958-4c8e-b314-c7db7e1889e0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "214f0db5-3278-4fed-982f-5e80d7ae6758"
        },
        "item": {
          "id": "cd7ddf54-a052-4ddb-ab5e-46faa55091d9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "adefdf2f-4706-419e-8694-567c37228064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6eff172e-e7ed-4a56-abe8-d7ac724564fe",
        "cursor": {
          "ref": "ea8bcc03-3104-47aa-8956-4fce723bd94b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c213599f-ab5f-4696-94f5-1d23664bd5df"
        },
        "item": {
          "id": "6eff172e-e7ed-4a56-abe8-d7ac724564fe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4e73fe95-957d-4dca-b335-376941cd6e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "11478517-9a98-4c2c-8335-bb9b01f25b35",
        "cursor": {
          "ref": "696eb0ed-805e-4c05-9e5a-c973574c64db",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c2e16392-af4b-436b-b39c-3297abe3f0b4"
        },
        "item": {
          "id": "11478517-9a98-4c2c-8335-bb9b01f25b35",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "df65d77b-0ded-4c8a-87e3-bd2c0b3ca646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626d92a4-f1dc-4a87-8521-8b15dbab618e",
        "cursor": {
          "ref": "beff394b-853c-46a6-a1e9-8aec7e15be56",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1b96f12d-7d5f-43ce-9a4b-e6692273a01f"
        },
        "item": {
          "id": "626d92a4-f1dc-4a87-8521-8b15dbab618e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0f1d4523-0492-441b-88f6-ea91792ac7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a308ac-95ca-4fba-9716-9526daf99123",
        "cursor": {
          "ref": "983f7e8d-166e-4f9d-bd79-2ba2816c7669",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6126799d-3f18-48f2-9598-245919f23d07"
        },
        "item": {
          "id": "04a308ac-95ca-4fba-9716-9526daf99123",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b59a609c-0168-49f3-9572-e3df64b64933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83597543-6d21-40d7-bbfc-ba529b89330f",
        "cursor": {
          "ref": "a81706af-3322-41d9-9e0b-4bf9191312b7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "96c80fdb-d295-444e-8dc4-40cdcbfb2ef9"
        },
        "item": {
          "id": "83597543-6d21-40d7-bbfc-ba529b89330f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da8c6bff-3850-40a5-952f-105e675b2d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b8ae6e-f1f6-4512-8aba-71d749c8c619",
        "cursor": {
          "ref": "1f4de147-5827-47fd-b50b-ca115919a89d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "255aeb5e-17ed-4872-a652-e296f367aa0a"
        },
        "item": {
          "id": "28b8ae6e-f1f6-4512-8aba-71d749c8c619",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "82fa8590-9d81-4fc2-a925-e19bba0e0522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6d4913-7b3e-4be3-a541-d785caf0a36a",
        "cursor": {
          "ref": "ef05541a-9c29-4f54-9513-715a2db2a65b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1a7462a8-f5df-4c68-b050-91b4c16262e8"
        },
        "item": {
          "id": "1f6d4913-7b3e-4be3-a541-d785caf0a36a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e21312a5-a288-4a10-b071-0d05a81fcd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8355572-c731-4c0f-82f2-ddf900a5c532",
        "cursor": {
          "ref": "c9470b23-efee-4375-a8c8-0e43a724f123",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bee545c8-581b-4e12-bc50-7e04c6ab91ae"
        },
        "item": {
          "id": "b8355572-c731-4c0f-82f2-ddf900a5c532",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "759962bf-2d5c-4869-a2bd-1509c4d6302f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6d38b7-82fd-41e9-9009-3be42392a365",
        "cursor": {
          "ref": "1ed98022-c082-44b5-9f5f-efcc8be6447f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fd7f8972-7964-4861-a55d-a4cab8249b43"
        },
        "item": {
          "id": "7f6d38b7-82fd-41e9-9009-3be42392a365",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ee54b1a-b276-48be-b889-290aa6821b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee38cd91-e615-4d1a-b57b-e74f2fef40a9",
        "cursor": {
          "ref": "61a3976d-2efe-4c48-a152-addf3832d91e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ed3ed1da-9c0e-45f3-91a1-f4f17c6aefcb"
        },
        "item": {
          "id": "ee38cd91-e615-4d1a-b57b-e74f2fef40a9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e57e843-fe4e-47ec-9372-a2da17d46ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c392e3e0-6282-4bb7-b817-7ee2bab42e66",
        "cursor": {
          "ref": "3659d7ab-bf00-4da2-8879-d9f599be784f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c33502a1-ac87-465b-ab19-79ec5f801c76"
        },
        "item": {
          "id": "c392e3e0-6282-4bb7-b817-7ee2bab42e66",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b41bec1c-890e-4833-9d53-166dc606b650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae4dc86-7e06-47d9-96d9-ba0941766235",
        "cursor": {
          "ref": "978b4dfe-c361-4ed9-8d03-05b20734b144",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9868ef7e-9365-46cb-bade-eb7bc4681c6c"
        },
        "item": {
          "id": "9ae4dc86-7e06-47d9-96d9-ba0941766235",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1e7b9cfe-ab6e-4826-8ed0-3722a98c5645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09ebf66-39ed-4e2f-aa56-a38dfde9c381",
        "cursor": {
          "ref": "17283b00-03f6-41a2-b2aa-a2670da1ad4d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ac8c35e5-4972-46dd-9124-56710e658e96"
        },
        "item": {
          "id": "e09ebf66-39ed-4e2f-aa56-a38dfde9c381",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c240484-c85f-4590-ab38-3ae254c2656d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dac9f1c-b32c-4174-a168-9f42f00efb08",
        "cursor": {
          "ref": "b33ab8a5-adcb-44b1-9f52-5e4cf534b340",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3d6f5af6-994b-4faf-bcf6-379cba2b2fc5"
        },
        "item": {
          "id": "8dac9f1c-b32c-4174-a168-9f42f00efb08",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a08c8a64-ca16-4432-90ad-0bc2c1c7b5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58424c2-35b1-4653-870d-e6173dc2982b",
        "cursor": {
          "ref": "70d12c5b-83de-4a32-9b5f-88b3f71e8702",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "898bd38d-263c-43e2-bbc9-2dca7af278b0"
        },
        "item": {
          "id": "d58424c2-35b1-4653-870d-e6173dc2982b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ad8b6155-c42d-4230-921c-5f6d40a0f429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d6644f-04b2-4410-ae41-557aa6cdff00",
        "cursor": {
          "ref": "71ed09f7-70a9-4a63-ab87-d0fa1e93a73c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "92991252-4422-432b-9209-d9ae6f2f5428"
        },
        "item": {
          "id": "04d6644f-04b2-4410-ae41-557aa6cdff00",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c53a938e-7f13-4848-ad8f-fc25299348ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e10759-afb0-4f8c-b64b-c547d031eaf0",
        "cursor": {
          "ref": "08720fba-b9d0-4691-9f0c-82ca2beacf15",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "535357b3-e9f0-4f5d-abe8-93d13cfdacda"
        },
        "item": {
          "id": "04e10759-afb0-4f8c-b64b-c547d031eaf0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c45c43a8-b81e-44ce-9549-747bdbe7bb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d5c579-47c8-4ece-a679-157683dcad5b",
        "cursor": {
          "ref": "7cc9e7a2-10db-4156-9d12-73c4e3b3c08d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6b7947a3-a996-4b4e-9d2e-93f332a8b438"
        },
        "item": {
          "id": "d6d5c579-47c8-4ece-a679-157683dcad5b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6d9cfc01-7fe2-47da-ac39-20810262e89c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a5e2809f-96fb-4f04-bc48-715c5f3fef68",
        "cursor": {
          "ref": "d36041f6-dea0-4eb2-8bb5-7483624b6a01",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dd6f22bb-1f3e-4557-8584-dd1202493bb2"
        },
        "item": {
          "id": "a5e2809f-96fb-4f04-bc48-715c5f3fef68",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "23e21c51-68e5-4e9f-8528-21b8bcc57f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9012f3bb-7c79-4447-9439-a1cbe02ff1fd",
        "cursor": {
          "ref": "ca0ef399-d09e-4e1a-aba9-4774116888ad",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b15e2cbe-9c5b-4953-a225-7ea313bd29bf"
        },
        "item": {
          "id": "9012f3bb-7c79-4447-9439-a1cbe02ff1fd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7cb247dd-fb6c-4348-80c8-61375e60c7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212e376f-12d3-4e48-a744-14934023cabb",
        "cursor": {
          "ref": "90f211f6-2979-43ba-8afc-f80b3df23cf1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6c26ef02-1c5a-465e-80fa-96aeed034f2d"
        },
        "item": {
          "id": "212e376f-12d3-4e48-a744-14934023cabb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f7a6029-2447-41d6-8737-8e052b50f252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9131fab6-6945-4ec2-b2b6-2c4470efde73",
        "cursor": {
          "ref": "6282507d-944a-4a3d-baba-ec371ac0bd61",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "89c28b81-8de2-4077-a121-2069b7267144"
        },
        "item": {
          "id": "9131fab6-6945-4ec2-b2b6-2c4470efde73",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "202eaf37-df5a-48d7-988b-45dbdaa58774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd010606-1995-4ac6-bd00-198966315e59",
        "cursor": {
          "ref": "3d4509e8-4766-430c-a584-aa3063ec7fa4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3b9f3ab4-5b57-4f87-8be4-c6928f1a3a57"
        },
        "item": {
          "id": "cd010606-1995-4ac6-bd00-198966315e59",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c0a08301-b7e8-4779-a995-2f82c033dcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c593ab85-aa02-42ec-969e-1c9513e38232",
        "cursor": {
          "ref": "12bcde36-1f7e-4ef8-8fbd-76be70cf13a8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "68023bdc-3469-49a3-88b6-ef95af763582"
        },
        "item": {
          "id": "c593ab85-aa02-42ec-969e-1c9513e38232",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f21264f9-8001-455d-83c5-860a1d2e3af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76672454-85e5-4c5e-b6b1-b87ded286208",
        "cursor": {
          "ref": "10866680-cb64-491e-a2f9-7aa222cebe9d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d69338e9-03bb-40f9-9231-824ae7d4f34c"
        },
        "item": {
          "id": "76672454-85e5-4c5e-b6b1-b87ded286208",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e3c56d8-7a30-498d-a903-79344167c202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2453672-c1e5-42d2-97dd-0caa603d9afd",
        "cursor": {
          "ref": "963f0808-c0df-462c-8f7d-380a0c903331",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "99e59644-8f0a-4c0f-97ba-33b896dd18ec"
        },
        "item": {
          "id": "e2453672-c1e5-42d2-97dd-0caa603d9afd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3f07ac49-2326-4df2-9e2b-82ff27c43e00",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "bf27e4b4-e676-4667-8236-e6710cb81500",
        "cursor": {
          "ref": "2b49eaee-b11a-4b57-b916-3aaf83b0469c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a3959f46-b3dc-427f-aa3a-985319bc4744"
        },
        "item": {
          "id": "bf27e4b4-e676-4667-8236-e6710cb81500",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "07315775-3e87-4944-92a1-58ed3b86a67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba45194b-c10f-4ec4-89e3-b65b1b275bae",
        "cursor": {
          "ref": "fe82bc11-4122-41de-9fc5-7a0c8bced643",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "432a9f2b-7e7a-4ecc-aee4-46cbf1eef73f"
        },
        "item": {
          "id": "ba45194b-c10f-4ec4-89e3-b65b1b275bae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f1f1f41c-3de1-4b87-a66b-1bfee5f666e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875a9c23-49e7-4c90-b063-3f969eb988bf",
        "cursor": {
          "ref": "cabf1461-54a2-4252-b674-40381767ca6b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c1d68608-1dcd-46b7-8518-3cdd5182e0a4"
        },
        "item": {
          "id": "875a9c23-49e7-4c90-b063-3f969eb988bf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c2d4a8d8-0b28-4405-a394-e594d7916e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6889d5cd-2334-4580-9ae3-a4d22e15048f",
        "cursor": {
          "ref": "a7ec2511-6195-4f69-9e5b-9493d7d5adaa",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "616e615b-e542-48de-b553-502e01b2345a"
        },
        "item": {
          "id": "6889d5cd-2334-4580-9ae3-a4d22e15048f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "29825e30-a67f-450a-be95-765c049bba19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26572364-55d9-441a-94fd-0c41ab1ff949",
        "cursor": {
          "ref": "8a46c30e-9684-493b-921b-29a56a7497fe",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "43b47ea1-e111-418c-a4ef-38a7bc0a3bd6"
        },
        "item": {
          "id": "26572364-55d9-441a-94fd-0c41ab1ff949",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ca53bf6-6214-41c2-9d2b-a5f4d102b546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9ef940-8fde-47c6-a7d6-bfa391b5e9c0",
        "cursor": {
          "ref": "3bbf8316-4f6c-410b-ac19-132a926452ba",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "48acafa4-2cdd-4049-be30-0df5493c45bc"
        },
        "item": {
          "id": "bf9ef940-8fde-47c6-a7d6-bfa391b5e9c0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d14b4df3-b61f-4e7b-a690-eb9494b3b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c0382d-e188-4ed0-94a1-e2e9308b724f",
        "cursor": {
          "ref": "5a7e2ace-5617-4f67-80dd-001f69eced1c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e662fd7e-0e62-454c-9321-1a89afe27691"
        },
        "item": {
          "id": "56c0382d-e188-4ed0-94a1-e2e9308b724f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "abe15083-a856-4a57-a1e9-cbc866ad8a68",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 96,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2992ae66-a0f2-4cad-9a53-b698f884d194",
        "cursor": {
          "ref": "48e0e160-af79-4e95-959c-3946b969dc59",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f484a37a-fb0e-4ca2-88ed-cc3773ba6fed"
        },
        "item": {
          "id": "2992ae66-a0f2-4cad-9a53-b698f884d194",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "38690445-163f-4645-b5ae-866d70969a61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83499c7-d10a-4ba3-bcc1-9c4fa947af15",
        "cursor": {
          "ref": "40ad0943-8ae7-4fa1-afee-1de1acbc3f13",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "300040fc-078f-4da6-b4c6-41aefb6c1db0"
        },
        "item": {
          "id": "d83499c7-d10a-4ba3-bcc1-9c4fa947af15",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29b8de02-3c3f-4dab-8b21-8955bbb81596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8761a25-2e14-4ae9-a0c7-93871684d5e8",
        "cursor": {
          "ref": "c8cd46e6-8257-4312-9b32-450277105f1b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2648ce03-71c8-4f3b-adea-70c5263783a6"
        },
        "item": {
          "id": "a8761a25-2e14-4ae9-a0c7-93871684d5e8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5fe1508c-e4e0-4ca2-8740-a809a2ecb0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d3372c-8049-4b97-8040-328249dc2444",
        "cursor": {
          "ref": "28da826b-b257-407b-a9fe-8c6230f9b9a8",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6900381d-4844-4738-93f8-86670c32e7d6"
        },
        "item": {
          "id": "38d3372c-8049-4b97-8040-328249dc2444",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4b827857-0b09-43fe-95dc-41842fba2263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b81ee25-f1ef-4a7f-bde5-2be879d3502b",
        "cursor": {
          "ref": "f5abc6c0-8d80-4db6-82f7-1561d40c5a0f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "98d4c70d-eadd-4b7b-aeab-1b7815a0a4e2"
        },
        "item": {
          "id": "8b81ee25-f1ef-4a7f-bde5-2be879d3502b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "668d9684-0b3b-4bf7-8b25-a032f648f711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140f15f1-f75b-4f88-aebd-fcbc41ae8f49",
        "cursor": {
          "ref": "e7d81498-c8ba-49b0-bb04-0e6fcefa7423",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "afda349e-0da5-427e-b4db-787c9f187f89"
        },
        "item": {
          "id": "140f15f1-f75b-4f88-aebd-fcbc41ae8f49",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d8d83406-82fe-455f-90c8-fc69152ceb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db5507d-de25-4775-af97-7d4cf7faefcf",
        "cursor": {
          "ref": "537b4e71-240e-42ad-8220-227869367ab3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6314352e-299a-457a-be89-c566d24ba932"
        },
        "item": {
          "id": "9db5507d-de25-4775-af97-7d4cf7faefcf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b1925114-dae6-4a46-8a3c-e65233e4dd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1ac683-9e8b-4de8-b552-128de7a9c0f9",
        "cursor": {
          "ref": "08ecfc7f-e2a5-4166-bf01-0e10d1972157",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a8cb33f5-02f2-4553-b93c-133a8bc90c76"
        },
        "item": {
          "id": "ed1ac683-9e8b-4de8-b552-128de7a9c0f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b3a20ee6-5ed6-4d61-9a4f-6f00f8e8f7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4d7487-fa76-40c9-a28d-57465603cf02",
        "cursor": {
          "ref": "356565ba-71ac-4f51-ace5-ac10d5b049ce",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e7c7f7a4-7cd8-48b7-acc4-c328cd04e273"
        },
        "item": {
          "id": "6f4d7487-fa76-40c9-a28d-57465603cf02",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c6155f5a-760b-4c23-892c-dc1a7e37d34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b537354e-8293-4b16-b3a1-74dde85a3901",
        "cursor": {
          "ref": "3d57b12d-61b4-48c9-8bcc-1d4f7422bcd1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "19f821ef-79f5-4a0c-9ede-9ec0a6f17447"
        },
        "item": {
          "id": "b537354e-8293-4b16-b3a1-74dde85a3901",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f181c043-5bca-47ed-abc7-7239aa40d5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cb4d48-654d-4730-8b5b-fbbfa184074e",
        "cursor": {
          "ref": "36a88c92-7fc8-448d-914d-7c4f045cd5bf",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ec52a59f-bc5d-406d-8a3e-1a7c15e2259f"
        },
        "item": {
          "id": "b2cb4d48-654d-4730-8b5b-fbbfa184074e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9da13372-58c5-4766-ac17-44be53ed4094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a71d18-f187-44b3-bc06-e78f8e05e073",
        "cursor": {
          "ref": "d2891277-cb47-4e07-af31-f5d1d7751a78",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b6a48e85-944d-43b2-bb3e-db0d136212c4"
        },
        "item": {
          "id": "a7a71d18-f187-44b3-bc06-e78f8e05e073",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9a842dfb-b1cf-4ea4-9a1f-8957d05f3121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6328d615-cfa2-447d-bbbc-dfff6548f675",
        "cursor": {
          "ref": "aa4dda86-febf-4fc1-9c53-250b7d6a20fe",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4c6802e2-565a-47f7-bf68-267e6157bc9e"
        },
        "item": {
          "id": "6328d615-cfa2-447d-bbbc-dfff6548f675",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a957b069-63f3-4a90-8f80-72cb0ef9fb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b0a611-c7bb-415d-ba6b-ec469e08f710",
        "cursor": {
          "ref": "b56f69da-39dc-4198-8d00-a67e1b802c6a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ce67789d-9480-4cd0-9c94-370aee8e590d"
        },
        "item": {
          "id": "74b0a611-c7bb-415d-ba6b-ec469e08f710",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "29df58cc-6ca3-45f0-8d8b-657b6c4ecfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4f5f53-a574-43d2-9906-7fcef55132dc",
        "cursor": {
          "ref": "fa54954c-3e6d-4a72-9a41-5e22cd0b75c7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3bca100d-1d02-40c0-94c3-c901e94658c2"
        },
        "item": {
          "id": "fa4f5f53-a574-43d2-9906-7fcef55132dc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1e6943be-059c-4987-b51b-28e1dea3f32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc08b11-9407-45fd-a6d7-b4a7600acd8d",
        "cursor": {
          "ref": "13647715-d42b-4c6c-bb96-25c2b1149668",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ebde311-2c3d-496f-8b10-60ae2db254bb"
        },
        "item": {
          "id": "bdc08b11-9407-45fd-a6d7-b4a7600acd8d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a40d860f-996d-4cb7-a2b7-b21d81b77f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84647781-daf7-4237-902d-3e425a6f1140",
        "cursor": {
          "ref": "4e424b6e-052b-4874-8396-ed60dc5e22ca",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3ab304e8-62da-4e19-8436-29df41d82035"
        },
        "item": {
          "id": "84647781-daf7-4237-902d-3e425a6f1140",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a36dee9b-d25b-4337-b77f-e3ef292ee79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb89224-4bd8-4ea8-9d2d-f77ba28dd169",
        "cursor": {
          "ref": "a8a0df67-631e-4543-a139-ce2c133ebdf4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fbe9b82b-0e9b-419f-9f7f-c6f8339868ee"
        },
        "item": {
          "id": "7eb89224-4bd8-4ea8-9d2d-f77ba28dd169",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5861ad7b-0390-45d9-b853-6440dfb58e75",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "664958f4-c493-42ec-8bc1-85106fd2a645",
        "cursor": {
          "ref": "df6ad582-e5db-4317-81e2-7a2c7c5c5633",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3814bfbc-48f9-4c2d-9ce7-5d7d7a2a6b84"
        },
        "item": {
          "id": "664958f4-c493-42ec-8bc1-85106fd2a645",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "028dfcf7-d745-4f74-964d-734103b2ec90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b460ee1c-50cb-458b-af11-994401d9695c",
        "cursor": {
          "ref": "8a309cbe-9ca8-41d6-bfe8-ed237095c418",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f523b5f2-b47a-41fc-80af-94682fcd6bda"
        },
        "item": {
          "id": "b460ee1c-50cb-458b-af11-994401d9695c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "67a6723c-3a28-4c14-a59c-039c5b2edc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3ea03f-e7cc-4806-8fab-c18856034c8f",
        "cursor": {
          "ref": "89bfd930-8f4e-474f-8f6e-38618ab420c1",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f3c48341-5a2e-4078-be9d-7f7204b3c0f1"
        },
        "item": {
          "id": "9a3ea03f-e7cc-4806-8fab-c18856034c8f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ba39c3c9-95ec-4747-a611-bb8b038a3081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a488355-f6f2-4132-ae3e-cb0c9c1bf63d",
        "cursor": {
          "ref": "f4a58ede-9c1e-4e67-bfe3-4681aaf4b320",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9202f7bd-cfc5-4ba2-b91f-ce7c7632add1"
        },
        "item": {
          "id": "3a488355-f6f2-4132-ae3e-cb0c9c1bf63d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c4a6fa46-1258-4ecb-b3a6-2fa1f746ad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c0becb-e79d-4c84-998e-585c1d41632e",
        "cursor": {
          "ref": "9f38c6ce-2623-42bf-858f-238bb527b74b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3910ef02-8f42-4925-a64d-d17e2111ca54"
        },
        "item": {
          "id": "62c0becb-e79d-4c84-998e-585c1d41632e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c1e8323f-4ae0-4694-b4fd-2cda2db43eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6aa65a-31fb-47fe-873b-b5dac9196e14",
        "cursor": {
          "ref": "ee28e0e9-d36e-4f21-b2ee-fe8cc6bd84a3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "580d0bc9-0af7-42b3-8087-b317aa75438a"
        },
        "item": {
          "id": "eb6aa65a-31fb-47fe-873b-b5dac9196e14",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "02a4e479-56cc-431e-bcd8-54bedc9e4f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6093bf22-2ba3-417b-8eef-a8fb826add8e",
        "cursor": {
          "ref": "5301ca62-83fa-4b2c-83fd-f3826586d91b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4eb5836c-4c58-4746-8456-001d3b6457b7"
        },
        "item": {
          "id": "6093bf22-2ba3-417b-8eef-a8fb826add8e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3442e33d-67bf-4cdb-aa1a-56e5c916ff1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9015908-e3de-48c4-a590-e6664df7e0b5",
        "cursor": {
          "ref": "fbe33b7e-a149-47bd-9780-96fca3e99283",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2fe5dfe2-ae00-4f60-a13e-ec6527da2431"
        },
        "item": {
          "id": "c9015908-e3de-48c4-a590-e6664df7e0b5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "07f7e0f5-ed2c-4364-8172-e0445a31929c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "43ec4e83-90e4-4afb-b360-d917dd78b14b",
        "cursor": {
          "ref": "1f690f3c-77c9-4c45-acdd-860e4dfabf1e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c66ee59d-5759-40fa-8a56-e7635d1798cb"
        },
        "item": {
          "id": "43ec4e83-90e4-4afb-b360-d917dd78b14b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bed86502-cda6-46d9-8cb5-07b8796b9a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26945c68-0b42-40fd-b7f8-a2e6abccf5dc",
        "cursor": {
          "ref": "62407ae6-d16d-4bd5-bddf-87140598c589",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cbb8ed86-7caa-4367-8654-f3320716e527"
        },
        "item": {
          "id": "26945c68-0b42-40fd-b7f8-a2e6abccf5dc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ae5c94ef-fa2b-41ce-81b1-35d5c9f93221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fae3ec8-7591-472a-b947-4dc19da6a76b",
        "cursor": {
          "ref": "be945b04-3ce1-4d4c-b94c-d8fccd838364",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9c3f16aa-d73f-4eb8-b42f-1461354911fd"
        },
        "item": {
          "id": "8fae3ec8-7591-472a-b947-4dc19da6a76b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cdf29a4f-2279-4319-865a-0dc36c3b1761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfd1645-5a75-4f3e-878e-0c48a892e368",
        "cursor": {
          "ref": "00bada15-a39c-4ac5-917f-47d6a5a10715",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1563f75c-09b8-48f1-b175-f3c8b96bbfd6"
        },
        "item": {
          "id": "cdfd1645-5a75-4f3e-878e-0c48a892e368",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6a43eddf-a4d5-476e-ba53-a8eb99f6073e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cde4a0-540b-427d-9068-5ded8c5b4cba",
        "cursor": {
          "ref": "2158ff08-aea1-446b-9a8c-9325b2105742",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4266f11d-5e4d-4bd0-9c02-d948ed60045b"
        },
        "item": {
          "id": "87cde4a0-540b-427d-9068-5ded8c5b4cba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4e684d82-0819-4019-a9c2-35839fcb3760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504f3ab1-19e9-4c41-af2a-16796be883bb",
        "cursor": {
          "ref": "1866ecb8-eaa4-45f7-a324-a0fb962eb3b5",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6ee34c2a-dfed-4982-ad25-9dbb2447a9c1"
        },
        "item": {
          "id": "504f3ab1-19e9-4c41-af2a-16796be883bb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b31f8984-4a91-4ca4-8f7b-b7efa04da32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa6fe4d-0c8b-4236-ab96-f125207abf49",
        "cursor": {
          "ref": "0ca4d13e-840e-483a-92e9-3719f3cecf24",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "718d27ec-7115-4fff-9b14-c1540779ff54"
        },
        "item": {
          "id": "efa6fe4d-0c8b-4236-ab96-f125207abf49",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b8178d13-3226-42c1-9dda-7510a279e187",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "ddf7e32f-dac7-4205-ab90-38de86c261e5",
        "cursor": {
          "ref": "d62aa863-8e41-4c83-abda-385611f1aac7",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d4703af1-f8fc-41b1-8415-5f580cb2c8a8"
        },
        "item": {
          "id": "ddf7e32f-dac7-4205-ab90-38de86c261e5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "db1efa17-401e-49ee-aa1e-f3882946f905",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "769504a3-3d89-4f74-bfff-3d661a03b7c6",
        "cursor": {
          "ref": "7baccf72-08b2-4f24-a50f-da809adbedb2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2f429d78-21a8-4c7c-be48-03f5e177d298"
        },
        "item": {
          "id": "769504a3-3d89-4f74-bfff-3d661a03b7c6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "626ec3e3-0d59-4368-821d-401b1b936557",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "c0e3ba0d-3d7e-498c-b196-4fb956429cc6",
        "cursor": {
          "ref": "bf95aa53-91c0-4976-a543-6d66b99e4054",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dbdddb7b-3cb5-4cee-ba41-453291f15c1d"
        },
        "item": {
          "id": "c0e3ba0d-3d7e-498c-b196-4fb956429cc6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "60a4ef69-e0e7-44b9-a56e-a4baa9e6eef2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "ef618ea6-085d-497c-8dd5-e21e2c15378e",
        "cursor": {
          "ref": "b0a4fddb-e9f1-4398-bedf-e35c88b99fed",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0329d24e-661f-4ee9-bcd1-928a1886f968"
        },
        "item": {
          "id": "ef618ea6-085d-497c-8dd5-e21e2c15378e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c17c2033-3fad-4bac-9d58-7bc5a7efaebd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "0d2c25f0-f861-49a8-b86e-9f9560327f85",
        "cursor": {
          "ref": "f8a7a735-e5fb-410e-8ab7-2156a26ce9a2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e265808d-292f-4e68-9568-f7c7e1106031"
        },
        "item": {
          "id": "0d2c25f0-f861-49a8-b86e-9f9560327f85",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fc36710b-55b8-4d6d-aa45-0c7f5d3bf537",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "d35e96ab-907c-4fe5-8f30-0373cbff6cda",
        "cursor": {
          "ref": "bf0cefb8-dd91-43a5-b7a2-8e077484471e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "87936349-1930-4421-922e-700b839ec9c6"
        },
        "item": {
          "id": "d35e96ab-907c-4fe5-8f30-0373cbff6cda",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa4d342c-56b5-469c-8c9d-22237016abc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe9c41d-91db-4694-8d9a-8761a8e1348d",
        "cursor": {
          "ref": "36e1cfb3-8904-4b6d-b137-159c21dab3c3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "48572247-da6f-4a7e-b8ec-cf7b80a6036f"
        },
        "item": {
          "id": "cfe9c41d-91db-4694-8d9a-8761a8e1348d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd90dc45-7348-48e6-87ea-e528cb62fc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a39753-42ce-49ea-9849-906e48375677",
        "cursor": {
          "ref": "efa040d1-acc6-4f50-908e-b98db4c5cd9f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "02a628b3-3628-4c47-9296-756cefaa7a61"
        },
        "item": {
          "id": "22a39753-42ce-49ea-9849-906e48375677",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2423e9a4-03a9-48db-a64b-3c365923a71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf0e743-fe0f-40bd-a326-ac4a2424b12a",
        "cursor": {
          "ref": "f73e5266-bca5-4d37-9dc6-971395561fe0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "513dbfb1-c2d6-4408-ad10-70d5dae1ad7f"
        },
        "item": {
          "id": "faf0e743-fe0f-40bd-a326-ac4a2424b12a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2abfbe70-f9ef-4a83-9026-34a03e256eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8482e2-0c6a-428c-a427-48de6b9ea3f2",
        "cursor": {
          "ref": "a1025150-245e-4583-b712-af7a948684f1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7d8396bb-196d-4986-9522-2a37b7ec1929"
        },
        "item": {
          "id": "aa8482e2-0c6a-428c-a427-48de6b9ea3f2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d0e7b48e-f292-49de-b5a7-d4b28f8ba4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6467b91-26a4-4a21-b592-2ba22ec383de",
        "cursor": {
          "ref": "2e528359-2b70-4368-9e4c-462b240fe78a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5d8db156-7cb5-42a8-ab22-2461e4bf5d0e"
        },
        "item": {
          "id": "a6467b91-26a4-4a21-b592-2ba22ec383de",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "666bd295-5d02-4d44-a59e-9ddc651ace22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba0e250-819f-4314-b09b-1e0523a42150",
        "cursor": {
          "ref": "f8ec17ad-3039-413e-9431-ed9641d1bb47",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4eacb7ef-6acb-42d5-9386-a7b83c9fd19b"
        },
        "item": {
          "id": "3ba0e250-819f-4314-b09b-1e0523a42150",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2a2de5e3-7e96-4d80-b329-44ad9133968f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85462c57-53ba-4db0-a866-725fe1960276",
        "cursor": {
          "ref": "c36b0532-771b-4fba-863c-6333d532b330",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f7cd7ca8-2b47-4401-9141-72f26a389df2"
        },
        "item": {
          "id": "85462c57-53ba-4db0-a866-725fe1960276",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1cf4a774-011e-47a9-b3a8-740f7cccf177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3902c09e-541b-44d8-b5d1-40b822fe8751",
        "cursor": {
          "ref": "a5a077b5-d6f3-438b-83dd-dcf54bf528d6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "130dc27b-13b1-46e2-829c-d6a4f398ca2e"
        },
        "item": {
          "id": "3902c09e-541b-44d8-b5d1-40b822fe8751",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6b3eef6-a301-4dfb-95ae-60c5ad904056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1276fee-fdf4-4e2a-8da9-4960a8876f78",
        "cursor": {
          "ref": "1722fa16-c42f-478f-842c-b0c8770f87bb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "36a4ccf9-9d37-48f4-bf84-9793acb4d8e1"
        },
        "item": {
          "id": "d1276fee-fdf4-4e2a-8da9-4960a8876f78",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9282be74-1c18-43ee-b8c6-6f6f1c9feed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa500016-6edb-4f38-bce7-565d57159cc7",
        "cursor": {
          "ref": "d32804a0-63da-4b06-9661-15d86ce6d81a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4a73069a-cd68-44d3-9e5e-0bb19c55b74d"
        },
        "item": {
          "id": "fa500016-6edb-4f38-bce7-565d57159cc7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e2723ddc-60ef-49bf-9ae4-e0d63caf1c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44d92ce-56f7-4040-9146-03512b25c4b7",
        "cursor": {
          "ref": "c1578565-4615-423b-874e-0e6772ab67b9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a6a715ef-16d4-4b55-9faf-cc65431905dc"
        },
        "item": {
          "id": "f44d92ce-56f7-4040-9146-03512b25c4b7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "47a2c1a3-dda3-4e26-8fd4-b528c9a558bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa074f00-bde8-4086-9258-89c01c0d0503",
        "cursor": {
          "ref": "c2b74262-a634-4daa-9d45-ed2db1c44909",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9929daf3-f3b8-497c-9250-d52cb40abcc2"
        },
        "item": {
          "id": "fa074f00-bde8-4086-9258-89c01c0d0503",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "22d76eb4-7754-4cb1-87ab-ae82e2a7feed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a30d11-493f-47b2-b4e6-b5548b9c4a35",
        "cursor": {
          "ref": "ca1937e1-c8fa-4113-8db4-8961daaa0568",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c7d214cd-609f-4368-a5fe-28ceb4bbf49f"
        },
        "item": {
          "id": "e8a30d11-493f-47b2-b4e6-b5548b9c4a35",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0fdc5458-7450-4f96-a392-efb3dee47ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0fea2a-804a-473c-b49f-d80022cc8d0c",
        "cursor": {
          "ref": "cae01245-c567-46be-8e65-ad09e7bff56e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c1223fec-29c5-47d3-90d8-b66d22735bb1"
        },
        "item": {
          "id": "df0fea2a-804a-473c-b49f-d80022cc8d0c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6e26f816-6795-4482-bf8c-07d98f7952f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c75cd7-1498-41fb-8935-c2195bbe8dc6",
        "cursor": {
          "ref": "830aae38-1be5-4373-a25b-ba9e8f110e6b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e272e73e-a89a-46fc-a14b-cd1d6ce23ada"
        },
        "item": {
          "id": "11c75cd7-1498-41fb-8935-c2195bbe8dc6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "24e2a6f6-cced-406c-a6dc-e577eb0d287e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191e11cc-5202-4876-b084-bac2fbba54ce",
        "cursor": {
          "ref": "ac9650c6-8ed1-4170-a8ea-e405f6785415",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ca824a82-7ae5-4289-a2d0-6705ad633e63"
        },
        "item": {
          "id": "191e11cc-5202-4876-b084-bac2fbba54ce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a1e4190e-6b5d-44ab-adb9-f4444073ee1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b01da8-0e2a-432c-8fb3-dfe8e87e15ff",
        "cursor": {
          "ref": "b8d0a4a1-22ba-4f5c-9bd8-024b8775be40",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "046a4231-467c-4748-a4c6-f9f1c5472746"
        },
        "item": {
          "id": "05b01da8-0e2a-432c-8fb3-dfe8e87e15ff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "663e8195-5fd2-4d7b-8a2a-2087218862cd",
          "status": "OK",
          "code": 200,
          "responseTime": 183,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "9645f4d0-ae33-42a7-b7fa-e180a5ad6a0b",
        "cursor": {
          "ref": "e4405131-83c5-4c73-b388-97839a4c70e0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e3f31085-66cc-4f37-b570-ee62a77d924a"
        },
        "item": {
          "id": "9645f4d0-ae33-42a7-b7fa-e180a5ad6a0b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9470e61c-fc89-4271-aee0-15408d19e558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7014fdb-3e56-4c5f-b150-5bf0802e6f08",
        "cursor": {
          "ref": "57492460-286f-4616-bcfd-1dd7f40b4069",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c03e4b11-1a7e-4b6b-947f-90440ad4aee4"
        },
        "item": {
          "id": "f7014fdb-3e56-4c5f-b150-5bf0802e6f08",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e0a89ad3-f0fb-4ec1-9524-340d281681d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b616895-520e-43d8-9ddd-ee2a4a72ec25",
        "cursor": {
          "ref": "ca05bd31-eb52-4b96-8516-0bc475e9cc99",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8f22f03b-8b1e-46f5-bce2-03d0fbf27a89"
        },
        "item": {
          "id": "2b616895-520e-43d8-9ddd-ee2a4a72ec25",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ff44a011-7e12-4c3f-8fd0-0fe34b9b9046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ad3ab0-8aae-42af-874a-498e02e45625",
        "cursor": {
          "ref": "e43ff185-3694-438b-854a-4cdc3a1e3c02",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a83fa752-908b-43c5-b002-afbc64aa4947"
        },
        "item": {
          "id": "24ad3ab0-8aae-42af-874a-498e02e45625",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a06fb95f-fbe9-4475-bc86-e75d78b8b54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ba2151-2b02-4eb2-8e73-d8c33def3ac3",
        "cursor": {
          "ref": "ddc0a624-1462-44f3-a8c1-2fb36c7acfab",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5d6221d7-cdb2-4655-a05c-11125d0534b7"
        },
        "item": {
          "id": "c1ba2151-2b02-4eb2-8e73-d8c33def3ac3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ecdf227e-9a89-4aba-b3fb-427a86245020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaf286a-8e8a-4b48-923e-e483ba9dddd2",
        "cursor": {
          "ref": "b4a4e5fe-4a56-49c2-a233-b459e8284a00",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d09a620f-4bf7-46f3-838a-951ffd28f6ac"
        },
        "item": {
          "id": "eaaf286a-8e8a-4b48-923e-e483ba9dddd2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "59e85ea7-2263-4f0e-abe7-722b5380d127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0235f17b-f757-44fb-a17d-648387919179",
        "cursor": {
          "ref": "de28c6b2-0781-4841-b9fc-ef087b11041c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e0c2a8b9-a06a-4634-811f-1489b787ab3b"
        },
        "item": {
          "id": "0235f17b-f757-44fb-a17d-648387919179",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c1085b1a-846d-49b1-af0b-ace77f30b60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b193612-5ceb-41fb-81a3-c20f9bdb7bec",
        "cursor": {
          "ref": "edc668b0-92e5-4715-9fba-edc9133418f0",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "25214ed4-e4b8-44f4-b847-f99e84fdd152"
        },
        "item": {
          "id": "0b193612-5ceb-41fb-81a3-c20f9bdb7bec",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "455523b0-365d-4333-8325-c33e148dd71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1587f32c-6656-4900-b705-bbaacbc2ff40",
        "cursor": {
          "ref": "c65ac240-7c63-462c-b9ce-34503f5a6262",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c8d8da62-c348-4fea-82ac-b262eefd326f"
        },
        "item": {
          "id": "1587f32c-6656-4900-b705-bbaacbc2ff40",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9a9b211e-b222-4423-b2f7-9f80f6a6559e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dfba1b-f878-4ca2-8844-e9110c08322d",
        "cursor": {
          "ref": "6ddfdd27-5c81-469a-b28e-ce7cba12f2ff",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6c031066-3bf7-4d8d-a6c6-fab5e9c77b8e"
        },
        "item": {
          "id": "54dfba1b-f878-4ca2-8844-e9110c08322d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "47ac6b2f-418a-4ec3-ab2d-018e5429a91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1577a3-5a06-453a-b404-ef47c08c89fa",
        "cursor": {
          "ref": "090c63a8-e7b1-48ba-a221-62338944eba5",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "019d4ace-f1dc-42b9-a746-8dda524c6dc1"
        },
        "item": {
          "id": "8c1577a3-5a06-453a-b404-ef47c08c89fa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bfb0017b-bf6d-4e6e-917a-01e4a3e935fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a656efd-8a41-479b-903a-2ac311badd88",
        "cursor": {
          "ref": "e9d3575e-c179-48c6-96cd-1795717dc952",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "789f36a9-e827-43aa-b5a5-c38ecfa158b7"
        },
        "item": {
          "id": "7a656efd-8a41-479b-903a-2ac311badd88",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ce5fd3e4-7593-4143-8185-2507117c6470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b489fdd7-b277-43fb-968c-46a4fdb466d5",
        "cursor": {
          "ref": "61ae4aa1-38d7-4ed8-b5d5-2f663dfccd08",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a4df404c-43dc-443b-8330-9a9c26799e97"
        },
        "item": {
          "id": "b489fdd7-b277-43fb-968c-46a4fdb466d5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "06b344d4-4ad5-4bfd-8ec7-45b62c2485c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2d2595-df59-4845-9b44-8d9016a0a586",
        "cursor": {
          "ref": "3b847fcb-f54f-4b65-8523-d4c7bf65e78c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "72b97dd0-6042-49f2-9d34-a8e3c475e318"
        },
        "item": {
          "id": "4f2d2595-df59-4845-9b44-8d9016a0a586",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d9088377-2334-4975-873b-d8f140e8aee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c04443-8578-46d8-83e5-e3cd09940da3",
        "cursor": {
          "ref": "23fc3000-fb74-40fd-bb1d-c747b98aa79d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9de4f4be-5bc0-4427-9b8a-43d2179b4008"
        },
        "item": {
          "id": "f3c04443-8578-46d8-83e5-e3cd09940da3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c9fd56c0-451b-463f-8cf3-746fdbba6ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380b7550-df31-47be-a855-092f13696c4c",
        "cursor": {
          "ref": "bc774d9e-5a5a-4bab-a5c5-e1cf11273f13",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f00ff0a0-b7a2-48d9-9b02-50d7d2582acb"
        },
        "item": {
          "id": "380b7550-df31-47be-a855-092f13696c4c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0c314826-f782-4528-8e07-9fada4cc1476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f518cb9-c2c9-433f-8a74-3327bd4090b6",
        "cursor": {
          "ref": "b896424d-0094-4329-b9d5-cfec00a31bde",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5b18ef95-3b6b-48f7-8a37-87c4f10325ea"
        },
        "item": {
          "id": "4f518cb9-c2c9-433f-8a74-3327bd4090b6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b3459ab0-ed16-48b0-96f3-083b84ce6f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d57cfc7-2f62-4f9b-bd65-86cc27e0d4c6",
        "cursor": {
          "ref": "f087c553-7e72-40d0-83dc-099a4cf66c18",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "960d750b-7788-4153-b8b5-2c331a7156bf"
        },
        "item": {
          "id": "9d57cfc7-2f62-4f9b-bd65-86cc27e0d4c6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9c294951-7cf0-42b7-81e7-a31c42f7c7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5432fc-901f-4da4-9fe4-07fa9e867685",
        "cursor": {
          "ref": "95e8cce5-4023-4588-bc5a-6face8a4ee11",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8bb848d0-1882-4389-800c-2404c779924d"
        },
        "item": {
          "id": "bc5432fc-901f-4da4-9fe4-07fa9e867685",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9eb9c9a9-da77-4124-8975-15f3d3ef5541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4df426-c2c2-4b89-bb5a-8e1767954200",
        "cursor": {
          "ref": "c5bd0835-806d-4a8e-a192-40e52abb2e5c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "df5e8e1a-9e24-4e41-a2fb-1c6d72cd5aca"
        },
        "item": {
          "id": "4e4df426-c2c2-4b89-bb5a-8e1767954200",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "529a47ae-ea42-449e-b42b-0ff95a4f7d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ef8a07-52fc-4a75-ade7-c4b741eef440",
        "cursor": {
          "ref": "ece921f1-0969-4876-acae-8f94f45b5e70",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7df2d43c-8464-4c51-9b9c-ec8951389ea1"
        },
        "item": {
          "id": "61ef8a07-52fc-4a75-ade7-c4b741eef440",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b99a9816-5829-4c64-a201-f5bf79396d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524509cf-4931-43f6-8b9f-63d51347edef",
        "cursor": {
          "ref": "66236730-f23a-4787-9c46-a0e0bcff5c1b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "480c8b79-65fd-4e1c-8cd4-6ee0f9cf8401"
        },
        "item": {
          "id": "524509cf-4931-43f6-8b9f-63d51347edef",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b10d33bc-0afa-4ecd-89a3-1ceac971e54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c16e35-dde0-4699-a056-1e80a5bcf5a9",
        "cursor": {
          "ref": "b50b080c-0a00-4a35-a22c-58cf7de6ff57",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d781596b-b026-45fb-a538-f760df329a84"
        },
        "item": {
          "id": "b9c16e35-dde0-4699-a056-1e80a5bcf5a9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "90a7cab4-d7f2-483a-862d-6c592bf38a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4971fe6-f452-40a8-a05e-6ff8bd0ee2da",
        "cursor": {
          "ref": "2b4ae884-0f25-41eb-a1ff-72ec06742aaa",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dec454a6-95d7-47c8-9dad-8f2464559125"
        },
        "item": {
          "id": "c4971fe6-f452-40a8-a05e-6ff8bd0ee2da",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bae4d19c-341c-4fde-9d8b-65bd9ccb67b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b222b96-90f9-4849-b2bd-9f0303e82504",
        "cursor": {
          "ref": "3c7118bf-e4f5-4ca5-a7bd-234dff404dc4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bbf8f55a-f92b-4b51-a4b3-a96f390286c5"
        },
        "item": {
          "id": "7b222b96-90f9-4849-b2bd-9f0303e82504",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7aca24dd-30b1-4207-a1eb-4e46a84975f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490bffdd-dec2-4fba-8820-5a10e8202175",
        "cursor": {
          "ref": "3c8575f3-33f7-4e7d-a4ad-4543c49ba2f4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "15c558d2-ade8-4f52-8c65-2d45a580ef06"
        },
        "item": {
          "id": "490bffdd-dec2-4fba-8820-5a10e8202175",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8f2b9841-ef24-40f7-b2ea-70dd2c2c77c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df229b1a-ae76-4463-8440-92b8c0055dba",
        "cursor": {
          "ref": "3fddad72-7154-48f9-99c4-ea88d6522b37",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e2b0ac2d-89a9-45b5-8e9e-152686d9bd44"
        },
        "item": {
          "id": "df229b1a-ae76-4463-8440-92b8c0055dba",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "efbaf099-a990-4852-886f-7f67251a4980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2a9bcf-3382-45a6-a942-9d5566303bcd",
        "cursor": {
          "ref": "aa1da9cc-99af-4fc7-bd47-d9c59e62f787",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "04b331b6-b0cd-4dac-bf7f-6a3fb211abf5"
        },
        "item": {
          "id": "1d2a9bcf-3382-45a6-a942-9d5566303bcd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8f7e83cf-a4c5-4acb-90a0-99926af59c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdb6bf7-54b8-4744-b350-86902bd37abf",
        "cursor": {
          "ref": "7e0ab0e1-eadf-4eee-b1d8-140dc98890e0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "25ddfead-5a0d-4798-bc22-6d6f8ed7aada"
        },
        "item": {
          "id": "fcdb6bf7-54b8-4744-b350-86902bd37abf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9882a29f-91b0-472c-b23f-355d6988b72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c944ad-32dd-464d-8acb-e367b84b3acd",
        "cursor": {
          "ref": "25daa51b-e9cf-440d-a39d-f6d87215eaf0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b89b8476-ef50-48e5-b57e-def36f3d5a10"
        },
        "item": {
          "id": "a9c944ad-32dd-464d-8acb-e367b84b3acd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f5a0eaa0-73be-4e97-8ebf-d4ea51753d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ba86f3-a80d-4b4d-af69-ea6f04a352b2",
        "cursor": {
          "ref": "7635d3d8-c4e9-48b1-a4b0-f620342fccf4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f2504509-5915-4b79-b271-b3be54f3a12c"
        },
        "item": {
          "id": "02ba86f3-a80d-4b4d-af69-ea6f04a352b2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c5747abb-33b0-4554-8b21-fd8a654898c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f89966-949e-4213-aa16-37a9d0744c2a",
        "cursor": {
          "ref": "3b19abaf-327c-46b0-8e85-b679c841b010",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "da047d27-4758-43b5-8237-962f65f1d8ce"
        },
        "item": {
          "id": "a6f89966-949e-4213-aa16-37a9d0744c2a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "58605745-4f52-48c0-ae1c-d1308786d4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2759ba-afed-4465-a09c-ddb54224c913",
        "cursor": {
          "ref": "6062077e-ee2a-4ab3-ab6b-b8cd3d0102f3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e522a026-f153-4bfa-8784-ee9ef490adcc"
        },
        "item": {
          "id": "0a2759ba-afed-4465-a09c-ddb54224c913",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "77652906-f881-4ab5-95ac-d776e11d3fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c893d86d-357c-4067-9a5a-6478b040e472",
        "cursor": {
          "ref": "81eb8e15-9644-4d03-a0d4-a06acaa96187",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8f24af4f-6751-4a78-998b-b108f47d96e6"
        },
        "item": {
          "id": "c893d86d-357c-4067-9a5a-6478b040e472",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6598a106-9ef7-428a-b042-2a8298152f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bce008-fca0-4901-a9fb-b6a96fef1202",
        "cursor": {
          "ref": "9840e85c-1299-44ae-9a2b-a353cfe1042c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0595f80d-42e0-41d7-8997-e8a02563e092"
        },
        "item": {
          "id": "63bce008-fca0-4901-a9fb-b6a96fef1202",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ae3c3c93-5aea-4231-9f4a-0dc912bc6b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da037b9-d4c8-46ed-8d81-33f00a9fafb0",
        "cursor": {
          "ref": "4c86bd63-8601-4d8e-97fa-c11c146a6ce2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d1f09b49-ee99-4daa-b61e-8e17b58db748"
        },
        "item": {
          "id": "2da037b9-d4c8-46ed-8d81-33f00a9fafb0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2dd1fd99-7b23-4fda-9729-b5e5a46507d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8a997e-d278-4ef1-a54b-603e3af945ff",
        "cursor": {
          "ref": "bb13bf4b-1ce2-4604-931a-b7aa361b3870",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b438dabe-f2f2-47ed-852e-9e2666a7850f"
        },
        "item": {
          "id": "1f8a997e-d278-4ef1-a54b-603e3af945ff",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6a085010-ba5d-4475-bd83-d82c4a91933d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fffd15-3b53-45a5-8c1e-7b3dcb21f309",
        "cursor": {
          "ref": "3dc7fed8-0deb-4cfb-a591-7d261b5569d3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ff07bca6-3cd1-41e0-8320-f1938567d8c0"
        },
        "item": {
          "id": "45fffd15-3b53-45a5-8c1e-7b3dcb21f309",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7c7beca7-a77a-4d8d-97b2-6fdc8e39c1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29132624-a8db-4143-b40c-227cffa3f4e4",
        "cursor": {
          "ref": "5dd30fa6-87a9-4637-82af-7f1141316e5d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ca9a2eb2-9964-4d7b-8389-c62f8c88b5c8"
        },
        "item": {
          "id": "29132624-a8db-4143-b40c-227cffa3f4e4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "68375104-779d-4002-a58d-f810b48f8386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5ea934-eb08-4189-a7e9-f0156d36ff1a",
        "cursor": {
          "ref": "3d20609d-4b24-4b8b-ac63-af03f16db930",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8ed08f62-e359-4afe-bb65-8c160c32d0d7"
        },
        "item": {
          "id": "1a5ea934-eb08-4189-a7e9-f0156d36ff1a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b84ea687-8b5f-439c-b940-51b6e13b3b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de225f6-5db2-4d79-94e7-d6cdb4cc6e23",
        "cursor": {
          "ref": "2fee428a-4e22-4526-9389-dc6009d141c1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "49801fea-6ef9-4575-be94-512906c4f3b6"
        },
        "item": {
          "id": "8de225f6-5db2-4d79-94e7-d6cdb4cc6e23",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4b0ecbad-ff51-48c0-8629-9b22b93145e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8706bff8-c4f8-4a7b-b269-d0c7d760affd",
        "cursor": {
          "ref": "a3f18b18-0f54-41ed-bb17-ab4ec16b7714",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a41727be-3223-4b54-b87f-6ae3d4364fda"
        },
        "item": {
          "id": "8706bff8-c4f8-4a7b-b269-d0c7d760affd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fca5e1ac-faea-4119-9837-d55be95f3041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1009fc-9bc9-4635-8db0-c8c2cedae1a9",
        "cursor": {
          "ref": "d6101c6e-bdd5-4dcf-82f8-360501ef391e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "40ebea74-e5d5-4396-9903-479a56adf317"
        },
        "item": {
          "id": "2a1009fc-9bc9-4635-8db0-c8c2cedae1a9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "477e7a7a-ea7f-4976-b136-35bf4dfffd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcd6ca3-b672-4662-8e65-a5eeb12694fb",
        "cursor": {
          "ref": "447396e6-416c-4b9c-bf82-dce9c4ed5288",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "007569c7-6720-4d69-ab87-660f5a61af5e"
        },
        "item": {
          "id": "fbcd6ca3-b672-4662-8e65-a5eeb12694fb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "08cb0a52-dbb6-40cc-9305-02c4f2251807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0d08d0-2a1f-4dec-9c86-cade097420bc",
        "cursor": {
          "ref": "700c7eb6-dc7c-4569-9164-6596ff023a16",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f87c6a8d-d0c2-4519-9ed6-fdf802c1753b"
        },
        "item": {
          "id": "bb0d08d0-2a1f-4dec-9c86-cade097420bc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "30b10fec-eeba-4a5e-a8c0-62c092e621ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeb99f1-f3a3-497a-8094-3b40b77856ee",
        "cursor": {
          "ref": "f8aeeb37-d77d-4832-adb6-c742bfd79f46",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c903445f-7ca0-47f0-bdbe-94b7217b8e70"
        },
        "item": {
          "id": "ceeb99f1-f3a3-497a-8094-3b40b77856ee",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b21bdb6c-92d4-42e3-ae60-234a2b7bbf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57fec8-5d79-4f52-b820-cdcee1dac8fb",
        "cursor": {
          "ref": "814f1850-f961-4354-8148-9e1b39daa4bd",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f6765288-a8fc-467a-b6b0-7577284fce53"
        },
        "item": {
          "id": "7d57fec8-5d79-4f52-b820-cdcee1dac8fb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f0da5d14-fe7a-4d0e-8d5a-ce45e167cfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8a0541-9408-4902-b8aa-c6a7f9464913",
        "cursor": {
          "ref": "71d7e4d4-7013-479b-ac59-e70df34c9a3d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "91b21026-3781-48de-bb4f-afe22c9574b0"
        },
        "item": {
          "id": "8b8a0541-9408-4902-b8aa-c6a7f9464913",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fa045596-9e02-4fe5-80b9-bc0b41a8b8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2d4d22-5193-4c08-9f4b-173117150ec6",
        "cursor": {
          "ref": "52779f18-ad62-44ed-948c-3c076d088ace",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0c23a8ca-7b6c-4917-a975-395726521dfe"
        },
        "item": {
          "id": "0c2d4d22-5193-4c08-9f4b-173117150ec6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "99df4fd0-f62b-4c14-9c53-77cab453312b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d186d221-1a7f-43d7-bb21-69467fb91cfb",
        "cursor": {
          "ref": "e66fccf9-1af2-4026-a69b-0e0b26df3ffd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "721345d1-311a-4293-a8cc-553f540b5de3"
        },
        "item": {
          "id": "d186d221-1a7f-43d7-bb21-69467fb91cfb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c8477053-53e0-414b-9b03-7f65d1b725b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad98024-87ff-4777-925e-d1f8af5200b7",
        "cursor": {
          "ref": "4971bc97-6ba9-49fa-b35c-8c812724c45e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9dc0af0d-6168-4925-ab20-2092089400a0"
        },
        "item": {
          "id": "7ad98024-87ff-4777-925e-d1f8af5200b7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dc317550-6215-48fb-a9cc-be02e434f656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300685eb-6793-4b90-aa5d-9595d822bb50",
        "cursor": {
          "ref": "a3da6741-6454-480b-bad7-5334e8a4ab17",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d88f158f-8d18-4c09-939b-50a9fdc9cf95"
        },
        "item": {
          "id": "300685eb-6793-4b90-aa5d-9595d822bb50",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "09b0eaaf-058e-4a94-9736-b0732c9d0076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a51b3d-7acc-4554-ac1d-307079cf7d93",
        "cursor": {
          "ref": "57873ca7-1cbd-4fee-b49f-fefdb8a381a2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fc43dbf2-1cdd-4c2d-affc-5a4798a7137a"
        },
        "item": {
          "id": "47a51b3d-7acc-4554-ac1d-307079cf7d93",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8bd33289-2280-4b88-91e3-d7db9ea66468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d86055-46ea-49a3-b0cf-4ca9188041c1",
        "cursor": {
          "ref": "3c3cc111-2156-49fc-89c1-18be5d14ea13",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8f5d6c6d-27be-4958-8507-f6e0339a4822"
        },
        "item": {
          "id": "85d86055-46ea-49a3-b0cf-4ca9188041c1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4bc4adad-2060-405b-89eb-3d555766bbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0068b01-a319-4972-b073-05df84bcddd9",
        "cursor": {
          "ref": "d12e4ad4-212f-4b37-b2dc-14807eda1d5e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "01adab8d-ca05-4878-bf38-5571f4841caa"
        },
        "item": {
          "id": "c0068b01-a319-4972-b073-05df84bcddd9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4db4be77-1654-424e-a5cc-026e3191557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1208fa1c-2178-415b-be9b-0e73f9739608",
        "cursor": {
          "ref": "76129b12-c0ed-4d74-8966-013110f6c3ca",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "723e6025-36b0-4419-a937-b72f67b09147"
        },
        "item": {
          "id": "1208fa1c-2178-415b-be9b-0e73f9739608",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "89190762-0180-4ddf-996d-3bd1007d6ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb2b2de-7368-4a57-8141-ebc02d6e009f",
        "cursor": {
          "ref": "2e19960b-7385-4f8a-9418-fde27cf21082",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a4b971a3-326b-4180-8ac1-acea6bceecdb"
        },
        "item": {
          "id": "aeb2b2de-7368-4a57-8141-ebc02d6e009f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b384de5d-d6f0-4f79-9097-10b63d8b3975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead9a79f-6ccb-4db6-8bb2-ab6c85581680",
        "cursor": {
          "ref": "8791d3e0-4406-4b27-8f37-720fcf5faa75",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "967daa7c-c001-4e82-8e40-52df42449654"
        },
        "item": {
          "id": "ead9a79f-6ccb-4db6-8bb2-ab6c85581680",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5191e8ac-8336-47f8-a1b5-6f0d6443c848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6230ca-0e6a-4885-93e5-d48ba0040b26",
        "cursor": {
          "ref": "e9d5440c-c9fe-4ffc-b84c-50e79b284990",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1cf450da-9dbf-4ae4-b018-6725018d57ff"
        },
        "item": {
          "id": "8c6230ca-0e6a-4885-93e5-d48ba0040b26",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "49de52cc-e4ac-43b1-ad8d-e37c8ba183da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f31cd82-a6b3-4a50-a68b-efc8d2fb3507",
        "cursor": {
          "ref": "98006ffc-6a1c-4596-9d8d-cc9046222746",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f3cb62b4-7d7b-470c-bf2f-90755ee8c655"
        },
        "item": {
          "id": "7f31cd82-a6b3-4a50-a68b-efc8d2fb3507",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b5c0f0cb-3ecf-4273-9740-fd92ab331a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489c8f0b-5f25-45f7-8eaf-ed4fd1045797",
        "cursor": {
          "ref": "773cb975-79e1-402f-9e99-23f71473390d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "669f7b73-b387-4553-a4ae-bf3cd296af48"
        },
        "item": {
          "id": "489c8f0b-5f25-45f7-8eaf-ed4fd1045797",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "09c4d9d7-7a3c-4aef-abc5-2e2c113d7ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cf5650-3b4f-44d9-885d-a782e846e5f1",
        "cursor": {
          "ref": "303b2cf6-3d0a-4628-9e3c-ec2661d75b66",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "537c34e7-3e22-4d59-b94f-e75bf2e57850"
        },
        "item": {
          "id": "97cf5650-3b4f-44d9-885d-a782e846e5f1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4ffd6c03-1b4c-4eeb-b5b2-9a212b30ec55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7c3061-7bba-4bbb-97f3-f70942dbd4de",
        "cursor": {
          "ref": "cfcfff7a-c34d-4f9b-b4bb-ea309ac6be4d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0db4c150-de16-44d4-8c26-669161467f03"
        },
        "item": {
          "id": "8d7c3061-7bba-4bbb-97f3-f70942dbd4de",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3dbd835b-71ae-44fa-8b1f-757bc41c20cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f92187-2ecc-4e97-8e15-299080c0d37f",
        "cursor": {
          "ref": "299486d5-2ef2-4aed-9655-e55e8617f376",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a70a13e3-7ea2-40c2-82b6-e5c48fa51a9a"
        },
        "item": {
          "id": "e4f92187-2ecc-4e97-8e15-299080c0d37f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "69a0eda0-6734-4835-b236-017adadf7047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115d8179-8d6c-4303-a651-e07d406b352e",
        "cursor": {
          "ref": "5468637e-54c4-4fa7-97aa-9e27fbb17e8a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "62c1c71f-19a5-4be2-805c-73973a890638"
        },
        "item": {
          "id": "115d8179-8d6c-4303-a651-e07d406b352e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "263bddc3-e2d1-42e0-886b-10dacd335277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fe4f86-0efe-4741-9fdc-fd1d74da9d65",
        "cursor": {
          "ref": "7ce5b9b5-3d2a-405d-a9e6-9cc4c5c89e3d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bf410868-5636-495d-a1aa-5ecb6677cb93"
        },
        "item": {
          "id": "d9fe4f86-0efe-4741-9fdc-fd1d74da9d65",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "763813a6-59c6-4330-88ba-56fe70fc9613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122171dd-583f-402d-ba45-3de32f52b657",
        "cursor": {
          "ref": "6fe1e952-cbf2-4a04-b4e6-3639722bac6e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9d9fc5e2-8a38-47d4-b933-eaeedddd0383"
        },
        "item": {
          "id": "122171dd-583f-402d-ba45-3de32f52b657",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3025a1f8-f417-40b3-a3ad-b0dd7edc8955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498d5bc5-786e-453a-8337-da49a1c053e7",
        "cursor": {
          "ref": "f7e85f42-0bf0-426b-9fa5-5fa88cb1c749",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "610b3c48-4edc-4775-97f7-69709d4ee553"
        },
        "item": {
          "id": "498d5bc5-786e-453a-8337-da49a1c053e7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "07f1f432-5f3e-4c35-b5a6-86b97e7b25c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33d8679-aa0c-462a-9461-ce2876d1b3e1",
        "cursor": {
          "ref": "5ddec0cf-4f0e-4fcc-8b36-38a6f9aede87",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7af0eeca-0bee-4748-b618-2c73da8fe085"
        },
        "item": {
          "id": "a33d8679-aa0c-462a-9461-ce2876d1b3e1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c42d5382-9389-48b3-b40a-abb727046372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa897d3-1364-4644-b676-e8dd412918d1",
        "cursor": {
          "ref": "3e7c5366-5ae6-4430-b4a2-93cfffe311f2",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1dec3f75-8dd0-4d67-aa93-53d8d22aeb21"
        },
        "item": {
          "id": "baa897d3-1364-4644-b676-e8dd412918d1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3c77af3c-4c20-4de5-8f32-871ef176ccdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17d5f17-f9bc-4ceb-999a-60ed4f476d7b",
        "cursor": {
          "ref": "74f8f22c-5a99-4e5a-99fe-29bfe5111d66",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d5c211ca-b1c5-47c5-a495-ff81f9524346"
        },
        "item": {
          "id": "d17d5f17-f9bc-4ceb-999a-60ed4f476d7b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1e9bba70-c5a7-4a98-b534-e0ecb9a19a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9765ea5f-ad73-4466-904d-5584d5c2f973",
        "cursor": {
          "ref": "9525b3fe-1d81-44ba-9969-ce81ec5534f1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "53c292ac-5382-4c1c-8049-8a9dde31fd86"
        },
        "item": {
          "id": "9765ea5f-ad73-4466-904d-5584d5c2f973",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dd5422c1-bc7e-4a49-989b-288e111646e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e877e9-96f4-4e33-b234-aed9519ee634",
        "cursor": {
          "ref": "e7720731-fb48-4772-8b22-940d1ede55ce",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f1dd4a48-0fcc-410e-99e8-52383e763f5e"
        },
        "item": {
          "id": "f9e877e9-96f4-4e33-b234-aed9519ee634",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9a340e32-d47a-43f2-83e6-df96d488a484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23ed3e0-50c5-45b6-9fa2-7fe2dc41b0fd",
        "cursor": {
          "ref": "eee299d2-4972-4d2b-a99a-70c5dd0c43ae",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d85a1727-76cc-43f9-9070-7897ef95ae54"
        },
        "item": {
          "id": "a23ed3e0-50c5-45b6-9fa2-7fe2dc41b0fd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f9e1bced-cf92-4a91-99d5-9e213071db0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760a07a9-e2b5-40f7-8797-8857ceb7bf2e",
        "cursor": {
          "ref": "61abad57-6916-412a-a5b5-e6c8de92b7b0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3f937765-e8ff-412c-9031-9ad666cd44ab"
        },
        "item": {
          "id": "760a07a9-e2b5-40f7-8797-8857ceb7bf2e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8537d1f0-8fbf-485b-b554-3e82f338d895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d6ae0f-506b-4d9d-ac6d-49cc42d2b654",
        "cursor": {
          "ref": "aaeae055-d029-477d-85e6-9b0092f32835",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3f400222-4b11-4c04-bbc8-a1fce5082fe2"
        },
        "item": {
          "id": "99d6ae0f-506b-4d9d-ac6d-49cc42d2b654",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "72d48ef9-b1c0-4537-8292-c4113e2919f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d4d39f-3f8e-4a52-9c5a-a5098c5651c2",
        "cursor": {
          "ref": "26e1d362-282a-4e20-9801-3ce2b841bce0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4f39cba2-2482-4833-a2a6-a0df6ab4a5a1"
        },
        "item": {
          "id": "41d4d39f-3f8e-4a52-9c5a-a5098c5651c2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a503dd81-3149-47ef-9bc8-060f94a41911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b6be96-8739-4356-b7c0-64d369d38229",
        "cursor": {
          "ref": "a574cb9e-69fd-4e94-ab7a-d8daada9e6dc",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fce0f019-deab-453d-ae31-328d62c4cd9e"
        },
        "item": {
          "id": "f2b6be96-8739-4356-b7c0-64d369d38229",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f5721046-3e8f-486b-8391-20c7c3d74f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bda374e-a014-4a3b-a7f1-5a86fd71dac0",
        "cursor": {
          "ref": "0aade837-877e-418f-84a2-0090b855c247",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9935f1c0-6c96-4f08-8c09-3673138b1727"
        },
        "item": {
          "id": "0bda374e-a014-4a3b-a7f1-5a86fd71dac0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0300efc6-9819-4292-9c86-d163869f247e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4b0e2-1c49-4390-9c00-ae7029d516b0",
        "cursor": {
          "ref": "7f765dde-4a5a-4fd2-bd9a-30362684f81e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "16046c2c-57b3-4454-98a0-16379b6ee7cf"
        },
        "item": {
          "id": "5bc4b0e2-1c49-4390-9c00-ae7029d516b0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7cdb6e93-ed5d-4d9d-adc8-b25f1b980934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c67ecf7-cd5a-4b17-95dc-9de133371695",
        "cursor": {
          "ref": "807e3bfe-e5f7-41df-810e-832bbaeda0e8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5e81cc08-1557-47b6-babf-38aa88b0bfb5"
        },
        "item": {
          "id": "0c67ecf7-cd5a-4b17-95dc-9de133371695",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "21b730a8-7958-464d-ae7f-774fbf4db172",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded0e047-0058-4ac1-bb87-82091b7f4f58",
        "cursor": {
          "ref": "2e8747c0-152b-40e9-af4d-4b89effd6961",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "aa0d4292-0457-4073-84be-c028e2d337be"
        },
        "item": {
          "id": "ded0e047-0058-4ac1-bb87-82091b7f4f58",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9ed7f252-ff08-41c2-a8c7-6c1bfd36a044",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "676da676-0911-4094-be8e-9e33289dd9b3",
        "cursor": {
          "ref": "30cff7e3-f816-4229-a30e-b41eaf9ae01a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7ead3522-1fee-49ee-8462-d7fb61b3ce95"
        },
        "item": {
          "id": "676da676-0911-4094-be8e-9e33289dd9b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "faeaea26-c246-4684-a80e-3bd50efda8e6",
          "status": "OK",
          "code": 200,
          "responseTime": 3405,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45a4369-bbfb-49f6-9192-741bd8aed1c8",
        "cursor": {
          "ref": "4cb4829e-4657-400d-85df-c2d9c9401995",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "80b9d029-4c0a-4ffc-9d5a-8c898942cbde"
        },
        "item": {
          "id": "d45a4369-bbfb-49f6-9192-741bd8aed1c8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "396aa34c-1254-4783-b583-5e1abde9c0ff",
          "status": "OK",
          "code": 200,
          "responseTime": 1884,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e006203-18ec-4a5b-a31a-aca8eca1ec87",
        "cursor": {
          "ref": "7eb4ae26-e4cd-4272-b0ec-7dd29d15d838",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "af0ed268-85c9-4306-a93f-c9a7ef5b8a77"
        },
        "item": {
          "id": "4e006203-18ec-4a5b-a31a-aca8eca1ec87",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd3b39db-54f0-4606-be98-dee1010318af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e006203-18ec-4a5b-a31a-aca8eca1ec87",
        "cursor": {
          "ref": "7eb4ae26-e4cd-4272-b0ec-7dd29d15d838",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "af0ed268-85c9-4306-a93f-c9a7ef5b8a77"
        },
        "item": {
          "id": "4e006203-18ec-4a5b-a31a-aca8eca1ec87",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd3b39db-54f0-4606-be98-dee1010318af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc61e92e-6e77-43d9-9057-5d548460ec0f",
        "cursor": {
          "ref": "6dfa58e3-6012-406b-97b1-2abf0cdfb7be",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "66c08ce7-608c-4b3f-8e91-39a359a945a8"
        },
        "item": {
          "id": "bc61e92e-6e77-43d9-9057-5d548460ec0f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1234bde3-44f1-48c0-af48-7e71bb3a1978",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554f02d0-d857-425e-b28e-918d44e6701d",
        "cursor": {
          "ref": "59ff2b83-4019-4c16-bc9e-d49786e375b9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "06e72113-b598-4f61-afc5-3b894fe01e49"
        },
        "item": {
          "id": "554f02d0-d857-425e-b28e-918d44e6701d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f9a2b8b1-4b10-44ad-b1b7-15346794aca4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}