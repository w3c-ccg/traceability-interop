{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f25abb94-3526-4a7b-9fec-31cd584f93da",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f3726359-3d74-46c1-b8ff-6ac5d4d7352a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb20a8bf-57b3-4051-928c-b8b6f4a466d3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f50177db-b9cd-47dc-b1f5-2d43c022daae"
                }
              }
            ]
          },
          {
            "id": "26f865c2-f53a-4147-ac2a-ee1fa640ca73",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "381154a8-9e6f-4d52-8c1b-da1b9493f6b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b5a57d59-65ba-4bcc-bb55-2c53d272b91e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f35792ab-a9c8-412e-af86-cd6c59d8b8bf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f2c56f25-4703-406d-abb7-add8a51f5fa7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e8e0868-ccf9-40e0-aea1-623a7b7d0971",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b39a4e74-299a-42a6-ab1e-ed62bb107d9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00ad5ec8-b801-4140-968c-f6430dee6196"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f0566e7-4b7b-40d2-b438-6c8b14119628",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9dc0fe7e-c972-4c24-86df-1b54c7b0152d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "870bef1e-593f-452a-9bb1-736fe56d114d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fea32676-696a-42dd-8c6e-58764320eb6c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db13dd91-dfa7-41e4-89fa-cd949223e3d0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f41a03b4-76bb-4f99-8d10-365cff4430e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c2715dd-bf1e-4347-9dba-4bb4113880f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c5b2d4b-4a4f-4d38-b5be-cf35be07babf"
            }
          }
        ]
      },
      {
        "id": "51868af2-6124-4b08-b6fb-179336a52981",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e5acab2c-b9a3-4af1-9612-0a6b4c5424ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61c83552-9cdd-497d-b4a4-cf6ce24d4628",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "807b787b-299a-4223-87af-c47f2070f949",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20b19d2-1322-4f35-b4ae-d1ef61326134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "339cc23f-ea57-40ac-b045-8bea6d74be66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8718c183-288c-4511-bb81-fc40f4b6dc8a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8e7dac-5ee1-4829-82a2-4fbe882a0edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74dd0f96-188c-4569-aea8-409e80a61fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbace4b1-e397-4cf1-a15a-303e1dce510a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1fe23e-c385-4a23-88d1-4257cdb8d673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f8860e5-d323-41db-97c1-fa413e6fe251"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5fdf98f-d0d2-4b90-8c88-969e613d0aaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "203da8e0-5250-4ae5-a157-963e59a0a030",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60231ef-b3e1-4ce2-996d-5c108e7e6cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cec5eb7-d0a8-4f68-bc02-6300be746dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d7e732-f650-4fa8-b455-73b309e9afab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01aa4fe-3061-4e5f-a0a1-457e7d0f0137"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dbb680a9-08c9-4900-8b2c-d1caf346a8d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "008eaf81-fabe-4a85-b718-f7faa96bb364",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bbff929-1faf-4c83-974c-59e2e7921e96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a7ef5d42-2d8b-41f5-bc7a-d5a2ada622c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aecccf4a-6bcf-4d29-a4d3-515afb96dec6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d1722826-caef-41fb-bd09-676e9794799f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c63d687-f679-47a5-9d5c-a9c83fecc2dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c308ce36-f79a-448e-a68d-c08e0170bd49"
            }
          }
        ]
      },
      {
        "id": "78913ccc-192a-4777-8941-3e5f22de096f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9b0106f1-b085-4148-93a5-8036ad458a61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0f556ad-be78-4a3c-aa52-fd67894be28c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9bc3fc53-5e71-413a-92ff-fda4c97ffa64",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2496bf8-bd54-48a1-8de8-870495e4fa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f101f2-8c2b-4512-bab6-84edd1e2913e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e150a8c-91a1-4a26-9d16-39dd6cc4f349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e964d97-11b5-4aa9-a541-15bcdb10129a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc17fec-e80e-4eef-95ba-b54950c0d9cb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a5f456-e2fb-479d-ad33-2c89d3891d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f552198-df96-4410-95c7-55e5774d50da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6c758c-7b27-4e18-9583-a6d9cd70c8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24fffc5a-7e71-452e-8afa-1d2a951db0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c432b8-878c-407e-a97a-a03ef1ee9c0a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94502a26-cfb7-4e53-b262-a1bb0d2c7d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a51e57-6d53-497b-be70-6c952a5f406e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4accc2-f5c7-4faa-bfe2-916f026a1459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40355da7-025c-4a4f-be9d-fa6756e6b1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cca0026-d37d-4736-ad11-ad4889e2087b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1e6d4c-fc88-45a0-8d5e-04d268bd4c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028bf379-61d7-44be-bdeb-2ed6bc077462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500b4870-1318-4e46-b9cb-ecdc74c34bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88259eb3-e3ea-4b31-b877-2a51dc93f5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7a61f0-465c-4312-a4c4-a57d4f868a1d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24681038-37be-45a1-9350-7cab3e5419dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39b2067-55a7-4714-8a0a-564bd77955b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a62512-8430-481b-98a5-f33c3db3febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caa5c54d-99d1-4eda-a98d-e1cc1e3701d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b87fd4-d34a-4174-bf28-54570656734a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bca94c9-b644-472a-b38f-673f0d5928e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7aba360-7e7b-47ac-9e3c-5a0abce22d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fce47f-5888-48ac-82c8-543bb002a361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "883e5814-8e22-45fe-9615-d64792462789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5a6e40-d130-49de-ba6c-646aa624d027",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b48588-e83d-49df-9ae8-9be34685653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615653ce-cc4b-4b9d-8b02-ea11b720d7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e11289-7a72-4201-bcc9-9e95b2d54062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df7aae5b-4ed9-4794-8126-cf20d737409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c255f20-536e-4b09-b18e-424a77da1b52",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce306045-d7c8-41ea-999b-f0849778550a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf29dd0-9bbd-479f-b799-227e5e4aec87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6044afed-e158-4bdc-8c80-148be701a9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8871816-2921-48b2-ad41-a79608b2f613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845516a8-70e9-4c51-9249-b8c9db5597f5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd2b6a5-7c99-4748-be62-906c747e31f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbe776b-b9dc-45b8-b97f-b792062b801a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4726849-1232-4eb3-b2c9-c40bd4f1124f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46544af1-f970-4568-9dd8-f405f8ca9e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4c976b-4ec9-4fdd-9ece-f479683d4c57",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9b2891-2c94-444b-b0b0-7cdf4d817839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b52bc53-0f44-4320-bafa-e1f31fdaf941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ae49fa-a3fc-4e85-b2fd-3e2a3de377a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dadbe2f-2ed6-426b-bd9c-1ea8fea7a0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ea61a2-d644-4e1f-aa12-f25d8c338708",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88441d03-4456-40a0-b9bd-82e332b73d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363d2518-fcb3-457a-a286-f83086d09ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9586a498-1dfe-4120-9d45-f5d74414ae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb55103f-7501-4e4c-b5b1-bbf96f38eafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1b74b7-6884-4b24-aa91-804a3bc497b6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce76373-c379-481c-87d2-0344150bb01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a9c3bf-de3a-4c09-bc8f-1aa9f84b716e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ad4245-b47f-4a07-bccc-1290a3d95b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee117b98-fb86-4008-8a2b-98ff6c4f6c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5c2ca4-bd35-47bc-83cb-88004af241f9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3ca130-26c0-4e12-98f2-61db3c0253ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7f7466-30b4-4054-b381-df81898c7cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f84665c-8e6e-42da-b593-2df02cd7ab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc54a63e-adfb-4593-866a-2eced0869277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304989c6-cd14-4708-b29a-ea91994101ba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a44631-8bb4-4587-9f0d-3ff5603bd788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b03685-ebe7-434e-a621-0458463eb258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4b364d-a970-4aa6-ab02-549844a20a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24b29219-6af0-440f-91ca-ff25b0d5c10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc86b19-b9b7-4d86-81fb-faffdd614f88",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791aa47c-5f9e-4d75-ba1d-98e7a7e2e711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90127c35-902a-447d-bc27-7b0d2c675cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afd23c5-4900-4515-b919-284c0d3d6482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00214d82-d4db-4c65-b4b7-1729c8383232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a74f13-9cc7-4a24-86b5-da690d29056c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16f713f-963c-47e0-b891-73d6ad8eb34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8792e8-9f32-4434-9093-414cf6223826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a508f1dc-02af-45c1-8758-f53141225965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bba84ca2-1e08-4fbb-abb8-cf09443e133e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24531fcf-76ae-4835-a304-514d07571726",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeabf13-168c-418a-8dd0-c066597c0551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca98582-03bd-4b1e-a5d2-eff0df8beff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dac07cf-ec32-47a5-8bae-6a474706b6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ded6d65-f02d-41de-b2db-c4609a832fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d39063-cd15-4167-bc66-2eeb777dd853",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9419ddf6-12de-4b62-b325-6e2b1586cbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896541c2-4f00-4a4d-b045-4ec12ed78dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68846158-410b-49f3-bef5-2109edb42bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3f3cb2-65c8-4842-bb71-8d407724d86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf680f48-c9f1-4880-b5cf-4aad30b8481d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208569ab-bcbf-435d-8b0d-7e6020d1e886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8704471-2293-4d09-87a0-a60877a389a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520e215d-db0b-4b69-b62d-18e0c000a4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e03b988-0aa3-4362-aa1b-47f6727a444b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689e028f-a1e7-4ed9-a535-db9b91f562c6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba55eac-1607-4cf2-9d1f-498a789869a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c030d2a-6c11-4078-9cd2-6fb47b5e059b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993ad985-36c5-4c2e-ba15-c99620acb52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abe53bb-1e0e-4543-a1ea-e92e3fc27bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d962e538-f76a-477b-9366-65302dbffe05",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fa0119-97c0-4be0-bdce-695146c63155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342f07bc-2cad-4dcb-8925-f0399a1ae15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121ac508-837f-4b8a-873d-0a6ebac8bf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0227f712-2096-489c-b32f-12bb56617f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed2754e-8a32-412e-a579-f7ee68cff256",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5172a0ad-0354-4add-9f45-4dd3310f7204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1887bf13-ba71-49ff-b771-f8f55fd5467a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d885c5-be71-403e-8837-2c3a1f2d1911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4387d41c-1468-4ee9-b9b9-88269bf8a59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006e6d28-5e6b-4774-9f5c-d5092efe3297",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117e6cf3-1af6-42ef-a522-13e6af0100e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddeddc70-7726-45a7-b346-a3b864c88122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8623603a-a4f4-47b0-bbdf-231c90155e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20dcab71-927b-4238-b354-1f25a2d45fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0d1790-8de8-4746-aba6-c04c75702249",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec7c300-51fc-4921-9593-7e1408f3b2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c319ab8-471f-4ff7-877c-bb996df1eb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259b915b-b7e7-456b-b2bf-010036be1fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5331e7-1687-4d60-9177-8aeb84c85ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75baa85-f802-4b85-b148-eb006c52ecdc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80fb9d3-15cf-4730-ad6c-664e3f7633ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba5ae11-51b4-442d-b4ea-35f3dda09aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf279fa-6d2c-4b5b-bd27-29cffd0cd4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae09100-ddaa-450f-8e82-9e685072c112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec6eca7-3e60-49cc-9dee-b0adce07f6ba",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b3a6df-7b14-4af5-8bc2-79391b7ed993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27a15c7-18e5-4ffc-97d6-2f1fc05a447f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3bf14a-64e8-46a6-95c0-75be618ff149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ad3c83-a298-418f-80f8-c54a8d7bd9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58329f2-bd4b-450b-b200-a2a6ef7923ba",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da4c9f0-2c62-4e0e-b9b9-c8cd94df4737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e405dd-583c-4517-b14a-dc737ea4f0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67333b7d-662d-4e68-b61f-bf3027bda01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "677b7493-e54b-426c-87cf-e3f3ff7e6f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7d18b7-7173-430d-99c9-ae14470783f1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f0a4a7-9dcc-46b6-91c4-5cdcd7b698a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51d873f-aae1-413b-94c8-1d99fd719a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf164f0-75f2-48d9-b1ad-d9a8050b13a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18bbc1ad-b1f8-4744-a4d0-2f3a6c2da1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3615420a-1f5a-4d91-bad8-f493c856a896",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c3eb39-16c9-43c4-970e-8987e18b28b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7d0fc3-3ca7-4a7c-91bb-fb260861be1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293dcb43-2e0c-4b7f-a745-9e799c3d56de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69bc83e9-b5c1-4776-ab1e-790e46c2da92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daab0f65-b81a-4e8b-895b-a322ef73c478",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd492334-73db-4863-bf84-b1ad66bd87fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624e3243-f06c-4573-97aa-a06daa44d834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4433c084-364c-444d-a4ce-bd2f5f21ee7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a18f0ce3-1fa6-4411-985c-3ca616d58002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a63d48b-f6ee-43d7-b8c6-10a5fa1335d0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aa6e86-8127-4f6e-b776-7068239fd667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02937fa-84ce-4318-808b-1364adb10e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed1bcee-71a7-43fa-ab2f-7563ab76412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce822c0-0416-4c95-8003-c9a35e387b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df822cc0-e4b0-4a09-8312-5398692973dd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5521050f-4ccb-4c8d-afd0-6209957fe5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc087705-0fc0-41ba-924d-03430d165e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5195d7-9d65-46ae-9094-95ceda9b0073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daee3e83-a553-4bcb-b0da-005d1e162271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f4c531-3376-4dd5-9fc3-583f472377ad",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7362ab-b8fb-45a1-8e93-dd502f01fd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f4a56f-806e-48d5-bb4b-aecd5acb7099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bd8316-92f5-4981-964a-a56ea54d0d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4d61a5-9c08-47d8-b4a9-21e3b2a21f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c876daf-d81b-4616-bd17-7ac18c478837",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76eb9b2b-57b8-41b0-84b5-067636fc5201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0f37bd-2aa5-44ec-a340-7248cca73b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eb7c88-21fe-4180-bf3a-59437bfe7cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a634bfa-ea21-4100-b845-f035a2d743ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5015ea20-d5b9-4011-97a2-161f1212bef0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f73f9e1-d04b-4ffb-b26c-9b90ca21c302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24c332d-5c62-47a7-ae22-228c78f561b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03346725-a788-478e-a500-0c98a78cebd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2d4374-0e54-4326-9f2b-91b2eab76b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf04f17-2a3f-48f8-9531-daa1365b3e1f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e13be1-b1b3-4adc-aceb-1283ffe99486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94f09c42-abf5-48c0-a594-6e916151fe4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5693ee-d520-42ad-beb5-78edddbed496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14808419-e004-413d-8a6c-41ce64e9395c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3695d8c-b537-49b2-b39a-e78c9bf6cad9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0485381-3c28-4592-9e3f-3a4e64ddf699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c5da00-3d71-4d59-9fee-5e6872f24567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ac3f82-aea2-4f17-b056-9586fd3bee20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acfd4bb6-fe22-4dad-962b-5c7c21d48fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9185bb-69de-478e-b52b-bfa6bf47e256",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db469c42-13b4-4f28-8991-0db71d7fb283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25a59b3-d239-4c71-9022-a227f0055599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724e58f5-f2ef-4d6b-a3ab-71a10c1b35cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db146d7c-faa3-4960-85f6-fa4221a6f452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7698dcba-8ba8-45e3-84e0-e0d02179e6be",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ab5504-d44b-4b41-8f68-2c51f7070628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc46c3e8-665e-4b6a-8393-359f00a53952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0157b8-3f5e-4eb0-b603-a80120aa40cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dedd3e-f575-42d7-ba96-15fe100b1dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea0a64d-fe72-4373-b4eb-eb7d7209d744",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be005301-b43c-4aa5-9830-c25694601ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d14e3ac-e969-4c27-8d9f-70b4b3094eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d4a2d3-6a1c-4bcd-8424-a534ee1fb308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2c7652-3dc5-4039-91fe-6ee1c6af826d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723837a3-cb2a-4c65-97b9-a10e71521fbd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73696786-313a-43de-bc6a-0a77ee480cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c424b0-f5ae-4d6c-8bb7-1ec9a4335f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d31f29a-11b0-45e0-a52a-831725582b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "60557cb1-0ff0-4f74-9786-86adac478bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453057a7-e788-48a2-af55-bd6c898bfefe",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a155c5c9-520a-44f3-997c-00684deff60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fc978d-4015-40aa-be2e-c29ee1fcff4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc12d47c-31a1-4594-b57f-f8fb068b7557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "25a8251d-2dfc-4002-b10f-144bacf6fef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcce2b0-dc40-431f-8520-4cb48857936f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1676dcb6-88b5-4b42-a1bb-a30af59c13be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfff8b9a-2e76-4fcc-b544-13e8f78a99b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0379ddf8-8ed7-4bb3-ac4e-3a5dd9aacf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "070ca826-9182-4466-9b3c-e93ad5f089cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f3c427-de8d-4672-9e79-560376ed7d8c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80555110-3912-4a35-8ac4-7ab9e59d60b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89364232-1a17-4fa2-9b8b-63994fa1737d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb29a15-2251-4a0e-be06-95ec1fc5b76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8feacf-58d0-46af-bd8b-1da7eae11be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c98f4b-e1d4-4a29-9bc2-c8d788fec3be",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a698d4a5-b523-4fd3-9484-779787b1a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659a6379-88c5-4128-a4eb-873eff67ccb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0655ed-1772-4029-b94d-e1a3e745224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb6849f-e03a-4b4c-b1ce-4ef50853d02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d29b9bd-fda8-4c4e-a431-076b308ee5fc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcbde73-fa97-4461-bdd2-35dca8758c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20596bdb-7338-4fd7-894d-c703899a9b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8228165b-68dd-4ada-aee8-4f7355ec179c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6d5e38-a231-464f-a43c-1ab676c82f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915e8884-5527-4192-9d93-5c922d4f6b11",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c28644-ce44-4da2-b62f-4b1da6a54661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61af77d3-8381-46ea-8cc6-9ae147382a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10d1be3-de51-42e7-a17e-34bf50e99a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e02025-3d44-4d57-bea2-2bea39a7f31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aa3ca4-2e01-4fb6-8b8c-16e230365f19",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2a5fc5-5ee3-4f0e-af40-75a656fef383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2cfd29-b569-4930-810e-631d1959699d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528f0fad-219a-45ba-945c-eeee42b5c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5f83e7-714c-4943-ab20-0b1b680d1db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b03a10-1fd8-4f82-a4ff-ca2cda5781ac",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c923ba8-d6e9-4d4e-bd09-bce7f7a5b931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5693ef8f-3be7-4b49-806f-7195b8b7dc85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba155a32-4c91-417f-80b3-91d1d508a2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a26640e7-42fa-4859-97e7-e95ecabc405e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8920267-05bc-41d4-884e-32b1c74e9d12",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8633aa-6913-4b86-ade6-c0db0d2437c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73c16cb-5457-496f-a691-7c70ae32c43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b7ae5a-ddf7-4b5f-8d1e-dd5260b7f419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd59f2dd-0f47-40f3-af80-c502cfe5903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d49caf-7f9d-49a9-941e-5e3d7aff98d6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f02101-57a5-492a-aa71-347887608dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a8a607-93c0-4643-b300-f4d89dd045c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae694540-1400-4134-8cbf-4e9109bce098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d5272c-0060-4085-9af0-f4b23786c5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb53ef81-1a66-4adc-9f45-a0c8b47b1ed9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c12bd5a-3d69-4598-a439-1b16825a0fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb96d893-daf9-431c-a965-d67ecca965e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d0804c-9558-4778-bd3d-09a80d364f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1b7efb-35fe-4ea1-b29c-4a531d58e5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fe9c3a-c9f7-4503-8763-9f8c17955c63",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7b9c3f-841a-4071-8527-d6e4033dcfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c867799d-6618-4d0b-82ad-a9d43769cd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eb1214-0a39-4059-81ac-b5836d9750b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7315c1d4-5ad2-4dbc-86f3-ea7e80909d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb2057f-7a52-46ef-a27c-116511c45263",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01907d6-9526-401d-b568-7757e1725c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312fd0f2-b473-4a7e-b75c-593c44503c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860b54d4-fee1-4a74-bd58-ad3d45b5f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e7e957-8627-47a1-b21e-7e179d68a667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b86d4e3-12e5-4f66-8342-b761dd314043",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4c8e14-5236-422c-80a7-b5cc4999f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9eb5b3f-0119-4445-b64b-eb2992b4fa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c5e1a4-3975-4750-9681-ed2295974d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "171f1538-2f96-4777-baee-f6d6974bf16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95826e9-64c1-40de-a033-abd3e8d0a8b2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef655ec-6ac3-4e90-bdcc-56679f806388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeb3958-9f52-452e-8326-2e75ccb056ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3b5e45-093d-4fb5-a505-b0706c08222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9751df-0e11-4af0-b77d-e45ab8141baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1867e79-087e-406d-9b16-517177adf9be",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc65591-cf6e-47b8-a08c-66ee54adf5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201e810e-8704-4a71-a9e9-96c7fb9aa98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba315c0-6932-4d00-8cc8-7ae0c233cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "718b4db9-0e23-43f3-8a8c-e90cfb64336f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71a7f03-94fb-4709-b51d-4bad6891038c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1964870-02b0-4fe3-9b93-1c575cfb0df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f1e7b4-d9ae-405c-b415-91232484cb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616fb25a-9524-4fb9-95b1-e7e9025cbdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a38df67-0758-48ef-97e3-481f91c7aba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c09006b-fe9e-42fa-b578-04b9a55918e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b4f3f3-fdf1-4baa-abee-1416fa159ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6105015-510b-40e1-8f18-400cab3441d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b010af6-d32f-493d-93d5-c5ab719fb9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6781ce5a-34ef-4f0a-8040-049be7c25b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1400cae-bede-43cc-a1fc-54f06a6b61b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283eb18d-0d2c-4fd5-a0dc-67475fe83e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0436efd5-9ee9-42f3-8ee3-d5a1bbca44e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a25a9f-41e4-4f32-868a-d0bab0a5b6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "99505a8b-5bcf-402f-9141-8f889691a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b2ffb3-9e71-402d-968c-b119c9fff445",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ea16b4-45d2-4330-bb39-5650a815e466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e37601-1daa-4c82-953c-d647749bbdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051c6a82-6297-4744-ab87-1d3c8c96a969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "14268673-f379-4fad-85b0-a97a90ce16d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1046e5-465b-4b22-acee-f0ba570d603d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862a5097-f683-4d81-abcb-daa24ee31d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e83c840-e3b1-462e-a00d-f411525d16a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c99d6b-1720-45b2-86d6-2d4b41016de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dedabb-9ed9-45e4-a2a9-d4e7027c71ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a57caf8-9b31-4e4e-a8ca-6ba9b8e21580",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e94f27-9122-4670-ac82-609eb6225a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197f70bd-98d0-47cd-b4d8-bc877182a7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6ea2f7-2739-4e32-b4be-a290e96a4707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b58ba5-f647-41bf-b147-13b44b50c063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01a5f5c-1a25-4919-8b6c-f9a2c7033fb3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a15445-dc36-48f7-b465-ec45e3d455c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ec5724-12b7-4cca-b0b5-7abf496c77ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c6b968-1b70-4dda-aaf3-201cd13f1707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4d125d-7157-4f62-a94c-1f2264273fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6268fcac-cfe3-4591-9977-9e9275d390c3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7825ddee-53c2-49b5-9f00-04bc33faeed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd21e1b0-5441-4876-aa23-ded00d2bcc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a87a6f0-589a-42c3-8389-9c2c0b07b35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6be62f9b-8a6b-4271-ba83-ab879c2258be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66feb8f6-c1bb-4531-8288-3ba53520d6b3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a13dbb0-5a64-4708-9246-2f5e58e868e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7833c8e0-bb9e-4f9d-a556-21ff96a1572a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72c809e-5461-4512-8161-bb2662b50cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0785220b-82b5-49c4-9faf-c409f8ecdd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a8d50e-e349-4d17-9790-30b3cc858697",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58147470-3757-4268-b80d-636e3c9689c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eceb22ab-806b-47a9-b993-afbe03c70f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b91031a-9f2a-4c5f-88aa-c2ab5c00dcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59cd6ebd-46de-4fd8-8c00-8f915252ba55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfda8025-b028-4f4a-80b8-af03d39ab2dd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900e351b-7fab-414d-9151-ba470e7cd372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc9410a-4e82-4c8a-8496-c5da405077b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fc7ca1-b831-474c-8f4e-c4fa6b3d1d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68ffb4f0-760b-4cfd-be39-c4adc69c54cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00835478-7ad6-45e8-b5ba-47f77c10005b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1142cbc3-6cf4-4868-9c0e-3197140a5b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab01c392-b0ba-4ff0-ad5c-f200aa407f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73550d1-9543-4cfc-9bbe-84ceda7dd266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "533400d4-b10e-47a5-a9b7-ecf06bd58b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2ee074-79bc-4797-a6c2-686842ba18ed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b9c20d-85f5-4d90-ad27-75c290290a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c96cd87-ce74-438d-b377-719374ce043a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1a1b26-6bc9-4a4f-90bb-74e93b499954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e227e379-3cb4-42b9-bc74-e2bd0d45f9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6950163-21a5-4c70-8d2f-55977dd30c93",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b02ded9-bf71-44c1-b9fd-c1896ba1dc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6deeba8a-47fa-46bf-9dcf-e73ff8fb75ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b644dbcc-623d-4fa9-92b3-4f16e94d6c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21375c37-63d2-4080-a8b2-d567d211ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8920b0-48ee-493b-85f7-f42a79c329a4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94880853-b5a7-4ed1-9907-81378a225863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2f2453-fea3-4186-a5a9-ad277ae6f154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d67b99-7d0a-4b31-bb9d-0676425022b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd62c56-6e11-4fde-a633-657fda07ab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5d9e2b-fb9a-43aa-9f21-54663ab2aa70",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a93b13-7ccf-4273-9890-8e39701933b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8688a9d-3db4-4278-9ee8-a5d882e6f58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7e3aa6-6840-4a2d-87e8-2b3c3a734c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4292b8b-4152-46f9-955c-c633054fff42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50015201-e02d-4550-b420-308c0bc38d2f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fb49d4-1504-4bf8-9e25-bcbb6fcb7694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8aa4f2-b960-4210-9178-c7e956929de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687681a8-3e00-40b6-80a2-ad0ff88127ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3eaad9-a7b5-49bd-9098-386ad853dd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea236849-10bb-49d6-ba63-e493c74cc8a7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d58b2c-4adc-40da-9aea-7a9ed52c5032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f174cb-9308-497d-9fd8-eb75de7a9aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d169d3-2997-4f65-92f1-8f74fd5c841a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "648bb7e6-70ae-47bf-a4c2-c4e7e26cf736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1065653-78aa-4689-aa11-b6441bae2154",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e48048a-6879-4953-9a3d-9bf6451c9699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e14d30-5eb0-44b9-8122-b88925a80b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9433d8ef-f090-4e43-8605-9e11f1f17a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea74956f-53a2-4a55-b572-3e9675754c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a1a4e6-ab58-47e2-853b-8b8f118ab387",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9987ddaa-755a-435d-b5ea-84abf6f68c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155575e9-81a1-440a-849e-b19549592fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3f334e-efa7-494a-9641-762c67085466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab031b48-d892-4dbd-ad73-8fb979035648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca4d90-01a1-45d9-aecf-7da7f44d86f9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8964af-28b6-4815-9244-46bf050f3ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f12aede-349f-4d75-8e2a-4c5fdbef19b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96de179-5b26-4fab-bf19-6e2ecdf3e119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abf73f3-c5df-4e26-830c-874eb95f5d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c545c1-8bed-46c7-91c7-acc5fae411ef",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0e0e42-f15e-4d03-9cae-4e0dd7fed4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d431a943-e24f-4f3f-8b30-3111ee2e1c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bafb9f-f305-4ddf-a2dc-cd4d49764a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "423b4cae-acbf-439b-83cb-5c9ec3d610d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f5efbb-3ed8-4548-ad70-99d4d8347c49",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1665d9c5-67e0-4e6c-bae7-ca3699c85783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f80788-e467-42c6-8765-35dbec265842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaa6fe0-8d2c-4767-87f2-560f5c58eebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be5cacdd-2bff-46ee-bd9c-0e78235b1e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4416342c-d2d4-4101-929d-a971e4f1d486",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c698fe7-48a7-4c5c-b981-c23c0def52eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ac59b1-2322-42cd-8020-811142104a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124ca91a-8c8c-4236-a578-af0c458d703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fa9e78-b61c-4ed5-9896-783112ebfc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de50f84d-c59f-4055-bcf3-3975ceabf262",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cac474-b242-4aad-aaaa-8c639a6a4116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac72fa0-70f4-4179-acdb-da5e7907b564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494d4ccb-b9cc-4217-836e-a565e98cdd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "519846ee-247b-4bf5-8c34-a24aa99b0e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001707c2-be8b-42ca-a325-8889d8973112",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fff0ba5-56e2-4958-a00a-2a607bfe96f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4861fda-5c01-4316-81ed-8aaaa8acfd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8084159-0d4f-422e-8eca-e113b5017c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "694e21e6-895b-4dd1-87fa-689cf74f504d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779baf96-97be-43e0-af00-0ec490882748",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b728bba3-9f41-4d67-8d4e-4be52d31ff2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393d401f-cceb-41f8-9b51-f4dd1b9c1b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3e3a34-39ed-49cc-900f-2307f1a8d450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9592fb9-c88b-4f06-8e9d-c15763c2ab58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa06c526-dfe7-4d63-8284-5deff5fe5383",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec15e0-1d3c-427a-8d34-3c13e3a4e525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0644a3f-60ac-47ea-b7ea-1a16576073d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9192c57-518b-4b1d-a01c-85b415303ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66eb5ba9-01dd-4c81-860b-7732fbac678f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52fa2f2-2e2a-451b-b425-86794ca3f394",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585588d6-e7ba-45c7-9de5-7bf3e30fc334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac10d34-78d5-45f2-8305-5375f2207f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b816043e-cea7-4765-9c5f-b951dcd7798f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca4362d-7e1d-4efa-ac6f-7d45468c1c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9b45db-e73c-43b6-b5e6-b2add3880d75",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f89fd0c-cf06-4a13-b8ab-f618ed915b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed97456-bbd0-4773-8d51-72c5ba383687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1b9493-7061-49eb-a19a-b979ca68114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be032ea-cbdf-4367-800d-86c5f7ea7e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e8c493-dc85-4662-8598-5ff8d8ce4516",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5f6279-4b63-4ff5-9b2c-3712842c2169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dd7671-f6ed-4f24-9c2d-5588693b7450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701d3070-52db-4ee6-862e-1254da650fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ad3eae-3ca3-4a3c-9b5b-a4eff8e17aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c4c60e-19ff-4d91-a89e-59a7cc80a588",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda7763d-0ff9-4c34-a3ac-eb3e9485ed50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef870c9-1e3e-4f6f-8055-0bccc7442c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b08198-ed8b-43b1-9c8b-5dfaa12fab0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "513ff1e9-46fc-4f9f-bfad-ac467c05a0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de718a4-72c9-4e96-aa39-656dfa871a06",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d57f971-60b8-481c-bf52-22b369b62c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d7b31b-5dd6-49cd-8876-4bd4db5dd1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695ce2ce-4d55-4702-873a-70ddb6b8de62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae040fe-db70-43ac-8de3-265e6f5b3519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b25d21-df23-4b45-9564-e7d6e8f3fb50",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db74722-7b64-47a5-9405-d8f07fc346a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16089278-6444-4ab6-a441-89a895e4042a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6f436d-51bf-4eca-9205-1911edc3e451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "058d31f2-5026-4423-9c87-5473f70c4ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a02a0df-3b12-445d-8cf8-47707f2e94c8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840aafac-4247-40fe-889e-97248e63eeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2125547d-8cf9-4462-aca8-1bf9e41163da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e057e2-7af8-441f-976e-fcb6ba139597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "52b3a546-1928-46a5-9e24-a580dd445246"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ba68343-4be7-489a-b252-ef889af483ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5bbdb67-0aa2-4305-993e-59d27068889b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d08bb02-9d25-4730-9c8f-1c9df8a7ddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1eb8df47-51d2-4cc9-b5a3-ab725a6738cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8ecd71-70dc-4d88-ac29-8fea4a90ecc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f83b035f-2a7a-4e05-a8c9-bda3be7a12ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a4d3234-0223-4936-b8e1-95907c479bcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93fbf1f0-6888-4105-9dc5-7909864487cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ea34788-db6e-41b2-adbe-c1b4f4d222b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "455b1d09-e961-4c19-a1ab-1bef4eaf3261"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "756d0835-79fa-40f8-a970-23402aafbffc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ecca379-ca70-4811-9282-639e1e568179"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd8d0967-1246-4323-8e08-bfc16a52962f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b79c5252-24ee-450a-b563-4dbabf3873ba"
                }
              }
            ]
          },
          {
            "id": "04b6873d-0937-4fca-990a-fcf2f2dd210a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "065b64f9-ef52-43a7-bce2-8e8f2bd7d8cc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "419a6049-401b-4c34-8162-d0de93d6df1f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0471335a-1997-486b-a26a-5ffa654577c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5b73be32-e2f9-475c-b6ba-055f6ea2f986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071dc96e-1bc3-4d8d-b5ce-3624ebc99f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df31c55-ba0c-4e02-891b-4ef10640829c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "696bf27f-0ba3-4590-b9cf-063383f0d503",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9acb3d25-d05b-479f-8cfa-7a79baa05c86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5cfba0e-6305-4e47-bbf1-8aeae04035c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c9c9a03-fea2-47b2-a25b-4f5d951c541f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3fdf1e20-b3b0-4262-8945-decf74003c41"
                    }
                  }
                ]
              },
              {
                "id": "73bbedb0-d023-4429-b733-681c51da4b77",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "654b6cbe-7075-4087-9503-e90b261dcd7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dac6ea90-6bb9-44aa-b42f-1027dda77d74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24d392f8-8666-45b6-a49c-656ca17d84a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "400a214b-a29c-463d-aea7-1ed56dc50a0d"
                    }
                  }
                ]
              },
              {
                "id": "f43f8c3c-9266-49d5-ada7-7267669e9cbe",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be129cf0-8df3-487f-95a1-c4ee8f84fbab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06769c14-1220-4d23-be27-c6084d571c63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a3d4f1b-62e5-47b3-9e40-9bf81f359ebf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4d84710-146e-4272-aa38-dbdaf7ec695f"
                    }
                  }
                ]
              },
              {
                "id": "59ac2c76-9ae3-46b5-8852-e84f02a74233",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91bf1e8e-d63a-4e3c-960b-08ec33006110",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6271e59-9cc9-4e7a-a1bd-c83db998a0a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cacc6a8d-6641-406e-b4c8-ba0af98761ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "618820d2-bb1e-4534-baae-cc733a631eec"
                    }
                  }
                ]
              },
              {
                "id": "d083f0f1-a68b-493a-b13b-d73e988c3536",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dda0da69-ab02-4f20-b675-7cbe88289c13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59f566df-7776-46cc-9d39-0d1c2f618aad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8aca492-3074-4f78-b7aa-4b1282f390ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "38bc9fc6-2881-4044-98cc-e06f2edd8b81"
                    }
                  }
                ]
              },
              {
                "id": "b66c9ed9-4929-4b2b-8c12-64c73ea2cab4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "814a30ef-0dee-4a79-80ff-45dbe5e93a5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec8270eb-3697-4a4f-988e-318d10bd88c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "818fbdbd-2fd9-453a-9eb6-110f1c9f4be2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c75ee27-8782-494a-b8b8-1d5d71ee3ecb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60bca154-f2ba-4e9e-a220-7122aba9cbba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecebe920-acfd-4774-9af2-d54ee1935b87"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f93d911-a194-404b-b92c-2f2d6835c51f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d582ca6c-b0c2-483d-b305-2ee940dfe8ee"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76b381f2-d79e-4df3-a60b-15de3ce7d75e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "92a19ffe-3881-4bc6-96ac-9fc1d11475bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65467f02-a0d9-41de-9400-a56edecb3b72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5644fd8-d346-46a4-aea3-5379930533a2"
            }
          }
        ]
      },
      {
        "id": "bc176f71-9cc9-46d6-b013-7e8560b76be0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4694d757-592f-4b04-93bc-4950b3e3811c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e39a53fa-4721-403d-9325-40b337a575dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93a82875-411e-4750-81d6-000fd12e9290",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4ba0d6-3b6f-4e0e-8926-541544a79706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbc01da-d81a-4b1c-a92b-e4162d872c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b62a3fd-6ff3-4ad7-998e-2f00ffc0e906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f84ce65-573d-4c4c-b44e-b42fa11498b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b21027-b443-4941-8064-5bd6d9870fa4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27820e36-5e66-4b73-aa0a-f8bf3873a9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1f109a-71e2-4f9a-a142-e15d922e812e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dbac2f-d862-414d-8a5a-2a57026f4048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4320fff1-5ed8-490b-8912-5dc6d6a24971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b792604-0111-4062-8165-427aaa32f2e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7e7d4c-012b-429e-81e8-ac2176cc3311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c1958e-f094-43ce-9891-937ba1015804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f97b16-c357-49f9-a2e4-f26bada0f87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2008d22-c608-4edd-9d50-39fee303740c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605b558d-9609-4e75-8a1c-cc0bb428630a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313d8729-adc9-49ca-9e05-4a08eda8da63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628cafd2-de00-44b7-9eee-d6f9e48349c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fbcfee-81dc-4b0b-9d95-80c4e5b3ab84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9dd793-f82e-4de0-8854-7cca0bbbb17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13511230-a635-40f2-a581-ed184e4b1a49",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f9e5fa-d03f-4d10-966f-9d01b275491f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee8c10c-efeb-4591-97dc-4bb8ab1559d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a420f25f-a3b2-414f-b1b5-5f0b19bfb167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62dd4bf3-0adc-4533-adb0-7a41f8b804ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cc33f2-b9fd-4175-b4b1-3310bb600114",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceda7673-15da-45c5-bba3-e200135f7520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9e9f2a-f442-46ac-94b7-6827c2d1f675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0d26f3-3d15-419a-b3ae-3ef6e3ea6ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54a0dc69-e6ed-47ac-91c2-04fcfba3224f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee904f0-ba5d-4b74-9a7b-42b63d7521d8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e97cb6f-1932-4954-b073-e2be0c7ad467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f988981-2a22-4e64-9dba-5605c4f21465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e8be6e-64c4-42f2-bed1-8389d73a6195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78b5249-0bf7-4824-8d62-721ce63f9ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5418b8b-900c-430f-bdcd-2a14e41d28ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fd8710-5eca-4963-bb5e-4d04608bd9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8e9928-e384-4ad0-befa-695290a916e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944ddf1d-a093-4ce1-bec8-2a5d647953a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47821601-e186-4ef5-9a6f-99c22f80c620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69c06ca-bb76-4a79-97e4-21e5a7ae03eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ecc789-76e7-42e5-a361-472a06fd4a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970f111c-062d-4e5a-ad8a-01826984d15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1481133e-96f2-418c-8287-9a567d62d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e811a12f-6e34-4405-b2ea-1021b83b6e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a116cf-c203-4041-8cf0-3e7acbb4dba9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4853871-6a76-490c-b89e-48fa46b30ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dc9a60-bda5-41d6-acd6-d842752400b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fcd2df-145d-4dc3-821e-3aec576f60c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e2c2e8-f916-4cc6-8985-65061cf36e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ecc07c-afa1-4dc2-8ab1-6b87e21e3d5c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c116ca90-a52d-4665-b51c-ab2cee171ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd68cd3b-b74a-4f99-bba3-58b72edcf962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53826391-aa3c-4249-9232-c1d4b0304642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4c144866-d210-4b5a-951e-088aada6407a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8a7f40-5917-4ff5-9cc4-bfcfcf53a4bb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cc7e19-87a0-4622-95e0-0c2896c4011f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038f0b8a-3d38-4fa7-a5fc-8b52dc2777ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f67377-cd49-466b-bb5a-d2b4e4822bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff0f122-38f3-424e-95f1-94933648bc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add56873-6c0c-4f3d-8f1d-beb0815faf5b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210f49c3-b5b7-4c34-80ef-bc4a89431b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b64cee-518c-4e8b-9baf-ea5063f3c6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4db419-d0db-4b36-8091-cabba574eb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "832a26cb-9664-42b7-8266-b80848d6186c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a28a68a-588e-4e2c-9435-db6d9a7a4d18",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9375ab63-5dae-4c96-8c4a-3c35b8b96b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af5a41b-29c0-4317-8513-fc4541c3c389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e53430-483d-451d-a2d3-2577f7abecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3847cab9-4c84-4aa6-abde-a62c892b3755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468e4da7-e753-4bca-91a3-98213ebdafec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f839180-d049-4bc6-a5dd-81bf1dce8e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb1afe1-69bf-45ba-8afb-836828d58e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b1ecea-e57f-4060-8ba2-3bba10229fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50e26f7-fdcb-4b00-b9e7-42763fa60e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a0636b-ece7-4113-9f54-3784d54fa660",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac0ecfe-6e42-468e-9ca7-788b4ae69585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9116f3bf-623b-4e88-8a68-61b57a46ed0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fddf63b-2c11-4fcc-bf63-d2604b37611b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "27ae2ee6-065b-4dbb-9bd1-aa401b7b387f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3bc469-aea0-4494-9443-a9d4f4d38853",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea998d2-cb20-4bf7-a7b8-85460a1816b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51aa1488-e0b6-4b94-8537-c27a0004e310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f9bb41-3c7a-4144-b11e-f2297c78cda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "909b18f9-cf5d-4dc2-8160-38e3f0780a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2004aba3-5e4b-4bb7-b5bf-2a01db9c2237",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aca3b78-c56c-403e-8ce2-5b04a791278e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72c04ac-86af-4334-864b-7092b3b5be5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4283a5-e4e2-4c82-b7d7-19a9da126947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d5f0ef-2009-47b2-9bfe-82aa41127337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc60b54-5317-44dc-8b6b-a844f998180c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dc2bcc-04ef-425d-a5f8-f143389ec330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f4a14a-1857-4a9a-aafc-24fc45997f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77e3935-d28f-439e-87b9-5da5cbe9a548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "389654de-bc3b-4a8f-b5a5-ce54f5d009f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da5c720-8cca-4a1c-85a3-e25b5cf67273",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55c6d89-ac21-439f-9c44-541f3049becf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9f68a6-aa54-46bc-b99c-e9a10f550893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd408664-6275-49a4-bb18-d069d376b626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1943867-826b-4272-8660-23c117b2b8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366ea2a5-aaea-4175-9bf8-0377bddd47bf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf23316-a411-4850-b4bd-af1590b96f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937adac8-eee3-4297-acb7-4491f2c00afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f4b78a-b5f5-4314-8298-dc455c9266c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17c30c8-4c79-4174-86f7-f7de822a2afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf58116-a47e-4166-a80b-9236784a69f2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eee67d3-cece-4066-ba03-1123f4af888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c295add-5ac5-40a8-8f92-7068372506cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8206c9-ec96-4c82-a454-a00de7a90e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2a82b7-1cf3-4786-b624-5a674b961692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9646715-5bc4-490f-a10e-1aea17e3ee26",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac7f2dd-5661-446b-bccc-9fa0b017777b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6b5434-e1b0-46ad-86fa-4528884569b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9153c6-2a87-46fe-86b7-657d26ba502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca46794-9654-4726-a547-09ffde1ced8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e9f05e-032d-406a-9668-d34aa9aea23c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240f568b-e02d-4c55-b133-b948b5e10d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74def8ca-d784-43af-91d6-2173211ca609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f502a720-abc2-4f9f-9fc4-59b318f9f9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bb81dc-80ec-47dc-8da4-52a65164f1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7826e4a7-a344-43b6-9aff-bb55e3f4b860",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bf9bde-06c5-4c3c-8011-999f8025e8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2753f21-6190-431a-8302-d4a6560a90b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e7ad74-0048-443c-8a93-d1501eb3f6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ec9d19-a632-4662-8ee5-5791412d77b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a34d6ab-1db7-4f70-a02e-5ab5787133f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64759e0-329d-495f-bfa7-7c2488e3b779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc859e6a-d53c-4672-bd34-6cf64abae56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e2ed15-ee59-4cc3-9549-e69eb695d510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a98d19b9-c118-4cc5-b108-275f4a1a0806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c003e34e-8af9-4cf6-b02f-d58f651d6c00",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1231d1de-2f48-4ae7-90c3-a79249e23e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad4ce46-f496-4107-920e-0fcf75cb6346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c65824-42b0-471c-8a0e-92021a794b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffb2235-5431-4f86-9435-7e9cf8c6e551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7f09fd-7295-4c4e-88f1-e4069d46b8fa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f28066-6e06-45a6-b02c-aa54f8f64248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e838a23-87b1-4f35-917a-f0fa6394af46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb7db6c-d208-47d6-a68e-bf87eac10457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0cd5fb-60bb-44c1-884b-b1b72a63f0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c7f9fc-0dbd-4400-b668-031b484b4b63",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56649f55-fdb3-41ff-9796-46609a3efe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43459db3-8828-4f08-a4ca-146f39953f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d41b88-c8be-4024-857f-e6b8533bf3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b65f98c-c372-48ee-87de-b8ecf926a7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7150ecd-39fa-4737-99ad-dbb47a53928c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd64ef85-b060-4bc8-ac86-c9f10cfc754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96b2fc1-50f5-4f1d-8bde-c8686ccad725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6411d27-34c1-4ae5-83ce-e9cbac3759a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ce7967-d6a6-42b3-abe5-68f38b7aec91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432c0ff0-d4bd-423a-af4e-c927c4827888",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad24314f-9ffd-49cc-a9d7-16a30b2315ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a6ce23-7254-42a3-a3f2-7fc5aa1df253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68da6369-29dd-4414-9fa4-8e3a8bb9dfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "140ecbf8-2c85-44e3-b961-2da400a6f73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fbc8cd-6430-481c-8f28-789ac38666ca",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253fce86-1e1c-4102-a699-1a4608ae92c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ddb604-1d81-4833-b003-04d737c1d031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b16f3a2-79f9-45b6-98d6-42bbdee93070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f5e116-c5b5-49ae-9269-57dd73813b5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60b2d76f-43d1-4d82-8066-8e4d612d307b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09064272-8d6c-49e8-9396-da0f8832b7a9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df30b5ec-330a-42b3-bf18-616083fe3643",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "33f34fce-7cdf-41f3-9006-7a1cfad18fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06850cf5-fa05-4865-b5fd-5a3835f64318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb9db3cd-6ba0-4aa4-9d0a-c19a2ff9e59a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b4e9362-b10d-4037-8433-cb5ec4d44a7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "438a700c-9e32-49e3-8877-83a36ba3cba3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16a8ff64-01d5-4578-ae19-c9d96aba852b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b90e14f-363b-4fb9-bc4c-cff15110b01b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e509bbaf-22ce-4c89-b529-6a4ef7dc521a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08835342-b09a-444f-a951-96a531d1fae0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e4b8560-8c52-4714-88d4-e07081e488fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab2f9a60-1998-42ed-a9d2-3bd24136b076"
            }
          }
        ]
      },
      {
        "id": "26fb7e63-09ed-4fcb-8958-e1eaa086517d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fcb256b8-4180-459c-99ce-b021f0e434d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7c435e8-c5c1-4bb6-9ee4-334ad01fd17a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46d13d5a-9a42-4f9b-92f7-cfd9c8468c8f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08eb788-92de-4a37-a3f5-dfc7130d132f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fabc70-ac3e-47d7-be99-20e53ccb92f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6123e8-2496-4864-84f7-37bf47205498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0634fb1-eec2-4ee5-9cbb-4aaa339dce11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f07987f-0c07-476f-8f17-0d377e59b401",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cd1ec9-564f-48dc-b1ea-3f21bd19cee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b65ebe-b1d5-4142-a1a4-f80ccdfa4fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5211093-7e12-49db-9b15-8d93d308c767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff72ca7-33e7-4299-99e5-90e1b11707f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1299bc-f599-45c9-96b2-439e1f793320",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90408320-ebf8-4183-a45a-1244aad7f667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed637b9-ce8b-467e-9fc0-1f838acef329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaa7ef3-ba0d-44d4-a0d0-bb1e5e4026d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c9a42f-871e-419b-b286-c1e1135ce615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2aed206-32c0-428f-a6ef-302d13f48879",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13bc2c1-7805-419f-9af0-60b8baedab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e905a6-1015-44dd-b553-dceb2d499776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1168d94-d917-44d9-8fb6-1ed3d058790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c41b5a-0493-4cef-8d66-32159851be44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c4bba7-f764-40be-b0a5-1f19ecc7f519",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf114cf7-6d99-4e13-b816-329c47fd5ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc028a1-260a-4831-8268-e2df640eebfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180ae359-29d9-4b2d-aaa2-f9b715c944e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e5ef58-33da-4ad8-b97f-41421f437ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83086974-3cb1-4e28-8ca5-50d8dbb8012f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1433c58-25d7-459b-bf83-68f5ae0ce5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97973147-fd62-4405-8604-fa139babad5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff317871-5626-4a48-8215-2330dc39f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e91b62-d4d2-4db8-8bfc-460620672bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5ca2e9-2f1f-4d20-b83b-cb3593af95cb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6623ef31-54ac-4ae0-857f-0a97b8f03099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfda3b78-3c85-4f45-97c4-7db457158290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c689c78-dfd6-4045-801c-241352e0ea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd14a47-99fe-466b-916c-a3bf6a3e9e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604df0b9-e06c-408e-b2fb-2081cae9daf4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6301b093-e7f0-443d-a31e-c606cc042ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9e05c4-dc53-4939-a1ed-7cfb0c760887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18db9791-f777-462f-bb77-4feec26755eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9274cdf3-0362-43f3-9049-b5ca754f609a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a786f4-4721-486b-b6a0-045cd7f9b2ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07a6871-a560-451f-9d18-90680795e226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f705fbef-8350-41e9-a45d-6f92842cd1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb64d560-83f1-4c99-9bd7-53b36883ab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "950a63ff-3330-4351-8ce0-b676c2bfe94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abdc160-b9ac-4e38-be27-6b4d1c47404d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e170ec-2a19-4445-829e-c159e9a87049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be45446f-8c90-442a-8571-fb708fd1d2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9e40a1-e799-4d87-b179-bc12cfef34da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af39185e-a2dd-4950-9c79-8c93aa26825c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd526942-acaa-47ab-906e-e8df2c00abcb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ad0464-51a9-4239-af61-def0cdec2145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6ef33e-a4b9-49db-9212-4b0bb4c9d505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10214fc3-deef-41cb-9b8a-27db951be773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "57e15ed0-925c-4076-a246-76539ba4d7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5fda42-af6b-4e3c-8c38-3b42d3d1a9c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd023af-cb53-4617-b748-9362250ae147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b17c95-cd36-49cf-853e-206f33edd125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fedb8de-126f-4460-adb6-2c56673da805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72639dfc-c8d0-4369-9186-2a068f537473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccea1bba-d7d0-4caa-9da8-c2ba9fffa34c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ab335-9bab-4197-8b83-41940ed95d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf6ee8a-37ea-4f2f-adad-23a4e3c6b9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422c3bba-f665-4eb2-b828-bce2f6701cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61da627c-b9b3-4768-a7b6-089231d89945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab5c559-25c9-48cc-90a0-75af7f9a6b43",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d46aa7-66e7-406b-9ad5-643a6f920bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66be1ee-3bc3-43e4-afe1-b9b0e8f9682a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749c3f50-c3ee-4ea9-b21b-78afef2bc06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7e3ab1-2cf2-4468-87e6-a713decfb6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0dd4e2-87ba-466b-bd4c-41a11299f010",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327b691b-d87e-4a1a-9448-4c17c6ed5f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0381102-9bd0-487f-b8fe-ddc42db5d55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11de7526-a09a-4666-a2d4-43018f9cffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f682df6-9f50-4e37-a11c-ddbfb963d714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c56b505-f342-495c-807d-bb51f683d176",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a5a74b-78f8-4ed1-a904-a744381295b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78145358-71c5-4989-bedf-5c6745266f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31313fea-1d46-4e8a-a200-75a48beb5e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b516317b-8bd1-4ce7-a6c0-38bc7034a81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5290dc64-1f26-4a38-88b1-3b6cacf32329",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2dd1d9-5145-4ea2-aece-c6a735f8185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7742eca3-13fa-462a-90bc-ec9aebf010c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c14f8a2-6ca6-4c3a-aed6-389d60d07b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6af87a6-b9cd-4340-9334-6af3727a27b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefc025b-94ed-442b-b5a7-1fc25d6f6496",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd1fb69-482d-40e7-8cb1-182cf5009c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0935c29-8778-41b6-a1cb-b380bd51fd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34805e2-7aaa-4dfe-871b-e89883b25f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a916e70-2dd0-46ab-b36b-5c119bed3a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a970c2ef-2a3f-4786-a2e3-bcdbfbf0b85e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963d65a1-0fa8-4e62-8b86-ee9014fd88fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca5ba3b-7750-4cc0-89ec-8a0aac449b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8f9af1-7ca1-4cb9-b50f-ad114ea7c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fca42d4-822c-4684-86e3-bb0464f9e030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2dfac1-94d5-4860-974d-df36f232f7ae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16461459-3747-472a-92c9-103da771302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f80242-df75-4354-b4ad-8083e37fcde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586c4a2e-0926-4f57-862d-12ac9c4f04be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d720086-e16b-421b-b6cb-e8622560e3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1622cd31-960e-4f99-a9d0-92db4a86d84a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256e32d2-9f15-4997-ad89-b53945db9847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b78f7a7-e5b7-4c72-b396-aca46c75b435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a88c8-3627-43da-a0fe-1cec10a3415e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cb7f8e-1a0e-4b59-9f53-823a8753804b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65b248d-7a82-46a0-a4c0-583164ec1a1f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9f846f-f556-43d6-9e75-274e8bd3d6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c54f6f8-441b-4ac9-81fb-32af758606eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66d3cc7-90da-46a3-9dde-8d7e7024ca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaf5095-d199-4f1c-b261-ea32db2511d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6e369a-08c8-4156-b0ab-d60f2986b109",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06d73fe-edc3-4590-baf7-0069fef51ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a84421-f37e-420d-9263-138dc6c7af37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9464339-b2ef-49cb-aeeb-b51b8bd98113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5873eb2-a3e1-4390-8e7f-238f75ee62fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89cd9b4-26d6-43f7-b687-3cba8a2a9471",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c158a98f-0a4f-4a67-a6af-878b63ff9c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec066bd5-bdbb-4209-866a-ac0bdde6d64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db80379b-fe18-4b4a-ab89-78fcaa2058da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e298e40-22fd-4ea4-907f-94f3a64c3c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97123b8b-c391-4b0c-bb37-21a6b53b8bc5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfe952d-456c-4eb5-b6c9-573f86a527e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523491be-9e2f-4765-82a3-752abc63349d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd2d81d-f712-42a6-ba40-7646eb53bd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe83bbc6-b08e-4c1c-a29a-3d2d07457d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24276d89-3dba-4ccb-a927-f594ba6ac4a7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c4cb9b-b144-4617-91a9-cc63e90d85d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d845b37b-544b-4780-912f-a7c8f87e682f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e26059-aedd-4181-992d-266b521ad2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14ac5a6c-bbc6-4110-9012-3d41260c4f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5228a1-e268-431c-ac1d-332e8b3d5b64",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ac97b8-b0d4-463f-9031-bbf944907bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c52e3e-be7f-4e21-9b41-e2cbefbd9cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc37775f-905e-4b71-aacb-c7f9508326cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3195898-c000-4da2-8cf4-74b82f701daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45828146-b124-4295-97a4-a039d20ca0d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8ae593-d72d-40ae-98b7-a7c1d785e5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d412f0-951b-4784-9a1a-0bf6b0d76905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e770bcc-521a-4794-b3e3-ef226dba6c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd4871d-3fe4-4cf6-a09c-cb09f7dd83fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9f5b8e-4934-4857-9616-9904d16fba87",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12761974-1a11-467d-b0cc-1addd993a33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5044715d-07fd-4a39-a2ba-5a9d5cb83564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06e2f57-1989-4b81-84ea-bf8f61bc580d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5127281c-295d-4558-8d68-deb62fbb5f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704ee8ec-a650-455a-bde1-73b8956b8616",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155d2f94-4230-4bc1-b311-817785aab19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6497ca17-895b-4934-9629-69d282e6b67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e6a6d3-55c7-4084-a9b0-0d3bf406efc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7a5cd6-ef9a-4111-9a23-6c9023ce252d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b6eaf9-a089-43e8-855e-f4034fba4c28",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3871433-3915-436b-8220-6412af969f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400e5c69-574f-469a-b5b3-f1244c26b92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3fa5bb-64fc-41d4-8855-7b59f319082b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b26cb398-8d57-4a78-842e-7a62a2700ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5683cea2-b5b2-4947-afb1-4fe813efe919",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef393b19-d06a-4c87-bf0d-df98520253b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1546f6-7ce7-46cc-ad52-6602140a3c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc30679a-249a-475b-bb48-235eba7a1d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0489d4-998f-4184-bedd-cf49f3b1b82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e821687-a991-4087-b215-efc102a4da71",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2596aa0b-cee9-4e39-934e-cfe2da78c389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e927bc-7469-4ddb-9185-687b10e2bf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76e53a7-8f4c-4eae-a2c7-be3d36f44412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c432a3-c285-4644-a34a-c1dfc6d18b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdb12a0-a951-4054-b240-cd0760da6b37",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3352f61a-72e8-42fb-99b6-2ad67f1187b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92957a9-0bf4-4b53-86c9-5220a592380f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1cf221-dbd3-414b-a814-88cf00243db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eaac773-6f4e-4e3a-ae63-0b9eb0bd8035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd81cbf-7c06-4fe7-a379-31d3f6dbfd12",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c142281-fb57-476b-82aa-46ec6dc80d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5557f43-2bdb-40f3-a0f0-36501c9e420e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc00b73-af05-4d14-ba07-722073f03e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d165d6c2-82b3-424a-8e3e-00a2dbba49e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c84f097-ea54-45dc-80d1-c598a4d5258b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7560ac7-f566-4615-9a42-fdfa92b1f925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d966af-26b0-41dd-85e4-43fe2d239e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b324fe2-e649-4789-a3a5-06a6b413daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33af9e7e-4de1-46d0-959b-83fe0df1f9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19400ef-8ebe-4c01-9f21-0cfdfc626ae0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8854f49-c6e4-4717-aa64-4d7ac1eacc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dc0a87-0173-4ec6-b55c-fbad46e7f97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4525f94c-0ce7-493b-9ba3-7f57cfdc4120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "945b6525-a1b4-4c9c-bf3a-b61ab8108b7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8874158-10b2-4ba0-908d-2df3c49c5dae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff31486e-721a-4534-a977-250c817eb388",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04b2cee-b0ae-474d-9896-70c9188e1d94",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6beb0680-3058-4678-9130-bb7e92638920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f27ce5b-dcb6-4da5-ba1c-27ce8a8a6537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "add4cfbc-4f55-4540-ac12-cbbcbc66d10a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19d3496d-cee6-498b-a03d-06cbc0048084",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f65ca4e1-88ac-4388-b118-1df9b10122b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb522147-48e9-478e-9a08-89d62f83a5d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f456d3a-ab1f-44ad-a9d6-1d322173a30f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83a02dbe-026b-41d8-a780-39d047106c93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9ba17e7-565c-4844-b4d4-6647e3aba3bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ffd9c32-bd40-4f25-a0ff-f6e36bf36eab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7af66396-a9ca-4fb7-8674-3fc663a9fce1"
            }
          }
        ]
      },
      {
        "id": "cf97c5db-7af2-434b-8e23-7708265a0803",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "604e2d10-2642-4b3d-8e55-49c8c07e70dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "020cf5c4-fc34-4342-abad-68c0ef9785ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "42710fb5-2b09-48b7-a645-b8a44d6ced9c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1e9af7-10a2-4cff-a0ba-004f5d73312f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03f1e7d-ff42-4f24-b99d-f68f30ed9b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5a53ec-fbd1-4693-8520-6fa1bccb53ea",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88fb8a1-56e8-407d-a72f-a1334dbd713f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76c999f-6cc0-4a86-850b-b7c1e4740b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bde55a-adfb-45a3-89c1-56699ac5f18e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf48646a-3081-42ec-9d4d-5cc0ac31eb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f98f41-30b0-4d32-8203-69a7cbf0c98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17af5ef-4981-424c-a66d-2eb828e789b7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca08a03-e726-49ea-a51d-8bd127d229be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6bdb75-6f11-45ae-888e-b2bd94d4202b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf298c00-54a0-4735-b51b-f29eeb728492",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a37db93-9df9-414d-b1c5-0a0eb72e8db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4be328-be0f-42bf-b6de-04d96bc5686c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b3b3e3-90d5-4c75-9280-e4bad5dee670",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abacb312-6fac-4f27-a765-a3fbe628d157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f3d298-320a-46df-9453-6387f8f216ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed91ed57-ebe3-4f38-8835-e5731bb06db7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0331729-ec80-4a70-b70d-33b3d5e3c7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e7405f-ce99-4a1b-98b6-ff81bf39da0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f373229-5346-4944-8f41-276282fdc8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c23fc8-8604-452d-add4-d96d4786a7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9354f744-94ca-44e8-b48b-86c9f347defb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3348064f-1286-4240-9691-fa672b282b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc34b4c-40e2-4368-b1dd-65adf00442f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deff3017-14cf-4daf-91a6-ef87d990e77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0918004d-d492-4428-82b1-71863b07b43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00810579-58e0-4e53-9264-192c9b379063",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13def233-b320-432c-a577-8fc2bd46777f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb20806-2f01-4f56-ab9b-ce9db592b073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a8f83f-addb-4546-98a8-78a2a62cd354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44c6e0f-4779-41d8-b74e-a1598f6f4757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c59afbc-c648-4208-9e1e-60e5c56b5043",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b760636b-d934-45b5-8a80-5d4a0171d92e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4dc013d-5a29-4b8d-9215-c1bd3fca6dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a3b504-e021-4f21-896f-cf96bb4ebdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da61df5-5e7a-44a8-be1c-b68a418546cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd92e3b-b67f-4065-883f-93e4a7611820",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b609902-60af-4b70-8221-25707ee3af7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765b7a18-590b-4bfa-b0ff-f8f57ddd1965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5afda7f-0243-45ca-8612-3e0af80a59a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6443214-24e9-425f-957f-7af3d246d346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a048cf8-7809-4381-831a-d63fa66489f0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aaf5ee-bbbe-4a86-a76c-65e0d4f2b5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b27249-0d24-4746-a50a-41fc50196d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8817bb-04d2-4f6f-a73a-096e9e963e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82da0c18-aee9-46e5-bf08-9bb0f8dc703d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25f7b09-7ab4-4eb9-b143-845fa379cc3c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45c6c4c-cb58-4fab-aef4-2bdd6fea479a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507b8273-478e-48e2-9c4d-fc402b7da654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd1e276-21c7-4743-9392-5ff575a7ac5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3da251e-7831-4540-b570-eede9213e6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdafbb01-271d-44aa-9da1-c09c8abe1a60",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a0f199-0d26-46c9-a514-b2af1b147dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19560f8f-87f9-4603-bf6c-a40f3ff4de35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f626982-e100-447a-91bf-2f755713548a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673d0613-e068-4017-9753-0f85ebe50efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fda25e-47e1-409d-9c57-ceb480f5b6c6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19af897d-6306-49e7-b5e0-eb3cd0f94033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c62c73-d1a1-47cc-91c4-b7e98eeffe0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74109a2e-9228-4188-b2aa-fc856a97836e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31af820-a2a0-4470-a45c-fdb0ba02d5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cf4cb1-bb9f-439d-a497-b42a455200ff",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95438276-d299-4916-91a5-8938000e7819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1a3371-9dbf-482b-b103-6ab134f23c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9601c0a0-40c8-41b4-9ed7-cd205ebd6920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1900c045-4100-4d39-a24a-59b0772a4ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b903b765-9a4e-499e-978b-befb8265997c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a30ef6-f5be-4c2a-a1d0-1c06a91cfabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dec111-113e-473b-96c9-ba42a7298da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e1215d-9026-4133-b1b1-af29cb0b46d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa439f85-6d7a-4995-a407-0c4161460640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d91920-c82e-4cb3-9001-77cd3d8c1c1a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0df084d-eb0f-4817-aa24-d04b05118829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9657711a-002e-407d-9821-f31352bac3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562a7c8a-c3a0-43a5-b13e-a9ad6c2f66ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dabcd61-b830-4772-844e-1f76efc0d456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ce5efd-5096-497e-a042-6d30763053fd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e17be6c-3636-4c5b-b736-2c3d213bac06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f7ff33-2d5b-486d-be7f-e14bca188882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d75e51-9998-4534-883d-56c42c8f1b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d807514f-23bd-431d-983c-34f9874ebf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbb0775-c60f-41c7-80b7-0e02f6699d65",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce53ac6-f199-4a8e-ad4b-9b62c02dfb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc4c281-c658-4446-8616-2aace7172f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b1cf70-e8b6-4ec6-b348-9a8d0c9a90da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6235f40b-cf5c-469d-9fdf-d425f8abf094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f85f23f-0e65-411d-8fe5-87a4dd2cd474",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6600b6b-36b6-415a-ad52-f239f7310e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce6f28e-81bc-4351-8acb-ce1176a229d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aece36a9-34e1-4392-8126-e0867c127bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04deee5-0caf-4787-9379-a5e7d1cc95fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a759e876-fb22-408e-b4ca-1c216437a83b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a6bbaf-1756-4453-a553-7ccc9b7f06b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f65ad7-a8e9-42a4-bde8-5831ad9ffc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da62e610-f878-4f7b-9d9a-149a67564581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb6397e-30b5-47d1-a2e5-8905c0dd1e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f01e86-6df4-40ec-aeb5-39edff9aa50e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d2e611-9b4a-48ff-8019-f2ee294f0885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d737649-2b7c-41df-969e-773b2358bfe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c487e0d1-23e4-485a-b472-ec6523be29e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d775e985-8646-4841-aeee-75aafa641668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cee63d-2250-4e4b-a55e-f6762aebb720",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3f7249-bbe5-4dd3-a311-f962b8a20447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7aa637c-19fa-4035-b339-f900c2d843f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa2813e-c6af-495d-a99e-7e21bb4001ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cc3b87-b05f-4df6-b02a-3c1be73ac54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef85937e-254f-43dd-a016-70b36d9aa34d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6689cf8-d1bd-474b-9585-87a4f29d51de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802347e6-783b-4ae6-8e15-be0e974366f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5df45e-4254-4b36-aae1-5fb3482ba871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e680ec-8b1d-4c37-9faa-9cd6b64451dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c41c3e5-1adc-4299-9339-1937c30ea1a5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26985f9-cb2d-4bab-9de6-f2aefa7223eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245e26ed-cef1-49b3-88fd-f1dec471bd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a332e4-f202-4ec1-8303-40d15e2aa4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5f698a-daa2-4819-b090-edecfa163030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600e0daa-183d-4323-a88f-4cda849df04c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b085f18-e2fb-4ff0-8fb3-70690567520c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3962595d-6ab6-409c-bd27-a21c84b9ae33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc8b45c-bf28-444b-9972-eeab13778843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea9b7b1-37c8-4208-9688-19963dc75898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b14213-c509-449e-9269-0f8364f2647c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21223c5f-5db6-40b5-9bef-1dc00155856c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158c7bb1-9150-4f18-ada3-af7c2f6acefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a649849-1e10-4a0c-8891-58eeddb54885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53951daf-d840-4866-a462-bee0aac1cb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5959d7-bc9c-4837-a9bf-87170743ebc3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00fa7ef-bb42-423a-b4eb-2aebddc7dc88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa79f55-577f-4d18-9491-a60dcd362717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc61e55-64f7-4645-a220-88e262c1c28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671a0758-2169-46ad-8486-6fabc06fffff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5225cbc2-47a0-489c-a044-a8ad20793e48",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa86d091-02e3-4fa5-8d05-93bd71590596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c1c44e-e44b-4a44-b6b2-99a2be1e7a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d32b76-96e6-4673-bd9e-85a4dff0825e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b8b6c3-0dd9-4694-a2ec-cf3025a631c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660777c1-0954-4b44-95ff-7aaeda9073fa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36798932-7273-4f35-997c-5b2a9aa43f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee88d0a9-1085-448d-abc3-c1c66ecd97e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718e86b3-cd1e-4612-95e5-f1e4a9fcb1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33b88c1-7d62-45ef-8edc-eb0cfae9b3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d201c6-dcf2-4b89-a84e-511249a135b4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934f3423-0218-4046-89ea-5f065ffb40c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b208916e-19bd-4e3b-b1cd-3b51e6b05263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f69b836-8c44-4cbe-8cc8-0d5d2f1e8a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983bb393-f0a9-47a5-a4e0-19d52c4a0ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a23001-4821-4c25-a375-40dcef41d559",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21e76c2-c918-467c-9ef5-31ca48178772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e16be13a-7e3d-493b-90b3-23c5f655e402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce23686b-31b9-444e-ad68-4d9f9efce3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abebecf-db69-4f4e-b12b-5e7d1ca25057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58410ad-b9f0-4688-94dc-3a1c2e8a57be",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6d2209-6b66-4b34-8bda-004993349f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23477ba1-ddff-4030-a3a0-13de5e2c18f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13aa2b1-fc45-492d-ab67-274d065d29b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fd6a08-d4aa-463b-ab40-0d7b16e6b194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc520d03-200d-44fe-823e-1eaa7852e92a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f61b41d-a847-44c1-b704-835d17cff799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bc6ac2-7fd6-435e-aa49-4b002ce32cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9afa014-fc8d-4452-8cb3-7d0926ec201b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89179b78-bc28-41a0-8c6c-b7540d8a300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845bf7ae-d208-4534-8f0f-fcd37c756247",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d9b125-5159-4100-a663-1acc5ffbe8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cee711a-c7e0-43f4-9ed8-f237c9a356ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1f225a-ece0-4825-82ed-b2ecc112612b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436234cb-ebd6-4d8e-ad0c-a3c53bda0eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73079fcd-e24e-4d91-b6aa-567e87cecfc3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b469881-12c8-408c-a77c-ffb3a5fb60e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ad193a-1400-4138-a44b-232bd5df12ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246d7ee4-f380-46b2-9287-0a4db924e101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b0caeb-dc20-4918-9442-b01d75230657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8c8159-1bb6-42c5-a30e-d0613e060b98",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b83bf1-420c-4711-9787-e1e815af4ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e75a3e-1b34-4087-8835-bbc25143e21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20126734-8acb-4602-ac89-4f01b69208fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaf12fe-f6e5-4318-9c21-ea3f83e87e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8ad878-659d-4353-9c0a-343ee785f24b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a40cda-f3e1-401d-b969-23c03d793680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6048e35-26e4-48b5-81f3-65e6c923ab14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7225011c-e34d-4bf7-a8e2-36d4b46904da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb6eb60-0ec4-46dd-9b33-b3da7584f7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53051122-13d6-4998-9d40-1f9400c8d8d0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d9e235-b29c-40f0-9c4b-8355e98b174e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b754b6e4-5880-4c9b-aa71-6a8424222df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dfe0ac-3814-44b0-861b-2bcc0358ae6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05bd242-1387-4196-b64c-15d1ff113138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6a3464-976d-4048-a28c-982718f878ce",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c8dcdb-bc47-469d-aea4-73c1704164a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31fdca2-1cc0-4de3-9e9b-3191fd3925a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00eaa9c-67ce-427e-823e-2b1f0320b20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213cae08-5a78-4434-bc5e-1651f14165fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46493e53-0e11-4d52-9fb3-547bc36a5de0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b27b70-589e-4d9c-8a15-fffbf9988ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350c3fb6-da5c-4062-bcb7-9c2ac7c0ff74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aa533a-10c1-4776-91ab-045657ace1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c1b567-a50b-4f00-aba6-77d6ba898de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170912c3-49a7-43dd-afcf-f9c12a726a63",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00060180-2573-4981-82c1-1ead661b09fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931a2aa7-aa01-4b1d-91a7-45fa073e074f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4db84c-8268-4940-8b33-301b422f5da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c24118-7211-4a4c-9fa5-6a41225183e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1857ed62-9abb-4927-8cf6-7ab8c1077588",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cbc40b-786d-420a-92a3-aba4b31cef18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae9a9be-8115-4cea-9f14-c7c23676f6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72e5b2d-52a6-48d5-bf44-febb9656b917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5268df0f-843f-4643-8a5e-27b49f27adb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f90eae-9647-4f0c-99cc-846b1b8c6acb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f44325a-6502-4dd5-b957-860d78326730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e983e364-4036-4831-a788-9f9add52ba5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161d599d-b7e1-4afc-8601-69357e863dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87c51b4-15fa-4dee-bb60-b533d29a64e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c193bb0-c54d-4ccc-80e1-d8144579788d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad03410-7128-4f50-9251-9fb4e407776e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e82e169-a0dd-4f8e-aba9-4cd45c49016f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653535bd-210d-4f9b-bb14-b63e264f2eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07deee7-058c-476f-9eeb-9bd1d69798ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd22a37-8cb4-4429-aa88-bb9c8c5086e8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be6056b-8864-4bc3-a6ca-6e9ad4ef279f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c40fa7-4876-4fa7-b2db-dc538503c900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb3308f-3299-4c2c-8d97-0c469eb8906a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351b7e16-37a8-4810-bc08-914b36a1ee6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07010b56-2eec-4962-9669-210498cf944d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7e0d6b-2c16-4b87-8df7-fd1087dd7f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51965e88-a082-4092-a0ec-907ebd937896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d12742a-544d-4a94-8438-21744ebd70ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5271b099-ab1c-4580-be54-af6d6fe10609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a91af1d-e75e-4fb2-a8cf-6fc51d5fc5fd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd492c6-5097-4dec-b1df-afb00582d540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c43abeb-0fb1-4d0a-85ce-4d05f121a768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6264b8-499a-4a68-8bdf-9f344b3efceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78952b90-054b-4128-a5a3-d600c5515a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb95bd8-6228-46a8-bd64-80813b74693f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ac5892-89f9-4f6a-9ac2-f944f75ad8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823c698d-e10e-47e1-8d12-18e9745a940b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7784752b-0e16-40f8-b04c-a621320bd460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea6d0e4-9b09-4f6b-bd03-b73eafa679b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60f11cf-5c4b-4465-aed1-9a955cef415b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573e5736-e4dd-4484-85ed-1a33d89292bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98baacb8-2766-4156-92b5-480938ed9534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1f28cf-2211-4feb-b0f3-da035b69bf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a97d73e-6494-41c2-b112-28e59908d650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adaafde5-4713-4b56-ad76-3a29b4d2e105",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee82f9a0-4fcb-4a73-82db-058eeda1cef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1b41bb-4840-4296-bba8-6e43b5008c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b67f779-0f03-433e-b558-398455007e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b082d6-bce5-4c51-917b-0e310c7f1b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb04e2c-b7de-4363-a3ab-91014a6839c2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3dfaa3-2ef8-4833-9b6d-d52e64e41061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6b9e3c-6a6f-4633-8579-3e066637c08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c274d7f-0711-4403-a240-ceb467621e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6303df4-29aa-4b99-b956-ee0da0faa3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a35fc0-a47d-467c-8ad1-cf989a155a42",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4700aee-9fdc-4902-ac8f-9c4137af6d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05621246-dd8e-4e78-84ae-e3f12f8fbc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08fc7f7-82da-4700-85db-04185a0be3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b39df0-9ffe-4c8c-bad2-1bf16a44d73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7297aa4-6442-4147-bcc5-9f0c0d7c6a78",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8619dd79-098b-4ea9-a500-990097e19f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db92f73d-bb7d-4e43-a4d7-78236f8cc0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557a0acd-8ab7-4b14-8afe-9e2fe6341b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6c9833-fd9a-4d29-bc7d-78417b49ae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480c8b36-f5e6-4311-b210-13d28084695a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fca051a-e631-402c-913e-d6ad858716ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf197d8-9fdd-4cc3-81ac-a3c977545134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079bf0e7-2cec-423a-9daf-caad82befc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0554ba8f-a676-4e75-92a4-7e604aedd7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dae55c-4274-490e-aa99-741bc2924d9c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92a2036-2dd8-48c1-91d7-3e9fb5290bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10475459-b804-4cbc-886b-c1c102c01a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796b6fbb-7b47-4e03-b945-0287f2d28f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b281261-0645-44b5-b02c-ae478901df28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431aaaae-6e1f-4130-8a07-95ecfccbb284",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece3a935-49e9-44a9-9c07-e8fe25e55457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce062cd2-a2dd-4b6b-b1b9-e2f1b5ea7223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92033ee9-ba10-4db7-91a1-7ec83de6e1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60228a3-2d10-40bd-9eb6-9df1b09b4ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f558a5-7827-4893-8187-9009743940ab",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813c954f-7f7b-4603-bbff-5867d04f40cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ea42c4-f7fa-45e8-ab4c-d124a34a77b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2043ced4-caf0-4927-a368-218e28f1e21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85de3e34-6f9e-4b73-ae5c-822bc74c72d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22860865-b387-498a-9c2c-92d06b0f9302",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8990bb-b293-4277-856e-94658de429b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cf668b-d3b3-4edf-a228-fd486cc3aff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7db8cba-019e-4d86-847b-199697b3152d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ee10a1-6fe3-445e-8cd3-9e08252aab53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4b1f34-cb8a-4ef3-82f2-0b3b9f7c3882",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45285297-6e02-4293-8ea5-cc5dbd0d18ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22919896-75eb-49ec-a7c8-7cc474759d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd54930-7aa6-400c-855a-4cdc0348e8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70106560-2465-41db-85f1-64f448eec05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4642272b-32c5-4c6a-aac2-8ee790e243f2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3f1226-27da-4a97-96a5-75ef82db8e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321c4fd6-a933-47e3-aa92-c0683e470757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b8add9-39fe-4dfe-ae45-9f9030d32d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc1ccfc-ebb4-4b26-90e0-69916b1e11e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84c8c09-465e-433a-b75a-7ebe9b1c7be9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b80e71-532a-4136-bfbf-dbea6b033564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0487172-436b-4526-a0d4-dc098d7795af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb924e4-e3c1-4322-9908-d979de16e4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dedae4-a3b3-4b68-bcec-53d05910d871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632a329a-b1e9-4e91-aaa9-19aa4b8f6a86",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f7dbb4-8a33-425a-abe6-727ff2059dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c11ca25-992a-4c09-ac39-ba5f9c73119f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f2c501-c4f9-463b-b921-b30151f7090b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1607e7b-fdcc-479f-8622-00750e4068e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d36f210-0993-459d-b8ad-480b69cc0104",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f8950f-a87e-4715-b24e-bc87a9ca4d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1d59b5-2759-41a7-a3e4-90c36922ac23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2003e6-8af7-441c-bd12-570d6a5946fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3ef296-434f-494f-bf28-49ba81f2fbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff070d6-8ecd-4b94-a0bb-dd592b9f9725",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cabd1e-b43f-420a-80f5-c73ab4f57d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6370582-315a-4cbc-8f44-e614fd4f490a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321d1494-f07c-48c7-b21e-f118321406cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46a9364-50c1-49fe-a81a-39d499d89881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0612773e-3ad6-4829-811e-7fbcbd341a2e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8af8dcb-a19e-41cb-8115-469ac7540562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea7c8a62-c9c0-4aea-9319-0829e566fbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f51aab-9a76-4cc7-88a4-feaea2dd2935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff982dc-99a0-4623-be9e-583db970bf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7e9c97-7b91-4cd0-97a0-f4d5b731b89d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc0c1f6-b44a-49c3-a380-ca7738f28b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9af0660-6763-4b8c-9315-92ac5044954f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b61a1cf-e35b-4e38-9c45-a80eb316a9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb5abcb-40d5-4791-bbcc-133bce362483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286f9e79-1e9b-42f2-9420-ab967cd9d29e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8222a899-0939-4240-bea3-b1e1ae5194a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1bacb4f-1a56-41d1-8833-96e11edfa0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc06b6c1-0ee8-4ea0-8427-de9fb02c9e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b724e6-be7c-4bba-941a-7963f49159cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b737b9-4763-4ea4-8f64-a8bf33ee9832",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1584e77-fe98-4a46-a0fa-8fe5094b6b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f99cf6d-b3d8-4af7-8bef-1b07cc93e14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf066aad-c7a5-4893-841d-32cbe233866b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7975a8e6-15bd-4a62-80e9-f45debc2464b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae93f8c-ff08-4c95-8693-e75522dcf4a3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e798d690-441f-43c9-9eda-d51b449dba33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be22493c-79b1-4034-9672-df8b1715e0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20926db-7fdd-468f-a880-4f86a8f3247f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c82914-fee0-47eb-a2c8-ddf01e33919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b09351-5f02-4ac0-85e8-0e9871d1821a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cf6c67-a8ef-4b94-9114-f3b4a70a5b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f4a046-a45f-4863-8a97-6f0b64f57d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be00922-dc3a-47ee-8fcd-8a6398eda802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1440dc-30a1-447a-8e5d-2ad5f93cf2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a79c23e-d7fc-470f-a729-70a04447e54a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec463ff-f3e7-42a7-8c57-0dea7cce2af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b2b840-8824-468d-a323-50b393060626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dab0a04-c6d4-4146-8e55-6537f30b99bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a329809b-761d-4119-84f7-58e71c657a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e872dee-57b7-4844-9ebe-ab43a1000d24",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e83cb6-6c88-49ff-b5cb-b0504d649989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e04f49-dd40-425a-af03-1a6a312d8015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe551b8-9cbb-45cf-8cf8-68932e90c701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2dcedd-acb7-4bf2-9232-850b155abaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92615be2-c6fb-4048-8185-1771f374a9e3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fac7564-0ce7-4cca-8ae7-d7e5155e6906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb735045-bd96-4655-9024-a7332e67a8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4fa4c6-4f8c-46b9-9ddd-b54ced746a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700a52bf-03df-4be7-bfc0-fc2ebd9a0bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25322a73-8655-4b5f-838c-d263cc0fe321",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4fdeec-d26e-4d43-9c8f-56bf1a21705f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7768c896-676e-4a47-b7f4-88b60912592f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc7f891-d4a2-48df-b661-37a784f31e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8cae38-fb26-47af-93ae-991a6900a057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa54a173-dc7e-4047-bfb9-3608bb368952",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ad6da1-7f46-4ae8-9d19-79694f230c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf56e01-0456-4e64-9e05-49925b04d2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765a4615-aa30-4c63-8203-d00ea87874fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b555972-d7b9-4fdc-b91d-be33bd98036d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275d2b52-6338-4f37-9cfb-d971c1ce193f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28394696-c7a0-44aa-b7f6-f0492fdde8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8387a15c-283d-4fcc-8fe0-93b7a165c2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bb0873-553c-423a-b6d6-0fe9f08ce05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a00a55-c0d0-4aaa-96ec-4a1b1961776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fc67a4-8bb0-479e-ba6a-69cca4601d80",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f11b869-c363-47b0-b360-e3da1ff2d296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253fccb5-2e55-419e-b5dd-d1554fa1cb12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaefe90-1d96-4cd1-b33a-16039d3c1a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c8b5f9-7f76-4282-b6b6-c05f35478269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fed397-250b-4ca3-973a-12c5445e6f02",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8edcc65-af14-44b4-b153-0f1f6e40bd6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0fddfcc-b31f-40de-9a21-d8bf904ff415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da64326b-7a74-4116-b319-1a3b061e7c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1bd9f8-e788-48a0-9fea-bca49abd0b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4284fbe-37de-4236-9eee-27f2d40372f2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec72d69-bceb-4e28-b18b-b0003ba199fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bf93aa-97ae-43ef-86e7-7310ffe9be1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1624baf-5a89-47ab-a525-c449d4bf38d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95970ce1-370c-4d88-b394-1dbe4dd9e870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160b4eba-bcb8-4570-bc65-f90e51bb1fab",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bead61-4845-4d2d-a715-67bbcf01d194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12765ad0-657d-4905-b7a7-a83bd2529324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d73830-a598-4100-8d29-23b1a33ee61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88008e83-a5d4-43cd-b7a0-5ea2de4618da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6eb711-c1a0-4b31-9f70-940b5664d8b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5d7add-a4be-4b27-ab35-7d6c10cc3a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aca9faf-25d4-4db3-84ec-638f34fb5725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010eb665-2e61-43e6-97a1-95772d0210ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98765610-6810-4798-ad43-154276783f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24839f5-12ce-4585-9db5-e915aa43a6af",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8809ea5c-59cf-4dba-914e-9cb68742c2bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7fc24b-6b61-48e8-8794-9da87e7d36fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45f41d6-5034-4ae9-a546-69f84cdb2647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82209932-f249-4e74-9d97-e8e31c1c452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a281f62-3250-4201-a56e-9cba3c069ed6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7e6d51-b8b0-498e-9e4b-d14a799f8a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef74abfa-b1ad-41f7-88eb-29fa181e0eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34aef12-698d-4854-9cfe-cfa20bb43177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf4d3e1-e784-4fe8-91d3-5459a9bcca04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c57f89-caa8-47ba-8e77-b419e9bef5c2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b550bc2-9893-46c7-8d08-309446dfa4b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08e9810-39b9-4110-bfe5-9de3485daf70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c67f9eb-a448-4ae7-81bb-066ee4c073d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc114da8-27e7-400e-9c70-b5b61590fd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51343016-7c5c-4acf-a806-3f37a5e74dbf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08c21c6-e888-4a61-81a7-65360e64ddc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4ecc1a-01e2-45aa-afb3-6e0b5d2c9f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c3e779-dd3c-4a33-8aba-75ec70ebff31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a01f124-5d3f-4ed1-a26f-adff1afae977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e88a46-db61-4c21-9a89-d4a8e11120f8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847380f2-3eb7-4f07-8c41-af4e4151fb08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37c6183-2467-4382-b6c9-6c4b16ae2018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3ef28b-f43c-443c-89c9-7f5f358a7d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12087097-0fdd-4992-96fe-07c59d141033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa8f50c-4f84-4497-914a-63b9cfc648b7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c69c003-e0df-4077-b97f-bfce2e144868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64b59bf3-49b3-4e67-9a89-571e9db13d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b07b3e-e2b1-4c2a-9bd3-316f79ad47e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cee8f7-fac3-442a-ae02-6a92862439e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f5bec1-40ac-4203-a0e5-d89c2a54047c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32ad26f-0f4b-4dea-81b5-a04a63dfeae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e03e32-1c19-40e4-80f1-2842502588f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afd8fe3-e520-4367-b2f5-7834228f2bb7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f882c5-4a59-4908-9b44-3e645ae88c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce85fe1-4915-414c-a3be-0edb2bbdfd83",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dea92db-f49f-447a-817a-ddaa4f4698a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e422c4-2f77-47da-a0ca-400ea0fc00bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3161b7-939a-4893-9d10-a880c53cc6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65190f1d-c184-45d7-af10-c340ac654aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bab6cf-3f3e-4ccf-b2c4-fd3e0498e8ff",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24ddcca-64fe-48fc-863c-ed69a563a377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e951b249-e868-49a9-8e7f-6e780f0638c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50366656-d9d0-4d70-9ad4-631f5444ad5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849513fd-1357-4583-85d1-01fae2a74047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e990b66-2fdf-43b8-8805-6a6260478677",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baea87f-dac0-4957-8158-d368a0dc510a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e8c86c-21c1-44c3-a974-76121743dda6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a8e561-95bc-42fd-9c15-45949ab115d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7480a18c-80ab-496c-bbeb-efdb9a2307d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4487b3f-789a-4b64-896b-07e3afbcf807",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c034d05-a8a7-4fe9-93cd-0e13c0741e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caac70f7-2df8-46fb-adf6-d1fa22094c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e27b938-4630-4c98-b32b-e6f7288bc836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1be5d8-07aa-4b11-aa39-b8878c85b849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5a37cd-ba44-4794-b7aa-43fd72b59dd1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40fee4b-86ba-43c6-931a-d520c2ddca9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f41c7d9-97a2-4c42-9853-589e6147606c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d951240-63a4-4c48-a14e-1c0e7a702992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc069b9-c702-4d17-9ec9-f6e0aa9c1a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bda800d-4cb1-45e5-a272-dbd33062d42a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167a23d4-ed7e-4a97-9607-0d7350ed257e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d1fbe5-5ab2-47cf-b41b-96013bf23e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec011fe-5e5d-40a2-bb57-1404a9911404",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bc2b74-a224-4bee-83ea-d196b7396c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c438972c-a724-434a-8a4a-b2a93e6a7fa7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c380777b-6373-4d36-8fde-b23abbc7f377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587a43d1-723d-4f88-af1f-53d73c462196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924da552-04ea-4531-8f42-dff08531e5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f452f1c4-f14e-43df-888b-ea5de677200b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "250ff100-91be-4ce4-b462-b669d24f8087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "406a870e-9f76-4d8f-8e58-b4a429375456"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a75cfd2-b48a-4484-ba19-303628fd2f60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d2839c1-1f05-4c7a-a316-0403d0f8cdc2"
                    }
                  }
                ]
              },
              {
                "id": "ce6864d3-f0c5-45b2-94c4-844ec637bdf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23e384c2-6ea9-46ab-986e-794e307744cf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57251996-309e-402e-b4d2-58250b90d245",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8e985330-b2ad-47dc-9947-01067874f8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7ac7d7-376a-41ff-ae98-eb913362cd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ee274d0-8d31-43fb-88c9-86ca6b9361ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da246a31-dca9-4f01-ba43-c26b89f60162",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61c3cfe7-c70b-45b8-a6a1-fde73f1e8b8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed1d38ca-943e-4e22-8912-63403f896f1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6afaee1-8268-4865-88b7-467db2f382a3"
                    }
                  }
                ]
              },
              {
                "id": "0ee1a6d2-4545-429f-a77f-16d2371c3212",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5f548d9f-34fe-4500-8082-4c4f40e5be5d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7482a8e-ea39-4013-ac7f-7b5d9f8fe90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1581b7e8-220c-4171-8f05-0020a5e391e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3721a62-7913-46a5-80ec-e35a2b66bc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad46928f-026f-4eff-bfe8-b631413f1b17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e7bdf74a-4a9a-42bd-b8ef-d5c0601a2ec5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "735644a0-95e7-495a-91b6-2011e230301c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "234ba674-d517-4f9f-9898-3ac7d435878f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5790a588-54bd-41db-92a7-eb7b33f38285"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb25328c-fba6-4e7f-954e-715ea11d56e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6161d030-745f-469c-835f-840b67a297be"
                    }
                  }
                ]
              },
              {
                "id": "364d1cab-9ed3-4a42-9716-315edacdf54f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3da36918-e21d-4a6f-88d9-a788053e84c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3673ae50-6f12-4dd1-ae1f-bf3799c83b40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "285c0615-4fcd-42e6-81f6-7a15b53d98b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87a157e8-ec5a-47ea-8ce5-0869e0fbe5e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "565e20bc-6a55-410b-8004-e07b3ac76976",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "12792160-a10c-4d2e-8cd1-8d5131b45579"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f945270-4f7f-4a67-899d-c1f73f55a856",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0bbd84f-16c7-47b7-bef3-9595357fc1b8"
            }
          }
        ]
      },
      {
        "id": "e070aa2e-928b-4b6d-bf63-712ec01b2282",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "40678047-5673-4c00-959f-9dbe44886632",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65d12e35-8977-493b-ba77-435494921aac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b860ec6-b32f-4ee1-a7d6-37e1fc44cd73",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417a53f6-56e4-43ce-8f05-075e60adc60d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f535f071-6f75-41ff-a3db-95426082d1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b548dc-9dfa-469e-9ba7-c3610c252372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a18a669-31ad-42dc-a4ae-8189754b885f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26569c9f-bc87-4a52-98a9-f06e88725191",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b914dc70-946f-468b-9b20-861e1b903c6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fc33b57-67d4-4035-a3db-4ce24a65b95c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f365dc00-48ac-488c-ac39-bd99dcd9684e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16734612-37a3-40e5-a8db-2b85f55c0730",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e176a91d-1687-4293-a761-b367ceca49b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14abe9d8-5f78-4c1b-bb86-1a6f4fa7c286",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dcdad17-7306-4f13-a487-cbfa452bca53"
            }
          }
        ]
      },
      {
        "id": "e36fedff-eb3c-4bbe-871c-7cf0a1d0ef35",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4347c639-9ca0-420a-9519-b68eabc653ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9033137b-cee6-4641-a829-8ecc263a2d4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecc036cf-8b80-4ac3-8d07-5af3824ddb53",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27289df3-9c49-45f0-bcd5-aaefc7480245",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de755bd1-d7b4-4960-80fe-c41cc7b170b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd22377-7194-4f1c-94d3-0c15a9054af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04f99984-f33b-4e8f-917d-9cc8b22d9da0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62b2d312-f3f5-4535-99ff-978472dc6dbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ea4cef4-b4d4-4c72-80ac-18fe50b6b130"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3defcb9f-0af1-49ba-b9c4-53c83c4cc5fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d0aa343-43e1-4c29-89c7-380ea0a85dff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58056d92-34ef-4d3f-a971-c9542de74267",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38dd11bf-4574-4076-ab20-c15334bb4094"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16d68b51-3e04-49ba-95a0-d5b10aadffca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "680aae64-2517-4ab9-8d07-f8f09d6ea0cd"
            }
          }
        ]
      },
      {
        "id": "8b853a11-b8f5-46ac-adf2-33d819e6e0fb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "08e110b1-3def-4a87-969c-4cab61fee10d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bac1cc00-57b8-413a-80c6-9695ab25b682",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da21924c-731e-4ca4-9eb3-509940e63805",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aba1d59-936b-4a9f-ab1a-6ecda0289161",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d427d74-3420-4e99-b367-fb0beb3e3af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5f236b-19ac-4847-8d6f-669b188591eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "826e12fa-2d9e-41b4-a0d5-23cc91cf9c70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "038eaeb7-5874-461d-9030-6e9d1f7e1ebc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fafbc66-b01c-4419-8be2-6b9b510c2177"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cbee2b0-c74f-4dff-a591-057b70b5a901",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b10626c-1bcd-40b2-8461-78d0f1591b7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7db9b41-79c3-46e8-a4e0-e96408649b00",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4dfd6db9-0021-455b-bbcf-1112edd7c2fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "313b77ee-eb1f-4c56-bafe-e2f2a01949f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d313459-0f4f-4423-a2db-74ac0891e9c4"
            }
          }
        ]
      },
      {
        "id": "da06ee4b-61a6-416f-b18f-aac674a85b2c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "993d51d0-d8c2-4c8b-953e-6e1088d2b722",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86142d1d-8003-47ce-b212-031617582f04",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "31850db0-702a-4c27-a2dd-0198077ff090",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27432ec6-50dd-4124-b735-52e9f946b4ea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c07c5fa-ae08-45a0-b7b5-c5a5fddf1a12",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.09122807017546,
      "responseMin": 6,
      "responseMax": 419,
      "responseSd": 34.51740613896152,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700181336959,
      "completed": 1700181355487
    },
    "executions": [
      {
        "id": "f3726359-3d74-46c1-b8ff-6ac5d4d7352a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5000cac1-6e27-4842-a084-ba50ca540aaf",
          "httpRequestId": "7dc5f9f3-8196-4190-97ec-d2d71916b8c5"
        },
        "item": {
          "id": "f3726359-3d74-46c1-b8ff-6ac5d4d7352a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2d265845-1c9d-494a-ab5a-1e5f56289d80",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "26f865c2-f53a-4147-ac2a-ee1fa640ca73",
        "cursor": {
          "ref": "cb7542f3-871f-4a7f-a419-fc81d256d1bb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7870d202-9160-4004-8b16-d5ad388a7aa8"
        },
        "item": {
          "id": "26f865c2-f53a-4147-ac2a-ee1fa640ca73",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "46662f1a-3991-4d5c-a775-137018244724",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8e8e0868-ccf9-40e0-aea1-623a7b7d0971",
        "cursor": {
          "ref": "266a27b9-512c-4998-97b6-3ac296b9fa37",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "102c488e-7cf0-42c8-a179-f52e5f859b7e"
        },
        "item": {
          "id": "8e8e0868-ccf9-40e0-aea1-623a7b7d0971",
          "name": "did_json"
        },
        "response": {
          "id": "3ca2bfbb-a0ec-4b22-94c6-a93b9cbc8fb9",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b787b-299a-4223-87af-c47f2070f949",
        "cursor": {
          "ref": "ef281eb0-b44e-42b2-8556-ae4148d14891",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "645ca2fb-797f-4948-88ea-6b9e131ba54b"
        },
        "item": {
          "id": "807b787b-299a-4223-87af-c47f2070f949",
          "name": "did:invalid"
        },
        "response": {
          "id": "89553b78-5e8e-4459-b124-99e05fd2acc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b787b-299a-4223-87af-c47f2070f949",
        "cursor": {
          "ref": "ef281eb0-b44e-42b2-8556-ae4148d14891",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "645ca2fb-797f-4948-88ea-6b9e131ba54b"
        },
        "item": {
          "id": "807b787b-299a-4223-87af-c47f2070f949",
          "name": "did:invalid"
        },
        "response": {
          "id": "89553b78-5e8e-4459-b124-99e05fd2acc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8718c183-288c-4511-bb81-fc40f4b6dc8a",
        "cursor": {
          "ref": "a22e7201-0e34-4197-9f2d-c26fe8bc140a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b2ad21b2-dfa6-4f04-bfd7-febeca2be89d"
        },
        "item": {
          "id": "8718c183-288c-4511-bb81-fc40f4b6dc8a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "88278d29-9cb0-4593-a4e9-84a3804fddd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbace4b1-e397-4cf1-a15a-303e1dce510a",
        "cursor": {
          "ref": "57e576c5-b811-4145-b213-7ba3aeb21402",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d84dd1a-d34b-4180-8362-4fa9d419d667"
        },
        "item": {
          "id": "fbace4b1-e397-4cf1-a15a-303e1dce510a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e967d5ef-3cab-40a4-88b8-cdcbe16f803a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203da8e0-5250-4ae5-a157-963e59a0a030",
        "cursor": {
          "ref": "8fcb65fd-e140-45d9-ba87-e91b47d19a7f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1538abfc-5458-4bde-a741-69dfc6ade0d9"
        },
        "item": {
          "id": "203da8e0-5250-4ae5-a157-963e59a0a030",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4c80457a-5e22-4c30-ba0b-03305e5251e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008eaf81-fabe-4a85-b718-f7faa96bb364",
        "cursor": {
          "ref": "c6b8df4d-81d4-4119-8e34-aeaef9571277",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a94392ee-a400-40d7-b141-1e9711c57159"
        },
        "item": {
          "id": "008eaf81-fabe-4a85-b718-f7faa96bb364",
          "name": "identifiers"
        },
        "response": {
          "id": "ce7fbe87-1306-4487-8832-465987328513",
          "status": "OK",
          "code": 200,
          "responseTime": 236,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc3fc53-5e71-413a-92ff-fda4c97ffa64",
        "cursor": {
          "ref": "336c356d-14b4-4c52-98e9-e5e74df85e0f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b244e7af-573b-4841-af76-195730e35e25"
        },
        "item": {
          "id": "9bc3fc53-5e71-413a-92ff-fda4c97ffa64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0c5b82c4-6475-472c-bb7c-d760beef95cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc17fec-e80e-4eef-95ba-b54950c0d9cb",
        "cursor": {
          "ref": "af89936f-3be3-42cb-a24c-875ef4e62428",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "69e67197-6962-4f62-ab30-5ee7b05c3b82"
        },
        "item": {
          "id": "6cc17fec-e80e-4eef-95ba-b54950c0d9cb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "39e96ac1-eade-4657-b677-16179876a9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c432b8-878c-407e-a97a-a03ef1ee9c0a",
        "cursor": {
          "ref": "6c37ffa0-61f7-475d-a094-5aaa01e6ca5d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b61487b2-2f2a-4e9a-a418-42603a940e06"
        },
        "item": {
          "id": "d2c432b8-878c-407e-a97a-a03ef1ee9c0a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "126d8e8b-dbc8-48bf-926b-144df0249ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cca0026-d37d-4736-ad11-ad4889e2087b",
        "cursor": {
          "ref": "7bd27608-d141-4369-9e05-b9a29e9bf8f2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e54b9bbb-fd82-4b11-bf8b-7e1d16751b94"
        },
        "item": {
          "id": "3cca0026-d37d-4736-ad11-ad4889e2087b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6e786e69-2154-4228-92e4-605a16b5e45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7a61f0-465c-4312-a4c4-a57d4f868a1d",
        "cursor": {
          "ref": "a96c6229-be0f-4c74-a882-c3b0622a7b2f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "936fef26-20dd-48dd-a09b-93bf82985b0d"
        },
        "item": {
          "id": "fb7a61f0-465c-4312-a4c4-a57d4f868a1d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "15da910d-782f-4bba-bc3c-46806389b8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b87fd4-d34a-4174-bf28-54570656734a",
        "cursor": {
          "ref": "75931e0e-644a-4c29-9bf5-b1f258a5691a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a1999027-9c23-4a53-bead-3ccd7c09cc47"
        },
        "item": {
          "id": "01b87fd4-d34a-4174-bf28-54570656734a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ab392620-e6c7-4df3-85e6-8956f3081a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5a6e40-d130-49de-ba6c-646aa624d027",
        "cursor": {
          "ref": "0b15db45-42d4-4466-9cad-825328b59124",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f3c59a1f-d60e-4f19-a973-ccb36542e809"
        },
        "item": {
          "id": "9f5a6e40-d130-49de-ba6c-646aa624d027",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4c789e4f-73e3-4add-912d-a6071dce5354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c255f20-536e-4b09-b18e-424a77da1b52",
        "cursor": {
          "ref": "c908b6d7-3e17-4df7-8518-f9e813315dee",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9d524fcf-91ac-467b-b663-2e053193cfd9"
        },
        "item": {
          "id": "6c255f20-536e-4b09-b18e-424a77da1b52",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "130fd399-5168-44f8-b17d-89160c874934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845516a8-70e9-4c51-9249-b8c9db5597f5",
        "cursor": {
          "ref": "910d3142-636f-44f8-aced-26d28f29941b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1644d537-c8b3-47ea-85b5-86038d4c7c8f"
        },
        "item": {
          "id": "845516a8-70e9-4c51-9249-b8c9db5597f5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f480eb44-ba3e-47b1-a445-2fdbd22b28dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4c976b-4ec9-4fdd-9ece-f479683d4c57",
        "cursor": {
          "ref": "2bb42db5-22f8-43aa-9e6c-85108595e807",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b7e2c862-437e-4917-9f21-4f80a48ab259"
        },
        "item": {
          "id": "dc4c976b-4ec9-4fdd-9ece-f479683d4c57",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "caf2b830-9923-419f-9d7f-b928131e00fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ea61a2-d644-4e1f-aa12-f25d8c338708",
        "cursor": {
          "ref": "a2d7653f-2afd-40a5-ae76-c7ca1f49aa1c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "13afdd75-178d-4315-a3d7-bb4864f4c2aa"
        },
        "item": {
          "id": "25ea61a2-d644-4e1f-aa12-f25d8c338708",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "43bea4ac-30bc-4fa8-b01f-07b82516e7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1b74b7-6884-4b24-aa91-804a3bc497b6",
        "cursor": {
          "ref": "8a29bb2f-8d8c-454e-9523-bf5db6a9f900",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "380cfab1-8187-43b3-95ae-c69cc1b926d4"
        },
        "item": {
          "id": "0e1b74b7-6884-4b24-aa91-804a3bc497b6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6c135da6-3d70-4c62-8f40-445731f60680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5c2ca4-bd35-47bc-83cb-88004af241f9",
        "cursor": {
          "ref": "c71e4257-cde1-42ba-9c2a-12485e814188",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ef8c59dc-25a6-4d5e-8240-f92e381d8ede"
        },
        "item": {
          "id": "1c5c2ca4-bd35-47bc-83cb-88004af241f9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a8fe0a82-fee5-4d89-b11e-24b746fd08fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304989c6-cd14-4708-b29a-ea91994101ba",
        "cursor": {
          "ref": "10b61aad-a0c3-409c-834c-f442c1068576",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4a785fa7-2c1b-4d6d-b444-e55a19196c2f"
        },
        "item": {
          "id": "304989c6-cd14-4708-b29a-ea91994101ba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "330b085f-47c2-4a5e-a953-2b86987cf505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc86b19-b9b7-4d86-81fb-faffdd614f88",
        "cursor": {
          "ref": "533d40fe-5203-4d55-8648-0fb96b666e3e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ca18cd52-0eca-4f3f-b7c5-fc50620c7f1a"
        },
        "item": {
          "id": "8dc86b19-b9b7-4d86-81fb-faffdd614f88",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "22628dc3-b102-44cf-a53d-06ce007a0aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a74f13-9cc7-4a24-86b5-da690d29056c",
        "cursor": {
          "ref": "9b068ec5-d1cd-4a15-9a04-ce400eed9a0e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "758c03d3-57d7-4ddb-a683-3d0fdd426603"
        },
        "item": {
          "id": "71a74f13-9cc7-4a24-86b5-da690d29056c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e3f7df28-e4ba-4a8a-9bef-4ffc3c841f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24531fcf-76ae-4835-a304-514d07571726",
        "cursor": {
          "ref": "355d418b-98fb-4e86-95b7-b9e95e53508f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4b3f6a5-6676-4f9a-a879-2e6480fd772a"
        },
        "item": {
          "id": "24531fcf-76ae-4835-a304-514d07571726",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2bbb968-6b6c-4d62-aeef-e95b901018b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d39063-cd15-4167-bc66-2eeb777dd853",
        "cursor": {
          "ref": "45708c45-b30d-47d9-8b6c-ff0c899f0ef7",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3a3f9ee5-102a-46ba-bd00-e78831188d0b"
        },
        "item": {
          "id": "04d39063-cd15-4167-bc66-2eeb777dd853",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "63606bcc-2ffa-40fc-8330-82029fe15832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf680f48-c9f1-4880-b5cf-4aad30b8481d",
        "cursor": {
          "ref": "bed9506e-3c2e-4982-9b58-0c37e1238ee8",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6553e940-6ca5-4a64-8ac3-6f23635b90ec"
        },
        "item": {
          "id": "cf680f48-c9f1-4880-b5cf-4aad30b8481d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "47b89a0b-373f-4141-9211-8be4884b41ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689e028f-a1e7-4ed9-a535-db9b91f562c6",
        "cursor": {
          "ref": "fd587dde-462d-400d-822a-b5a88c5d3287",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fa938f98-211a-4636-a840-7134b0ca80ff"
        },
        "item": {
          "id": "689e028f-a1e7-4ed9-a535-db9b91f562c6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a12668cd-8ff4-477f-9386-5930d5a9c7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d962e538-f76a-477b-9366-65302dbffe05",
        "cursor": {
          "ref": "e3b07e7f-3133-45a4-9252-64997e9cc265",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3c133903-1b9c-4f17-8da8-2dce5593b6c0"
        },
        "item": {
          "id": "d962e538-f76a-477b-9366-65302dbffe05",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e359c171-9eca-4a19-b86c-30b4d47652ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed2754e-8a32-412e-a579-f7ee68cff256",
        "cursor": {
          "ref": "3c004b95-9d1f-4637-b40b-ac013887ff66",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54e3b1ab-fcd3-4a8e-830b-7eade6f5a3f7"
        },
        "item": {
          "id": "0ed2754e-8a32-412e-a579-f7ee68cff256",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "83f08624-673a-4354-81b9-ea469c499c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006e6d28-5e6b-4774-9f5c-d5092efe3297",
        "cursor": {
          "ref": "250196c3-3f80-4a02-877e-9abe954f541e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fc996193-e69c-414b-abbc-6dab8d44d815"
        },
        "item": {
          "id": "006e6d28-5e6b-4774-9f5c-d5092efe3297",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "11fe630e-b097-4bfd-950a-18c904ac2d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0d1790-8de8-4746-aba6-c04c75702249",
        "cursor": {
          "ref": "4ffd8c7e-950c-4923-9dc5-ebe203f8fb3b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f3e2e3ec-6840-483b-b23d-078036564bc2"
        },
        "item": {
          "id": "7f0d1790-8de8-4746-aba6-c04c75702249",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ae47d88b-0535-4ff9-8748-019e2c02417c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75baa85-f802-4b85-b148-eb006c52ecdc",
        "cursor": {
          "ref": "461dd717-adf2-461f-bc30-1ae8c70331ac",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ab41d553-433d-416e-b72c-79e5081c9972"
        },
        "item": {
          "id": "c75baa85-f802-4b85-b148-eb006c52ecdc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3b69cb5f-60f1-4f91-b929-9025aa57b86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec6eca7-3e60-49cc-9dee-b0adce07f6ba",
        "cursor": {
          "ref": "c57b3dc8-237e-4fa8-b33e-da09a753369c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "158ca3c9-e519-45ee-8932-63280c193636"
        },
        "item": {
          "id": "8ec6eca7-3e60-49cc-9dee-b0adce07f6ba",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e7804027-0e98-4df0-b918-7ff6cfba8ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58329f2-bd4b-450b-b200-a2a6ef7923ba",
        "cursor": {
          "ref": "85386bc1-e0af-4691-87b5-34426d4e3eec",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a8edfbcf-3553-4bde-b6b2-37256c7375cd"
        },
        "item": {
          "id": "a58329f2-bd4b-450b-b200-a2a6ef7923ba",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9dd2d72a-5264-4d0a-83cb-667f4bb33d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7d18b7-7173-430d-99c9-ae14470783f1",
        "cursor": {
          "ref": "bbd1be11-68c0-4504-9d65-459237d51e67",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1cf2ecd4-7d6e-4891-bbab-9c4acd914bb3"
        },
        "item": {
          "id": "4a7d18b7-7173-430d-99c9-ae14470783f1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b48dd4ac-41b8-4b0c-a208-9956071b587a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3615420a-1f5a-4d91-bad8-f493c856a896",
        "cursor": {
          "ref": "76f8f93a-1947-4bec-ac53-2bf621b002d2",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "931b2c2b-b0f7-4659-b92e-d4b0b27ce5bf"
        },
        "item": {
          "id": "3615420a-1f5a-4d91-bad8-f493c856a896",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "54bf49b1-8ee5-40a2-a1d0-bf19280bcf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daab0f65-b81a-4e8b-895b-a322ef73c478",
        "cursor": {
          "ref": "19aca4f0-d929-41e4-8827-13e6ea0c15c9",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9c82dbab-fffb-4583-863e-855b36dff96d"
        },
        "item": {
          "id": "daab0f65-b81a-4e8b-895b-a322ef73c478",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "baa2c6d0-d2c6-4b34-be79-78536464d4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a63d48b-f6ee-43d7-b8c6-10a5fa1335d0",
        "cursor": {
          "ref": "0228a1dc-134a-4ac3-b345-b74d3bb4b341",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db69efb0-967d-4048-8253-ca1b22ecd358"
        },
        "item": {
          "id": "4a63d48b-f6ee-43d7-b8c6-10a5fa1335d0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6fb7a44c-7b88-4dc4-a782-2734069926b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df822cc0-e4b0-4a09-8312-5398692973dd",
        "cursor": {
          "ref": "ad730598-25f1-4bf3-b097-c257021a84fc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "22096fc5-48b3-47c1-a575-9cfc9dfd627f"
        },
        "item": {
          "id": "df822cc0-e4b0-4a09-8312-5398692973dd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "022ac091-62a4-4e04-8ede-ac695f1b01b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f4c531-3376-4dd5-9fc3-583f472377ad",
        "cursor": {
          "ref": "d73f803a-9673-4101-89f9-074134d7b635",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6f354a27-f0d7-4a05-b049-9865616e2488"
        },
        "item": {
          "id": "95f4c531-3376-4dd5-9fc3-583f472377ad",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "573eb8da-ea0a-427c-afe5-f1e202fbe652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c876daf-d81b-4616-bd17-7ac18c478837",
        "cursor": {
          "ref": "24ee8e77-eb35-4abb-938d-ea208d18453d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "45ee3117-b4c7-4cf1-b1d2-3ed1de21dfa0"
        },
        "item": {
          "id": "5c876daf-d81b-4616-bd17-7ac18c478837",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "29bfe2b5-5220-43f0-9e24-5c90394bc303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5015ea20-d5b9-4011-97a2-161f1212bef0",
        "cursor": {
          "ref": "dfd5f2b4-e7f1-401f-b313-9b2f4810a47f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "66cdaf43-b7fc-4ba3-aef3-c51927cb4324"
        },
        "item": {
          "id": "5015ea20-d5b9-4011-97a2-161f1212bef0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ccd425b8-c60c-43fe-abe8-3b098bf83b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf04f17-2a3f-48f8-9531-daa1365b3e1f",
        "cursor": {
          "ref": "1ce830a5-2488-4084-849d-4dfce189898e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "534330d9-96ab-480e-8004-53ac4449a2b8"
        },
        "item": {
          "id": "adf04f17-2a3f-48f8-9531-daa1365b3e1f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1a7db231-9f8b-47ca-b4e7-35aa7f61fd3f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3695d8c-b537-49b2-b39a-e78c9bf6cad9",
        "cursor": {
          "ref": "358aeca5-9248-473d-b03d-e4e483807568",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ab375706-05c7-455c-b381-63fd821a6ce8"
        },
        "item": {
          "id": "f3695d8c-b537-49b2-b39a-e78c9bf6cad9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e1dda6a4-14c8-4946-8b86-81508aa4ce3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9185bb-69de-478e-b52b-bfa6bf47e256",
        "cursor": {
          "ref": "4fa070e5-a213-48ef-aaf8-d3ed140a5c4a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "42b5345a-19a9-49b1-8749-38a26189743a"
        },
        "item": {
          "id": "1a9185bb-69de-478e-b52b-bfa6bf47e256",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1e0789cc-d381-42d5-8e05-353dc4fd4c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7698dcba-8ba8-45e3-84e0-e0d02179e6be",
        "cursor": {
          "ref": "2fb8c389-5a28-4e9e-9ca2-d9108d98bccd",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "802a64d2-2057-467a-b01a-6fcd042f972a"
        },
        "item": {
          "id": "7698dcba-8ba8-45e3-84e0-e0d02179e6be",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a9b3d0d5-0d0d-4526-a896-dd5f4f5e44c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea0a64d-fe72-4373-b4eb-eb7d7209d744",
        "cursor": {
          "ref": "548061bb-c443-49e6-9a7f-454f3a9bccb5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "43f0e988-0a93-4e27-8bdc-c35a5d805e87"
        },
        "item": {
          "id": "dea0a64d-fe72-4373-b4eb-eb7d7209d744",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "043a41fc-fdb6-446d-a148-717e72fe4b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723837a3-cb2a-4c65-97b9-a10e71521fbd",
        "cursor": {
          "ref": "ccec5c74-1f87-4b43-8839-e75d6e8766e4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2367cee9-7925-48da-a863-aa562cd86917"
        },
        "item": {
          "id": "723837a3-cb2a-4c65-97b9-a10e71521fbd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0ad4c07d-68aa-4f1d-99fd-db1d3f913668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453057a7-e788-48a2-af55-bd6c898bfefe",
        "cursor": {
          "ref": "a781935c-a693-4bb1-af2a-16515ca38fa0",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5d27ff18-9668-495a-9bd6-c5220768ffb5"
        },
        "item": {
          "id": "453057a7-e788-48a2-af55-bd6c898bfefe",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3030e35d-72af-4f68-a9e6-f3b00db4b78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcce2b0-dc40-431f-8520-4cb48857936f",
        "cursor": {
          "ref": "5ccce92d-b9f6-4845-9073-e24a1eb2e408",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "04d3e1e0-78f6-41c9-8491-057e5736a703"
        },
        "item": {
          "id": "ffcce2b0-dc40-431f-8520-4cb48857936f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5c225581-c498-4493-9fda-9781c8c06dfe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f3c427-de8d-4672-9e79-560376ed7d8c",
        "cursor": {
          "ref": "b97ca0c5-3bf7-4efd-ae5b-112e396b8eb9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d9c27b9a-4762-48cc-8f8d-c3da2cbad8fb"
        },
        "item": {
          "id": "10f3c427-de8d-4672-9e79-560376ed7d8c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d44ec502-848b-4697-809a-b69d68eb79a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c98f4b-e1d4-4a29-9bc2-c8d788fec3be",
        "cursor": {
          "ref": "25d08ff3-dbdd-4dc9-b76e-bd02c2dfd94f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "97cb7295-60be-4364-9cba-a0beff882528"
        },
        "item": {
          "id": "f5c98f4b-e1d4-4a29-9bc2-c8d788fec3be",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "21ee066d-0b70-4065-b1e4-c50c42c0178e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d29b9bd-fda8-4c4e-a431-076b308ee5fc",
        "cursor": {
          "ref": "86a6b966-4c5d-42df-97b9-d420d4af2e55",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "45faca3a-168a-4e53-9ac4-abaf23f8da54"
        },
        "item": {
          "id": "9d29b9bd-fda8-4c4e-a431-076b308ee5fc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0ea3439a-470e-4736-b4da-40a146a88611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915e8884-5527-4192-9d93-5c922d4f6b11",
        "cursor": {
          "ref": "73c943d3-5697-4e5b-a1ef-4d8d71a7c596",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eab21972-7324-4c5d-919a-96dd914d87db"
        },
        "item": {
          "id": "915e8884-5527-4192-9d93-5c922d4f6b11",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8643626b-4dbb-44e9-8f7e-87e0324d6cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aa3ca4-2e01-4fb6-8b8c-16e230365f19",
        "cursor": {
          "ref": "5746af9f-8a6e-421e-b51d-69d99c1f160b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0704715e-6eee-483d-a058-e2a11d86909f"
        },
        "item": {
          "id": "e4aa3ca4-2e01-4fb6-8b8c-16e230365f19",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dc8ec9c0-e3f7-43bc-92a5-a26677611446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b03a10-1fd8-4f82-a4ff-ca2cda5781ac",
        "cursor": {
          "ref": "81edbfb1-3f7b-4d76-8250-3a9ceb6878d6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3b5d526e-549a-416c-85f7-6995a70f1226"
        },
        "item": {
          "id": "a7b03a10-1fd8-4f82-a4ff-ca2cda5781ac",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "37960151-683f-4a56-992f-f3206df35de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8920267-05bc-41d4-884e-32b1c74e9d12",
        "cursor": {
          "ref": "799868e2-a48c-4996-9c19-6925efc92f92",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1ec10496-896d-47d7-b3f9-b1e295bfc293"
        },
        "item": {
          "id": "c8920267-05bc-41d4-884e-32b1c74e9d12",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dc8e95e8-4f29-4d8e-bf78-8371317d65b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d49caf-7f9d-49a9-941e-5e3d7aff98d6",
        "cursor": {
          "ref": "7d00d6c0-377f-4189-8876-2fe066a1a454",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "169c9498-e01e-47c0-8b01-f3782e8dc5cf"
        },
        "item": {
          "id": "d5d49caf-7f9d-49a9-941e-5e3d7aff98d6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cdc5b0c2-91c7-492b-9c69-8efc126e444d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb53ef81-1a66-4adc-9f45-a0c8b47b1ed9",
        "cursor": {
          "ref": "0dec75d2-d8ca-4928-96c4-87a9ac69ee22",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5259fdbb-1123-481c-944a-262b71b6ddaf"
        },
        "item": {
          "id": "cb53ef81-1a66-4adc-9f45-a0c8b47b1ed9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5d7f9ccb-89da-43c1-9a3f-eca16dc019b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fe9c3a-c9f7-4503-8763-9f8c17955c63",
        "cursor": {
          "ref": "98762631-f000-4657-886d-5e9db56996a4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c234c0e4-1750-479a-94b1-b569553636ed"
        },
        "item": {
          "id": "71fe9c3a-c9f7-4503-8763-9f8c17955c63",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "26b8a6f5-291f-4057-9e55-ced727902793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb2057f-7a52-46ef-a27c-116511c45263",
        "cursor": {
          "ref": "5ae9bc45-e78e-4fe3-bbef-f4ffd653cbc5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a3ea67fc-7aba-4676-b997-0d66098a3609"
        },
        "item": {
          "id": "3fb2057f-7a52-46ef-a27c-116511c45263",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6de41839-f6d9-4f29-9e99-c946ffd29b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b86d4e3-12e5-4f66-8342-b761dd314043",
        "cursor": {
          "ref": "57bc5fad-942c-4437-b7e4-2977a38f532d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "356f9fa9-5d42-442a-b005-1c3360389455"
        },
        "item": {
          "id": "5b86d4e3-12e5-4f66-8342-b761dd314043",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fede4704-4aee-4490-90a9-953071698fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95826e9-64c1-40de-a033-abd3e8d0a8b2",
        "cursor": {
          "ref": "eaa90704-c30b-43b5-932f-dc25829565fd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7693fdce-d93b-4b7b-9402-ec03c50488ba"
        },
        "item": {
          "id": "c95826e9-64c1-40de-a033-abd3e8d0a8b2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2ee4d87f-17d5-4327-840d-1409c468c9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1867e79-087e-406d-9b16-517177adf9be",
        "cursor": {
          "ref": "6764e189-b21a-4297-8b21-950fa15e69bf",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e754b63a-a0ce-4972-8a2b-299d8886258c"
        },
        "item": {
          "id": "e1867e79-087e-406d-9b16-517177adf9be",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "79ef23a5-ab4b-491d-b9ed-f695c9db7370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71a7f03-94fb-4709-b51d-4bad6891038c",
        "cursor": {
          "ref": "32ad42a4-d714-4485-9a40-954fe32e00a7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dce05970-b426-462f-9eee-4747751a762b"
        },
        "item": {
          "id": "f71a7f03-94fb-4709-b51d-4bad6891038c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "35f10dfb-7fc6-494a-8a68-23259fcbc94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c09006b-fe9e-42fa-b578-04b9a55918e2",
        "cursor": {
          "ref": "ec9bb27b-935c-4cfa-bd99-eac65e577c1b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c4623250-188f-476b-9b5a-80d3a3f28c27"
        },
        "item": {
          "id": "3c09006b-fe9e-42fa-b578-04b9a55918e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f96f1cff-f165-4e64-9743-db741d530252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1400cae-bede-43cc-a1fc-54f06a6b61b4",
        "cursor": {
          "ref": "be9ca881-1ec7-47e7-9333-f442b1b969d8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c4f12285-e6dc-47b2-98d2-724affb2ac5d"
        },
        "item": {
          "id": "d1400cae-bede-43cc-a1fc-54f06a6b61b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "53f8aa49-c3e5-4b81-bfea-3d68d0172802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b2ffb3-9e71-402d-968c-b119c9fff445",
        "cursor": {
          "ref": "5b38b205-d09c-4b1c-9fcd-f071c900993a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1ad0d143-0269-4548-b628-08e57a198e10"
        },
        "item": {
          "id": "79b2ffb3-9e71-402d-968c-b119c9fff445",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aadc8285-e254-4134-bb22-03d6c78d284a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1046e5-465b-4b22-acee-f0ba570d603d",
        "cursor": {
          "ref": "7f89c996-9bdc-4967-95c9-4b35acaab63f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e3f3c650-2f0b-4c25-aa77-3d32cddfb7ad"
        },
        "item": {
          "id": "cb1046e5-465b-4b22-acee-f0ba570d603d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "836d32b3-c016-471f-bde1-1baf6fdc7e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a57caf8-9b31-4e4e-a8ca-6ba9b8e21580",
        "cursor": {
          "ref": "1abacf83-12bb-4d1d-81db-9bb0411c6dfd",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c1c8547c-246d-419e-8401-5ff14d06b7d7"
        },
        "item": {
          "id": "1a57caf8-9b31-4e4e-a8ca-6ba9b8e21580",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2157134e-23c4-419d-8e81-ed728d857ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01a5f5c-1a25-4919-8b6c-f9a2c7033fb3",
        "cursor": {
          "ref": "bc64d515-bee3-447f-9ea3-19177ddfd33b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bd416595-b23d-42b6-bc0a-eed3b9fac4d6"
        },
        "item": {
          "id": "b01a5f5c-1a25-4919-8b6c-f9a2c7033fb3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8e2d9ea6-1510-4f08-8de8-a79f13d4c7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6268fcac-cfe3-4591-9977-9e9275d390c3",
        "cursor": {
          "ref": "3c005b93-19ac-465b-be26-42ec5d87582f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "167c85f6-faaa-4e6b-bbd0-bbaa22adc136"
        },
        "item": {
          "id": "6268fcac-cfe3-4591-9977-9e9275d390c3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b04e27af-cbbc-49bd-bc08-452a015c96cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66feb8f6-c1bb-4531-8288-3ba53520d6b3",
        "cursor": {
          "ref": "201b61a5-f0f8-4380-bf92-c791fdf2c0e7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "90b621e4-d781-45b3-aca3-e4a5a90e7538"
        },
        "item": {
          "id": "66feb8f6-c1bb-4531-8288-3ba53520d6b3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8bf4aaa1-43be-4339-90fe-133212011486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a8d50e-e349-4d17-9790-30b3cc858697",
        "cursor": {
          "ref": "69f84094-bb35-4bfc-bda9-50babbe6ab53",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "03da75d2-cc2f-4d00-91f5-2de6ad4cf7e5"
        },
        "item": {
          "id": "09a8d50e-e349-4d17-9790-30b3cc858697",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3d418b98-25c5-456f-acdb-0d8147154f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfda8025-b028-4f4a-80b8-af03d39ab2dd",
        "cursor": {
          "ref": "542026d5-627c-4c67-afd2-dae0d9d08295",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "20f0db5a-1c57-479c-8707-dd38a28d7c80"
        },
        "item": {
          "id": "bfda8025-b028-4f4a-80b8-af03d39ab2dd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "52e5f837-1632-42ad-b1be-7655e7f95a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00835478-7ad6-45e8-b5ba-47f77c10005b",
        "cursor": {
          "ref": "99637b52-1958-4863-88ef-e7ad891e656a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0888d90c-1e85-4540-a971-edc0593f0e4f"
        },
        "item": {
          "id": "00835478-7ad6-45e8-b5ba-47f77c10005b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e11a4303-0e09-43c4-adb0-662ce0cca78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2ee074-79bc-4797-a6c2-686842ba18ed",
        "cursor": {
          "ref": "bd3ad1f7-5c98-4d89-b6a5-23f56025c68b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fd7e9a02-b88e-4314-89b0-370607fc7624"
        },
        "item": {
          "id": "0e2ee074-79bc-4797-a6c2-686842ba18ed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fde404de-7dbf-4591-9950-d842ff206ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6950163-21a5-4c70-8d2f-55977dd30c93",
        "cursor": {
          "ref": "5ba2524d-e59e-4b95-9075-a903c654602f",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ecff2812-8c91-4c44-971e-91748bb170b4"
        },
        "item": {
          "id": "f6950163-21a5-4c70-8d2f-55977dd30c93",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e8a8478d-9497-4bfa-a236-81010d8832ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8920b0-48ee-493b-85f7-f42a79c329a4",
        "cursor": {
          "ref": "ae02fe07-5aba-4dbb-b56b-bb3b59c3b45c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8b7b467f-f876-4c4d-be2d-535c1fc25063"
        },
        "item": {
          "id": "cd8920b0-48ee-493b-85f7-f42a79c329a4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "88e1cddd-fa48-48ab-97c7-faa4f8e36943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5d9e2b-fb9a-43aa-9f21-54663ab2aa70",
        "cursor": {
          "ref": "431987e7-a1c8-461a-b3be-4bc7ed10a763",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "71d35485-40eb-4579-b456-c7137d85a995"
        },
        "item": {
          "id": "6f5d9e2b-fb9a-43aa-9f21-54663ab2aa70",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "53dcb75a-4dc5-4f46-8107-041bd298da3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50015201-e02d-4550-b420-308c0bc38d2f",
        "cursor": {
          "ref": "fb88d50a-1bf6-4f28-b220-b9492c4b510a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "be774770-9c89-449a-ad31-7313fd32055c"
        },
        "item": {
          "id": "50015201-e02d-4550-b420-308c0bc38d2f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "33cfc9cb-5793-42a8-9ec9-1cbe2e0f8d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea236849-10bb-49d6-ba63-e493c74cc8a7",
        "cursor": {
          "ref": "f2bb3a51-41c6-4329-8b45-256252febf13",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "766ade97-e351-4633-9665-ca3d7cacaa34"
        },
        "item": {
          "id": "ea236849-10bb-49d6-ba63-e493c74cc8a7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4558d403-155e-41dc-8159-f67141554073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1065653-78aa-4689-aa11-b6441bae2154",
        "cursor": {
          "ref": "c2832ca7-5635-4c2a-9975-4c6d8d7c9cbd",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "df169fb6-8c99-4639-b008-42683ff24976"
        },
        "item": {
          "id": "e1065653-78aa-4689-aa11-b6441bae2154",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0de2a19e-88a1-4277-8844-b10dbe95eb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a1a4e6-ab58-47e2-853b-8b8f118ab387",
        "cursor": {
          "ref": "fcf3d077-6377-40ca-8de1-a2d8981bad06",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "65d6c6ca-4f63-457a-9911-c1413d61e1ae"
        },
        "item": {
          "id": "88a1a4e6-ab58-47e2-853b-8b8f118ab387",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e0f4867f-8d6b-4ce4-b141-efd8af3c8cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca4d90-01a1-45d9-aecf-7da7f44d86f9",
        "cursor": {
          "ref": "46d4b9c5-32db-4656-b1d0-8cc6be10faaf",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "af43c3bd-827f-4f0a-b593-33ac79f2636d"
        },
        "item": {
          "id": "a0ca4d90-01a1-45d9-aecf-7da7f44d86f9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "83cec5a3-3841-4775-bdf2-bb7b09c1fd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c545c1-8bed-46c7-91c7-acc5fae411ef",
        "cursor": {
          "ref": "ba989510-d197-476b-9bac-a80c52230e79",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3f944f99-04db-4299-b733-cd864910bf4e"
        },
        "item": {
          "id": "26c545c1-8bed-46c7-91c7-acc5fae411ef",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cbbe9c1e-1413-4a8b-8593-6dd6948c8661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f5efbb-3ed8-4548-ad70-99d4d8347c49",
        "cursor": {
          "ref": "ef362ead-5cc9-4d9e-8c35-8db52266be8c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c1411eb9-65e1-4c3c-902d-4aee23721958"
        },
        "item": {
          "id": "e2f5efbb-3ed8-4548-ad70-99d4d8347c49",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9031d359-7b60-41ca-afee-05d0f9ccd93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4416342c-d2d4-4101-929d-a971e4f1d486",
        "cursor": {
          "ref": "4241a2c2-ca50-4dbc-b572-af700d01d4f7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "20d4b8f4-d662-4df3-91a6-c4e3fa952ea7"
        },
        "item": {
          "id": "4416342c-d2d4-4101-929d-a971e4f1d486",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9da82039-172e-440a-b1be-77aec87e5cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de50f84d-c59f-4055-bcf3-3975ceabf262",
        "cursor": {
          "ref": "faf02d14-4d7a-4cc2-9f92-5155ea923f45",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e6256ed2-12f6-49d9-baf2-392ee8c1d555"
        },
        "item": {
          "id": "de50f84d-c59f-4055-bcf3-3975ceabf262",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2dee6a78-9a3e-4766-ae60-8f217c781125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001707c2-be8b-42ca-a325-8889d8973112",
        "cursor": {
          "ref": "5f7cb8b2-fed5-4c02-ae5c-48d365f6da1d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "746769fd-e161-439c-bd5e-e251748040d0"
        },
        "item": {
          "id": "001707c2-be8b-42ca-a325-8889d8973112",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "98425d16-c1dd-4ae6-ab4e-fd368a3b174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779baf96-97be-43e0-af00-0ec490882748",
        "cursor": {
          "ref": "5abab88d-76c9-4517-8242-e74ad26d795e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c5b3f749-b9b1-41e9-80c6-4ad67fb18bbf"
        },
        "item": {
          "id": "779baf96-97be-43e0-af00-0ec490882748",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e92d6440-ccf0-485e-970e-df77647440f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa06c526-dfe7-4d63-8284-5deff5fe5383",
        "cursor": {
          "ref": "bc3e1cf4-cc99-44e1-a14d-b9ba8a6382f6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "83974576-8b8f-4741-81a0-fa7a2be74bc6"
        },
        "item": {
          "id": "aa06c526-dfe7-4d63-8284-5deff5fe5383",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "836b4a2e-b517-4781-ac29-844e3c3df1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52fa2f2-2e2a-451b-b425-86794ca3f394",
        "cursor": {
          "ref": "c6f7c728-e1b6-46eb-a9f6-646680f12c2f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ec550c2d-8f4e-4fbd-94d2-e78cc8e7f7c4"
        },
        "item": {
          "id": "e52fa2f2-2e2a-451b-b425-86794ca3f394",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "739290b8-1407-4f71-99d2-dcd8f8ae9ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9b45db-e73c-43b6-b5e6-b2add3880d75",
        "cursor": {
          "ref": "1ee69d76-7556-443a-a1c9-231fe7a02d73",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9bfec29f-7cf9-4e29-8bdc-a0c911e6448a"
        },
        "item": {
          "id": "ec9b45db-e73c-43b6-b5e6-b2add3880d75",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "53aa3627-d095-46df-b0ef-9b562a167e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e8c493-dc85-4662-8598-5ff8d8ce4516",
        "cursor": {
          "ref": "269ad7f7-9627-41ef-96a8-c0503fede123",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "31b4d666-20a4-4ff1-9177-a1e591bbc3b3"
        },
        "item": {
          "id": "03e8c493-dc85-4662-8598-5ff8d8ce4516",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ab4d9866-008d-46dd-8fcc-17994442dec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c4c60e-19ff-4d91-a89e-59a7cc80a588",
        "cursor": {
          "ref": "9f3adc22-2774-45da-98b9-6b063208c184",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8c644f52-4117-48ee-a224-728054f78fa9"
        },
        "item": {
          "id": "00c4c60e-19ff-4d91-a89e-59a7cc80a588",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8335603d-1f1c-4ddc-aaf3-e30fbe56d082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de718a4-72c9-4e96-aa39-656dfa871a06",
        "cursor": {
          "ref": "827caa56-6ead-4607-8c08-337378205db1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "435c5bc1-9788-4a1c-9363-85b17f2434e2"
        },
        "item": {
          "id": "3de718a4-72c9-4e96-aa39-656dfa871a06",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "75f8e19f-9a65-4888-b29a-1be954a891ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b25d21-df23-4b45-9564-e7d6e8f3fb50",
        "cursor": {
          "ref": "8932ab5a-89c4-4293-bd97-d4006a9da344",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "865510eb-f58f-4601-87aa-5cf6c215fc31"
        },
        "item": {
          "id": "08b25d21-df23-4b45-9564-e7d6e8f3fb50",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d5f0e6a6-666a-405b-9a1d-531859d52ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a02a0df-3b12-445d-8cf8-47707f2e94c8",
        "cursor": {
          "ref": "1e3c0e93-405b-482f-86bd-28f71f7944bd",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6a7e0ca2-e344-45c2-97d7-96a39b53ce5f"
        },
        "item": {
          "id": "4a02a0df-3b12-445d-8cf8-47707f2e94c8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c1cc4925-4e0a-4a78-aecf-ba037821736e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bbdb67-0aa2-4305-993e-59d27068889b",
        "cursor": {
          "ref": "702040b2-18e5-470d-8a86-a4df3092fb1a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5792aaea-3a74-4201-9f4a-856531ce3650"
        },
        "item": {
          "id": "c5bbdb67-0aa2-4305-993e-59d27068889b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b02ee449-bd06-4761-8a27-86cbf38f029f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419a6049-401b-4c34-8162-d0de93d6df1f",
        "cursor": {
          "ref": "e76a118f-03a0-4459-9cfa-e7bb3dee287f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dfc368ea-b65c-40af-93af-44c856ce3a6f"
        },
        "item": {
          "id": "419a6049-401b-4c34-8162-d0de93d6df1f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "de8559c6-1da7-44de-9abf-e1f456ae758f",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696bf27f-0ba3-4590-b9cf-063383f0d503",
        "cursor": {
          "ref": "0a27762a-0398-4dea-91d4-8d779cfa768c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7099b610-b638-4ea9-bd82-bcd90ab9611f"
        },
        "item": {
          "id": "696bf27f-0ba3-4590-b9cf-063383f0d503",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6124dc1a-2509-4fb4-8b8d-54c417e2fcea",
          "status": "Created",
          "code": 201,
          "responseTime": 419,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bbedb0-d023-4429-b733-681c51da4b77",
        "cursor": {
          "ref": "c04a66e7-26c2-4603-a29c-49d739415686",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "61cd5456-6f15-4d17-8e7b-329a062ca28e"
        },
        "item": {
          "id": "73bbedb0-d023-4429-b733-681c51da4b77",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f15b6674-1072-456d-ad23-baa69ebaff63",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43f8c3c-9266-49d5-ada7-7267669e9cbe",
        "cursor": {
          "ref": "fdc5f268-3f3e-4e8b-bafd-1c1671978aab",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "81c7e4ba-8ca3-4b15-a93a-526c444fd0b2"
        },
        "item": {
          "id": "f43f8c3c-9266-49d5-ada7-7267669e9cbe",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "911549df-9e9e-48b5-bdaf-d4bb591d00a8",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac2c76-9ae3-46b5-8852-e84f02a74233",
        "cursor": {
          "ref": "3a60bf5f-6acf-4135-8a3f-60fe0f6c7ff6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4344f3a7-cd81-4a0a-95e5-4502ba40601b"
        },
        "item": {
          "id": "59ac2c76-9ae3-46b5-8852-e84f02a74233",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "602bf378-92cd-43d3-a20f-ee46db8eff9f",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d083f0f1-a68b-493a-b13b-d73e988c3536",
        "cursor": {
          "ref": "909673e7-4a37-47d7-ae02-35121f819ae2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b240d5be-5b67-489b-ba4f-3106a60eb5d1"
        },
        "item": {
          "id": "d083f0f1-a68b-493a-b13b-d73e988c3536",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bca11c37-91af-441b-b7d9-2007ed60c7dc",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c9ed9-4929-4b2b-8c12-64c73ea2cab4",
        "cursor": {
          "ref": "167c11ea-1dda-44ee-9982-f37fa7962c14",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "59db63b4-e009-427a-9bd9-f6a541f656fa"
        },
        "item": {
          "id": "b66c9ed9-4929-4b2b-8c12-64c73ea2cab4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "093fb5ac-d66a-4f05-b907-b57e15893ff1",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a82875-411e-4750-81d6-000fd12e9290",
        "cursor": {
          "ref": "9ce78e6d-964d-4c81-8221-3b7e6d7491f3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "12cb3db7-8bfd-4a74-9092-591cb8bf4a9c"
        },
        "item": {
          "id": "93a82875-411e-4750-81d6-000fd12e9290",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17e7462d-e3e9-4946-b8a4-91b085732c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b21027-b443-4941-8064-5bd6d9870fa4",
        "cursor": {
          "ref": "aec92f3b-6e7d-467d-aba8-de8675da19e6",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c3756225-0696-4dcc-b176-22e45d8751d0"
        },
        "item": {
          "id": "e0b21027-b443-4941-8064-5bd6d9870fa4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8bce0f1-f4b7-4fc9-86ac-78f96f0df40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b792604-0111-4062-8165-427aaa32f2e3",
        "cursor": {
          "ref": "ae3fe4f7-d19e-4930-9406-b01d5660fb2f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2ce875c0-6e46-47a7-ba54-0ac462b94002"
        },
        "item": {
          "id": "6b792604-0111-4062-8165-427aaa32f2e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6522565b-1b7b-406c-9644-384f6ad67df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605b558d-9609-4e75-8a1c-cc0bb428630a",
        "cursor": {
          "ref": "543e32f1-bff8-4fd8-b3ce-abee78e74640",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "611f8114-8fde-46b9-9f93-313a31df4b17"
        },
        "item": {
          "id": "605b558d-9609-4e75-8a1c-cc0bb428630a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a8b43cdd-23a0-4434-b335-997e2e506889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13511230-a635-40f2-a581-ed184e4b1a49",
        "cursor": {
          "ref": "ae546c4a-2371-4ba8-be53-14c46cbd2e91",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b653254e-83a8-462b-bc23-1142002a4ed7"
        },
        "item": {
          "id": "13511230-a635-40f2-a581-ed184e4b1a49",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9906b769-abd1-4269-a281-d685624d5bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cc33f2-b9fd-4175-b4b1-3310bb600114",
        "cursor": {
          "ref": "6dc5f780-4b7a-49e0-bcfe-18bcf612b112",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4d0774c4-90ff-49db-a305-bf371e4d279e"
        },
        "item": {
          "id": "b5cc33f2-b9fd-4175-b4b1-3310bb600114",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "65db3316-0169-4297-a31a-c0c7813f12a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee904f0-ba5d-4b74-9a7b-42b63d7521d8",
        "cursor": {
          "ref": "1bf476ba-d9a2-4573-aa7b-713b0b094299",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "90dbc97c-aedd-42a9-8883-c6942e3bd5f5"
        },
        "item": {
          "id": "eee904f0-ba5d-4b74-9a7b-42b63d7521d8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6abf0019-8742-48c3-9754-6e79cbb95928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5418b8b-900c-430f-bdcd-2a14e41d28ad",
        "cursor": {
          "ref": "6467f86f-8fe2-4aa4-bbdc-21276d63c5d4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4eba44cf-f363-42d1-b097-86b8e1d41c63"
        },
        "item": {
          "id": "a5418b8b-900c-430f-bdcd-2a14e41d28ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "520eab15-480c-4068-a48c-7961db4894a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69c06ca-bb76-4a79-97e4-21e5a7ae03eb",
        "cursor": {
          "ref": "eb7c5b4c-0459-41cd-bbd7-92032eb30150",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "279b22a4-69a6-4d48-8e30-9ba2bfa42314"
        },
        "item": {
          "id": "c69c06ca-bb76-4a79-97e4-21e5a7ae03eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "50f60c19-cd40-4109-b063-cd62266637fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a116cf-c203-4041-8cf0-3e7acbb4dba9",
        "cursor": {
          "ref": "493b56cc-4077-48cd-b72b-8962453f1140",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b74106fb-3fa2-47e0-a5b2-40f961b44d43"
        },
        "item": {
          "id": "19a116cf-c203-4041-8cf0-3e7acbb4dba9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4882b09a-0f03-4ab8-8fd8-2cc765cea6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ecc07c-afa1-4dc2-8ab1-6b87e21e3d5c",
        "cursor": {
          "ref": "bf135c3f-57dc-430b-8809-a069a5308795",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a1764e8b-dd78-4fba-b742-d803631a767c"
        },
        "item": {
          "id": "62ecc07c-afa1-4dc2-8ab1-6b87e21e3d5c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f5863018-6ab7-4758-8aae-8844528456ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8a7f40-5917-4ff5-9cc4-bfcfcf53a4bb",
        "cursor": {
          "ref": "f1f279ed-5324-48ec-84eb-464b3db2f13c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5721f58a-28e3-4c41-b256-630b1b72b53b"
        },
        "item": {
          "id": "9c8a7f40-5917-4ff5-9cc4-bfcfcf53a4bb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8fa02adb-ce6f-4aa5-bca0-dfeb128334ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add56873-6c0c-4f3d-8f1d-beb0815faf5b",
        "cursor": {
          "ref": "23106056-0cb2-4430-83ea-28eda566fa10",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "601f2f25-24eb-45c5-9446-8c27fb954b07"
        },
        "item": {
          "id": "add56873-6c0c-4f3d-8f1d-beb0815faf5b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e5305571-4c81-4f40-bf0b-ad331231c7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a28a68a-588e-4e2c-9435-db6d9a7a4d18",
        "cursor": {
          "ref": "b05e4a81-c761-4b1b-ad8f-aa20747dc65e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b7f91bbe-cd6b-4be7-aa21-a62a8d03bc97"
        },
        "item": {
          "id": "9a28a68a-588e-4e2c-9435-db6d9a7a4d18",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4326a4cc-064d-41b5-b723-613ea65a2fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468e4da7-e753-4bca-91a3-98213ebdafec",
        "cursor": {
          "ref": "14fa5239-6c83-4956-b99b-ec7d7a044e2a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "94ebe4a3-4212-4480-9e37-d529646ea7dc"
        },
        "item": {
          "id": "468e4da7-e753-4bca-91a3-98213ebdafec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "98eb0f60-c70b-4589-9d2e-6b1541d7e155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a0636b-ece7-4113-9f54-3784d54fa660",
        "cursor": {
          "ref": "6d012223-a799-4c5f-b492-c926ca968691",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0a6770e0-8b12-491a-b944-b4093c6b2324"
        },
        "item": {
          "id": "91a0636b-ece7-4113-9f54-3784d54fa660",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9ccd0d42-c5d6-418f-85cb-24786d287e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3bc469-aea0-4494-9443-a9d4f4d38853",
        "cursor": {
          "ref": "b839c380-eb47-423e-8d84-22f2f623853e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "98b224c9-74cc-40ad-b576-e47da5f1a6a5"
        },
        "item": {
          "id": "1a3bc469-aea0-4494-9443-a9d4f4d38853",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "61843094-7445-4c00-b890-93efd7410e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2004aba3-5e4b-4bb7-b5bf-2a01db9c2237",
        "cursor": {
          "ref": "c42b4640-57f2-4e03-8008-807382c5048e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ad9f75f1-c3f6-4f25-9b0e-687277b38702"
        },
        "item": {
          "id": "2004aba3-5e4b-4bb7-b5bf-2a01db9c2237",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6b4c86f1-f79c-4fad-a891-5b06a3f1bc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc60b54-5317-44dc-8b6b-a844f998180c",
        "cursor": {
          "ref": "23f9b330-440b-42a4-bdda-8a65dcaa7d85",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "23de22dd-c3aa-4641-a508-dc8cc26b6b23"
        },
        "item": {
          "id": "4bc60b54-5317-44dc-8b6b-a844f998180c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c3b050c1-8034-41f2-be2c-577ae5e57ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da5c720-8cca-4a1c-85a3-e25b5cf67273",
        "cursor": {
          "ref": "cf551beb-af52-42ec-aa9b-aa709137589f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c608934c-4d84-40f7-a4ae-bd685437ec88"
        },
        "item": {
          "id": "4da5c720-8cca-4a1c-85a3-e25b5cf67273",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "be1379eb-f918-497a-8222-e256703d243c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366ea2a5-aaea-4175-9bf8-0377bddd47bf",
        "cursor": {
          "ref": "bdfc5759-5914-4791-ac4c-30c4e4005de1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2e4b01d8-22ad-4bf6-bb02-b24d995db8f9"
        },
        "item": {
          "id": "366ea2a5-aaea-4175-9bf8-0377bddd47bf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "90a7e59d-bb13-4054-8f21-682a6a50d8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf58116-a47e-4166-a80b-9236784a69f2",
        "cursor": {
          "ref": "74251590-3afb-4609-bbb8-7ed02de762f0",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5047bc4b-6ae5-4ef8-b3eb-aa1e757185ea"
        },
        "item": {
          "id": "1bf58116-a47e-4166-a80b-9236784a69f2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "44dd4270-bbdf-4ebd-89f5-cabc71c5400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9646715-5bc4-490f-a10e-1aea17e3ee26",
        "cursor": {
          "ref": "9a3492d7-933f-4e2b-aef9-50c5ec97cb93",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6f37593b-0290-4812-9504-ec119d0e99f8"
        },
        "item": {
          "id": "b9646715-5bc4-490f-a10e-1aea17e3ee26",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bc2df4a9-c8d4-4d26-b419-00d7cc5d6db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e9f05e-032d-406a-9668-d34aa9aea23c",
        "cursor": {
          "ref": "802f9146-ca68-446c-be8b-5f485eb8aa7f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b64ab660-e583-421b-9736-2068b48296d8"
        },
        "item": {
          "id": "96e9f05e-032d-406a-9668-d34aa9aea23c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "94217392-d0cc-4b21-9888-7b62af84aa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7826e4a7-a344-43b6-9aff-bb55e3f4b860",
        "cursor": {
          "ref": "4988dc12-afd3-42a3-9df6-17b99ac7182c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f9222c80-8e1e-405b-8823-ee58ff93d1b4"
        },
        "item": {
          "id": "7826e4a7-a344-43b6-9aff-bb55e3f4b860",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a418a8ee-1dd2-4e5a-950e-26a5fbc0b61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a34d6ab-1db7-4f70-a02e-5ab5787133f6",
        "cursor": {
          "ref": "1422561b-c178-4cb8-9df6-90949e8ff3b8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "11e9d4d8-446c-4929-a4cb-c3a7e1800dff"
        },
        "item": {
          "id": "0a34d6ab-1db7-4f70-a02e-5ab5787133f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "720962fe-3d82-42ea-b326-d326b6ed5961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c003e34e-8af9-4cf6-b02f-d58f651d6c00",
        "cursor": {
          "ref": "393601b9-3766-402c-afa3-0fb8553b1ecb",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5fc341cf-4f06-4274-9aa5-dce95547eded"
        },
        "item": {
          "id": "c003e34e-8af9-4cf6-b02f-d58f651d6c00",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "133bacfa-d4fa-42b4-a022-53f608cc6475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7f09fd-7295-4c4e-88f1-e4069d46b8fa",
        "cursor": {
          "ref": "968b2e9d-1130-4a4c-b527-c9a3a993dbb8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dd61bf8c-9f96-4811-9aaa-a22059278cca"
        },
        "item": {
          "id": "4d7f09fd-7295-4c4e-88f1-e4069d46b8fa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d463e09f-36a2-4ff2-935e-4baca675df92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c7f9fc-0dbd-4400-b668-031b484b4b63",
        "cursor": {
          "ref": "336f5a84-5c7f-44de-87d5-9edee38b17a3",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c856ce22-2083-4dcf-9665-0c299dbc8d5e"
        },
        "item": {
          "id": "25c7f9fc-0dbd-4400-b668-031b484b4b63",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0e950b4-42f2-4095-b308-4a2329741837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7150ecd-39fa-4737-99ad-dbb47a53928c",
        "cursor": {
          "ref": "f747e5f0-50ee-4056-b757-02a25d445535",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6318e722-1745-45c4-81e0-e12a2ddb9da4"
        },
        "item": {
          "id": "a7150ecd-39fa-4737-99ad-dbb47a53928c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0eb1a558-1587-4657-b0d8-6b24a652f8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432c0ff0-d4bd-423a-af4e-c927c4827888",
        "cursor": {
          "ref": "d7775b9d-d3f8-4764-a06d-582fe22e0fc2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7ebb6409-b7b8-4a3c-8a31-a3ef80111058"
        },
        "item": {
          "id": "432c0ff0-d4bd-423a-af4e-c927c4827888",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8a003f7e-442c-4192-b3fb-cec7996904ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fbc8cd-6430-481c-8f28-789ac38666ca",
        "cursor": {
          "ref": "c4288939-2d0c-4882-997b-532bf3e67798",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ab31f946-6468-4997-bf46-5f8dcdcc087c"
        },
        "item": {
          "id": "08fbc8cd-6430-481c-8f28-789ac38666ca",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2572f82e-17c9-4659-a754-329d718e4daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09064272-8d6c-49e8-9396-da0f8832b7a9",
        "cursor": {
          "ref": "f94df9ce-4eeb-409f-a6a8-d16354bbcc5b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fae775c5-13ac-45f2-a0c9-ccffacb7f717"
        },
        "item": {
          "id": "09064272-8d6c-49e8-9396-da0f8832b7a9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a204d0ed-e0b3-4d24-b7e0-398cb0108be0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d13d5a-9a42-4f9b-92f7-cfd9c8468c8f",
        "cursor": {
          "ref": "60b21869-db59-4dc8-ac5a-b28010a5dbdc",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1c8019a4-6459-46f7-81ad-9875ad5211cd"
        },
        "item": {
          "id": "46d13d5a-9a42-4f9b-92f7-cfd9c8468c8f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c49d8aa4-eb81-49d0-a453-aedeb16ee531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f07987f-0c07-476f-8f17-0d377e59b401",
        "cursor": {
          "ref": "f185aad1-7ab2-4933-93cc-d90c7d85be90",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ce58f0f1-980e-4d17-adc7-04da32b92a96"
        },
        "item": {
          "id": "3f07987f-0c07-476f-8f17-0d377e59b401",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "936a24f3-31fe-4702-9bee-e151fe0e1856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1299bc-f599-45c9-96b2-439e1f793320",
        "cursor": {
          "ref": "0e38402a-2e2e-4c1e-b6d8-a82641991396",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6c0d671e-b53f-4b8a-8ca0-2ae21e6c6576"
        },
        "item": {
          "id": "ff1299bc-f599-45c9-96b2-439e1f793320",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ab4e760d-5b4f-4d38-a572-8688574df0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2aed206-32c0-428f-a6ef-302d13f48879",
        "cursor": {
          "ref": "ede56c19-fdd9-4869-ae47-6f9d92c86903",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "15338b06-5387-4202-8184-89c34f51028f"
        },
        "item": {
          "id": "b2aed206-32c0-428f-a6ef-302d13f48879",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d76bd031-0c1b-4400-b20c-d899c6568e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c4bba7-f764-40be-b0a5-1f19ecc7f519",
        "cursor": {
          "ref": "ce097bc5-b427-48bf-b69b-92f7c07d0a6f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3f344551-3a14-46e9-80a4-ce6d33017c49"
        },
        "item": {
          "id": "23c4bba7-f764-40be-b0a5-1f19ecc7f519",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eb2c66e3-85f6-40da-bac1-812ccb2d8d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83086974-3cb1-4e28-8ca5-50d8dbb8012f",
        "cursor": {
          "ref": "3de59a03-0092-4d5b-9b1d-da6cd7fae9e6",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "77cf1e93-5420-4fb1-9451-8453b774bc1e"
        },
        "item": {
          "id": "83086974-3cb1-4e28-8ca5-50d8dbb8012f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9bc80aea-c205-4bab-9c36-185760c5bb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5ca2e9-2f1f-4d20-b83b-cb3593af95cb",
        "cursor": {
          "ref": "00ee3036-1e6e-4ba0-9d30-15e1bf8d2bf0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "603b29b3-cc57-454a-ad2d-3d877c596112"
        },
        "item": {
          "id": "bf5ca2e9-2f1f-4d20-b83b-cb3593af95cb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "be3575c6-0a64-42c6-bfc6-f3e67addb8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604df0b9-e06c-408e-b2fb-2081cae9daf4",
        "cursor": {
          "ref": "2e76764e-52e7-416a-b791-9552dd36e064",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4e2ef630-7806-4837-8f17-1fa8a9c7baf7"
        },
        "item": {
          "id": "604df0b9-e06c-408e-b2fb-2081cae9daf4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "048c0f4c-5d26-44e4-b68c-04fbe7c79473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a786f4-4721-486b-b6a0-045cd7f9b2ff",
        "cursor": {
          "ref": "76092699-6d19-4284-a700-5938eb049144",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9e4f79e5-13f9-4a2f-a8b7-3d21302a8c3b"
        },
        "item": {
          "id": "00a786f4-4721-486b-b6a0-045cd7f9b2ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "91e1fa38-09ba-440c-9be9-3726ba7fb54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abdc160-b9ac-4e38-be27-6b4d1c47404d",
        "cursor": {
          "ref": "9faefa2d-9320-4202-89ea-74e5dacf46e9",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c4911fd9-6532-45b8-b014-a35337e8c7a6"
        },
        "item": {
          "id": "7abdc160-b9ac-4e38-be27-6b4d1c47404d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "65ffb824-d8f9-4f6c-94bc-2223e0a22817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd526942-acaa-47ab-906e-e8df2c00abcb",
        "cursor": {
          "ref": "f7cbb22f-df4e-4564-a23e-498c544a6b20",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0888eed5-07d7-4952-be14-0dfd2e6275ce"
        },
        "item": {
          "id": "bd526942-acaa-47ab-906e-e8df2c00abcb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75f2f4e4-3b3b-48d7-a48c-e2f88ee84c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5fda42-af6b-4e3c-8c38-3b42d3d1a9c9",
        "cursor": {
          "ref": "6d77cee0-be9b-49cd-a4f7-ba4000003aa0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8c9341ca-df2f-454b-b6cd-2f8eeee0a9a3"
        },
        "item": {
          "id": "1e5fda42-af6b-4e3c-8c38-3b42d3d1a9c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b2c5c28a-f32c-496e-83de-ad1b83ab8317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccea1bba-d7d0-4caa-9da8-c2ba9fffa34c",
        "cursor": {
          "ref": "73e79d60-4832-414b-994b-cef881df7d76",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "86c0ceda-f5f6-49ea-b599-4e663311b280"
        },
        "item": {
          "id": "ccea1bba-d7d0-4caa-9da8-c2ba9fffa34c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bf35dcf8-d975-4829-8abe-12318503e733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab5c559-25c9-48cc-90a0-75af7f9a6b43",
        "cursor": {
          "ref": "15b381d6-1b29-42eb-a01d-a3732bd25682",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7437f2be-434a-4bb4-99c2-25df431076e8"
        },
        "item": {
          "id": "8ab5c559-25c9-48cc-90a0-75af7f9a6b43",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a31bda5-cca5-4c4a-a08e-3a8cfdbf87bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0dd4e2-87ba-466b-bd4c-41a11299f010",
        "cursor": {
          "ref": "58ab2782-ecda-4b8b-a78d-6c4dc0f7ec18",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "93df1456-d37f-417b-9845-c68861f03b0a"
        },
        "item": {
          "id": "2c0dd4e2-87ba-466b-bd4c-41a11299f010",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0ba32cfb-8c95-4b0f-aafa-16e865232760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c56b505-f342-495c-807d-bb51f683d176",
        "cursor": {
          "ref": "664483cb-21fb-4758-bd0d-f8ca058354c1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bca5f8c1-b54d-4002-886b-997c25b69b5f"
        },
        "item": {
          "id": "4c56b505-f342-495c-807d-bb51f683d176",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "743383ec-51d9-4441-b9be-381cbadcc38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5290dc64-1f26-4a38-88b1-3b6cacf32329",
        "cursor": {
          "ref": "799fa15a-a6d9-46a9-90f2-315b552dce7a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5b09ab0a-7c8b-46e4-9c8a-558eea8f5e0a"
        },
        "item": {
          "id": "5290dc64-1f26-4a38-88b1-3b6cacf32329",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "11d926ee-e75a-432e-ab0c-9dddb77c95f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefc025b-94ed-442b-b5a7-1fc25d6f6496",
        "cursor": {
          "ref": "db9d3857-a19b-4f11-9c14-51e75afdf054",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "eb9cc64b-9cfd-432b-b150-2b004ae2b6ba"
        },
        "item": {
          "id": "eefc025b-94ed-442b-b5a7-1fc25d6f6496",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1814f309-8a40-4cb3-82d9-c470ad198c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a970c2ef-2a3f-4786-a2e3-bcdbfbf0b85e",
        "cursor": {
          "ref": "43cdf837-6795-42d8-8edc-b3dd9f9823ec",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "48670e04-d0fe-436c-a117-64029de9d376"
        },
        "item": {
          "id": "a970c2ef-2a3f-4786-a2e3-bcdbfbf0b85e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ef5485ad-97ea-42ec-8ae5-5a4079ff34dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2dfac1-94d5-4860-974d-df36f232f7ae",
        "cursor": {
          "ref": "129aebb5-4b2f-40b6-aac7-c8d0d6fb4eb1",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "66ffa797-3b80-4431-be4a-a1997a3e41d2"
        },
        "item": {
          "id": "3e2dfac1-94d5-4860-974d-df36f232f7ae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dc5d5890-0768-4979-b656-228be5e22d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1622cd31-960e-4f99-a9d0-92db4a86d84a",
        "cursor": {
          "ref": "3cb713c1-b0f7-4c30-a2c8-d40e7a50f1ed",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "aba17a5b-d5c2-4014-9d7f-22b8b941f18f"
        },
        "item": {
          "id": "1622cd31-960e-4f99-a9d0-92db4a86d84a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "66fef84d-b7c9-4d98-8a4a-a6407fdbf054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65b248d-7a82-46a0-a4c0-583164ec1a1f",
        "cursor": {
          "ref": "2a18be1d-7235-4637-aeee-d60d491982ca",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fb8e5192-5fbb-4c28-a2a8-7b7d6298201d"
        },
        "item": {
          "id": "c65b248d-7a82-46a0-a4c0-583164ec1a1f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "47df1688-c2ae-4a89-88e0-d50b98d3c108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6e369a-08c8-4156-b0ab-d60f2986b109",
        "cursor": {
          "ref": "32366220-9e21-453d-b2cf-541f9a060f31",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f167addf-49c9-4b2c-9055-04a5128c41bd"
        },
        "item": {
          "id": "cd6e369a-08c8-4156-b0ab-d60f2986b109",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "86a3de3b-40c0-4d12-be57-5ed11e5117dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89cd9b4-26d6-43f7-b687-3cba8a2a9471",
        "cursor": {
          "ref": "110654d7-eb06-419f-a2cd-87f8ec7c272d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "170358cd-e975-44fe-b63a-96a90b86d52f"
        },
        "item": {
          "id": "c89cd9b4-26d6-43f7-b687-3cba8a2a9471",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8573e733-a72c-4521-8da6-5d04f60a1b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97123b8b-c391-4b0c-bb37-21a6b53b8bc5",
        "cursor": {
          "ref": "2960cdad-4ede-4e83-ae41-ec0a06c867b0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c7d4f00b-f09e-4b1b-a932-88e31b33acd3"
        },
        "item": {
          "id": "97123b8b-c391-4b0c-bb37-21a6b53b8bc5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2ba7ff38-4687-4241-b6cd-e8c14dfe2efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24276d89-3dba-4ccb-a927-f594ba6ac4a7",
        "cursor": {
          "ref": "acd0031d-c7ad-490c-b2eb-8a655af986ba",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "183c4441-5f41-43e8-b0c9-d3aaf4a897a9"
        },
        "item": {
          "id": "24276d89-3dba-4ccb-a927-f594ba6ac4a7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1cbd2b21-5b42-4ea2-9042-b4b7aa51303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5228a1-e268-431c-ac1d-332e8b3d5b64",
        "cursor": {
          "ref": "74ea9127-1281-4ae4-ae7d-5be1d9cca106",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d18b2d94-514e-4dac-a61c-fa9653b9852d"
        },
        "item": {
          "id": "cf5228a1-e268-431c-ac1d-332e8b3d5b64",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "17f54602-51bd-4877-b2c6-bb9e85e292bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45828146-b124-4295-97a4-a039d20ca0d5",
        "cursor": {
          "ref": "536d7dfa-ba11-4a41-a4ec-cd6b81155d6e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b1863bd7-81cf-407c-aae2-8f9b5e1743d1"
        },
        "item": {
          "id": "45828146-b124-4295-97a4-a039d20ca0d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bc679fed-318c-4856-84bf-cf844ead7274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9f5b8e-4934-4857-9616-9904d16fba87",
        "cursor": {
          "ref": "5ac7ffb4-7cf1-49bb-8d40-2eb7fb31e5e3",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8d9ce975-e5b1-4130-a69a-a39e8fd93c94"
        },
        "item": {
          "id": "4b9f5b8e-4934-4857-9616-9904d16fba87",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f4ff79a1-b5c4-40f3-9ff6-953f99c0c93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704ee8ec-a650-455a-bde1-73b8956b8616",
        "cursor": {
          "ref": "14fc782f-d584-40b8-adec-87fd7816a3c6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a3a846a5-b795-4f89-bc09-5f1dfaf129d6"
        },
        "item": {
          "id": "704ee8ec-a650-455a-bde1-73b8956b8616",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "13de1c75-b7a4-4d07-a5cc-2c77b4c2112c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b6eaf9-a089-43e8-855e-f4034fba4c28",
        "cursor": {
          "ref": "16a43638-4a73-4527-bed6-4612f710e0fd",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9a0fc25f-3c84-4e42-9a46-82a77d6f31f4"
        },
        "item": {
          "id": "46b6eaf9-a089-43e8-855e-f4034fba4c28",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "af0c009d-5162-40c3-9db8-50ea4aaae9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5683cea2-b5b2-4947-afb1-4fe813efe919",
        "cursor": {
          "ref": "dcd09d5a-2961-42ec-98d5-bf1e80ad199d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a5077f6b-5280-425a-b3ee-c3a2c68f2124"
        },
        "item": {
          "id": "5683cea2-b5b2-4947-afb1-4fe813efe919",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "92bbd4a2-3f03-4b9b-a6a5-aa5b7a140e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e821687-a991-4087-b215-efc102a4da71",
        "cursor": {
          "ref": "93d6cc86-effd-4d13-9c4d-8587da1c43bf",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d675e964-cad8-4063-b122-bacbbf2e938f"
        },
        "item": {
          "id": "8e821687-a991-4087-b215-efc102a4da71",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "17412c22-0862-4ac6-a0e6-327992900e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdb12a0-a951-4054-b240-cd0760da6b37",
        "cursor": {
          "ref": "4fd588a1-b4bf-4a6b-ad9a-e2f1011fb424",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "be2f0935-09c7-4658-bed6-318554f34ad3"
        },
        "item": {
          "id": "1cdb12a0-a951-4054-b240-cd0760da6b37",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "aa235782-0a11-428d-9c09-2d888c85796f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd81cbf-7c06-4fe7-a379-31d3f6dbfd12",
        "cursor": {
          "ref": "6e0effdf-5821-47be-a95c-0e3d837721a0",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "333c243e-9c95-4128-8694-55d30f5f0276"
        },
        "item": {
          "id": "3fd81cbf-7c06-4fe7-a379-31d3f6dbfd12",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "596ee3d7-cdf4-4734-8d36-5d51233b46dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c84f097-ea54-45dc-80d1-c598a4d5258b",
        "cursor": {
          "ref": "b451af3a-d202-46f5-8248-cab20a6c3a02",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d6c003e2-93b1-4268-a7d7-1c80d6e3e8b5"
        },
        "item": {
          "id": "7c84f097-ea54-45dc-80d1-c598a4d5258b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0f9bebf8-31a1-4211-a012-5f2a31138dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19400ef-8ebe-4c01-9f21-0cfdfc626ae0",
        "cursor": {
          "ref": "e7bcc9d1-2883-44cc-9a2c-d7ce472b3390",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "49961570-7836-4e53-837b-20e5c495ddba"
        },
        "item": {
          "id": "f19400ef-8ebe-4c01-9f21-0cfdfc626ae0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "158f3b14-45fd-4db3-bd08-8b57fa44c420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff31486e-721a-4534-a977-250c817eb388",
        "cursor": {
          "ref": "64f699c4-1fac-4697-ae1f-f0eda5a670f3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a1f40de8-4b08-44be-905f-974dd12e4685"
        },
        "item": {
          "id": "ff31486e-721a-4534-a977-250c817eb388",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "542a2b9c-b4e8-4d03-a215-476a274e2912",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42710fb5-2b09-48b7-a645-b8a44d6ced9c",
        "cursor": {
          "ref": "dcf4fdb6-4c46-456c-bf05-f6b746585143",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "88811507-3b05-4a3c-851d-b19edce53614"
        },
        "item": {
          "id": "42710fb5-2b09-48b7-a645-b8a44d6ced9c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f91fa1d1-284d-4994-a23f-b772c95f96d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5a53ec-fbd1-4693-8520-6fa1bccb53ea",
        "cursor": {
          "ref": "e20b901f-31ab-4dd1-aa68-fb3bd5e2e49c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2bc7ef79-3f4a-4549-8419-7c9583190cc7"
        },
        "item": {
          "id": "2c5a53ec-fbd1-4693-8520-6fa1bccb53ea",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "33a279c2-ce2f-408a-b240-2d2bf4c6d479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bde55a-adfb-45a3-89c1-56699ac5f18e",
        "cursor": {
          "ref": "418ef130-dd36-40e2-8f15-117399ec935c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5a19aa86-6aef-4b9f-b821-bfecb2f8334c"
        },
        "item": {
          "id": "d1bde55a-adfb-45a3-89c1-56699ac5f18e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "68aaf5e0-74e8-4d6b-8e23-7388c5d37dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17af5ef-4981-424c-a66d-2eb828e789b7",
        "cursor": {
          "ref": "e9500731-31ab-4cdb-b1bb-cd480f89b9f4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2f59c2a1-21f2-4b41-aa4b-1d4761135d85"
        },
        "item": {
          "id": "f17af5ef-4981-424c-a66d-2eb828e789b7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5812f554-e71a-4ef6-a10e-1b220f2d07c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf298c00-54a0-4735-b51b-f29eeb728492",
        "cursor": {
          "ref": "fdbe788d-e2c1-4289-b2b5-7559be3b1356",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b6dca65d-bb9b-4163-9eb6-46b31795ac65"
        },
        "item": {
          "id": "bf298c00-54a0-4735-b51b-f29eeb728492",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "915a46ce-0442-40d6-a5bd-318da657887a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b3b3e3-90d5-4c75-9280-e4bad5dee670",
        "cursor": {
          "ref": "a56e1aa4-b05e-4195-a816-ec11d15244d6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "14e26d0a-23e5-4700-af45-3c4198f2c6f4"
        },
        "item": {
          "id": "d5b3b3e3-90d5-4c75-9280-e4bad5dee670",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "20259f42-ef62-4286-8116-7d8bbb2bf566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed91ed57-ebe3-4f38-8835-e5731bb06db7",
        "cursor": {
          "ref": "24ba02e1-c0bb-4819-8b5b-5333134d4a37",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5fd0ca92-c877-4875-ba98-c94c41885455"
        },
        "item": {
          "id": "ed91ed57-ebe3-4f38-8835-e5731bb06db7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "70edf92b-e8cf-45fa-ab28-5a60607fa98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9354f744-94ca-44e8-b48b-86c9f347defb",
        "cursor": {
          "ref": "e63287e2-644a-4627-844f-bb2323c697a2",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bca3c889-1da9-4ec5-a3e5-f235fd87dbed"
        },
        "item": {
          "id": "9354f744-94ca-44e8-b48b-86c9f347defb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "49e749be-c5ca-4157-8982-b73cac09e0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00810579-58e0-4e53-9264-192c9b379063",
        "cursor": {
          "ref": "88619240-85d4-4060-8848-edded7871144",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a2b25997-2ec9-4ce7-ab14-4c926eea00e1"
        },
        "item": {
          "id": "00810579-58e0-4e53-9264-192c9b379063",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a5694918-cc75-4ea5-be86-c7a0736f5bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c59afbc-c648-4208-9e1e-60e5c56b5043",
        "cursor": {
          "ref": "face1c4c-6f9f-4caf-aa82-3501035a2371",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7788075d-c2b0-4ff1-806d-b2d5cb93a871"
        },
        "item": {
          "id": "3c59afbc-c648-4208-9e1e-60e5c56b5043",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e25e6180-9de3-46b3-93a5-1802bb82474b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd92e3b-b67f-4065-883f-93e4a7611820",
        "cursor": {
          "ref": "299bbeff-1d58-43f6-b811-55da2ceabbcc",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8ae1f045-7431-4a9e-806b-9d057b572ffc"
        },
        "item": {
          "id": "0cd92e3b-b67f-4065-883f-93e4a7611820",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f3416275-0d91-44c7-a274-e8a16f71b446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a048cf8-7809-4381-831a-d63fa66489f0",
        "cursor": {
          "ref": "d752964f-fade-4b5e-9fe2-09790896e53d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "24af0f75-124c-4b1f-a235-9a12f1e1c979"
        },
        "item": {
          "id": "3a048cf8-7809-4381-831a-d63fa66489f0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "decf4430-344f-4b04-b63d-aa7997c3db94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25f7b09-7ab4-4eb9-b143-845fa379cc3c",
        "cursor": {
          "ref": "6f859cb7-f4ac-41d1-a863-713f266991ce",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b99f675c-7992-4639-a907-50cfd4185ed7"
        },
        "item": {
          "id": "b25f7b09-7ab4-4eb9-b143-845fa379cc3c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fb290b53-2db0-410b-a5b2-9293ab41a2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdafbb01-271d-44aa-9da1-c09c8abe1a60",
        "cursor": {
          "ref": "1042392c-9210-4438-9790-f43f7de3605a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2c95ee09-46df-4451-8b48-4854c21f2751"
        },
        "item": {
          "id": "cdafbb01-271d-44aa-9da1-c09c8abe1a60",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f3c8a6bb-16e5-40b2-ad1e-bbc6efde8f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fda25e-47e1-409d-9c57-ceb480f5b6c6",
        "cursor": {
          "ref": "be7ca429-a923-416a-b859-4fd4dc0580ee",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "49d120f8-6c65-4186-ab01-a9374b2a60bb"
        },
        "item": {
          "id": "a5fda25e-47e1-409d-9c57-ceb480f5b6c6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d2e1cdef-953b-4ed8-a89d-6b1fc759b853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf4cb1-bb9f-439d-a497-b42a455200ff",
        "cursor": {
          "ref": "8f3c6b3c-311c-4a2c-b1bb-a578d23833aa",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "303e9aed-e588-4b7e-b6d8-f26266d3c957"
        },
        "item": {
          "id": "90cf4cb1-bb9f-439d-a497-b42a455200ff",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4bf85dbc-d07d-44f9-ad3a-fc19d471843c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b903b765-9a4e-499e-978b-befb8265997c",
        "cursor": {
          "ref": "f0c314fc-09da-4ceb-bf12-500a6ff534b5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1a0a8eb7-8455-4230-ad9b-f0cbb7727ad8"
        },
        "item": {
          "id": "b903b765-9a4e-499e-978b-befb8265997c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6b5b445e-4299-4157-9066-299bb3e855df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d91920-c82e-4cb3-9001-77cd3d8c1c1a",
        "cursor": {
          "ref": "93aaba27-c7f4-45b1-80d2-28fd8b607235",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b6152d1f-c510-4472-8281-5794e352e7c3"
        },
        "item": {
          "id": "21d91920-c82e-4cb3-9001-77cd3d8c1c1a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bee7b799-216e-4207-b79e-2d9d7159cc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ce5efd-5096-497e-a042-6d30763053fd",
        "cursor": {
          "ref": "b50e65e0-2463-4dea-8f31-1d5bd932d93e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a44a9946-224d-406c-be1a-303b5a16ff73"
        },
        "item": {
          "id": "12ce5efd-5096-497e-a042-6d30763053fd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f8ac156c-696d-4528-9cda-c82ca11e7c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbb0775-c60f-41c7-80b7-0e02f6699d65",
        "cursor": {
          "ref": "321dc041-f1ab-403d-a50d-07ba9690251d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fb89c1a1-3296-436e-b48c-ad632e7e731f"
        },
        "item": {
          "id": "9fbb0775-c60f-41c7-80b7-0e02f6699d65",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2896e63d-03d8-4ee1-a679-36997b2f739e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f85f23f-0e65-411d-8fe5-87a4dd2cd474",
        "cursor": {
          "ref": "0972c2ae-5d7c-46e2-b598-6a12c5febbc7",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5dc85587-f640-436f-bcf1-46398171c8b9"
        },
        "item": {
          "id": "1f85f23f-0e65-411d-8fe5-87a4dd2cd474",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2e4e4c39-87e3-4c8d-9cae-ce5e8631a0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a759e876-fb22-408e-b4ca-1c216437a83b",
        "cursor": {
          "ref": "abf4190e-efa9-4c50-b8fb-85edf6fd8313",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8197656d-8cc1-46bb-8665-0a94232e7b33"
        },
        "item": {
          "id": "a759e876-fb22-408e-b4ca-1c216437a83b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8bc78a5f-9886-4219-8f43-e595a4ff4845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f01e86-6df4-40ec-aeb5-39edff9aa50e",
        "cursor": {
          "ref": "101b8f8a-302e-4076-8487-9f45d12b7015",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6020289e-bf0a-44c0-b1c2-8c27bf711ec1"
        },
        "item": {
          "id": "a6f01e86-6df4-40ec-aeb5-39edff9aa50e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "658118ab-bcfd-4ec9-a5b6-319448f690f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cee63d-2250-4e4b-a55e-f6762aebb720",
        "cursor": {
          "ref": "a300f31d-98af-4681-aeab-aa62fa6558f7",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a9181682-de72-4ca9-b69d-01e03b590823"
        },
        "item": {
          "id": "a1cee63d-2250-4e4b-a55e-f6762aebb720",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "baa955d2-553f-40b7-bf3d-910f6114370e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef85937e-254f-43dd-a016-70b36d9aa34d",
        "cursor": {
          "ref": "c6769ed2-b5d3-4798-8140-aa516cf44a81",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7cf11025-1777-44dc-9ca3-5a461e4789f7"
        },
        "item": {
          "id": "ef85937e-254f-43dd-a016-70b36d9aa34d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "16f62546-b712-440e-974d-96e6c5294a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c41c3e5-1adc-4299-9339-1937c30ea1a5",
        "cursor": {
          "ref": "91cbfc20-fb36-4f77-82c8-7e97e8a5d811",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "268576fe-e5af-4566-8b9f-cc4508f67862"
        },
        "item": {
          "id": "7c41c3e5-1adc-4299-9339-1937c30ea1a5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4656788b-3a6c-49e3-a49e-77064faf7861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e0daa-183d-4323-a88f-4cda849df04c",
        "cursor": {
          "ref": "1929c4bf-64b8-467b-a49a-8c77c9d2115a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "240564bb-5ef4-414f-a7a9-93512abb7b8b"
        },
        "item": {
          "id": "600e0daa-183d-4323-a88f-4cda849df04c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "89f3b6cb-09e9-45a7-912a-560bf83e6b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b14213-c509-449e-9269-0f8364f2647c",
        "cursor": {
          "ref": "714704a0-8d8d-49c9-9e9d-b606a44f6859",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2a8c1562-2434-4de1-8550-4741364a345a"
        },
        "item": {
          "id": "d0b14213-c509-449e-9269-0f8364f2647c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "addc6649-0695-4e6d-a1b0-4cccadcc144a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5959d7-bc9c-4837-a9bf-87170743ebc3",
        "cursor": {
          "ref": "7ae94049-eea0-4939-80ab-fa5b05df1934",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8a3eefe6-1d74-40c2-a9b9-5c4a2a98e693"
        },
        "item": {
          "id": "9f5959d7-bc9c-4837-a9bf-87170743ebc3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9fdaa553-f84f-4f66-9db7-815eb673ce20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5225cbc2-47a0-489c-a044-a8ad20793e48",
        "cursor": {
          "ref": "66fc095f-c6dd-4b7c-8674-9c55701138c3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9e6dd60e-2785-41fc-a78c-0277bc784c28"
        },
        "item": {
          "id": "5225cbc2-47a0-489c-a044-a8ad20793e48",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "22ee2b91-242b-4b74-932a-0385b89ad7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660777c1-0954-4b44-95ff-7aaeda9073fa",
        "cursor": {
          "ref": "4c0bd521-a725-48e4-87a9-d0bce300331e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7fb6c846-ffec-4b2c-bf62-a780c1c1b4b3"
        },
        "item": {
          "id": "660777c1-0954-4b44-95ff-7aaeda9073fa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cf083be2-e0f7-4da4-8e90-ad7efd483a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d201c6-dcf2-4b89-a84e-511249a135b4",
        "cursor": {
          "ref": "f5358c83-f166-4419-9fe2-6c7008d6d1a3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "112c6fb6-87a0-443c-be41-be3f53490627"
        },
        "item": {
          "id": "e3d201c6-dcf2-4b89-a84e-511249a135b4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0a101119-2400-4f08-88e6-5e9667845266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a23001-4821-4c25-a375-40dcef41d559",
        "cursor": {
          "ref": "04456dc9-6462-4027-a076-9dadb00ebbca",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a42102b1-ed1e-4502-815b-d6f8d9d9d765"
        },
        "item": {
          "id": "58a23001-4821-4c25-a375-40dcef41d559",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bcb363bb-9de7-42df-8ccb-a15347acf79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58410ad-b9f0-4688-94dc-3a1c2e8a57be",
        "cursor": {
          "ref": "52afb7d4-2a64-423f-85d3-50b169992adb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6c6f3d24-a635-4522-901f-fceece22f073"
        },
        "item": {
          "id": "f58410ad-b9f0-4688-94dc-3a1c2e8a57be",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "37377f44-ee91-4cd7-ab2b-4e1035de7f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc520d03-200d-44fe-823e-1eaa7852e92a",
        "cursor": {
          "ref": "a08c19c5-5c51-4c96-963e-bdf7a71307a3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a21383ba-110c-4aef-9047-b1dabdb8bf59"
        },
        "item": {
          "id": "fc520d03-200d-44fe-823e-1eaa7852e92a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d451e6e1-c40c-473b-9b21-1bf829f73ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845bf7ae-d208-4534-8f0f-fcd37c756247",
        "cursor": {
          "ref": "6c5ddac8-510d-485a-9a1b-e2fe1a01c2e0",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4094f3dd-c960-415b-bf60-23e482120f61"
        },
        "item": {
          "id": "845bf7ae-d208-4534-8f0f-fcd37c756247",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f5f7c578-e733-4f53-a8a0-ee25bade7281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73079fcd-e24e-4d91-b6aa-567e87cecfc3",
        "cursor": {
          "ref": "8ed065a5-24eb-4a8a-927a-07ca75adbde0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f8e2595e-51fd-47f5-b267-c9bca2f40cc4"
        },
        "item": {
          "id": "73079fcd-e24e-4d91-b6aa-567e87cecfc3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "515c9615-10f7-462e-952e-52daf076a60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8c8159-1bb6-42c5-a30e-d0613e060b98",
        "cursor": {
          "ref": "9be9c2ae-3a0e-412c-9f39-980c61a2a588",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "09baedac-e922-48c3-81d0-2d85ed5303c5"
        },
        "item": {
          "id": "be8c8159-1bb6-42c5-a30e-d0613e060b98",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "89343b5e-e1be-4e7a-9550-af96bee48932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8ad878-659d-4353-9c0a-343ee785f24b",
        "cursor": {
          "ref": "cf595196-b44d-4f5b-9346-bc131c8a09f9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "618e7d3d-5fa8-4fdf-94ea-ece4dea7fa2e"
        },
        "item": {
          "id": "ed8ad878-659d-4353-9c0a-343ee785f24b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e3e3b435-5220-47e6-9d4e-dd5c2659b79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53051122-13d6-4998-9d40-1f9400c8d8d0",
        "cursor": {
          "ref": "d70c4119-94c4-4f26-9b35-5567f3ce53be",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "279e58e9-671f-4ecb-87fd-a45069c7eb59"
        },
        "item": {
          "id": "53051122-13d6-4998-9d40-1f9400c8d8d0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c1bca0c3-559d-46d3-ae1c-ffe357fae639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6a3464-976d-4048-a28c-982718f878ce",
        "cursor": {
          "ref": "a967a2b0-151f-4d29-ab27-47a37e46de83",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c738a8d2-f395-47f0-8e57-cea88a007d89"
        },
        "item": {
          "id": "db6a3464-976d-4048-a28c-982718f878ce",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5bd9c138-3ba3-42b2-a026-f089337cffe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46493e53-0e11-4d52-9fb3-547bc36a5de0",
        "cursor": {
          "ref": "f7d4e5f8-4c07-4b07-8d30-591264459185",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fe65f655-9450-4011-9291-780698101bac"
        },
        "item": {
          "id": "46493e53-0e11-4d52-9fb3-547bc36a5de0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f4aff69b-b8e2-4279-8599-fe255724635c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170912c3-49a7-43dd-afcf-f9c12a726a63",
        "cursor": {
          "ref": "c4377a6e-6f04-4c2a-a0a8-5496cffe753a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "098520da-21c1-4260-8340-54691761e366"
        },
        "item": {
          "id": "170912c3-49a7-43dd-afcf-f9c12a726a63",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ae8c60f8-d726-4bd0-800a-6939553dc00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1857ed62-9abb-4927-8cf6-7ab8c1077588",
        "cursor": {
          "ref": "759d0afc-f2b3-4920-875a-06a51aef8f4c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5220295c-24e9-4cfd-90db-5333f7c755a9"
        },
        "item": {
          "id": "1857ed62-9abb-4927-8cf6-7ab8c1077588",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8c306018-5912-4aad-94eb-ca2ea7b3ed4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f90eae-9647-4f0c-99cc-846b1b8c6acb",
        "cursor": {
          "ref": "f07f9ccf-5497-47f4-86ea-df6410a67fb5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6255127d-0cc0-4737-8dd7-6a61f56202e8"
        },
        "item": {
          "id": "25f90eae-9647-4f0c-99cc-846b1b8c6acb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5030ca5b-be57-4381-8384-c41094b5f923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c193bb0-c54d-4ccc-80e1-d8144579788d",
        "cursor": {
          "ref": "e1100b21-1b75-4f37-be70-8c8a8ee3c5d3",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4ac39a83-1662-4fe9-9256-b73cdef9b9ae"
        },
        "item": {
          "id": "4c193bb0-c54d-4ccc-80e1-d8144579788d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1571eba2-01ee-4b24-9ff5-637d2b14471a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd22a37-8cb4-4429-aa88-bb9c8c5086e8",
        "cursor": {
          "ref": "c648d3ec-9fe0-4cc9-b9e9-db2cb50a3edf",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8a802957-a3b5-4db9-8b81-0dfbefcab9d0"
        },
        "item": {
          "id": "1bd22a37-8cb4-4429-aa88-bb9c8c5086e8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "649ce326-7cd3-42c7-aeb9-1d5c6f3d7d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07010b56-2eec-4962-9669-210498cf944d",
        "cursor": {
          "ref": "541abb93-f855-4aab-9213-0f490f1461eb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f7555377-9ff2-48b9-b8a4-fb9a56a505ce"
        },
        "item": {
          "id": "07010b56-2eec-4962-9669-210498cf944d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f444a778-01ba-4c0c-8206-b86a54eb3291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a91af1d-e75e-4fb2-a8cf-6fc51d5fc5fd",
        "cursor": {
          "ref": "adcd518f-c5ab-433f-b050-d3625af666de",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fd5b5ff0-62c1-4a4f-aeab-dc02990920af"
        },
        "item": {
          "id": "3a91af1d-e75e-4fb2-a8cf-6fc51d5fc5fd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "df5722a4-d2bf-4a0c-8c19-b69080c34692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb95bd8-6228-46a8-bd64-80813b74693f",
        "cursor": {
          "ref": "8d9bb9f2-fd65-4569-be08-35c9c822a433",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f6750fad-8ac5-4f5b-8f75-321cb49f76d5"
        },
        "item": {
          "id": "9fb95bd8-6228-46a8-bd64-80813b74693f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c4c3f259-8c4b-4383-a210-2ca11b68554e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60f11cf-5c4b-4465-aed1-9a955cef415b",
        "cursor": {
          "ref": "dc71b24f-99bb-4d61-9e5a-292e806b7078",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3665a19e-2c95-48fa-9a19-f238dc2819aa"
        },
        "item": {
          "id": "d60f11cf-5c4b-4465-aed1-9a955cef415b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c1ea32d1-b5ac-4f6b-af6c-1a10e377e3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaafde5-4713-4b56-ad76-3a29b4d2e105",
        "cursor": {
          "ref": "d0ef324b-d2f4-4e7b-adfc-306fe3875040",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f275e645-9c90-49e2-9352-314450054be7"
        },
        "item": {
          "id": "adaafde5-4713-4b56-ad76-3a29b4d2e105",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d64179c3-a8a0-4b74-8644-c848656c11ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb04e2c-b7de-4363-a3ab-91014a6839c2",
        "cursor": {
          "ref": "4654f8e4-fd7e-4eca-ad63-ce810bb2e697",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d35ce633-1e4f-464a-809b-aa2a1d6a2799"
        },
        "item": {
          "id": "efb04e2c-b7de-4363-a3ab-91014a6839c2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "73d439e0-5b89-4523-b669-25d24e2e1acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a35fc0-a47d-467c-8ad1-cf989a155a42",
        "cursor": {
          "ref": "94878e27-0031-4efd-b163-78004048e8d7",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "16e69e7a-3182-419d-8bb3-b163c0563872"
        },
        "item": {
          "id": "43a35fc0-a47d-467c-8ad1-cf989a155a42",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6803a0ce-f501-4c7b-b582-b0045b7a1beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7297aa4-6442-4147-bcc5-9f0c0d7c6a78",
        "cursor": {
          "ref": "2473361b-6157-4719-8890-e43ac9235770",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3e706289-8966-4a97-a437-42767cda35e5"
        },
        "item": {
          "id": "f7297aa4-6442-4147-bcc5-9f0c0d7c6a78",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0c5e0c1d-df4b-4194-9d36-e8db792a0dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480c8b36-f5e6-4311-b210-13d28084695a",
        "cursor": {
          "ref": "52e750c6-d9c6-45d0-9a94-353748d3ddac",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fca17a24-5dfc-4276-9ac1-eabb66cdd15d"
        },
        "item": {
          "id": "480c8b36-f5e6-4311-b210-13d28084695a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "40fcd39c-f3a7-4492-b2e2-76716d171117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dae55c-4274-490e-aa99-741bc2924d9c",
        "cursor": {
          "ref": "8f7f331c-33b6-4a09-9507-1d6ea2a15318",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4187a133-2c89-4680-a737-aa87a9cf7560"
        },
        "item": {
          "id": "b3dae55c-4274-490e-aa99-741bc2924d9c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f49d4aa2-640a-4190-9f22-49f22b8e1da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431aaaae-6e1f-4130-8a07-95ecfccbb284",
        "cursor": {
          "ref": "2fbbf658-c02e-452c-8f9b-61181fcb5971",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9d47d50b-8d72-47d5-810f-a6bb8bb2f334"
        },
        "item": {
          "id": "431aaaae-6e1f-4130-8a07-95ecfccbb284",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0a157ef3-3c34-44cc-bcd9-826e79668464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f558a5-7827-4893-8187-9009743940ab",
        "cursor": {
          "ref": "1db51e69-fb48-4ff8-8e57-3d6766eddb86",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "808a6246-9268-4960-9177-9e64968b8db9"
        },
        "item": {
          "id": "b0f558a5-7827-4893-8187-9009743940ab",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "629c422f-84c6-46ff-9e60-29b7411efa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22860865-b387-498a-9c2c-92d06b0f9302",
        "cursor": {
          "ref": "b3a03074-e810-42a7-bdd8-39f0eb9f6d24",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8bd88cab-fc9f-4812-b162-c9ca9ff9879c"
        },
        "item": {
          "id": "22860865-b387-498a-9c2c-92d06b0f9302",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7b0dbf44-faf8-47fb-a282-1a486b617a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4b1f34-cb8a-4ef3-82f2-0b3b9f7c3882",
        "cursor": {
          "ref": "25882c55-52cd-4e5f-8e85-8b6524cc0b6b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "700e0ca3-7763-4230-9747-84aa3770fd62"
        },
        "item": {
          "id": "2b4b1f34-cb8a-4ef3-82f2-0b3b9f7c3882",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "febd1ba2-1ca4-4683-b36c-4be70a829a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4642272b-32c5-4c6a-aac2-8ee790e243f2",
        "cursor": {
          "ref": "82651efe-7306-4578-bc0f-3482b7ec85b7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a2dd5446-2bfb-46a7-91cb-1bf852a6a5b5"
        },
        "item": {
          "id": "4642272b-32c5-4c6a-aac2-8ee790e243f2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1f826f13-5c15-4c54-a86c-427dc2656406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84c8c09-465e-433a-b75a-7ebe9b1c7be9",
        "cursor": {
          "ref": "e024f4b3-a211-46b2-b498-c97c96f49c99",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5a56a924-837b-4b59-96b2-cbaca0baf692"
        },
        "item": {
          "id": "e84c8c09-465e-433a-b75a-7ebe9b1c7be9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b71f230e-da62-4ff2-9f2c-3f668f58b7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632a329a-b1e9-4e91-aaa9-19aa4b8f6a86",
        "cursor": {
          "ref": "a76a5ed4-b62e-4963-9690-7257f7299412",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "360bd654-b40b-4f45-a0bd-77a7f07fe0aa"
        },
        "item": {
          "id": "632a329a-b1e9-4e91-aaa9-19aa4b8f6a86",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4960406e-8e9c-43d3-a351-4a3e70470897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d36f210-0993-459d-b8ad-480b69cc0104",
        "cursor": {
          "ref": "b5d3eff5-dbb6-479d-94d7-6ebc393df97b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "84aa990f-d868-459b-8ba2-6e1c7ba9c69f"
        },
        "item": {
          "id": "9d36f210-0993-459d-b8ad-480b69cc0104",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "278be5a4-48ed-48a3-b872-a579a1ffdc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff070d6-8ecd-4b94-a0bb-dd592b9f9725",
        "cursor": {
          "ref": "19fd60eb-6698-4c58-ba05-495903ffb3f7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7d58c434-18d0-48f4-841c-e00135e24c38"
        },
        "item": {
          "id": "4ff070d6-8ecd-4b94-a0bb-dd592b9f9725",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3dbf7ebc-c17a-4d30-8b18-47570dcd6d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0612773e-3ad6-4829-811e-7fbcbd341a2e",
        "cursor": {
          "ref": "71ee8b50-bc76-40e5-8eaf-78d4a6620467",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "253fd052-74c1-4e39-9de3-dfe619e08ba7"
        },
        "item": {
          "id": "0612773e-3ad6-4829-811e-7fbcbd341a2e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ea12567c-1fb7-4abb-88c8-1aa98d136872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7e9c97-7b91-4cd0-97a0-f4d5b731b89d",
        "cursor": {
          "ref": "a1f022de-8ee0-4ab5-b571-4f4a285adfb7",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1faaf72f-49e9-4bd7-a379-1d0b15c91f10"
        },
        "item": {
          "id": "cb7e9c97-7b91-4cd0-97a0-f4d5b731b89d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "64856844-67a0-4dbc-b037-2ba8c9894d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286f9e79-1e9b-42f2-9420-ab967cd9d29e",
        "cursor": {
          "ref": "4638f5f5-973d-4088-8172-2e0dcf83c977",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f95697ec-fed7-43de-a84b-cf642ab401ec"
        },
        "item": {
          "id": "286f9e79-1e9b-42f2-9420-ab967cd9d29e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2784b2e3-80b4-4cbc-9e5c-6fb02b5bcc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b737b9-4763-4ea4-8f64-a8bf33ee9832",
        "cursor": {
          "ref": "a27de7e9-5f46-46d5-bb63-4967744eeb7e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2eb2da41-943c-4364-b4d6-5a745c9e78c2"
        },
        "item": {
          "id": "b6b737b9-4763-4ea4-8f64-a8bf33ee9832",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b3a6f75a-0b4d-4856-9198-c54b17869f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae93f8c-ff08-4c95-8693-e75522dcf4a3",
        "cursor": {
          "ref": "7e9cfcb5-0c7f-4dff-b77f-b060f4ab10af",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "235dab91-ff33-489e-826f-65c6274a4333"
        },
        "item": {
          "id": "eae93f8c-ff08-4c95-8693-e75522dcf4a3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ee243287-58ca-45aa-aca4-d64b05c23830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b09351-5f02-4ac0-85e8-0e9871d1821a",
        "cursor": {
          "ref": "41c7a3f5-06c9-4c48-b7a5-1a51261dd7dc",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c6d60894-8d51-494f-b9b0-3037d3e71cb0"
        },
        "item": {
          "id": "44b09351-5f02-4ac0-85e8-0e9871d1821a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e9415c22-c6d0-41b2-ae9d-fba7ff264489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a79c23e-d7fc-470f-a729-70a04447e54a",
        "cursor": {
          "ref": "f02e4943-aac0-4b9a-928c-b7966b3e1af7",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1eef46d0-6999-424e-8905-b3e4b6a1e47f"
        },
        "item": {
          "id": "9a79c23e-d7fc-470f-a729-70a04447e54a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3a11000a-4944-4d39-885f-f467f88bf65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e872dee-57b7-4844-9ebe-ab43a1000d24",
        "cursor": {
          "ref": "a77755b9-489d-49b3-9580-2f1f54bda2b5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "786b6042-42a0-464f-b982-434a4ecb8af3"
        },
        "item": {
          "id": "0e872dee-57b7-4844-9ebe-ab43a1000d24",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d440222e-1c5a-49ac-9c96-0ee21acd3b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92615be2-c6fb-4048-8185-1771f374a9e3",
        "cursor": {
          "ref": "b8a3f887-a343-4e63-a2be-6e72f21f0b96",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ef53077e-2614-46cf-9bdf-d44ba14a58a3"
        },
        "item": {
          "id": "92615be2-c6fb-4048-8185-1771f374a9e3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0f49a58f-0c83-4e63-9e5e-ba35b92f97c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25322a73-8655-4b5f-838c-d263cc0fe321",
        "cursor": {
          "ref": "00b0800d-29ee-43c7-89f7-007ff08ed1e2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "96a7a8be-2e1c-42e7-b4c7-7f2f7d53de3b"
        },
        "item": {
          "id": "25322a73-8655-4b5f-838c-d263cc0fe321",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "96202b57-2e6d-4928-ada0-0cc58cf0d289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa54a173-dc7e-4047-bfb9-3608bb368952",
        "cursor": {
          "ref": "bb949626-039d-40da-8a0a-4d5144d98d7b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "880bc181-83d4-4708-aeab-545cadf89613"
        },
        "item": {
          "id": "aa54a173-dc7e-4047-bfb9-3608bb368952",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bf394abb-3038-4537-b8ed-85e19371cdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275d2b52-6338-4f37-9cfb-d971c1ce193f",
        "cursor": {
          "ref": "faa326ef-1305-4584-95be-802a03eac692",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b01d8a14-52fe-4e52-be60-00483421178b"
        },
        "item": {
          "id": "275d2b52-6338-4f37-9cfb-d971c1ce193f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5c506fe2-ebc7-49cd-9cc8-1e004fc0b3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fc67a4-8bb0-479e-ba6a-69cca4601d80",
        "cursor": {
          "ref": "f83a6cb4-7c0f-48fb-afa1-a9e08423ae69",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "097e89c1-7845-4b19-94aa-6b6a683e5761"
        },
        "item": {
          "id": "16fc67a4-8bb0-479e-ba6a-69cca4601d80",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dbe5c924-8453-4194-8e6e-bdc1ceeb51e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fed397-250b-4ca3-973a-12c5445e6f02",
        "cursor": {
          "ref": "04fa7ffa-ac32-4a92-aece-06d2265e0a60",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "60a17875-7c5b-470b-b6d6-507b451dc2ac"
        },
        "item": {
          "id": "f2fed397-250b-4ca3-973a-12c5445e6f02",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6c4627b2-06be-4b23-b5a5-556004b8053f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4284fbe-37de-4236-9eee-27f2d40372f2",
        "cursor": {
          "ref": "e1e3fa7f-a772-4b87-97c3-1af86eec199c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "061e0f19-31d2-480f-9954-7d6583a4b706"
        },
        "item": {
          "id": "b4284fbe-37de-4236-9eee-27f2d40372f2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e8087c05-e3a7-4c53-a73c-6218f3a12833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160b4eba-bcb8-4570-bc65-f90e51bb1fab",
        "cursor": {
          "ref": "f68c467f-61c4-4114-b219-ff0fd7f768c7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3a0346fe-747d-49f8-8363-5f5ae24e1127"
        },
        "item": {
          "id": "160b4eba-bcb8-4570-bc65-f90e51bb1fab",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1a4729d7-99a2-4260-90fe-9e4e7a84de5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6eb711-c1a0-4b31-9f70-940b5664d8b3",
        "cursor": {
          "ref": "974dc120-4f94-4915-9ecc-b0d258231dac",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "37292ed8-9450-49cb-8c11-8780098213b5"
        },
        "item": {
          "id": "0d6eb711-c1a0-4b31-9f70-940b5664d8b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "22dc849e-a0b2-4926-a981-b55402b9d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24839f5-12ce-4585-9db5-e915aa43a6af",
        "cursor": {
          "ref": "f0ce5bd4-1413-4c35-abee-284c43112430",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3a28631f-c4a5-4663-a6e5-af5233c35b21"
        },
        "item": {
          "id": "d24839f5-12ce-4585-9db5-e915aa43a6af",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9912c11a-3f2f-4243-b2aa-63f2d86fd194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a281f62-3250-4201-a56e-9cba3c069ed6",
        "cursor": {
          "ref": "8feb0af5-0466-4765-9094-65040aa8c35b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f42aeefd-3f1c-451a-8679-f1b89fa4d6c6"
        },
        "item": {
          "id": "6a281f62-3250-4201-a56e-9cba3c069ed6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "970a44f2-6ff7-4756-815d-ebec53ccc2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c57f89-caa8-47ba-8e77-b419e9bef5c2",
        "cursor": {
          "ref": "57ab49cc-18a7-4ecd-a891-bee5f2fc696f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ecbccfd8-e64b-4a43-a0f6-aa5fb9271825"
        },
        "item": {
          "id": "07c57f89-caa8-47ba-8e77-b419e9bef5c2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c752621f-0a01-4ba2-8787-01bd4ec279bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51343016-7c5c-4acf-a806-3f37a5e74dbf",
        "cursor": {
          "ref": "d1b42051-dade-4cb3-a4ee-55b22d1033ea",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2e914e39-3b1d-4fe5-ab55-62ec15493d52"
        },
        "item": {
          "id": "51343016-7c5c-4acf-a806-3f37a5e74dbf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ea72b2c0-db99-459d-8cb8-4fb071429db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e88a46-db61-4c21-9a89-d4a8e11120f8",
        "cursor": {
          "ref": "e7f80e4d-c0e6-48dd-9917-92e5b1e5b4b1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7f8b3b6c-9516-4aeb-959d-49cb34f26ba4"
        },
        "item": {
          "id": "26e88a46-db61-4c21-9a89-d4a8e11120f8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c0ed5fa5-e24c-48a4-89e7-050198852e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa8f50c-4f84-4497-914a-63b9cfc648b7",
        "cursor": {
          "ref": "fdf78929-3e4c-47db-a649-beb2357a7935",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b940f3a7-0d96-45d0-b253-763200555766"
        },
        "item": {
          "id": "2aa8f50c-4f84-4497-914a-63b9cfc648b7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "43d53f69-dd81-4840-a506-44caf1b78dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f5bec1-40ac-4203-a0e5-d89c2a54047c",
        "cursor": {
          "ref": "81a12ccb-c0f8-413f-99ca-349ecfc4d12e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f697c991-9875-428c-a424-3329753e08dc"
        },
        "item": {
          "id": "75f5bec1-40ac-4203-a0e5-d89c2a54047c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4518636e-cd4f-4885-94c6-c154ce5ec012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce85fe1-4915-414c-a3be-0edb2bbdfd83",
        "cursor": {
          "ref": "e34421f1-54a0-48d3-86c1-93b11ca6a849",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c598901e-39c0-42d0-86d7-3b4282609785"
        },
        "item": {
          "id": "6ce85fe1-4915-414c-a3be-0edb2bbdfd83",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f320b75e-659c-40ef-9b21-43913376d045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bab6cf-3f3e-4ccf-b2c4-fd3e0498e8ff",
        "cursor": {
          "ref": "1858f0a0-1542-4782-b439-d7e94f109273",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9828c24a-4f01-46b4-b96f-01bc62ed579c"
        },
        "item": {
          "id": "c5bab6cf-3f3e-4ccf-b2c4-fd3e0498e8ff",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8242b9d9-16b1-44f6-a5e4-ccae281114d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e990b66-2fdf-43b8-8805-6a6260478677",
        "cursor": {
          "ref": "521cf3b2-4263-4a85-b072-7fbb7e8fd8d3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2b210407-b96c-48f3-b72f-bf7e4de34a7c"
        },
        "item": {
          "id": "2e990b66-2fdf-43b8-8805-6a6260478677",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "266de581-1a75-4769-a632-d061d9891224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4487b3f-789a-4b64-896b-07e3afbcf807",
        "cursor": {
          "ref": "3d5e5fac-07f5-4c2b-aeaa-2b5c38fc497b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c5e2bbde-3e24-42a7-a887-d1cc08ce334e"
        },
        "item": {
          "id": "f4487b3f-789a-4b64-896b-07e3afbcf807",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ea7ef4e9-86de-4c0c-8981-ce1372c22514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5a37cd-ba44-4794-b7aa-43fd72b59dd1",
        "cursor": {
          "ref": "c4448a6b-8c51-4925-b2ab-cdbdee7217ca",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "63432bd6-3145-48f1-8929-e8f37adc0d5f"
        },
        "item": {
          "id": "2a5a37cd-ba44-4794-b7aa-43fd72b59dd1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f9b5e2bb-ee7f-4cec-b7d4-b59c317a2c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bda800d-4cb1-45e5-a272-dbd33062d42a",
        "cursor": {
          "ref": "55f53c8d-1193-4a5e-b6e6-c93f1349251b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "53b0b653-1ca9-4d64-bd39-2be5c070e1c5"
        },
        "item": {
          "id": "8bda800d-4cb1-45e5-a272-dbd33062d42a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9c3d9f4d-e798-4cfe-ab12-003139d86218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c438972c-a724-434a-8a4a-b2a93e6a7fa7",
        "cursor": {
          "ref": "3bda626d-c01f-40c9-a7c8-9cbab7b77330",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3c453767-88f6-4978-ba53-03290cd2fe2e"
        },
        "item": {
          "id": "c438972c-a724-434a-8a4a-b2a93e6a7fa7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2bc689a6-c28f-4e88-b766-2a681876104f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e384c2-6ea9-46ab-986e-794e307744cf",
        "cursor": {
          "ref": "ebf0db08-cbe5-497c-8dc4-36ed008d291c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6b5b65a5-c17d-4acd-be92-48fe9c3162ab"
        },
        "item": {
          "id": "23e384c2-6ea9-46ab-986e-794e307744cf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "493c87b7-c5d8-47b7-bfc3-54d4a74d5f49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f548d9f-34fe-4500-8082-4c4f40e5be5d",
        "cursor": {
          "ref": "cc7c2827-317a-4b61-a216-26bf4f91e123",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b7614fd0-a8e8-4938-8cf4-7c4a558e2ceb"
        },
        "item": {
          "id": "5f548d9f-34fe-4500-8082-4c4f40e5be5d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d878df5a-01a0-45d9-b91c-92a8138b2e10",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "735644a0-95e7-495a-91b6-2011e230301c",
        "cursor": {
          "ref": "cd2a0512-b276-4098-8109-69fbe31bca07",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a5b0b405-bcb2-4dcb-a628-734751097e34"
        },
        "item": {
          "id": "735644a0-95e7-495a-91b6-2011e230301c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bd70f8aa-14ed-4c94-97fd-303d8ad9efed",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d1cab-9ed3-4a42-9716-315edacdf54f",
        "cursor": {
          "ref": "f882c9f6-84be-4138-b451-91e4bb982de9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "56774760-a088-456f-b784-2b0542d43b96"
        },
        "item": {
          "id": "364d1cab-9ed3-4a42-9716-315edacdf54f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e95e45da-09e8-4c52-868e-06ce2fe32f37",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b860ec6-b32f-4ee1-a7d6-37e1fc44cd73",
        "cursor": {
          "ref": "7193e018-9764-4190-afbf-10e0dc062a8b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d9f73d99-99f9-46a7-b0db-6a01ee2d4291"
        },
        "item": {
          "id": "0b860ec6-b32f-4ee1-a7d6-37e1fc44cd73",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04713677-c137-455d-aa2a-b1f9ab33e2ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b860ec6-b32f-4ee1-a7d6-37e1fc44cd73",
        "cursor": {
          "ref": "7193e018-9764-4190-afbf-10e0dc062a8b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d9f73d99-99f9-46a7-b0db-6a01ee2d4291"
        },
        "item": {
          "id": "0b860ec6-b32f-4ee1-a7d6-37e1fc44cd73",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04713677-c137-455d-aa2a-b1f9ab33e2ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc036cf-8b80-4ac3-8d07-5af3824ddb53",
        "cursor": {
          "ref": "214dfc0c-54b2-45ce-9754-7e92555b8149",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "53099b95-c671-42ac-b865-a48dd6998f02"
        },
        "item": {
          "id": "ecc036cf-8b80-4ac3-8d07-5af3824ddb53",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "13d725e1-11c8-4e40-b84c-077e88efa052",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da21924c-731e-4ca4-9eb3-509940e63805",
        "cursor": {
          "ref": "abc0f6d2-adc6-4d02-8d31-d5b41e6c4c44",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5c930940-eba1-4c09-9d9d-50e3a1bf7624"
        },
        "item": {
          "id": "da21924c-731e-4ca4-9eb3-509940e63805",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "268a2272-9b08-4a8e-bf20-b0d86430bc9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}