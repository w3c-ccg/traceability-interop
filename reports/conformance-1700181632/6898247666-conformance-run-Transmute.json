{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0b7de15c-522e-4169-a0d0-ad57f2b1412a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b77d3833-30bf-4df2-9867-752a04ad4251",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c31cff5-8810-46ff-bdbf-2d9a5db6e40e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f27a7ff0-70d1-4380-8a78-e01b5fa9dc47"
                }
              }
            ]
          },
          {
            "id": "e454fbdb-f52d-4338-bfed-41364f47c97e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6389d4ba-12b0-4539-a84d-1be577d8bf44",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c377d3fc-9f26-4a15-aa70-abca3c9eb9d4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3fbd2620-2f21-4622-a28e-919f586a2485",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a00d67f-8c4d-423e-9a3f-38768f7b67ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a0e7ef0a-be94-44cb-9aea-3f04e3b73059",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09242e9c-daf6-4ed8-931d-2838961c0714",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6930ded-5cbd-4f9e-9e53-142a58f670a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "98cb39a1-d906-4db5-8027-6217b9aa56e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d9a29e9-e642-4f36-bf50-97f2d6bc266f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "95f551b1-dbae-4f70-85c5-2d5d813d390f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d1f8106-aa63-4b50-914c-509e47c704a3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "688498b2-83d3-41a9-ba7e-a2be8dcdaf40",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e86eb6a3-dce2-47ae-af88-7d7d825c0bde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df41b509-d5e9-4f4c-9c2d-25d520e00b02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8e8c781-4d63-42f5-b3d4-a79aa68fa642"
            }
          }
        ]
      },
      {
        "id": "0e19702f-fdca-454a-991a-65c0131066c5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f8a30ad5-6cf2-44cf-bf4a-35fca773c8f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0a4e6b7-f231-4d26-8738-d8c6b0737a03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f89559bc-c8b8-4d03-b5a0-ad891c2fe7d5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c5ba4a-209f-4854-a042-fa92c115edbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba2eaeb9-0ef4-4ce4-b04c-3179a1c5c0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194d0e9d-9c78-4f39-838d-6973069e15b1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176eb153-7ca8-4a02-b78b-f1c18e4d49a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2ef45db-5834-42d4-b134-50ac8c58991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e98546-20ae-424a-a7dd-4f03af114f0c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5eb10b-2c8a-4fc0-85e8-16a778276115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5660d2d7-883c-4bb2-bc5b-0e5ea91bff60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42964d40-9d9e-4a82-a066-9c2a9ef28ee9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2c0cf14-0f34-4387-876d-3355825c68b8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea117d12-03ae-4d32-b634-e0f809c6faf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9b2fdfe-b563-4f99-a807-f93db482d051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4ab4c5-3bd9-4256-97bf-481382f3dc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b1d4e2-f304-4000-acd9-6d54376dcf7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "979b2786-e282-4809-ae2c-3eca430a33cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c21fc2d2-3f3b-46eb-8a90-ad5c7f78297b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c74dce85-0b7a-431d-9da7-0975cbce8ae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "949e3eb1-d55a-4954-a058-4b27e597d257"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f543f4e8-1256-4586-9204-a9f7214b2e6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "aaeed86f-3374-44b4-a893-1c16d0436c54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1738a1f7-bc9a-48c8-8334-eed252ec1e1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a13e5912-3a21-46bf-a4a4-002de19ef004"
            }
          }
        ]
      },
      {
        "id": "a1953cab-62f7-4ac6-9763-db6f3d7f6a2c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "04435571-8f14-489f-8246-eb28deba737d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52d1d2bf-2aed-4a9f-8d35-fa1a5703e59b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b316d093-3ba2-48d2-8f10-051a453fe64e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a381d57-a911-4ba7-ae54-5fb3b50dc9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6795973-b339-488c-bfca-3c4faa2a436b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be419b92-db53-4ed3-9a60-ffa3e79dea1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bd23d86-17c8-4ca3-8aa4-6a6fc44100d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d90747-0b2a-4863-9ac0-9cc8491dc69a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33801ce-4dc8-4477-877d-ca16daf3c639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d497b3e-3751-45b4-82d1-89e9ab412d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f820a1-57b6-4646-a471-854be7644f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b87fd89d-f91a-4889-b9c1-e09e4d78e349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d542288-cef0-40b2-9820-a5ed5c7257f9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62865bb3-c8ed-4f0e-bf4d-d195c96a12ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fe073c-3718-4c66-a4b2-3a725f4c850a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336fc65a-72b7-405c-9aee-d39dd94c561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d745779f-9106-4abf-83fb-b7a70f14db5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b3dfaf-c0ab-409d-8ec9-1e4d0f3a9ea1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c8fbb7-ccc9-4433-be7c-743dadc1b341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957618ec-2918-4b71-b9c2-cf418f28da39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3783ed-3337-4006-8af6-0944db381a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e69b98d8-7c06-4b64-978e-fc4efe1524d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20856cb5-161a-40a7-9a6a-50bbd070efed",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237114ea-cfb9-45c7-9355-cd1764a580e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84ec3b9-e40a-4650-9d67-778a63a03437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c28ea12-48a4-44a4-a6d0-d838dd9a4a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f83dac20-56f7-4341-b951-66ddf4e4ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c94bb0-cd29-428b-af14-a3afd335a7f7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bfe74f-9544-4af4-b3c6-750ef7569494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4f972f-4aee-45c8-84f0-179ea7938de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe56dce-0be4-4753-aa54-4e6463583ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c4c8b60-7332-4419-9d90-b4a6a24edd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23e6ebe-4385-4416-9ca2-2b5dec577ffe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf407f1c-ffb5-4b48-9229-603363a26cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cd1d30-cabd-4773-a101-4652dca9609e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d323d1-a361-4894-9867-ccab94285f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4351b3d5-dac1-4788-8631-e69d29819157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a97d83-2b8e-48a6-9698-459eef85a9c7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bcfce8-2e8e-43e7-87c0-3a4e8e00240a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea90c553-c7a3-4e8f-9739-651dc8d78ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d45b3d5-082c-4865-8bc7-bea0da26d2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7674344d-8aea-49e0-84f2-b33dc1e47123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf339bfc-06bd-4084-af74-004ea7a6a190",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1203f14d-de14-4b3f-a4cd-d2fca473d5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935dd1a8-ad9c-4d9f-86dd-cfd24f4c64c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091e49c9-8a9c-4dd8-a75f-92d224766bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daf5e964-7779-4c83-a60b-0f42e048b024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c027af-6dc5-4ae4-a2d3-eb1cb27be3f1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1669af41-9f85-48ab-8632-887b139b3b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2593342-ffe9-49dc-8872-388550c3ef27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ced270-51a4-47a6-817a-0e0e038c84a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f27ef13a-e0ea-47ea-8745-d255291e8d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d4b7f1-494d-48d2-a56a-8d0da5cef1cb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cb4d8e-dc75-46d4-ba7d-90c3621fc037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6982e3c5-d500-4568-ab46-3dfbfc1ea8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b50cb37-c4a4-4722-9cb3-e04563f5aae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7b707dd-6118-42a9-a163-3f5d4436bd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880bf7d7-a9c7-408b-90ab-6fee6477eebf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ae54d1-22d9-4426-80f8-0b6c2432a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9e9587-8b5b-4384-89ef-5400e656f595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539fc798-e630-452a-9380-f494091170dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c6afa5d-7206-473c-baa6-a5537ee3d463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c8e17b-1ddd-4ebc-9a45-ee2a1a249e60",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a52254-f2ea-421d-aae0-02d08163c630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4be1f9f-2274-401d-9500-17c8bb0721e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ed2d6f-0378-4d09-ab3b-197473806b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "477b7507-1077-416d-9634-aa0b3538b87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0721a0-86d3-43b5-85a8-a8f45ef63503",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c282ada-5090-41be-aac5-44583cdda482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d747184a-ceea-4257-9907-44d1fb75c24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeb29e5-dbd0-4b7f-a4fc-2c0182570280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "551f2b2e-59c7-4e4c-9c45-1adcacca098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42157db0-856e-4895-98dd-eca1c1062371",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ffbda6-8237-4ced-8a70-8b6e6195a4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94e2f74-47f1-4120-9b4c-1b8879e10ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce40ad2-47f9-4f08-b941-4f452030b5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa61e91-74c1-4d41-b30a-cc687b6efe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4256c0-7f13-44ee-a3d3-cfd437d809fa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e47162-dca5-4282-8161-417024159de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa5e285-1fb3-437b-b121-571ac6ecf173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef766f8-87e7-4a48-8569-b194a0ff0bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3683c30b-52e4-4e73-9740-30d3d563e2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e12b37-1177-4a94-8f0a-519c91ca6881",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80a630a-bb6e-4bbc-b94b-e422cc514b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84deacd4-4c90-4a51-90ef-72fbec82a154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c881ce2-1496-4d55-b1ae-bf874dcf960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a709eb-b100-44e7-b0d6-c82e70cff022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937b3993-dad3-420f-8cbc-6971ee9f3db6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773edcff-848c-4584-98b5-deeec3021590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bb3bf4-0a8c-448b-b237-abee80e0bf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca753a0-bb6f-4548-8b53-f314d342c9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b554829-0ae4-4042-b0c4-22301f1d9072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e40afb2-240b-45ea-b9ad-485532a70d5e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6431f2ba-fc38-4de3-a6c6-78f28a7a25b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42436de9-e3e7-4964-b56f-042731528235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6948c999-98d6-495e-9618-76925dec381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7580c74e-c750-4895-92d6-c6e47ddf939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3e8650-433c-4a1c-ab34-b6bc1d4d901b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a754592-ce49-447c-8ad6-937ce44f0f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ac7003-853e-4499-bf8d-716626f05096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad57b18e-e4fa-4a61-99ba-791fa7229622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f05252c-d15b-4350-9dae-4ae7c4a27964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a19fa1-490e-4cdc-abd0-d63d73f5c068",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fae211-0cca-45aa-97d7-2dd1ec0ecc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b416172-60fd-4937-bfa0-fb4e3ea6102d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c231a6-d6a2-45b1-92c5-a0b4d18fefc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1776468-b48e-4762-98e5-f99989b92ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b10bce-b09f-4d7f-85b6-6ede1ba97b89",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d380540a-baa7-4925-97ca-52eae45b1404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985289da-8342-4496-a0d6-fd7e4c5c4ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63848c2c-b6a4-47b3-8b1a-8055081a220c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4139d8ea-08c2-47d2-9a2b-6d7539f600bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee838d7e-c704-40c2-a5b4-38ccceb0e943",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a92e42-11bd-4615-845e-45b927e08bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5ba666-775a-4522-b693-f04ac4918d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73150c8f-72dc-46e5-a8d0-480d8a7278e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1e284a-f1c0-48c1-bd10-80e7a6e8154f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2521d9e8-0f20-4ebe-a4b0-526f03ec0e4c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d380307-5f19-44b3-895c-a3d8b64d2201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e277bc-41ce-4753-84f6-1d9c6ff99fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2e1c8f-e519-42f7-8468-45057a8d245a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc35266-3df5-4bf3-8b2c-e38a631f56da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3704ec9-bcce-494d-a296-a8d3297a06aa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666f2b98-735a-4b21-b8a6-78c8601192ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1cf167-53a3-4a49-962c-297cc3d120c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b54372-0d2b-4493-af36-4d99d477f921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6464f59d-1f56-4499-bddb-840bedacc321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593b5379-73a2-44a3-8d60-dbe7956224c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b96b5c1-b7ae-4071-badc-c9bcbbb147fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d722d854-c48b-4aa7-8e29-0f4f71563762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7178506d-338c-49e9-8353-584b7c31bc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82706e07-a83f-472a-a6c6-aebee529acaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb9eb75-cee0-4001-9719-74e5f6321af6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e758b7fe-1061-4e3e-aae7-3ab2b2953509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a56cc5-762b-408b-8e48-2dc2611259a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9054f69c-a8e8-41a3-9c36-9fc61563e85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "404180d6-a952-4423-aa34-ba30d9df1b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb4bd82-ddc0-4e65-9b61-0c3a3f70321d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28955c4c-3e70-440b-8d46-d6495c4b1a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c3e65b-627c-4fc2-87fb-9642236d3480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389335e0-a88b-4405-8219-81e3dc6db5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d66f92-13d5-4e71-8f1b-7a8784990bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028f7dbb-1eff-4377-9390-77d5aa1dde96",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcae164-091b-4112-85d5-47065a33f687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013c2d44-eb9e-4239-87c9-623b4823849e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11d0398-1b50-4495-8331-c6c89e5c7969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "534891f2-865b-476c-90f3-02ef9c3c0eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef055c45-f7d9-40f6-bb0b-e198babb9d53",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adf87dc-defa-4797-843f-6ca5abac98c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31d4193-a876-4c97-b57c-3129e68869e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc25b8af-467d-46c7-8be3-d4d09504ca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e2c614-9c78-4012-abd3-d21be8d689a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ecbd0c-3b20-4436-8f9f-6f55ddcda992",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f173d3-b108-45ac-9622-9a32ad325b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9d7392-0b6a-47fe-a37c-389492932f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b967bad-d059-4328-b142-dda2f7196221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df8b6a1-c8fc-4f40-867f-e97d209c93f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3070cb77-b97c-4699-8202-1f1596801717",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbdd7c2-857a-4d95-8794-d26b96bbc763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3da5b57-aadb-4d4e-a974-3f34b0fb3878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd11bd5-8439-4d6f-84b8-3b18fbc8c2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b75970d-6fb2-4672-8cbf-7e2b638c1fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb2bccb-2051-4872-ba9f-c5a36e4c2cc5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4e5339-7753-4157-a1c6-2b87c263fe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d497c0d7-576c-44a1-b193-881268789d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a55e618-1898-49b0-b8d9-d7692684d492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c7d813-2b7a-4ddd-8bc2-141544214f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7803e3ba-8015-4f0f-9ace-71160f50515e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c56d87e-ad55-4dc5-a24b-1f0d5efe3699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b310bf6-6685-4bc5-b528-61bc03201937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6875c64-05c9-43cb-ab27-45909bd3329a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eabce43b-2482-4156-aeb9-b23232c67950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ad4112-f387-4567-9d03-772cfac927b0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b4e149-3da8-4eb0-8ee8-10f01e1b62e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb34f733-8450-47c5-aa04-500e38a0cb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837748cc-883e-4e7a-b6fa-c1953f0bbef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6919d3f4-0a48-4192-b668-0b97cf50fb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94065791-6d3d-4d29-b45a-1d6b10e7893b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5c382c-c10a-4b3e-a389-909de73f0307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d33cf6b6-53f0-418a-a388-db7fa65eed6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6e35c8-7d15-4e64-87f1-b6dec869bcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b84e6db-5788-4733-93e0-0825fb232aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52137249-a63b-4d26-bf05-c802709c00b9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcec6e1-f0b6-4806-b6ee-2767355f400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70aa7736-9c8a-4bec-b935-c8ccca541c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab4a87-e978-4269-a0eb-f64e25e17d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b3eef9-25e5-4a84-84ef-420bc1bbe02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2fa8ed-89d3-429f-b785-9fdc20ab4ec7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d59b3fa-f076-4ffe-87d9-bb47068c9fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317825b9-45e2-450a-a04b-0af1b5d533e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e147dba3-9b83-4570-9fce-6698202ec395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddad144-78ba-4bdb-bb5b-cfece547d28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bc5125-3356-4359-b9bb-da813ac5e5fd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b3879f-8145-4e38-8394-ddd933205e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820c427e-54eb-45a1-b491-3ce76bc61b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bf678e-5ed4-48cb-ad13-6a15588cd53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2db06d-dae6-47f6-962b-9e32bfefd32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f0f05e-1a4f-4beb-988c-d87e06e22c09",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7508ceb3-fd84-42f5-ac4e-3fb0464ce697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7609940b-477b-41a2-b52e-483504f0dd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6358491-49e7-48cf-80bd-a75ee3891c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f4d3b4-5356-455c-b5ba-6c50e93cbe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96f9f35-42c6-49ff-acb1-4fb6809ac9f0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b22c81-9496-4e20-addc-beb4888cb1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2ee3e5-7d3f-4daf-b781-b667b02271c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af1cd0f-d564-4896-9fd8-072c58f34b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1344b0d-d03a-4713-afcf-16f0540443e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac780a9-cafe-42c6-8e37-19024066b9e8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd8145-772c-4e1a-bd09-e026f2edb731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817b4e7c-fa6b-4a62-ad26-92bb4cd97dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f7d401-ff71-4937-92cd-983e8c4d733e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5075247b-f53e-4a93-9611-224ed00edd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398aa673-4e48-4861-83ee-39ea75063ea0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5f334d-f79c-4384-a387-a9018a5bbe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59473863-f410-4f5d-8d2a-dee43aecd08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda55df0-2745-41e3-8f26-a34b8bfc8c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "90ee35dc-a3df-4602-b350-f995d3be741a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612f3213-3701-4aa2-aad4-888ae048fad6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13086b7b-b75e-4c7b-9c26-658368fd5420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a522c3-f98a-42b9-8db1-882fe12cfa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f17be5-cf01-495f-89b5-7be92299629c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "61050d69-0121-4837-9a4e-bda14eec361d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4175d5-eaa6-4bfe-8f93-efb6246dd7e0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289dd7f1-1e89-4235-b706-b9ae9347d565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc92a7d6-4d08-4c06-9492-ff6779d14eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55f9547-1bb6-49af-8f46-6b5442530b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd9fd5e-251e-40af-b099-a4684d68fe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38e9002-238c-4852-a077-d9eb93888350",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cce4e6-0129-45aa-821f-0d544ff9efe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29591f12-67a3-440d-9275-795e549a23a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cd55c2-4337-4b74-bc70-8f9c3a5a6e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be6473a-bc6b-4cd9-87ec-eb018f6a97a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5ef4dc-74ab-427e-b725-17c087e57c81",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c9c33-56be-4b5c-8bd5-7e2fcba42db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efc097f-b52a-4b7b-96b9-1842fb1f447b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ba4486-98d9-497b-80b5-a58bf7b3dadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd7431c-bc12-40ee-9ceb-bea0da179a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8269db-7f12-492b-86d2-8d6daec2c941",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5c800a-50d3-417c-9862-afc6dcd10b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b65363a-53c2-4947-9e7c-5d5db477a424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8876aedc-7483-44a4-a8d8-341501723b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "510fb722-0458-44d9-9494-78fc7230f5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d9c7cb-a6b8-4391-8eb5-943a09dfa638",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684e6619-6965-4f0d-b408-5bd958eac03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596c0356-623a-4b4d-a2d9-be5cec24c39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9080354b-c72c-4afc-a1cb-9b187d1dbaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9600ac2-f2c8-46b6-8941-9ae328d4570b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e85977-ff90-4e04-9f33-5429d2b7f293",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004025d2-905f-4615-9c99-e3b7399febc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f066bb61-11d4-43f4-8b51-0b0dc381b565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5879dafc-d20f-44f1-a444-d62ccb582557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ceef59e-25d4-4d3a-9b8e-db9866faddef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dd9cb6-3ab5-41d1-8010-7571d064a212",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a697b60e-0dae-4223-bdb7-2789865bf8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cc9c78-991c-48be-85dc-edebb89b7034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e708f9e6-a82f-4983-8342-92062b98de5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f85da13-9c5f-4cac-86d3-4b0b52cb5c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd5e5c1-e7ef-4d60-9450-622e4beac758",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80db2651-f2a3-4cf7-92fb-085c37861a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915eef12-8fd1-4b7d-8907-e7b89aef19fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5619d700-17e1-4b55-adcd-7bd21a60ba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76cdb269-1082-4f10-a0f9-9353a6b2514e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c445ce-2c95-4708-99dd-79ea722e7806",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c79e90-6a0c-4540-8daa-eb7aa69b8400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8b04b2-b4be-4cba-93e3-00c858d36a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d02361c-d13d-467d-a74d-3768bba984bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9209b5c-7339-4560-8bb9-d1feba01b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d1cb6a-6ed3-4ce6-a0b9-23581a563305",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5deefe11-1bd9-4747-9a2c-2d95dfd71d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c096d5a5-1e95-4a11-9c16-fac210101307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b438858-f72c-4fad-b3ec-fc54afbb8696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "251221bb-c121-4947-93fc-1c69db645903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c23f28d-8064-4150-9b90-6e604113d84a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dae952a-98f2-49a2-9f17-6e71530bf704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a6bcf0-eb19-4e2a-85b1-4deda6dcb047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89570188-2794-4394-8299-2d9c00dd2ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd9942c-dbc8-41a8-b3a4-cf4cc9ae363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80c8993-2d05-43bd-bf7f-ea296212733f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714f115c-1400-4475-8f6d-ad5af493e6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f69c77e-ece3-4c78-9681-3ac8365b3154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208632eb-ff59-4ffd-bf00-198e70f2eb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "83863891-5ada-485c-b67e-492ad574b9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63900cb2-f67c-4ade-8931-9c0e66cdc911",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecc6740-2d56-427e-a3d8-172facda5df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989eb0d8-fb1e-4116-81e5-09abfed03b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54c914b-72ea-49b3-9ae4-05e54d904500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "090bb18f-223e-496e-888f-cd187727ff2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1569552b-a85d-438d-9785-9a58fbe493e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4481add6-102f-4c74-8e1c-8742dea1c3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1ad4d5-b42a-42ae-897f-2ec33d3352c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e085079-11b4-409f-afe7-7f2c94a41c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37072447-3dd6-491e-80a2-49a0753a0372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26a1bf5-4bb0-4f44-9962-066c0095f687",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1530a8b-be53-4511-9f1f-614e7afa2233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652b4e84-cf64-4fec-99aa-4a90223b5784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3303cd14-2c81-4116-90fe-f6bf49ca076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "90eecf41-e327-4549-a1b7-43e8fbb121f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc952c7-d02e-4990-ac3d-727aa3258bcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dc2f5d-5d6f-4fef-9c39-e65d923efad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439d3cdd-3377-4f7a-9295-685b4ccf4db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ba4b89-5ff0-45ac-a9c0-e2cbf51c90d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16ad84c2-a6ab-4b78-b229-95bb64a8a763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e158f-ab8b-488a-894c-b66d03a01058",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b16a0a-4833-45d5-9374-5be35edbf805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb932a8-7007-42a1-b470-0761a073f849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4912e1c5-ac9c-469b-b26b-448eb607f73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2642b298-f9cf-4410-a77f-4c2af9c5b656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2101db09-f72b-46d8-930a-14824e2f79b6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c9d9f6-daa1-4a3d-962a-16f1074069e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df579601-7e69-4d36-a73e-a9356921ed16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df985ff-0be4-409a-ab5b-1376f29d09fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1abe36-a29c-42b6-b547-60043a60c1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08e43db-144c-4363-af2b-2ff518a62051",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f7db53-9ac0-4d9a-a343-97b550526eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2524a2c-105b-442c-ab6b-ffd5a7abb658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fbcf8f-d61d-4cdb-b3cf-6a5cda494f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7cf9fb-da39-4b69-8f73-81ea85fd972e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ce6e99-fe83-465d-851e-52febfbe53bd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca21f25-e24e-4e9a-b712-8cbc49cd3cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4283b311-c06f-462e-a032-fa7eaae82bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38150f-1544-4b6a-b4bc-aef6f8222343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a15a0d3-d242-47a9-868e-6ee53849d9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62062d7e-9075-42c6-b1f2-f6997163e8a2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224822b3-4fe6-4603-803a-0f2e536fef21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2837c2c4-542a-452e-805b-cd293d602610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b1bdd6-2bc5-4c4b-8730-310851a2e6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d96fdd-bd00-46df-a93f-235fb06890a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af00c359-ee17-43e5-a92f-9c6ae9f023d0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4cc0aa-9fc8-48bf-a4f7-dff9aa4918a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661bd12e-b0e5-4f66-84e2-3786e917f110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616b0742-fab0-4653-9597-b859d2cad263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1cdc05-9798-419a-ae2a-7e2ce028f1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293b42ab-c292-4e35-932f-d67786eb8bcc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bebb35-63ce-4155-af66-e1a129fe039a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8822e02d-07ed-4dba-b639-a0a8cc961360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0811362-568b-42d2-85da-5b29a4b23047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72007880-a5f7-4b90-a3ac-1eeb2480ae86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8f7251-1d4a-4db7-8765-014f48b88fde",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a0106d-c53e-4e1c-ba85-686429a06cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0e3f72-9386-4674-a459-a18a0d78b1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea52041a-7ebb-4912-a516-e1097f509fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6ddc9a-21b7-4583-b1e1-83507a016378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c425ab1f-896e-422a-841a-f8c3a650dfc3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e840659-1a22-4d9f-a4c2-d3889e5c8042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32633f67-eced-4568-8674-7b4f296eff15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c386ca-64da-44eb-90a7-c5dcf93514ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe3ec97-4db3-43ba-9440-0e163f651c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e28119-eeca-41ea-9149-bd71e7509dd1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0d1be1-ed28-4c69-ac7c-3373c7d6a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a77c14f-30fc-419c-a7af-6c4065799f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be076ef-4328-4f51-b1a2-589930ac7728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9c0244-d35b-4f3b-8f1b-c75c58b5c954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c8850d-25f4-470d-ba9b-a40d0c666a6c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9698c915-12c6-44ec-9be8-c8b93c447773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669bbb94-7966-441f-9b00-e50b8793bbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f18cab-de64-469a-99a7-7dcf4e4d7a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae93a05-903b-42cb-87b6-f18a4d8a22e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8774f4ea-3399-49e8-a184-d34abc984c22",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5d36b3-1300-4ef0-b54a-12e72268209a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553f2c85-1d42-4a4b-9860-f6934b240894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ee6303-2221-4d0a-a070-c1fe30f71fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdff477-e223-4b45-ad06-5a6edb162ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88384914-ba6e-4d79-922b-00d54f157eec",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7f73d3-f29f-45d7-9ec2-16be556e83b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b5dd53-5268-4ae6-8710-40bd84526e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1af5fea-6b9b-4aea-b2c5-54af60b0d04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8054f49-2bfd-4c5d-9bf9-57774fd1f1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33747f25-f4bd-4317-b7d5-1d0729bca638",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1df610-3fe9-4920-82fb-f91e9010bfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06655bf-be3b-4b4f-b170-8da831d2f561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f692949-f7c0-4cf2-98be-0190fd442746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95cf9ca8-e022-4ad4-a097-d2008cb10b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e897b10-a9dd-49f6-beb9-a03f014b1b2d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cb4d9e-f253-4f54-b2b4-96aa6118313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd74519-2d82-4d3d-90f7-249f041bbc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ef9605-260f-4a5f-9a11-27d1ff0f7400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6020112-e4db-45e6-ae20-354c1e86840c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f61dcf3-fcd2-4bae-b72e-b3a7c525f0f8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00841e9f-8b2a-4e1a-b5f3-c43e2a3dc7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0468ef67-4eab-429e-8f59-74e3e87553f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005f0be9-7af8-4dbf-b6bb-932e70939b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6613bcc6-e483-4d0b-b1a7-8317b41dfa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9fb8ee-238b-4899-be3f-3422a75e4a8e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb87b03a-a9e1-4ac5-aa8a-4a881a39f7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3806a9-c114-42ed-8506-37ad6028f40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead17453-237c-4477-8430-a5b210e6ce76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8f5874-aa11-4ca7-99fa-b4b33a80de6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3fb010-fc81-4ecb-acc4-b510df10069e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033a4d16-57ae-41b5-9e57-f275154d7ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b558623-c848-4196-9c6e-9d30ad2797eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29aae40-3268-4f8d-ab66-542169ed4cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "398c65dd-4f02-4262-8947-ff281ef238ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2838452-1b76-45d3-b8e7-e8852f085ddc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c36144-2635-49a7-8f53-ec61eed0ab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487c140c-a4f6-4ba5-ac1f-7cca2b83d225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81218950-c1f6-4b0f-a4df-f2d0e4e48f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8d5a3b-9c02-406c-a934-40cac2ad107b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ca79b8-f24e-4d77-a2bf-e5ad06dd36b7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ade267-4661-4a1e-9be3-1bdd0f835c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483b6d69-b963-4862-9fe9-4cb161e580bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1617dec7-acd0-4f75-b8cc-127d9c65a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f24e36b-884d-4bed-ba3f-7dad9ab7f56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2e4d8a-a786-4f8a-a9ad-62ec950c2564",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f86346b-8f98-4be6-8bfe-0833839f4089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c523ad-2c36-407d-be79-a005138319a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6db4ed-bac9-416d-85c0-978a2dfc94d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fec3f95-c797-48d6-9b83-3f9046ba32c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd71f505-615c-411d-8f14-182635baabbd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584cd2c6-b828-4d12-9b83-95a1e14e2ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa58ba89-5de1-41da-97c4-4c31dbf94c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bce6ae-248e-44b2-9354-2fd024717954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d89de3-9598-4749-be23-b99490a07ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac4b56c-5ff6-4d71-9114-e5cb1d119501",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9367bf2a-aaf5-4f4e-8fb2-9ba250c403dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c3e329-5ad6-4a68-82bb-8cedd348ab6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9fab46-2390-49e9-9fdc-cff769f88d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f1e4fd-2ee0-4431-ae6d-9f858beda951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60c4f37-51ee-4710-a034-34bbfb59a788",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb1e8b7-fab4-484f-95a6-4da30fea91f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff9fe2d-0e47-4c42-98b0-b254fdfe9f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbbb345-2b51-4f7c-aec4-3e6d6474b8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da31223-f734-463a-8dd8-5df7fdc00b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ba2f98-f4fd-4ec1-8148-c3b584a8cd20",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c7dce7-53b0-4f0e-a4f4-ee914ea899d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddb8f32-0435-4a0f-afad-99b337b74905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c701807c-e8c6-43e7-93d2-86601de71a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "888b1c8d-902b-411d-9a78-f82b53fa4e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6625a78-1adb-46b9-a38e-c9daf1e99c43",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf117dd4-8444-4fa7-b1dd-192382ef1ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b383213c-cb01-4553-b48a-5aebc1fe3254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19fcd62-af24-4840-a7b8-19351c9cb02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "005fd8a5-feed-494f-85f0-d7bc7d86d3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990d600a-f64c-4c60-b7a0-2147fd77061c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31690778-3e67-4337-9abd-651b925e0107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abf931e-d85d-4d8b-bb34-ef2c6dc5734a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7e8760-5ae8-4eea-abb1-7b9f70ac9c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbd7941-b524-4c96-9bc9-5d3d0540614f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090c38cd-935b-46e5-9c00-74eb8cbb65c5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86f4aee-c303-48a4-880f-d1513f133cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df1ca1a-e21b-4908-bbbc-ae76ede1fc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec129512-23ae-4ee2-9ddc-fee7b91fd796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a7f0ec-cd64-4fbf-917f-0bd7d555cb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2cb29b-92d7-41f5-a787-2a3eb079167c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ba600b-52f4-48b8-8816-a0c5c7790f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62c708c-2316-4f2f-8ffa-3231d1a4fef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfb89ea-c734-4a1a-b3a5-9c762583dd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3406ef44-c02c-4e43-ac90-2085284421d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a6efd7-1f4d-4a69-9c72-0aa796a420d5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11abfaf-6b5a-4f8c-a52c-b8810c958729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d024644-8704-4c0b-aeb2-59d9cb8cfcb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7026088-e274-464c-8bb6-d3e9698b3e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0f0a97-504d-4fbb-8324-7abaf14729f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c27f58-027a-414c-a11d-e6b6d4fdff0b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b15ad4c-367e-473d-8b42-579f4a38623c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60dc3c2d-71a8-47f4-a640-504b7e63f83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f823f40b-db41-41fd-a460-53a0d5912bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c56df42-9d42-4e85-bb43-652e5572facb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6853957d-8cb3-4bec-9be8-ea0eca9ced6b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5876161-9184-47cf-9c75-28d3a527fe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "97bc0f3b-4dbf-4d50-adf7-edcf52c9c3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed72bfb-80c5-4d33-bec5-2cf17822a3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b236b72b-e819-411a-bdd2-3aac469d63be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67f1bec4-c4c1-4647-87ce-5e2b1767ec41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83d9dfd0-6180-478c-8d2c-e442e0f283b2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7facf6-0e3a-4b89-8c9b-a6473a06ebd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e323af6-406d-454a-b2da-0cd9ceb117e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9e5358-fd03-4f00-99bc-53d753d6d257",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ef138ed-50f5-4d6b-95e8-f399bc147651"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce6d335f-3ad7-4bc0-8a15-e6b826f212e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b85e240-69dc-4816-8537-c7f7e6b62c1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16dcadea-0d13-4a7c-877c-908c17c69634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ecc1705-dc43-4faf-a703-7172704dce10"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45dee3cb-5b41-4c46-bb77-c45325d78352",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4166602e-78bc-47cd-9ced-a72d3947ec63"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "629da08e-8af6-452e-a3fa-7618f30f03d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdafe156-389d-4033-9b7d-b9c20e040d19"
                }
              }
            ]
          },
          {
            "id": "eb25938b-1d34-449a-8aec-35acff07f0c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9437f1c2-d564-4c0b-a228-e163f9b15c48",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f9178330-59cd-40cf-876e-514f70a3c5ba",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29ff511-df3b-40fd-adff-26eb76a89f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "577f7590-ba99-4aeb-a3dc-4d748875ac09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cafa04-062c-4663-8c36-59130f8f9dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36131b4-6a74-4936-a2f8-d47ac7d39cd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1fb481e-2e65-40b4-9f3a-e01ea8328833",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f452949-002a-4710-b82b-1ba4e0651345",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb8c0df1-e872-4cdc-88c1-d2c97e412c4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a460934a-6983-41b3-9c3b-4f5cf69bf3a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e93810ec-839a-4028-81f8-2e643bc5f5a7"
                    }
                  }
                ]
              },
              {
                "id": "8e6f3da5-b2de-424c-81c5-e1821e7c43a0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8475651-6fff-48b3-8ecf-608fb779392f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79855292-76db-4490-bce0-9e89ed816540"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44cd587b-5a47-43ec-90b0-4d741cb027c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88d9944e-b37b-4862-a4db-30c3944e2a7a"
                    }
                  }
                ]
              },
              {
                "id": "c430aca7-3536-4963-abbd-e7b1af7731b2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22c2a06e-87a2-44fb-a5eb-6d55a253f311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78b70118-6f84-437d-9691-45e58ecb3f91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e8b5e26-aea4-43c8-a565-14cba6ed2f23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9445d7d-89f5-4fce-ab4d-d7b6ee171ee5"
                    }
                  }
                ]
              },
              {
                "id": "273a6f74-1e87-42b3-9d0e-27adc2aa2727",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "753a3a8e-6628-4e66-9881-ea2c9a11bee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de55b8e9-c593-48c4-babc-a3f83e513b83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9dec5b5-fb27-4c78-96f4-9957b401721d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fa5f3555-de75-46af-8ec0-6abc5c95162e"
                    }
                  }
                ]
              },
              {
                "id": "1e1a06be-0786-419b-8975-faf7c40d1722",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48b307a8-5880-457d-bbc1-a94fc0e5a81c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4beeb3af-bf18-46e3-b352-674ee9e8f782"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17fb889a-2263-4306-a2de-96621404c2df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4df5e4fe-13a4-4ef9-9c73-ad785f301a1e"
                    }
                  }
                ]
              },
              {
                "id": "4883168b-7cdb-46b2-b278-077130cecb8d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64f8f163-4585-40a3-8087-eda6e615c483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "465602c1-ae10-4663-b161-18ffd6a4136a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b95e01f-5fc8-49cb-87ca-d1d1bbb75572",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3661b921-b6bb-492f-ac46-6ad5af2e51dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e32cbe08-4ca4-4ec5-8d22-0f3860281144",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0f77eb5-566d-4fa6-ba4a-005e658ba33f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08d6d23c-e294-4f7b-a5cc-6b400b848f40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5d4cd01-3f75-4ecb-94b8-c8d45ad7578e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46227b8e-1758-4e3f-94f5-20e11b5e75f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "33efee29-ab00-48e0-afe3-f9f7edda65d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f5f6767-1654-4ec1-8095-9cb969b149e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7923a3c-d311-4fa1-b0c9-b97059bf3b3a"
            }
          }
        ]
      },
      {
        "id": "a663584d-154f-41ca-90d2-cef60801712a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ee0d4e02-db40-493e-ac26-745088ad87b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63fff4e0-ad18-452e-9c6d-efd7c131da28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05f7a79c-1c12-42af-af32-0e73899e6d43",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79489456-4e2b-4b5e-b41c-53eb3e1749fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cece72a0-0140-4840-a635-cab1217f8c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eb3685-6244-4870-8528-8c6e14ed4e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "24dd34e3-4446-468e-b47d-47ecf23c7b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4afabdc-f73c-4e15-be93-fe2d9130a656",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12282bfa-05b7-422b-afe2-ea72db4f7a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc0ffc4-bcd7-44ef-88ed-882841964b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88b6010-b146-4907-af98-b96492c617f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbd6a65-7ffb-4400-8505-8a42bf32eda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e636ca9b-137e-4bea-b332-2e1df2e74a85",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d610b5ec-73d3-47e9-b815-59713d79a309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7223f96-dd91-4d50-8752-4965aacc15aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ab0fd1-a7f0-4d4b-9c65-0342594e2a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ada7ab-759f-4745-b439-edda82407e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc8c62f-cf06-400e-a5c9-d66d4380aa82",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60244a9-9997-49b2-af43-86cb5601eb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becb18b3-24d1-49e7-aa2e-0ee1d3bf13bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba6538c-d948-407d-be7f-5f95ead42dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd3d305-1d84-4de1-8d10-8dbbc86ade1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafe7ed6-c4b7-473e-99b5-3c610e968dd4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140aa734-103c-4d3a-ac4b-f3a316c80584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63663b00-2124-48b1-a787-b53b717484a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b684f8e-b807-48b6-90a8-8531ce7865ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34c65589-5b74-4fe7-ad2d-5d367bb48ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44adb99-c91a-4825-85d1-fc13807b4d7e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a71388-fcdd-4524-bb26-c5fb62a51798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa882b9c-0bff-43bd-a0b0-d9c119694642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709aa569-57c4-4473-a8cc-d075306e5892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12db47f1-c63b-4116-8498-37c201e08c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f97624-eab8-4069-8929-e1da0d8e42e4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1af419-c610-48ee-92dd-ecb552dc6b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6a9c07-82c8-4e85-b16a-fd57c23d3188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e455a5e-e055-4942-b5d5-f2801950a647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "136cc9ce-6a10-488d-a4bd-d7b8adc27c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754066f1-c80a-44b4-97ab-3145c7e5cf5c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ed14cc-da6e-4bca-9046-7f82997293ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c4e538-ab5b-4f1b-b9ba-4059ed4a5d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baff55c2-7d90-4c7f-8f5d-0b89178e5d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5593a17-947a-4e22-9121-8204628f63b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adbfeb8-fadf-44d8-afee-3eca00be053f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb3f941-7528-425a-b620-9951f13050b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ed3d8d-e088-4d8f-a1a0-e04b656ad495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e540f94f-5850-403d-8ded-a350ba238a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca5885a-c6c9-437c-97c7-b4332727795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3afe15-5bee-4b7c-a090-583ceada572b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d53603-c78c-4479-96e1-5e693fd00ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8de9c7f-47bd-4009-b340-8eb33047cec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919a9eda-6b28-4976-9661-a5feb8ace3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e318d3da-8d2f-47e3-a7d0-bc0fd705b8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a591e70-ba3b-4eda-aef4-5644272514ae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e11753-6503-4c6d-a6db-372ce4ff2e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b79f6f7-4c3d-4054-9b3d-a4f6db67a265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee1df53-b3f1-40ac-b8aa-a792e3f52140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db7d6ef7-22c9-4337-aaa3-0d33a525baf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b068724-6ad4-404e-9af7-fc6610ba387b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87badaa5-3861-4a0c-9ed1-9940200aabb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4b9cb7-9be4-4591-ab99-c15cd27cc548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655e47b5-f47e-4b38-bdb4-96ee64c72301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d89716a2-dbc3-49e5-9cf8-23145eb0d8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761f9511-7ae3-400d-8208-d0c566a8914d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22aaa00-c1df-4a31-b272-413638bf317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac7d588-9cfc-42fa-a6ce-3d2beccc1f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce8c5c1-deeb-4bfd-8cb7-a0fd436adc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee01753e-41af-41b5-9e9e-766e68deb328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8b737d-9439-4536-a394-b43487498f7f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e173bd-c6b8-4fc8-bd27-38c83f9dce90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5363e2-57fb-4b58-8f0b-a980fd02e024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353f70f9-0966-4f34-b34f-d7fe40f231da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "08cd1ffd-a322-4ba2-96b6-1cecc9b1e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5a6e0d-32f2-4f1b-a3ff-5626a68027bd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77722ba3-aced-411e-a576-9c76d0f80817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9615211-a913-45d3-babf-4a9109c61848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007ddd12-6e8f-4373-916e-9da58f72d36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2f2c7c-c91b-41dd-95b5-62559f97ddec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f102f7b8-3422-49d7-9f34-24ba8791b480",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa377c2-edec-4ab7-af07-108dd0be16c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7095fa3-87b3-4c7d-a305-d53ee7b4a1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b40b3c6-a046-496f-8534-60c819a28ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1e4370-1e0b-41dc-8704-b11de31297a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d893052-d13f-493f-acbe-f5e6164d0dcc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87578aac-f753-403d-bfb7-5daf5a2dec7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1f688b-3eb4-4f99-9e25-ab39b8a5ab2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a39a3e-daf2-44bc-9bf3-edf0d0f95110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf17010d-dfa5-49dd-a632-9b4d7aab16c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a875ef8-e8ae-4be4-8e33-9564f6b23a8b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f901d896-b8b6-46de-88d5-fad0ddb98c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ac5f57-cf5f-4cd2-8ab7-c97ce6cbba12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df18b8f5-a83f-46d9-8d3a-baef302ea793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "316c8576-5712-4a2a-8ad9-8f9334820419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2163cf0d-44a4-4d9f-b0e0-7faacd10d902",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249920a4-19c5-4a71-9dd4-cd0f560e8a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a8ea96-57e9-45e3-997c-1fa765a9ee39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db209790-b3ed-489e-8b43-85f931903c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1df542-e8e6-4ce6-a7cf-ad189bd8b539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ab85f8-3aa5-4721-ae00-0b5e32edae84",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce337059-9f64-42e2-a74a-5ae428816dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a575ac7-940c-466a-bdf3-187751266ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f148ed-6fa5-4ce2-8d4d-db13c43d4528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2bcbb6-17c6-4b6f-bc73-bd8a5d47b8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f924980d-0407-46fb-835d-5f282b5a7b87",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16841f4b-7fef-4e45-941b-09552c7708c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fae3f62-17e2-4cc3-bb3a-8020a9579f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57887864-4202-4834-82a7-66c76ae30239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db96b0c9-fad3-44c5-a60f-a2962e7ffb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3c8789-6459-408b-b39c-3cd3477fecb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9db22f-c1d9-4e7d-8a79-648bce60e345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07554853-4c36-4049-8557-43d7ae7960dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8142a950-3c1e-4973-847e-eead320ade46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "319d5801-63ac-4ee7-8808-81f11592f4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526cd97b-1c0a-4a67-bcf1-306ea6505763",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d92ff6-a3c8-4f26-bcbb-44244a69f0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a399dc6c-f1f8-424d-b4bf-5bc557f4fa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3c75aa-bcd3-4dea-b51c-07955c0e9be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5285d1b6-9659-4f09-9f15-dade28abf974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34cfd95-0eb7-43c5-8491-078acd044123",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20d7d94-5a5f-4cd8-90a9-5c500beddd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e19a45e-8f8e-4a09-84d7-333e3a3149de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d430f159-5cc3-4753-93bb-36a277a59750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46351dbe-8bb2-488c-9aca-6ac7311e7f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e52f3ff-54f9-4de7-9273-9cebb2f40550",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a910f65b-a8c7-426b-89ff-af42aa721865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2010fa5d-6022-4612-9158-b965095691a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5c7f8e-7613-4854-8618-ce2079efb980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d1e6d5-59d6-4d60-be4b-f9d055302b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069edc48-8c1b-46cc-90e8-fbf7531c1c0e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5546e186-a6ae-44c3-a00e-2eb791a3b78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebadb70-c811-4bc0-9bae-e1e004370677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89efd7cb-451d-41cd-b9dc-340275da95dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2617a5b3-25ec-4891-a1a6-867e46947bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e7719d-fbb8-42c5-806b-eab291c0a068",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c543999-2160-4bcf-9afc-e1a57d8f83d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c56588-1199-4c65-800b-dc44f02d0e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1996e76-cd86-43d0-b496-a80ed749a129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1b5d35-9e6b-4191-bf69-af6329b5ef21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407572bc-b741-4e87-b4fe-adafc02ceb17",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee85c4fa-56b8-48f4-8ab5-67039124b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204d9b52-f6f0-4937-83e0-91158d214b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f968104a-d3a1-4f92-91a9-a4d2802c4402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f33ee8-1719-49c1-8878-135eca397f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e2856b-dc84-4497-973e-e6f3575cbf9e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92377a30-79d6-4ecd-9e20-fa628d790b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c7d233-ecfb-499d-be42-0e6b6f2c957b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9714233b-ca47-4dc1-a414-a64c0352fc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe65e1ec-f9c9-4778-a9ea-699c2ae91166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9e1fe6-034a-4440-976a-b015b395bc11",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897a2c06-db93-4cf6-a073-9ab0eb20fb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150e0699-f1f4-4007-8248-d60961f97b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bae9915-6de3-47cc-977a-e13833de397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8336a808-c753-43b1-9f3e-81f156cf308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e45fdc5-0b2c-4d57-b90a-d630b1fdb1b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929362c6-3b07-4014-9fc2-7bd80bf700a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ccb4f4-af05-4cc2-af5a-e7af98bdf691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb1194d-af56-4470-b76f-66f035d0a3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "470c1d0a-e5db-4687-b82f-bd677d074776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7303dd-6420-4100-ad02-172eeb16c2b8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3c0682-7655-4704-b073-f2b44ea1d5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab8056b-8d1f-4eb3-a341-e9a2c56209d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc1c472-7963-40e6-80e6-0beab8ee48ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24eec516-99fe-4be7-a814-293165938fd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "360d3042-7f27-46ac-a525-5c4c25cd6159",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffafed9e-aa23-4a3e-9786-7983f812efc2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9d6bff-680e-4471-839e-977971a04812",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb1fad3-6168-4550-8592-451c53ed28e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb72d3c2-675a-4138-94a0-d19a68e5e095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fb56db0-35bb-4045-b515-214820a7cad7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12ff5b14-ac6a-4b93-b838-94617f76400b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9db7047e-9dec-4e3e-8c20-1d04cc219339"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2f4959b-e917-4455-a899-615643cdb4c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "261743b4-3867-4e33-af4f-39de3a2d45bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7f4259a-06b5-411f-9e25-582c25d4d09c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2bbfbe7f-96ec-4405-8ef1-2fdb0b297ec1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "245724f0-0ee1-4d1f-b385-6b173f4faf6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93bbf3f0-3195-495e-9b16-eb639524012e"
            }
          }
        ]
      },
      {
        "id": "1e9d5c2a-dbd7-40f7-a207-88a2852551c3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "870ffeaa-936e-4852-8c69-f517421e7d25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d02913b-dfd0-4413-a472-13dffa381a84",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe45e019-1fda-4afc-8ffb-c45dd070e9ee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99edf3f-9c46-4c8c-8b3c-a370e40b2768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f428b8b4-5c97-415d-9ad0-9cf44a26aa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2db4a20-3edb-43b1-a3f8-65e1d4dd11e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "19fe2e50-a49a-4b03-91e8-4652a562cf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0a6011-8d46-4716-8716-0cce82189221",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9823d834-2a98-4d38-b2ab-b9461642d69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c26c780-ea19-4b3c-8f45-67ef0656e579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c4c2d4-1b5f-400f-93ff-f00b716c0416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa67120-1d6b-48b0-8dab-29de271755b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e6d1de-b2ec-4b4a-9308-61dfdad9a395",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9418f300-c58a-46dc-8838-ff2b0e56447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49427b93-8985-4a40-b606-0edf9b74c138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099ad34f-8d76-4576-9e60-ca4fd008e8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cddfe23-5da4-4b73-ab57-778b9ab152a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ed0bac-3aa8-488e-9328-1a68e77efaa0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ef0ed0-440f-481d-9bac-7f0d8cf3d49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b59c1f-cee6-4149-88b4-96c949e02991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7e88d0-0aff-4fd6-8c82-95c0c3d24dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8140fc-e4fc-4129-9558-bc8750927010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6897357b-8c01-42af-88a4-07edd0181b8d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31632b86-6b88-4c27-a6fe-5520a5072615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4145750c-0718-4ef7-bb85-0ebb046f0e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e821684-5beb-4f42-b777-d80ed69868cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3409033a-8ebd-49cf-b2b4-0ab3faacab71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4fc1af-9b4f-4e22-bc4a-0f3ef56b8706",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4787dc73-fbc6-48c0-ae8a-c86f8a4fb81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d94bf6-236b-4f78-87d3-b636103b85d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6bfc03-721f-4dc6-bcb0-aa98d9117d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5e7472-86b1-4f38-8d8a-8ad7768cab63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8675511f-6751-4d89-ab2e-d2081c24bfb0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eb2f9c-70c0-47a0-803f-080c7954b339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896496a3-db29-44f2-8b8e-2070cd6be334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de4e840-48dd-45f5-ae99-2a3c8919c764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b14077-a29b-472d-a361-b9175f3b3569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24feb2b0-615c-48d0-a7eb-6e25d9145536",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f5144d-da13-4b44-821a-bbb901ce1936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb4aef5-65d5-4e8e-99ac-07a7d3f34c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c1ef44-f462-445e-9725-c7113935fe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0db74e-280b-4828-8f3c-3797b2c9c6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33fc623-1c33-4c4e-84d9-38aea1167e2a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c56fb34-f55e-4d7d-b065-e47f3ba9d595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046f8c47-162e-4bf3-9c2e-f361c8178a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e96aa7-9db9-4e5f-b0f6-e1912af1dbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf41aaf-9950-4073-9232-56d0120929e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21b9488-731a-42ca-a3ca-68e8b77b6bd3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b209ed84-47d6-4a61-b9fa-230cfba4b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6283a1a4-e092-4dd9-9733-ee3d3f27cc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f692ef0b-1d72-47d2-99d0-eb147ac4f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11141ffd-b77b-4d47-b236-a7158fe270d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc016d6-8da4-4122-8c96-ebe84891c8d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5643cbe2-45bf-4687-8851-db815834a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45a2a5b-e0b7-4ffa-bd9b-14e9722a928a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db44612a-a5f5-44f1-8a83-7abfbc0053ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "19e69b60-1237-4e1d-be70-71aa1a3be779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f48674d-3dd7-4ac8-817e-ca37d49fcf4c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ec7add-ed66-42bd-958d-8b1518313b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6d6929-9674-4c49-8ce4-131429b6cf8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf8c2a3-71a1-47a2-92f2-07de7b697f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22726a74-5175-4940-8847-546268c0025d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a6bc73-3e25-4243-90f4-2bff8f5a1366",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d5398c-6d75-4649-8c4f-9fb93df531f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac86c2f-0246-43ec-b5cf-3ea3e1dd8a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dce5588-cab4-4c65-b854-aafc15dc8d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c61db5-12d1-465b-959e-a59e7963619c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a31d44-d6bd-4637-b5f3-e98e45cb914d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3784db54-006b-4943-809f-d72922b6e73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebb1af3-dee5-4753-824d-5c03be17fb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43362e76-f139-440b-b445-84298f1d9a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5199c4f6-94e0-4d3d-bc62-3945bcb8e199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be10b834-88e3-4486-a511-644ab5877162",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1a9356-238a-477e-bc3c-8b2f76c1ff51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8281abff-4a53-4ee7-a175-78135b2ca39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa05263-c90c-46b7-87e6-9632acaca0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5b8c3b-c6fd-4939-aff2-0ebaad6b9c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54441d8f-a096-4227-b2aa-07cb0d30799a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae9783d-24d1-44d9-a3aa-9ca2a474f632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9451119-dc09-430d-a48f-8f67f5cf1917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c90456-05e2-4553-91cd-fdf4d4c88858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "633b33bf-b922-42c8-aae3-3d9f73f7c8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb12140-b86b-4923-ae83-0c5189d4517d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58b56d3-0e85-4cd9-b3cd-74fdf260bf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ba38f7-1925-42a9-baef-7b1edd40c574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3723c94c-9e6c-48c3-9085-9d3518180305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca27870-de21-4a86-9921-fe1426dbb7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6c0f86-ddcf-4c14-82e3-9aceb510d816",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01135ea7-3be3-447b-ada2-dff4d7067178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af64eb6-a649-4b52-8976-638b1a3550e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c42d59f-12f4-45bb-9571-52d0c3300dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44ec192-8be0-42f3-8bf1-f799e1755288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df79bbe0-4f69-4ae4-adc0-744b67f5d6c8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9ed185-fb0b-41aa-8ff8-c3894652a198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2e85c0-b006-4d75-b81c-31237d792dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c70a72-5772-4952-aefe-97f99862528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32080325-7fb7-405d-b090-d772a4f07562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebada03c-0cf3-4a34-a1d8-650380f11a18",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c712ff7e-63dd-4d8d-bdfd-37470c5bc7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5849a0-8f41-471b-a9e7-2ba18e232887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19b8c59-0dc2-41b7-851e-7e9ec6b43a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d85142-3b04-4ff8-a123-d10219604b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ebdb41-8596-41da-8ddc-c3f89968cf74",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822576b8-05fd-4956-9ff9-a247f0e01ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e15518a-7918-418b-9f88-cb4a6ac3d573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ea5093-1ad6-48a7-bf6d-8c414e86367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fec143b-a106-4bcf-a039-d5c98d90cce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921f16ef-e323-4c23-a709-aa638435bc25",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dd67d1-04f3-4599-86e5-bd1a568a76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0f0beb-95a2-4e39-b06b-2b6719d37131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb809ff-d0ea-48df-a867-60d24cc6c9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf59927e-174e-4135-8895-7d55773c9f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf4eba1-686b-40e5-9482-926d5943d601",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e3b102-c781-4299-a6dd-48c4ed4d38f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab0cfcd-74c0-4280-8ea4-17fa3b60ab09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bd920e-2351-4636-aa0d-559f2ad9ef4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48964479-101a-4da0-a9a2-33eeed27e24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c74e5e-bfcd-4729-94bb-35ac5560ba6e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae7ded4-8fff-4976-91b6-3f753842217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bc06f5-30d7-41f7-b950-5cfb527065ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbd7b49-8701-4c33-b338-0ceee1b906ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c076ab-dd6d-443d-822b-d0e4ec5e91fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac4a880-e182-47ca-a99b-c74f862c650c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f8cb26-a7d2-4029-81c7-6370e1156a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40106f7-0523-4107-be7b-ea4c423b4be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6319815-ea1f-4c74-a5dc-b01283e1f855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b79e67f-7209-47d6-bfb8-0a9c540351ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1d570f-11a3-42e8-bc92-b19a062ebe2e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2aacda-be7c-41ce-a5d4-722674d50113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d150e3-742c-4a83-8864-62e5fa1c86af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf35a1c-3d79-4292-8584-55e941d3109e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5453cd53-3ba3-4634-bfe4-8acc0cba6858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac91acb-e1f0-4614-99c1-0b1ed372983e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b573a0-078b-4313-b26e-fe3090023ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb470a7-82bb-40f6-b7c3-79667e6c4501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b81bf5-a41a-4e25-8357-48d735047c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fa2ab0-2e7f-4b78-b649-b9dc57c96637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1f94fe-bdd5-417e-b2b7-be7ad610c72a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1775d7e6-c749-4dd6-aee1-bd45b42cd2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f831cf-f6b7-455e-b258-d88d5d071c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc5b50b-8bb4-4385-aa15-d475eb076287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f45d7b9-903f-4393-87d4-2355678cea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d4c6d1-a3ed-42bc-8359-8b886df6eab5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa8ca13-d6aa-425c-b2e0-894794184b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d46ee2-34a6-432f-a610-ca4ed0b292f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cebd37-fa6c-4a27-a16f-983c389db153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5c34d7-fc0b-4918-b5b1-c4170c981e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d98db6f-da22-4ee1-8922-c73c6d9ca16b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251bb50f-3cef-47c8-9ed1-cdb016b39d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77102f3b-10b1-45f7-9930-65288e6fe5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6b553a-059a-40dd-a6ec-a73bd302caf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59482952-b8dc-4309-b6b8-8836e2ff2af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbea71a9-dce2-48f1-8f50-8a97dd803f4b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60719e9-8a88-45a7-a01f-4ed423d295c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4163000c-3cb2-4972-8a03-7988167347b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deda065d-f65e-4581-8d70-24136735ab4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1b321c-4251-4693-87ff-df0e2fc63246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9368417f-28ec-46fd-bda3-674502086c95",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f38f6f-a858-42b8-8976-f7926d2f3136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e873b38-7ced-47f8-88ed-5f849d5170f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5eb6c3-5307-477c-8b58-6191c48b81b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "986f3e26-d277-4428-9cbf-96d4b3326dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b9d2a4-c3ed-4862-9028-b28e95b7b011",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d06619a-1e52-4367-be08-26e10a38d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caaa1f3c-a4c8-4b0a-9903-7e781c8d7d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74266b10-960b-408d-b2d1-c0acd6e934ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "458ec652-080f-4709-940e-9588fdc06339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46604ffd-3e9e-42a9-bb14-e264e317839b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299dd41f-9313-4cfc-becc-843219abd769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664b72fc-21c4-4df4-8926-4542487e5285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2939d8c6-5f66-49a7-a9cd-60c748682d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "569ee610-e19f-4601-870c-e970686613db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052dcf7b-da4a-40ea-9b26-3c000591703f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12749386-7a74-48ea-b495-dc97b6fb986d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6530add5-c940-43e6-a16d-9726e2bc2355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aafc451-c17d-4e32-a60e-342e8a8f70c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2ddbe9-e81d-4daf-bba2-444ca9d5b8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7a16b4-5ac6-477d-9678-1c34a4a53190",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494e8af1-eac5-48a0-94fb-092f0e94d7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c8b15d-f616-4a0e-a08e-7ba804d6ab85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04744e5b-3553-41b9-9bb2-c3683c39776e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77ebbeb-5c2e-485d-b2ff-039bfc040b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd757f1c-3e5d-4602-a2c8-c31515116ac8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b887f0-b177-4b2e-a93f-792dc928cee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb02589a-c950-48ef-811a-99437061a382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5122163a-cf5a-4f8a-9504-da174562b879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35657103-abb0-4561-88f9-0776b016d166"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af291e13-cd8c-4085-bd3e-acbed3f1c810",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69a65d9b-0ccf-4a41-beeb-29b8344006af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7441a674-53e5-47c8-a87a-37364bd4003a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f323944e-9f7e-4b2a-8240-8ecfd4aa7d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07f4b10-959f-46e4-b292-f7d404f67536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bdff02b-734f-422e-8fe9-7773028d2477"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2b73954-9ddc-4071-b163-2ce8e7561cf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9e6c2a1-debf-4fdd-97f8-698b2a8403a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b06cd9b0-326c-453d-93fe-71e951817085",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "499780b4-bd4e-4d1b-b17f-8a1f0387d313"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab23894e-329b-4207-a092-1d0127ab8102",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce3da4a6-6ce2-444c-b83f-3034dca21780"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bcaab77-ff43-4571-81d5-8969d40e8a06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e156b2b-59b0-4597-a94f-0873e998511c"
            }
          }
        ]
      },
      {
        "id": "5e2d4da9-8607-4adc-a2de-af6976334ae8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b06b4ddc-8610-418d-9bcd-647678335d2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da4da491-8b66-454a-b202-a19bbf54631b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f671fd2d-25a6-4cfe-a283-5f31f1b58d28",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be0b6ec-b5fe-491d-a1e2-c8062ebcb957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b03632-05cd-4169-a094-8326c272512f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254040aa-16d4-4b00-bc7d-569f789f76c4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb131af2-a66b-4b3d-b9e7-97923fe4e531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4391798e-0772-467e-be9b-df3e1288edde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b25c555-f441-47de-b245-fbe195af4433",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a518f370-b03a-43b1-ac3e-5c4f3f5b7218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7666fdd6-fc5f-47cb-b46e-0be2d34fa2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944f43cc-5f62-4401-a3a6-222580c8b61f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18892dec-592e-4744-9af6-d2978a3c7114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0dfe07-9822-473a-8aec-ddd790fc069b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7929b8ae-21cb-4ae2-b336-de70ee174af6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c92f72f-2e9e-4c66-a3fd-f2b0648f466f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba4cdf0-36d8-4b15-894b-9b7d5ecf2392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443cf0ca-334b-437a-8d90-363847ff3c20",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1587211-b2de-4eed-a7af-b53dec29fd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5350fd2-023a-487a-b7cf-26f680b567a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cdb932-071a-4f0e-9693-89fbc4d79b3c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84aa3dba-31a3-4709-a9ac-4c3199ffbb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81231fd9-f7a3-42c4-9f95-c6493e9edb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8770505c-87f4-4042-9382-5004837665db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fcbee6-0aae-4853-995e-2d6a92ca33eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b16a649-aca4-4b58-93a6-6ca8403e098e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e47ff0-1d92-40dc-8786-48c902a4c723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e5647f-5b24-4de0-a80a-c6f88eda0f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dc58c8-1ded-4c45-a377-973f22aa994e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5fbbd5-0913-4f55-9706-a9b5308625ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4fb6ef-7e78-483b-9d25-96a06e00783c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3ac3d6-7eb9-4e8f-918a-cf586d6d891d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da8e72b-d137-494d-8381-769bcfb39db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8b1be9-bd64-40c6-ba81-f8be007ee1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d794b9-6b8b-40f3-a258-6ac26393b2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3405217-2cc1-4dae-a160-596fa7bb64bb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7889a097-bd47-4675-8f36-96dc4fc3111a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1b5c0a-c51b-4162-ae5d-700161cae840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5f3f48-f3c8-43b9-8e77-3ae4e63fbab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d145fb-8662-4a02-8c07-3c4fb49f9379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2731cef-1e3c-4ff6-b200-d25dd5d9938e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66386304-4ec2-400f-9afe-df3803e0cb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c598a6-97e5-4f6c-91c6-27e0e9bd8cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17b4928-b5b3-4ba3-b12a-230d4a56a5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef952a05-8e4e-4d21-bab1-83b144e97cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcb58e6-87c2-44d2-b97d-55f6db5856b8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6195449-0220-4919-a169-db2fd4237b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3146105-3778-40f6-9c64-c5ee0b029462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c6b6e8-3dd4-4e70-ad4c-c756781034e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55d7aa8-1f8b-40f7-a723-820ac56b6a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5d0bcc-cf88-4ff2-a1d8-8906dc8fdd8d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7ccc6e-1c36-4533-b72f-d24d6884b25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86723fbe-2a95-4bc0-bd02-8cb41721426f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6f09bc-bcc8-4f5e-ad4c-22ec1ed181ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e36b107-de0c-4630-b0b8-d3b4ca7575a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f636dd80-932d-4e77-b9ea-d71078f5990f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0112eda8-bc58-4df6-96a4-9f427eb0c16d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a3e050-81df-46c4-a872-71b1bd21fce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2fa182-c011-4ee8-bb05-3cffab9ccaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fb7e1e-7062-4e37-a5ae-d23f6e64c5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02340bd1-b978-4677-9255-174d1b238ae8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc4a9d9-4d1e-4b92-9c5e-7c89ae570a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48cecd47-1c9a-436f-ba37-d8322d3ba041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f0ea2b-0e78-4e20-becf-0574a13d6931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6e2306-4d7e-4be5-b4d0-9379942ffea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fa5104-a63e-4598-8697-701e8b8febee",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463ac4bf-c576-4823-92fb-d70f80a4483b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a612da-257d-42ec-ac4d-8f6bc5192d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b72e16-a2a2-4eac-92f8-fd1b1695ddd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960b5714-2963-4329-84da-6a53b8fce893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa267c7-a586-4366-be41-4e172cb614a8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a14137-cc38-48c2-a132-f7e433d8830f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a024731c-5ffe-4de2-8c4f-472a4a495f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d199df-94bb-4e9e-b4e1-a698a37a3468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13456dd8-d07d-4ec3-b835-8de35391c435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d545c9-74bc-4e89-8b7c-741c8a478249",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2bdb1f-0c4b-43c5-bae4-259df2a54edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b641bb-6bd0-4b87-bff2-4326f6c98890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fda985c-64ba-494f-86b7-03042b5b3891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c26593-4296-4694-8f0f-234eee1ddf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db57ccad-20fa-4d5a-b0aa-dbab17761c64",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959bbb66-1de6-493b-9699-6bc5330ed29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c37c477-1091-43d4-9db4-b0a1de0fd414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b9b467-e7cc-44a0-a2b4-3829a388ae9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8063268-01db-4367-939f-da909a43a361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dafdd82-1cb9-4c1e-8f0b-81e45cfae03d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f35622-6e90-4870-b19c-e449e121f6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deeb224a-f333-4611-b3b6-02c72b075dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c0e40d-2091-4ff1-872d-3448f84ca64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54daece3-7fe1-454e-a54c-f66ccb264bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beb9a5f-7c15-4982-a256-c39571470446",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a859a6a2-9f18-46ed-89d2-14f229354fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc76be26-e744-4035-b244-db100716e991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0400b82-9a34-4c27-9ca5-18edacd838cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc42856-f57a-44c2-be02-65fb21c89f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e843acfa-282c-4f58-b2aa-3fe974cbd4e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9290a9af-fbd6-4c5c-a32d-1f5ffad44836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb391d2-c2ee-4c80-83bb-d3eb421a7608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9e9c5c-a067-4bc9-8c89-48910caa82ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d36da5-f4be-42a2-ba22-9d795275f8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fe9df4-a252-4700-b2cc-7a08ff7e5a0c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9024dde4-ee99-4378-974f-985d71ef54bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22ec4b0-d431-4b82-9f4a-3a8989c3fac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36290b39-0a54-437a-bb4a-8492e3a7b676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22afca05-7787-49bc-894a-7fedf3351075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aeb7ba-d64b-4815-baba-c4a56d3d7feb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af17c3f-9930-4234-bb4b-dc1759422178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f73b4fb-4565-458e-99a6-ab3a3cba41a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e975e1-cf8e-4027-adb7-f206c397b330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44101e07-ce3e-491b-867e-1645a86c9b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636741d1-f9f5-432b-80bf-2510a4e61c2a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e48c43-e731-401e-b53d-cbf555677c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85a99f3-a0cb-4ff9-a309-978d6df7e112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c596c97-ff5d-434d-b6d1-4e4fc441902a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74633f3-a534-43a7-a397-f63fdd50f2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263211b8-f451-42e8-93c2-d66ea83d7741",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f769fc1-f425-4d1c-9b57-fba550a3ff39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c11160-9313-4f85-a1a6-e8c8b2565b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63f1369-ac95-4142-af2a-7371a9f8954c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61f5844-9f80-4c41-8221-4db13c8b666d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f1ccb4-b8ae-49d5-936c-232a33dbbfd9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79505f9d-883e-4d64-b66a-b1d2f842b06c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77710580-a884-4dc4-a6e3-aef181d8caf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d2f345-55f9-4be2-b21e-36eb622b4da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ef69d2-6d9d-4647-868d-bbdde00c719e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dff8aa7-a9ce-4568-bbb9-12246ccd39a7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bc2264-b5d3-44dd-bf9c-6a178bc6adbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f56beb4-1faa-4db6-8941-cf041aa09da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8823e169-00c2-4196-aa88-cd5a5640996c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e855c12a-dd0d-43dd-9422-014f6f56912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be1a1c8-462c-45ab-b940-3bc90b49c64f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875aeb01-ad49-4c0b-b791-554b670e6c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56622440-b209-43d5-9df5-72b44935bd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fc44cb-e04d-4851-87bd-98ea8b4a5088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2522e78-35a6-417a-ae76-9082708eb6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2312193f-517b-44ea-844a-76027d41377f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df56d47b-88ca-478e-bb5f-01ceefc5cc10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1ab4aa-4e5d-484b-8dd8-5ce60ddb6360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af28f20f-6115-465c-930c-44fe681bec0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53444138-0e42-4b00-a640-09bcf447fe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9468c814-ef28-4cc7-a102-dacd43392ecd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ecbae3-5f66-4081-b3f8-9cf8d8ce0112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b749766-1ea2-4a8e-ae06-7a5dbb571099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc90ffc9-58a1-4c5b-9ff2-279549f0801b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61991e9-e530-4fff-9b20-b311f1eeacc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fac115b-8fa7-43d1-87e1-6ad00173cec4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffe7e12-c4f4-43e3-a547-1dd7205dea10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa78ad1-8178-42f2-8102-775d21e87584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa066221-1e20-46c7-880d-54d158c38876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f000c56-b223-4a55-8f1f-45b98404a969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad59392b-cfd4-4d72-8774-144a46fa2226",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af019a1-81a6-49aa-b2c3-f19cda78f243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50629d5f-9e70-468d-b924-d17afdd115ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fadbee-eeb8-48e7-bb2a-2e3fa57c50e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602519f0-663e-4c06-bb71-91b3d73d9b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238d6def-ddbe-4b56-9bd5-672f96547713",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d690a3-625a-41a5-b136-a075d124c058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d23504-54d3-4fd7-a8b9-0d609f89af74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990ae97c-94ce-4d1f-8f8a-d07469bcf9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944eb3f5-99b6-49ac-91bb-4084176eea17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2df67f-5c0e-4b3f-8d03-bff82a762ba1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0632b7af-4500-4f75-b7b8-0cfcf3221228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4151577d-2d36-453c-ac05-bea5413e60d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c300410-4621-4200-9d65-9749b2e941cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2117b17c-0aaa-4bb2-bc88-fb64a8fcdbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3710d48-abde-4686-b906-23f7f38e392d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30792332-e7e8-4a19-9c59-1df0b458b9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfae590-5d0a-48da-89b7-f38e9c4b65a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b287a352-fcb4-4df9-b022-1a304d9d3853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f323b9-fc2f-4de7-b689-d2e00d0ea087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe25cf37-a649-41d0-91cb-61ce180ba5ea",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a422327-0bd8-49c6-9041-136d6233ad16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05343390-32b7-4aa0-8c82-098910d43c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6169d6b-810d-49c2-baa8-ebceb1587372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c754c111-66a5-432d-8c65-22d646292fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61fcb09-1b3c-48f7-bddf-c210b882a893",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7123ec-a7ec-448b-84f8-fa3a64fe278b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdde5900-3a4e-421d-81a8-b1196536b1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592326c2-320a-4fac-9348-345c2d0fb67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f73927d-644d-458c-846e-4db6146cb1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7750d293-b7f8-46cd-ad33-9990e8be0eb6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0412fbfb-6998-4a65-8e64-4f11f1813520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c9639c-3055-4fd6-8aaf-fe7c7041d1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55599c63-c547-4621-ade4-a7c66f1f9b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52aef4da-4d05-44e0-a6b6-a31f9cf56caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e956019-53e1-47db-9841-f1c1a43f872b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755270cf-3c70-47d4-84c8-0d01c0639807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df36280-ce6c-49ab-a7e5-85e6b3831a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34004970-55a8-4e43-bb66-b41ec33d23a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3254fb8-dcfb-49dd-9609-58c252db14e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195cdcfb-42ef-459d-85e9-69e8037f1a2d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180425fb-c22c-476b-8037-4e4838a6b20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91650a3-b00f-4675-ae3e-0df226ca49fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56164173-1c13-461b-aa49-7fa5911f0bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5930bb0-be3b-43e9-b7c4-2f864d4e005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f159a5d-fb83-4ca7-b48b-ed8336d84894",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161d5ce5-5797-4b21-9b3c-e7cd5141b788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0059d4de-ff4f-4040-bda5-21d17db580c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f1f864-ceab-420a-9338-314cd446681f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb14d24a-eab9-4d82-9790-4f6b84e26e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09383e7a-44b7-498e-9dc0-c320e8014612",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e1191f-ff87-42eb-9755-beadc142da49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46c5330-91d2-46dd-8c21-faa1e44056df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0241d569-e70c-421c-8bea-7ef0e7e9842a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6339e31c-3a5b-4549-ac9e-76b84a227fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba858694-110c-4f7b-9081-20c1147a5dec",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb5a120-7fb2-489b-a8e5-dba3297cdbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad990a3-e61d-42b8-8cbd-4d24dfa1eb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5596933-48d0-4443-9977-211ebad8faf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0429d0a3-d5fa-4296-bb84-812c1f38409d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88315af4-ebaf-419f-90c2-5cd586cf25eb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dfd360-3b14-4fac-947a-a55cf7f8e864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aef7cfc-ff37-4b4b-b668-3c5d7f4b72c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a00a21b-4207-4447-84de-2485a37a26e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3d04ce-c237-4bb4-a394-4f2e37b1a01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dbf9df-7c69-4439-8bff-0ecd57f72d95",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faec0bc-1330-4cde-8835-85f0f896ec30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cf4581-7889-4131-95b2-8cb3f9d95edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4832e52-3451-4843-ad23-029896d2ddd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7bec0b-3431-48de-b7e2-1983621697fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf00d78-4bdd-4243-9848-8ae9959c225c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f710ae-0de9-4d16-a31d-743f9823e1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289017c2-406d-48ad-9609-da0d7686f606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30022b6-9f66-4ced-889e-b2b6f1b37e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c1b12b-2e20-4349-b94d-fa5349d73116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d0eb38-957a-48fa-b5bd-85dd8945e241",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e313ea6-7991-487c-9de3-68bae4cacbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a768fcc3-f4a4-4f06-a742-41b4f2dd8bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba94f12d-1eba-4bd5-8ba2-ad8ae9858de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21e9deb-d049-4a42-9d24-5bf4e6aa4fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c3453a-7538-4ed1-acf2-f1859c2c9d64",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2124f5f-ea90-43c0-9856-1862aefd7423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922cdb69-f6c4-4c8e-9615-65a6ef492b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98aed76e-61f4-4a13-b00e-bb1aa0d7dbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623dc4a6-b487-49a0-803a-9b845634a98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdb125b-2966-4a34-85e4-7fee3c68126b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51396bf6-3f8f-45c8-9d4b-258a1399a7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5284da4e-b7a4-44c1-9293-8ab920ef7cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192db454-cd5d-4aca-b494-8961bf74f90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1448c1a-c00f-4d2e-9d0f-e12f72835746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2222bf8-7b2e-4f6d-841a-afcd0f8c3305",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40022b5f-0dc8-4100-bdd0-ce2ef53372b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb697cf7-9270-4daf-98d8-3bd00667df92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cd38d9-e045-440c-abb8-54660344a626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54d875b-3985-40d4-b69e-c934d5648854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955e6b53-833b-4857-b48a-45ed01d03cdb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9289e95-8187-4316-844d-d027b03b9558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14998df-337f-4a33-b4b7-c64ba383627b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbadf20c-5b35-4bff-8b50-3aefc02c67f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a85fb61-2c2e-4b72-9e83-264ea8f6b5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dba973-2232-432e-8a24-dd1f1a089f98",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989006f6-a05b-4c82-91f4-9d94054ca2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c85b9b-9321-4aac-b95c-9b89ded557e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320d8c51-0714-41dd-afef-6dbadacf31f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d9dd03-763d-433e-8392-d87e249dc2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78629bf6-0213-42cc-acb7-1dce35852c85",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349b64e7-fa60-4efe-b99a-2fc1d6aead64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a987e9f4-b6ea-4ec7-83ef-97e0e6cdb744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b52299-1558-421d-b30b-6fe8eff28143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca24c77c-4cb0-44c3-8bbe-9337f4e46a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85edb43e-1a19-46fc-8459-228c32457760",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1616cd-f57a-4e74-91e6-17b97e8ee645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3065a096-472a-4db2-ae19-68798a7f7caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0addcb-ccb1-49c6-8d41-46c66e01f916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a753c31c-29cc-48f8-9ea4-47394d12d8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecee65c-1e98-492f-9528-901027feef34",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9571f3-ea0c-4d70-a9cf-9cf392037616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c972d475-ce98-4aa4-b4f0-33c5e41bda0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476c61eb-5cb4-4c12-9452-0cec5bc9bc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff314fbc-326e-47bb-8301-ef6efca77a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad380d80-64e8-4b9b-b031-9cc8bf5b7027",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ebe7e1-5fe5-4230-9008-ae402619908f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fe5b57-c7b5-47f1-b7a8-9adaf91790c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d18922-9452-43ef-9c5c-0ea8286c58b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fd672e-25fc-46ed-8cdb-179471ca3547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffd6a7e-6cb1-490a-883c-6e7be40dc85d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bafbc5-06a5-44e3-aae8-14b0d432ea81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08712d92-4d6b-43f2-bbfb-ea11561aaf91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de0dccc-6599-4f32-aefd-3463536431e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8833bb3-5efa-4efe-a07f-a4df383a18f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca0470b-7fe6-401b-a1f3-193e01830aed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47504eff-45a9-42e0-a97b-9d956ae87b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce18eb7-06ff-42ae-8315-8352720ae7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a627057-9e9d-4689-94c7-1a30d7a56ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86b0a91-b0ef-46fe-950c-54c5053da673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f737e3-2db1-42ef-941f-b713f97f7c19",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b263bb42-fbdb-4157-95cb-867f45526170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418904f4-74c8-4dbf-aeb9-fd51c36c375f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b39006-0951-4eee-a35b-7fc6ea6f56ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26d505f-e68d-4eaa-8455-96ca478435e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158775af-6ec6-40e5-acc2-a833a8a79111",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d9574e-0e84-451f-8f1a-b3aa8d96d629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81acd239-dbeb-41be-ae79-b7da3dff46f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69051a9a-711a-4476-8c21-c9119d8ce005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e670a75-f135-4503-a2dd-166517bcbc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269f3d17-1c92-4568-bb61-82182d4b7144",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79026206-4598-4efe-b202-170763441af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c23910-5f0a-43c5-90ca-235e0651b3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b02c46-a71a-4964-9658-3edbf43d0d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941596a9-2dc3-4e6f-84eb-0c7ce11ac833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bace89d-039e-4c02-8a8d-e4fa6bb9a29b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee70742-5a33-4a6d-b791-1f047fd03937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7248f2-b1bc-46a6-9d05-50e6d6700df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a99432e-75ff-439d-bd70-b411a3cba37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74ea95d-6d68-4206-a19e-4410821d882f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f940e665-c21f-493c-b1c7-ea8e7365e411",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca0bbfe-81c4-4ded-94aa-4ea8150d1678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0268a32-6917-43aa-92e3-d6afda379775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b685d91f-acf9-445d-876d-e81d10a2d047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96db381-374a-4475-a48c-44238353af3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2c3231-27ac-4464-8b7b-d9bdecc64d7a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3a5ddb-f61f-46ad-beac-defacde2b0a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dbd33c5-e3c1-4fa9-bb9b-8e81724e46db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2762502-3605-4c95-9944-d61f31dbde70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4ab10f-f6d5-4c4d-8a9e-f5e6ec2be7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e93aada-32d9-4cdc-9d6f-13f98eccde6a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b04160-aa75-44c8-9967-0ebfe85dbcd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda26957-19da-4920-9c86-befe5ea99408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e926295b-1135-486a-96c5-16be1f7e0636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663bbcf3-893f-416a-91dc-ccf8cfeab30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466dd9c5-9156-40ef-85c1-ad5e101cf8fb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb551ac3-3549-48a6-823b-48374473242b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "439b1ac0-3879-4617-9a2a-9c490a7ff02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88400fdd-c4dd-4e88-b32f-c077e1023656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8cc7c5-08f2-42a6-ba77-aa31e3275f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70830965-d68a-45f7-bedd-49e7c14b5d5c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ff613c-2239-4d37-b0be-5df22787a857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e35b9e-5f84-4eca-b7c0-ef71cbc7ec06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce29b7c6-fa4c-406f-bad1-7f1e490e88ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abfb932-9cda-4b0a-abec-d2ccc6b6ac33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d8eeb6-efff-4d6b-b7aa-d2c8ac40e5d5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e4cf9f-56fe-410f-b89c-9c661ba15c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90295812-3044-4c26-b5e3-04860934c5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17dd047-f9c8-4e23-a4c0-44d8d7112257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ab3147-a342-4486-80eb-e5ee792c55a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3200ab0f-2d9b-492a-8bac-667585b90f2e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ac89d7-6ca1-4abe-bc65-ee37928140f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601753ac-533d-4d7b-af58-6a3fa3e9a42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8988356-219e-47ce-b45e-0d2bec47e9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778b8037-490e-4559-a064-0f8ff3e38618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aebf0ca-d2b2-4833-aa57-b91946d42e2c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a3f6e9-178d-4ca1-8150-84deb877d942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06020f4a-b3ee-42dc-88e1-89f3cb36e720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16947651-591d-470b-9e2a-d509892a0fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2204880a-9bdc-4208-a559-5d141017a304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51923950-de19-428d-a8c6-9915d356fbea",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0828546-9ea4-40ff-ad9e-a1a210fa8c67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ad95ac-b1ea-4ae3-ab8f-814ed53a9092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448a7dd3-8438-4190-9fcb-3a6a16a664cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5677854-57d8-4a5c-bbdb-89ba9e5bd87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b28f6a-99f0-43db-875d-c06a24405199",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0489ca1-b97d-4fb5-9da5-3b8514fd920f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb8e3a0-af60-4c83-9031-b7f17a0ed1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb923c7-c5b3-4108-b5a7-a3eda433c690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93c9f46-a2e3-4c36-9ea1-0a300f9580f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f7ac92-6fde-4b74-9d8e-550b5edfecbf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db42d81b-091d-4e24-b992-40659d266cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98128fb5-e2c9-413f-8778-c857b0a5b4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6463091-4b1e-4562-9ece-63012e645a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938ee8fa-a6d6-4123-9784-11ff83524c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0620d4d2-c40a-48fa-b1b4-9bd6977f182c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03001f51-7d96-4dab-9fe1-f48dd3fc1f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff34321-be97-4e48-b549-8bc340ef0bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64238104-1d99-4e56-a6ec-218fbf111407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbc3b94-f2ab-4ad5-9ccf-4cb2afd4d66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ced061-5a58-4f9e-8f7b-8034c7e05d33",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e8b9e0-18cc-4661-b709-d45ae531ed7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a17ff2-5b86-4bd6-81c9-3dc9cb72b149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8972cfc-8fef-429b-86c6-a579f1c2dc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e32b6a-de8c-471a-b0f6-7a2f459b0209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04bc797-4b82-42e7-9c4a-3021a1d4c0aa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54005471-aef6-4e4a-8071-dfb471d55e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56f518d-04bf-4744-afed-f9c613c00da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a785604a-f7e9-4cab-bf8c-19ab7a487345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b2deae-474c-4273-bd9e-08121bc5fa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738a7e09-ce24-443c-a331-e9bfa748ba88",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318fb9a6-f4d1-43d8-8ef3-caa3688187c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f86d4357-89c1-4616-85ba-e0bd34fa39b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02501ebe-6ec0-497d-8687-609ebaf5bf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d32f57e-e4c8-4756-875e-db36cfacc026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2677ff47-435b-46bf-a9d2-3ca0e1942bde",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd154cbe-36b9-48e3-9cd3-389268ddd5b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005a14fd-c13f-4cfe-a7e5-66e2c5e82b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001382e0-02df-438a-b905-70516112e353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbc2d8f-dd34-469e-9a1c-f3506bf5ba79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd691c2b-9f51-4ce3-8345-8e0e8b9e9c1c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e410b9ce-0e60-4846-b954-d439c3e37468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa03d38-1038-4e5d-b9e1-3ca2b43bc529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3e059a-555a-458f-9837-f3a6bc5e5884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a6194c-a547-40f7-8ee0-41f7ed28ae54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ef725d-c363-4fdd-9265-6752060c7512",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14396a04-228e-4e05-b177-5706b2f97ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd7837dc-d8d3-4791-9db0-a1ed640b51bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a3e83f-837a-43c1-86fc-a38523c87ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e88bb0-7c72-4fc5-bacb-1a44823a00af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff71582e-5979-4597-8bc2-88079e5a49e1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c802f07-2f21-4fff-852c-7dda1ab985ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29230c7-dd51-480f-9e74-bc20267fd7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711da828-d4a8-42d4-a470-1486bb9f5641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188622e0-4ff0-42a3-8c1c-dde80a1c90f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab79d8-241e-4802-97ab-5da5006acc54",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b18f8d-5372-4a2c-a910-6562fc9b9ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8952995c-6007-4c75-9703-c853dc4a18e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fde506f-b333-4798-9611-f609461e4f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf916f72-6ce7-455f-ab30-953b768a1f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafde54c-f444-407a-9518-db02db08ecf7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ed285c-702d-43ed-ad82-8f1982501f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c929c8db-b9c1-48ce-80c9-ff21e7c5c280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6129e1c8-9e9d-40b6-887a-c73d8063d663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e627d24-e196-4062-a45d-bc16e193f206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396295b8-9a32-4c87-b2c7-e1a8d8b09c86",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266fde7a-c228-481f-aa05-d2edc8cc3b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da0a1808-1d67-4753-9749-9729f9f02a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8720f98-7e02-4631-9993-fec58706733f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fee52f9-5295-454f-abe3-2a701b0b71a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f9833d-e9c0-4794-a164-8f220818da99",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaca4d89-bf65-4774-9c9b-2084bf1c4a15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288d8d8f-4890-4621-865d-94b0ee463c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d508ade0-4777-48c0-a727-5b5eb8376764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bf1e6a-09f3-4764-b303-ed53d91aed32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7abbe39-8e26-42d4-9286-4a784db8147b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee440500-8119-41f9-92cc-a9ccad17c638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "055857be-bca1-4e23-934f-f82af12251af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdd4ea1-6e90-4302-9de7-76c27c0274a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff9f890-10a4-4852-8bee-61729f4ff97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57b3587-7861-4ac7-8f4c-94bdcb83fc02",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a8de8b-a834-412d-82d0-55b16bf7e297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f455c83-845a-4721-acba-654569fd6e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e171d66d-d8db-4fc3-9f75-50c698a75572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2ea3c2-3d36-4296-b7e4-06df973e5fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ea1636-40f3-4c74-a15d-18a1f82d657e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b37a38b-6cda-4a06-a5bc-90d728f18faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308494b6-7b55-4efa-946a-750a203faf9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fefe25-9ef2-4c37-87a2-9a2ba6b3a67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693e1e20-b054-4c3e-befa-a06990cccf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3ac176-6266-46c9-b144-377c7b673c17",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cafc25-5cb8-4616-9a89-e85ddd6e7f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac2981c-0e15-4398-a371-21a043eb5fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d8e842-5320-43c9-8820-a968b230cee8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fdcc81-a1a8-464c-8ed6-433fa9116f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65373c9b-01cb-400c-b5bb-3594b1bc0bf6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f5fdd2-d007-42df-9194-743e2a03b083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcdf678-2a4d-4f05-8032-a1edcd4d094a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8720ef76-ef66-48bb-bf9f-cab2d1c6a0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633209da-c38c-4ea2-b027-f3a9791f059b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc87345b-d5a7-4411-b1b2-61e0db5903df",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76a30f8-5326-4605-a0cd-672edec62627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb16075-9ab4-4fbe-8f01-d4659d26c2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89767241-0ec3-4611-a130-abb18885bc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19d67e3-3b59-468e-a9b5-5a8f59229d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44dd06a-51f4-4ba9-a300-6f0c27fee459",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd1a2e2-d086-42a8-aeb6-d80371b89731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ffbba13-266f-4ace-b0ae-2474779c80c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09672159-7bde-4632-ab84-243f8265b37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3618dabf-ac94-47cc-b137-b3409667eb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e1bff1-bf54-47aa-8e16-e4f0d4d8d3b2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31aa8e0-e382-4574-a94c-d1433741daca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf67af37-e5bb-4564-b4d3-c54ee2d0b432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc88f3d-9518-4051-a8d7-777ab5194a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9089f716-595f-4e09-83d0-be8d731cab19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065910f1-ac08-46c6-a270-e001b7d72ba5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3d880a-5b0b-4d17-a613-7f15afa8a1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88979c56-5087-46f5-b5fa-dd25152c81d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba6e052-484b-4201-9c1f-f64a96394021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9552e0ac-d106-4af6-aa63-6db904a658b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02aca9e3-8f24-4c89-9d52-591022520d72",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd962a9-5341-4fa8-a12b-fc4dd40f8947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d142458-eb13-4a49-8f36-7fb4ccb6cde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f3e4b5-35f4-4b90-a267-8d3814d87a6f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd42bab-f7a9-4619-adbe-12f4f9e115a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8ca022-e1b8-4328-a01b-d70a500cb684",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e3033b-faa7-4432-915b-e2b326266128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a321eff-e6f1-4fc1-aa78-0de9de46b2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc9dd38-0fae-4289-a74e-e75240184505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1a40db-f858-4e4b-a2b1-6dd94c3f3e45"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56b9f1ff-37bd-448a-ba4c-2823a710a469",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a926e386-88be-4d94-b85c-43708d06241c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b0bbab8-93a4-4b36-bb14-5d3ccb6b34ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26612f05-bc28-4183-a622-b65f9945b52d"
                    }
                  }
                ]
              },
              {
                "id": "6f61407b-7a1d-4227-ae44-2c42ac3de9d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fde0e6ff-1fd2-441b-9a79-56cafdcee34f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff0c510-e14f-41ba-a44a-2af4083ef8ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c6f4f959-76e3-4b9b-ab1a-32c455255be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa3428b-09ac-4051-8f8d-c9c512dcea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16901adb-7fbf-4b14-8281-4893d826c08c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1650196-a68a-4ea0-82a5-cefaa6a25dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f16e37eb-ca89-4da8-b599-ad64697e703e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "852f214f-f7eb-43b2-a0a4-663aa68e2943",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9320053e-665e-4755-94c5-4f2e099b9926"
                    }
                  }
                ]
              },
              {
                "id": "d1ae037a-5f09-4f36-bedf-60cbd17f29af",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1f8e8676-4a25-4f78-afb2-206883497ba1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b678b697-4f5d-4177-8e51-ae6cfd5b6508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d83b8178-14a4-4e07-9bb0-7b1ed37c78cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee79bcb0-d869-4dbe-9cc3-67d3785b33a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b14e6d-1370-4c94-af5b-3d368e37ca99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bf383bf2-8ce3-4052-975f-fc548b152c2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e783996e-698f-471c-b1d0-5d6f1bb81ef2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0403081-f4fe-4ae9-a5ba-1cd2d70e86af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "344cb861-e1cb-411e-a76f-2acdbe9a9268"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6f9d414-ac5b-4af9-af1d-f73ff8f16de8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e136ace-0ffa-4ed4-bc4d-161b9b7d1dd5"
                    }
                  }
                ]
              },
              {
                "id": "e23fc1fd-a11a-4325-a811-feb2eea1ed92",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbd17a7b-d185-479a-b0f5-fb818a7d211d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47b64b99-bd42-434b-a319-91aecccfbc78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad97d102-b334-47bc-be46-6733959f8340",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7728515c-e3a7-463a-8016-161a1589aece"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb2a167b-b771-493f-8d6c-c0d1c57844ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3f9694a0-9869-431e-9fd7-09d44b5d9582"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90de1b69-a340-4486-ad2a-031757f7d059",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "feb3934c-c00e-4854-b63e-24739290d633"
            }
          }
        ]
      },
      {
        "id": "7258eb29-bcf5-441f-8a39-472e7dfd779d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6ea23650-7193-4eba-ac64-fee511b52bf8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d562495-9836-483c-9f2b-a3272368788d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bf30035-7d07-4742-99f5-15d5634a9a24",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a977e04-bdd0-411c-81ca-c4701657a8a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2a463a29-7593-4867-bf6f-5878595934d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9547f35e-a220-44ca-8206-6c0611b3a86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f404710-2095-44eb-9142-7f6e7a6d8665"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fbfbab3-3250-40f6-972f-c06150f10422",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "627543e9-d5de-4c44-9220-87c6b749d3d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a7ab932-b012-42d1-97aa-16d67ff17ebc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c68cb6cb-5f69-44f0-bf7d-ae9916ad352a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6dd71fa6-4ba4-4c71-8991-c1d4c3df7611",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8dd5e6bf-0cef-45d2-883c-b6f8c1a52978"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3ab5831-675f-46d2-a727-67760fce6cd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c533ba39-0ba5-471c-8fbc-5b64e0b5f865"
            }
          }
        ]
      },
      {
        "id": "3361b665-1014-4766-a2bd-b54d0659153b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b1dd88be-e9cb-4402-86a9-804a6c45147c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d23c6f45-1fb4-43e3-9e4a-7717b6c11cd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bbd4c3c-de65-4399-af9a-da60954bc47a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0aa8d2-f70b-45e4-b9eb-7020e6f6ca3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5de83b3f-95ae-4939-bb3c-b978846fffb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a37e938-b49c-4dd5-a633-2a98e730d57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ee09948-abca-4309-b380-b05f8fcfdc65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28f17b21-b210-486e-bade-3ca2b214da8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eb3f9d9-7013-4b09-bb1b-52ced9fe78dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e83d2571-4bda-43c0-b815-68e24f9ac10c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2de8c578-8c69-40d1-aa1a-f54aa9be6cc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75b4f9a3-89bf-47fb-b53a-8f27f5107409",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01da94ab-b8b5-470e-bdcd-54ce620c1059"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cee836ce-59ad-4650-ac8a-c0c19b8892af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a3dc193-ebe5-4f01-a3aa-683d4ba1609b"
            }
          }
        ]
      },
      {
        "id": "87b2905c-cf7e-4ba4-8a14-ab1d2adbfdbe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c50faa42-80e5-4005-b0ef-4ceba3cb436a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f20ea9a7-7718-4dbc-be77-df7df92ddcb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "239e1d76-52af-436c-8d62-247a6fb3fd93",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606de15e-eb52-478e-87ed-fc5096807bc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6f8c4b0-c9c4-4c35-8c8b-b49e1529a82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6c46d8-ccf7-4a3f-800c-abb3b265b182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fae7351-2810-4bad-a4d9-35d4d28c0aa5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0356117-d3f6-43bc-9cfa-55159ec08a86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5baa521-84bb-4f1e-aed0-f02d81699f42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da56a124-5432-4d7d-b3b0-5c5b7bc3e450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0341f18f-550f-4fdd-9385-0f59632f3b14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eddb9f43-de4c-4ef1-9684-ea14dbb9c5c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "73713818-0068-4eba-ba94-0894568bd116"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd5051ed-ba3a-4f7c-9663-f788a654f752",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0a3ffa4-ecde-45db-8287-c175b574eae1"
            }
          }
        ]
      },
      {
        "id": "7d72ab26-63f0-4a11-88c1-5d6974e5a50d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a159fc4-aab8-4163-9208-4001ad9c6f3a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f48a0a1-ddbb-4041-8e4e-745fb094ff02",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5cdb7f6d-5c53-41b6-9a99-9a3635c3766e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51bc5b3b-1de3-4125-8132-533823ee7c61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "606b7683-66bb-4125-b029-995a927fe584",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 238.30877192982436,
      "responseMin": 10,
      "responseMax": 9438,
      "responseSd": 1127.8449918816552,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700181334336,
      "completed": 1700181411903
    },
    "executions": [
      {
        "id": "b77d3833-30bf-4df2-9867-752a04ad4251",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "37f3e6fe-ecc3-4d60-9e62-291df547c5d6",
          "httpRequestId": "38fe43db-0057-4dc2-b5ea-ea9365863d12"
        },
        "item": {
          "id": "b77d3833-30bf-4df2-9867-752a04ad4251",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1e1b4d08-013c-4eee-afdb-d34fe92bca9b",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "e454fbdb-f52d-4338-bfed-41364f47c97e",
        "cursor": {
          "ref": "ff41d706-1f52-491c-8702-a9431c08e06a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3dcbd86d-fc9c-4a75-9ff8-7bb479a06556"
        },
        "item": {
          "id": "e454fbdb-f52d-4338-bfed-41364f47c97e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d756d3c4-b275-4f11-b983-5438e08323f8",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a0e7ef0a-be94-44cb-9aea-3f04e3b73059",
        "cursor": {
          "ref": "822a8e41-1060-4b76-9883-362fe0baee38",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9366eca7-1f8c-4192-b020-e457dcf5065c"
        },
        "item": {
          "id": "a0e7ef0a-be94-44cb-9aea-3f04e3b73059",
          "name": "did_json"
        },
        "response": {
          "id": "608e2b49-0610-49ee-aa3d-e2e06a4b1d07",
          "status": "OK",
          "code": 200,
          "responseTime": 1385,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89559bc-c8b8-4d03-b5a0-ad891c2fe7d5",
        "cursor": {
          "ref": "820ae957-e2e8-4efd-8fcb-585fc05c21d2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eac33ab2-cee4-4b78-8440-32c2a438e633"
        },
        "item": {
          "id": "f89559bc-c8b8-4d03-b5a0-ad891c2fe7d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "72864c74-730e-4637-ab9a-698dc886293c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89559bc-c8b8-4d03-b5a0-ad891c2fe7d5",
        "cursor": {
          "ref": "820ae957-e2e8-4efd-8fcb-585fc05c21d2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eac33ab2-cee4-4b78-8440-32c2a438e633"
        },
        "item": {
          "id": "f89559bc-c8b8-4d03-b5a0-ad891c2fe7d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "72864c74-730e-4637-ab9a-698dc886293c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194d0e9d-9c78-4f39-838d-6973069e15b1",
        "cursor": {
          "ref": "79a4ff9b-89a0-47d3-b927-af440375fc55",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a296047-98c1-49a4-a626-fd9af825d222"
        },
        "item": {
          "id": "194d0e9d-9c78-4f39-838d-6973069e15b1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b924f934-eda8-4456-b43c-963dc1a377ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 118,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e98546-20ae-424a-a7dd-4f03af114f0c",
        "cursor": {
          "ref": "65f6b3fe-f05a-4a9f-8814-33eb2d2c2f24",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c7ab8862-2cd4-410e-a3e8-4a720e2cd7cc"
        },
        "item": {
          "id": "34e98546-20ae-424a-a7dd-4f03af114f0c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e6d02b4c-93fd-4dac-96d6-1d3fb2ef8b7b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c0cf14-0f34-4387-876d-3355825c68b8",
        "cursor": {
          "ref": "bf62f3ec-d572-486b-b97c-a366dca48aa3",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f6c6378c-f207-4cc1-af52-675f7022a21b"
        },
        "item": {
          "id": "b2c0cf14-0f34-4387-876d-3355825c68b8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "46bc210e-6b0c-4cb6-96bb-b65a251eebcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21fc2d2-3f3b-46eb-8a90-ad5c7f78297b",
        "cursor": {
          "ref": "8d99b6b5-067d-4455-a4f6-85ad27a223e8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "82281368-0576-4379-82c4-c819dec296e4"
        },
        "item": {
          "id": "c21fc2d2-3f3b-46eb-8a90-ad5c7f78297b",
          "name": "identifiers"
        },
        "response": {
          "id": "83803fbc-8f2e-46ed-b975-9a21f340c70d",
          "status": "OK",
          "code": 200,
          "responseTime": 1194,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b316d093-3ba2-48d2-8f10-051a453fe64e",
        "cursor": {
          "ref": "fad549b6-b8c1-46ef-8fe8-0686e6eb2472",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2607affa-9dde-4ead-ac94-be24f7babe6a"
        },
        "item": {
          "id": "b316d093-3ba2-48d2-8f10-051a453fe64e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a982cd4b-3f7c-4fa1-8f61-d0d24a1ccf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d90747-0b2a-4863-9ac0-9cc8491dc69a",
        "cursor": {
          "ref": "da1d78bc-c886-49ee-bcd9-77e7d8c7b65e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ff64b9cd-6be2-4db9-9b05-4f24aa269739"
        },
        "item": {
          "id": "92d90747-0b2a-4863-9ac0-9cc8491dc69a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f426c9a5-72be-43cd-a3f3-45a2e5079e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d542288-cef0-40b2-9820-a5ed5c7257f9",
        "cursor": {
          "ref": "4d01854b-5c4f-4e07-8c19-28d6b351f5d1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "14705c1c-487e-473c-bc58-268b3cca93f4"
        },
        "item": {
          "id": "9d542288-cef0-40b2-9820-a5ed5c7257f9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0463d3a6-a082-4b87-8698-76379e2f3745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b3dfaf-c0ab-409d-8ec9-1e4d0f3a9ea1",
        "cursor": {
          "ref": "a39ad2fb-288d-459e-8007-96acb15b5f96",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6f7bef5c-03e8-44de-851f-d868cd524ded"
        },
        "item": {
          "id": "21b3dfaf-c0ab-409d-8ec9-1e4d0f3a9ea1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "df89cbe5-e5c9-482d-b060-8984c4a69cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20856cb5-161a-40a7-9a6a-50bbd070efed",
        "cursor": {
          "ref": "96503062-a726-4822-954c-cf6ed8f7c065",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5663910a-7cee-4ff2-9eb5-d23e16c813b6"
        },
        "item": {
          "id": "20856cb5-161a-40a7-9a6a-50bbd070efed",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9591b5ed-a307-46da-8ce5-953135c1247f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c94bb0-cd29-428b-af14-a3afd335a7f7",
        "cursor": {
          "ref": "5653c9f2-9700-4650-88a9-5ca3b72d10fd",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "02ab469f-c076-4f77-9398-1a521a15f8b8"
        },
        "item": {
          "id": "54c94bb0-cd29-428b-af14-a3afd335a7f7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "690a37c7-8480-490a-bf72-e55aa2e18560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23e6ebe-4385-4416-9ca2-2b5dec577ffe",
        "cursor": {
          "ref": "856261b0-adf2-4c75-a3e3-a949280c85ee",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6d18574e-d41e-4b24-8dec-934662ca902a"
        },
        "item": {
          "id": "f23e6ebe-4385-4416-9ca2-2b5dec577ffe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6691624a-038a-4431-8793-68736a04cb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a97d83-2b8e-48a6-9698-459eef85a9c7",
        "cursor": {
          "ref": "8c392bc0-a2ff-4d73-9883-d35bc7e73a1b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9d451e63-d681-44cd-a007-42593f8b728c"
        },
        "item": {
          "id": "27a97d83-2b8e-48a6-9698-459eef85a9c7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "331c33bc-e049-43d3-baad-edf3737aa829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf339bfc-06bd-4084-af74-004ea7a6a190",
        "cursor": {
          "ref": "a1da9984-8aa3-4b8d-bb36-273f98463a56",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f1d16253-c74a-452d-844c-0d70007a1523"
        },
        "item": {
          "id": "bf339bfc-06bd-4084-af74-004ea7a6a190",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "02483abb-8c42-4912-b6ce-4ed461128c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c027af-6dc5-4ae4-a2d3-eb1cb27be3f1",
        "cursor": {
          "ref": "a7e3e42b-0674-46c3-b40b-522c90bc5738",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "186c849d-767d-4f8c-b221-d12edbee8def"
        },
        "item": {
          "id": "70c027af-6dc5-4ae4-a2d3-eb1cb27be3f1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cf3e2a1c-2cae-4eec-88a3-017fef6f5641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d4b7f1-494d-48d2-a56a-8d0da5cef1cb",
        "cursor": {
          "ref": "b16f2010-590f-498c-99e6-7cf497795d74",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1bfc462f-feaa-4215-93f2-f522b39daae6"
        },
        "item": {
          "id": "c1d4b7f1-494d-48d2-a56a-8d0da5cef1cb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2ebde352-23ec-43ca-93ea-e89dbabe48be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880bf7d7-a9c7-408b-90ab-6fee6477eebf",
        "cursor": {
          "ref": "c3994dc6-c098-4a06-a5ec-068e6875a3fa",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a61f5766-4363-4436-969b-69a7e452517a"
        },
        "item": {
          "id": "880bf7d7-a9c7-408b-90ab-6fee6477eebf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "920834d6-9d68-44ed-b6cf-12fca1f8a0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c8e17b-1ddd-4ebc-9a45-ee2a1a249e60",
        "cursor": {
          "ref": "a2007fcb-3b0e-41f5-b81c-9cf3d6c164a5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "06174323-0652-496c-934a-ddbbfbf3d2f2"
        },
        "item": {
          "id": "59c8e17b-1ddd-4ebc-9a45-ee2a1a249e60",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e8148b59-9e54-49c4-9101-a3c3b2382ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0721a0-86d3-43b5-85a8-a8f45ef63503",
        "cursor": {
          "ref": "3749d8e5-83d4-49ae-82f5-1ecbf65561c9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "46d6722f-fb40-4d05-bedb-0dd8bfff45bd"
        },
        "item": {
          "id": "df0721a0-86d3-43b5-85a8-a8f45ef63503",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3851dda4-b92e-47c6-9f5e-4adbbaf9a5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42157db0-856e-4895-98dd-eca1c1062371",
        "cursor": {
          "ref": "d872f975-f1ba-4dc6-9da0-141af3cb1c00",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "68225c27-81f2-48cf-a2c8-5904d7a0f9bb"
        },
        "item": {
          "id": "42157db0-856e-4895-98dd-eca1c1062371",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "40faa419-f530-463b-9905-3e77d916994b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4256c0-7f13-44ee-a3d3-cfd437d809fa",
        "cursor": {
          "ref": "bf9bcede-6b08-476e-af08-36977454f59f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "def778a5-8b00-4dbe-97eb-03ab95c84b92"
        },
        "item": {
          "id": "ed4256c0-7f13-44ee-a3d3-cfd437d809fa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "350bbe69-4fba-4db0-a973-0b70fd30d4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e12b37-1177-4a94-8f0a-519c91ca6881",
        "cursor": {
          "ref": "7ecab806-1810-4bc0-913b-b0d1bc87637f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "726a30ee-6111-4c14-93a6-e80ed47f3c3f"
        },
        "item": {
          "id": "65e12b37-1177-4a94-8f0a-519c91ca6881",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9a9a1441-5c3f-4443-8cd3-509f807c1263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937b3993-dad3-420f-8cbc-6971ee9f3db6",
        "cursor": {
          "ref": "3c10b1e5-6e58-4fa4-91f4-67f64b1a7974",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7725c499-2302-45b0-b66e-62e553c31dba"
        },
        "item": {
          "id": "937b3993-dad3-420f-8cbc-6971ee9f3db6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5393f64e-7650-4260-bd92-85e30dac3160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e40afb2-240b-45ea-b9ad-485532a70d5e",
        "cursor": {
          "ref": "cfd8f1eb-9a33-4d03-8403-3f75dded3088",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "45bfc0e1-f5c6-46cc-bb12-91764c7748f0"
        },
        "item": {
          "id": "7e40afb2-240b-45ea-b9ad-485532a70d5e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6b9b904b-8dfc-4810-a0de-b69110bc58d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3e8650-433c-4a1c-ab34-b6bc1d4d901b",
        "cursor": {
          "ref": "1ed291bf-b81c-4e88-9aa7-566dc66d0cf6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0b26e25f-edea-4212-9a02-2bdfeb55c69b"
        },
        "item": {
          "id": "8a3e8650-433c-4a1c-ab34-b6bc1d4d901b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7d15f045-59b9-4112-b31a-7dd3d9da815a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a19fa1-490e-4cdc-abd0-d63d73f5c068",
        "cursor": {
          "ref": "fa62e74b-6d11-4a30-abd4-0fde78b0a01a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d3005e78-e3fc-4aed-b0b0-f65cc83d1626"
        },
        "item": {
          "id": "45a19fa1-490e-4cdc-abd0-d63d73f5c068",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0ceb5b78-758e-416e-ae13-5571c221caf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b10bce-b09f-4d7f-85b6-6ede1ba97b89",
        "cursor": {
          "ref": "9cadb86f-71d3-43ef-9f15-cc93525729ec",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "aab169f9-04bc-418e-9a88-510b7a46944e"
        },
        "item": {
          "id": "e1b10bce-b09f-4d7f-85b6-6ede1ba97b89",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f03d97ac-8488-4b15-b78e-78ac29013db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee838d7e-c704-40c2-a5b4-38ccceb0e943",
        "cursor": {
          "ref": "054c9d49-fa84-46da-97a4-41f87de14b0d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1ba0e805-6944-483b-a76d-de767542328d"
        },
        "item": {
          "id": "ee838d7e-c704-40c2-a5b4-38ccceb0e943",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ffaef2cf-eeb8-4242-8004-6a255baec163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2521d9e8-0f20-4ebe-a4b0-526f03ec0e4c",
        "cursor": {
          "ref": "e2b2b474-4d20-41f5-ab10-6c3b8db09005",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "22dc3427-9700-4222-8213-fa03de170176"
        },
        "item": {
          "id": "2521d9e8-0f20-4ebe-a4b0-526f03ec0e4c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "58237db0-932b-48ee-a371-80c87cf2de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3704ec9-bcce-494d-a296-a8d3297a06aa",
        "cursor": {
          "ref": "da887518-002b-47af-b9d1-11f03496d1ce",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d9e48fba-165e-4dcb-b10a-650b196909be"
        },
        "item": {
          "id": "a3704ec9-bcce-494d-a296-a8d3297a06aa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "197318a6-b364-4080-85df-c251f83add75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593b5379-73a2-44a3-8d60-dbe7956224c7",
        "cursor": {
          "ref": "5e0732e6-d9fa-4dc2-a5e1-655f2293320e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cd38142c-5043-4aac-a897-97f9412c737a"
        },
        "item": {
          "id": "593b5379-73a2-44a3-8d60-dbe7956224c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d7a28d40-f751-4937-87f0-622d9a2c43ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb9eb75-cee0-4001-9719-74e5f6321af6",
        "cursor": {
          "ref": "23ec2fd1-6c40-47b1-8c90-0d7a181c26e4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5de0bd68-6863-475e-afd7-08f84ae1c4b0"
        },
        "item": {
          "id": "bcb9eb75-cee0-4001-9719-74e5f6321af6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ae941711-af54-44a6-a1bc-ca5d53131e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb4bd82-ddc0-4e65-9b61-0c3a3f70321d",
        "cursor": {
          "ref": "a6d2f339-3bc5-4f44-b960-fe7a6f407826",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8b98fb46-a837-4976-bdf8-183811c4cbe4"
        },
        "item": {
          "id": "7cb4bd82-ddc0-4e65-9b61-0c3a3f70321d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "04b6fd02-aae5-4ba0-9acf-5a51790f93c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028f7dbb-1eff-4377-9390-77d5aa1dde96",
        "cursor": {
          "ref": "d1cf4d52-1a5f-4547-b196-fded648de5d6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "44cf0e39-66fb-4b02-9bda-f799bea3d466"
        },
        "item": {
          "id": "028f7dbb-1eff-4377-9390-77d5aa1dde96",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "64b89235-0cc7-4e8b-b291-bf61446b2227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef055c45-f7d9-40f6-bb0b-e198babb9d53",
        "cursor": {
          "ref": "ea9cec6a-8f3e-4fcc-95a5-8fd2cb8eb9ad",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c5b06053-3b2e-4883-a144-0f95623c052d"
        },
        "item": {
          "id": "ef055c45-f7d9-40f6-bb0b-e198babb9d53",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4ff67f4e-8d2a-4405-a5af-2515e002c141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ecbd0c-3b20-4436-8f9f-6f55ddcda992",
        "cursor": {
          "ref": "61996953-9a11-470a-b8a4-0697e5424c6c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "94d47ace-2d6f-4fac-9353-fda0e4e83710"
        },
        "item": {
          "id": "f3ecbd0c-3b20-4436-8f9f-6f55ddcda992",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "10df408f-ee3a-4ca5-a2c3-7b61407edd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3070cb77-b97c-4699-8202-1f1596801717",
        "cursor": {
          "ref": "d004a03b-de0a-4406-af3e-61a650e0cfe9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fb252763-95f3-4e34-84ea-825bb7a51f91"
        },
        "item": {
          "id": "3070cb77-b97c-4699-8202-1f1596801717",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bc3dfaf5-5474-4c41-b60c-f171f70eb5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb2bccb-2051-4872-ba9f-c5a36e4c2cc5",
        "cursor": {
          "ref": "fb184e36-ac82-4765-9dae-3c928144b00f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2e19b04e-58be-400b-beee-9ab9c7c81266"
        },
        "item": {
          "id": "9eb2bccb-2051-4872-ba9f-c5a36e4c2cc5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "76a0d576-f380-4e3f-9dc2-72c5d09fbfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7803e3ba-8015-4f0f-9ace-71160f50515e",
        "cursor": {
          "ref": "2e7ae0e0-28e4-44c5-a7d5-5bdbb9fada1c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "45a38772-497b-4291-a038-2fd1691b6458"
        },
        "item": {
          "id": "7803e3ba-8015-4f0f-9ace-71160f50515e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "594ef149-ee3f-4f56-868e-1740c243db35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ad4112-f387-4567-9d03-772cfac927b0",
        "cursor": {
          "ref": "56342fd9-853c-421f-baf3-9670acd5aa13",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7e04e4be-71c8-417b-9eed-6f13a157469f"
        },
        "item": {
          "id": "d0ad4112-f387-4567-9d03-772cfac927b0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "33aa127d-e40a-4387-8286-2dde29f0ad1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94065791-6d3d-4d29-b45a-1d6b10e7893b",
        "cursor": {
          "ref": "87afa14a-0197-4e4c-ab8d-8499bab9d30d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cea6e0f3-bac0-4bc7-8f31-7317a40fa91a"
        },
        "item": {
          "id": "94065791-6d3d-4d29-b45a-1d6b10e7893b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6fcb5c51-9498-40ea-9004-3c91e50d9acc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1510,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52137249-a63b-4d26-bf05-c802709c00b9",
        "cursor": {
          "ref": "18b9c13e-011e-4793-a9d9-8fb46df9ab1c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "537d50c8-0ee9-47db-ae9a-33e1a3d5fee0"
        },
        "item": {
          "id": "52137249-a63b-4d26-bf05-c802709c00b9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "38bf2391-7329-43f5-a036-b8f42b9bc0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2fa8ed-89d3-429f-b785-9fdc20ab4ec7",
        "cursor": {
          "ref": "d5a18d58-73b8-4439-8830-87ad9192d0b7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f6d0d86f-d51b-4486-97e6-3ee73d181829"
        },
        "item": {
          "id": "5f2fa8ed-89d3-429f-b785-9fdc20ab4ec7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e0015b89-cde7-4401-bce9-0b390346be05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bc5125-3356-4359-b9bb-da813ac5e5fd",
        "cursor": {
          "ref": "8fc32bd2-fad0-4f22-af39-19e69402753e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0a906d1b-2c9a-4e39-b22d-fa9b1d0e37b4"
        },
        "item": {
          "id": "c9bc5125-3356-4359-b9bb-da813ac5e5fd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "93af688d-9c16-47f5-a577-6be937ad2ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f0f05e-1a4f-4beb-988c-d87e06e22c09",
        "cursor": {
          "ref": "c0f95a3c-6c39-4165-a1b1-123a35671173",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0dee4aaf-8aa4-4499-8343-7a0237a02c1c"
        },
        "item": {
          "id": "97f0f05e-1a4f-4beb-988c-d87e06e22c09",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "29c0fb36-1d68-44e1-b281-e53634e4aa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96f9f35-42c6-49ff-acb1-4fb6809ac9f0",
        "cursor": {
          "ref": "9d502b9b-fc06-453d-adf1-105b3b209824",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e421c09a-baf0-4d1b-a773-e17766f55f66"
        },
        "item": {
          "id": "b96f9f35-42c6-49ff-acb1-4fb6809ac9f0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "07a8dba8-11d9-4954-9a79-f9c0848e1338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac780a9-cafe-42c6-8e37-19024066b9e8",
        "cursor": {
          "ref": "8fe8a9d7-228d-4072-a99d-db8707f289ec",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f59af711-60c5-4792-b638-714c1026e5f9"
        },
        "item": {
          "id": "0ac780a9-cafe-42c6-8e37-19024066b9e8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "23bf5f72-1af6-47ba-885f-dfef4b895ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398aa673-4e48-4861-83ee-39ea75063ea0",
        "cursor": {
          "ref": "224b38e1-2aba-42e4-b5a2-7f3d12b7921c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6b39f0e8-babe-41f1-a223-1916f247881a"
        },
        "item": {
          "id": "398aa673-4e48-4861-83ee-39ea75063ea0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9a6f34f1-9fe1-4906-a03d-b31392767177",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1505,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612f3213-3701-4aa2-aad4-888ae048fad6",
        "cursor": {
          "ref": "9c0b9638-8446-4e1c-8f8e-d146d7feb2d1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cdf414d5-cf66-4d1b-a6ad-f2012d859e48"
        },
        "item": {
          "id": "612f3213-3701-4aa2-aad4-888ae048fad6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "48d41e8e-b37f-4c35-b1ef-ddb2036c9f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4175d5-eaa6-4bfe-8f93-efb6246dd7e0",
        "cursor": {
          "ref": "2fb9ac8a-9774-41ab-842f-a3f942e798e4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1b69e05c-acb8-4967-8e6c-c76a4dbe4608"
        },
        "item": {
          "id": "5e4175d5-eaa6-4bfe-8f93-efb6246dd7e0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3dfcc7d5-0c99-4059-ac4e-ae411c497131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38e9002-238c-4852-a077-d9eb93888350",
        "cursor": {
          "ref": "85013745-183a-4f90-8e37-e0460c8da5a8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "44dfe292-b0ab-4e7f-8833-93a6996eb6b3"
        },
        "item": {
          "id": "d38e9002-238c-4852-a077-d9eb93888350",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b66b689d-f53b-41ea-9d37-40543f2c5ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5ef4dc-74ab-427e-b725-17c087e57c81",
        "cursor": {
          "ref": "af5ead8b-ff77-40de-8d42-ff4774517899",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e9133921-e8d2-4674-85ee-11838f852fd2"
        },
        "item": {
          "id": "fc5ef4dc-74ab-427e-b725-17c087e57c81",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3fc8f0d2-ebee-47b9-9689-f72ba476c513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8269db-7f12-492b-86d2-8d6daec2c941",
        "cursor": {
          "ref": "e582da0c-1aca-4979-93a9-ae1fc4ad6fd0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f761fa6f-786f-4268-8f8e-44e1d2193431"
        },
        "item": {
          "id": "cf8269db-7f12-492b-86d2-8d6daec2c941",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c02b8d1-d6da-4c11-9ba0-33b029a87537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d9c7cb-a6b8-4391-8eb5-943a09dfa638",
        "cursor": {
          "ref": "1ba4613e-9a84-4dc2-b343-2d7e436d46a3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df785fcf-b9df-4f7f-b53f-2c9db550ec2c"
        },
        "item": {
          "id": "72d9c7cb-a6b8-4391-8eb5-943a09dfa638",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2747151c-2ad0-419b-8b64-699727ef1fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e85977-ff90-4e04-9f33-5429d2b7f293",
        "cursor": {
          "ref": "7e3893a4-ce15-4bc0-a2dd-152557d0bd19",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "48e5cd05-af72-483e-8a7c-1f5326cff6d0"
        },
        "item": {
          "id": "51e85977-ff90-4e04-9f33-5429d2b7f293",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1beb31d4-102f-4539-9c1d-2e2c16388033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dd9cb6-3ab5-41d1-8010-7571d064a212",
        "cursor": {
          "ref": "b3533db6-088d-48bd-91ea-2932d88ef579",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fc4f7e88-e549-441b-8dd1-5c434e234454"
        },
        "item": {
          "id": "07dd9cb6-3ab5-41d1-8010-7571d064a212",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ded60e33-9387-415b-8717-433683ef161d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd5e5c1-e7ef-4d60-9450-622e4beac758",
        "cursor": {
          "ref": "844040d8-1c13-4192-9ccf-8ed24f555e6a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7ae529fc-7d5f-4f8c-83e9-b501023dd0de"
        },
        "item": {
          "id": "5bd5e5c1-e7ef-4d60-9450-622e4beac758",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8e6f92bb-dcea-4309-a507-2d683422d73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c445ce-2c95-4708-99dd-79ea722e7806",
        "cursor": {
          "ref": "dffb462e-ac9c-480c-a781-5441bcdfd62d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bfbce2b0-ba3b-450f-8d43-6f0d04c7e8c5"
        },
        "item": {
          "id": "24c445ce-2c95-4708-99dd-79ea722e7806",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "71aea7d2-cc5f-414b-ac72-036377bf0293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d1cb6a-6ed3-4ce6-a0b9-23581a563305",
        "cursor": {
          "ref": "f4d2e630-816a-48c0-b945-655ae3ea1814",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d34a84dc-7ee8-40a1-a512-7d06715a99be"
        },
        "item": {
          "id": "a6d1cb6a-6ed3-4ce6-a0b9-23581a563305",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "58a958a3-f134-470d-8ed7-46e625338c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c23f28d-8064-4150-9b90-6e604113d84a",
        "cursor": {
          "ref": "26bee631-485e-40c9-8336-00eff0f2928a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bdc47a52-0d65-4030-8d7d-ec08cb071f3d"
        },
        "item": {
          "id": "7c23f28d-8064-4150-9b90-6e604113d84a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "86770f78-e39f-4bc9-a38a-89f3ef0f96ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80c8993-2d05-43bd-bf7f-ea296212733f",
        "cursor": {
          "ref": "cf691129-5782-4566-b07e-00cd6a8e063b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ed397f31-f269-4f6d-8b89-7af7229e3d88"
        },
        "item": {
          "id": "c80c8993-2d05-43bd-bf7f-ea296212733f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4699bdce-0d6d-4001-9bdf-2f27c3cdd6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63900cb2-f67c-4ade-8931-9c0e66cdc911",
        "cursor": {
          "ref": "5e2170c4-5945-4315-b17f-75554a8f1642",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "20be94cf-e8fa-4bed-befe-7edc39055582"
        },
        "item": {
          "id": "63900cb2-f67c-4ade-8931-9c0e66cdc911",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "24ee3e83-3ddd-475e-a4d8-625e098ba44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1569552b-a85d-438d-9785-9a58fbe493e9",
        "cursor": {
          "ref": "c6b817dc-cb1c-4b62-aae0-5f0223b2ca65",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3a7980a9-3c38-47e5-8afb-a5f86e3a7cbc"
        },
        "item": {
          "id": "1569552b-a85d-438d-9785-9a58fbe493e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b9b6aa0c-31b7-49c9-8176-b30770a417fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26a1bf5-4bb0-4f44-9962-066c0095f687",
        "cursor": {
          "ref": "2e7fd09f-5a03-4ff4-9293-623fb76d7b9c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0156768a-582a-4fea-8ec5-03c31fc865cd"
        },
        "item": {
          "id": "f26a1bf5-4bb0-4f44-9962-066c0095f687",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c023b901-4af8-4cbe-a84e-b4e8e69bd35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc952c7-d02e-4990-ac3d-727aa3258bcb",
        "cursor": {
          "ref": "302e2de5-1da1-418c-b91a-a74015329101",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "606b726a-8585-4f1c-990d-e76ea2504d25"
        },
        "item": {
          "id": "5bc952c7-d02e-4990-ac3d-727aa3258bcb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6b37d731-db21-4072-a930-6e1907496836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e158f-ab8b-488a-894c-b66d03a01058",
        "cursor": {
          "ref": "fce9764b-314c-47ee-bae1-96f9090aede5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d92f2b27-5a07-425f-b1a4-2983c8df1f95"
        },
        "item": {
          "id": "ab5e158f-ab8b-488a-894c-b66d03a01058",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "664b08a6-c624-47f3-8342-e5b445308f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2101db09-f72b-46d8-930a-14824e2f79b6",
        "cursor": {
          "ref": "6acc8dd9-8b4e-43d6-be54-2bf3914ceb6e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6a7b3642-f4f2-42d3-9add-441aeece7eae"
        },
        "item": {
          "id": "2101db09-f72b-46d8-930a-14824e2f79b6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c437e23c-c0a4-4e9b-a20c-bb16685ec66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08e43db-144c-4363-af2b-2ff518a62051",
        "cursor": {
          "ref": "a2e61563-c6ea-43f3-9fe3-591b76b45d88",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "66d1195e-4ebb-4299-b914-1cb25ecfd583"
        },
        "item": {
          "id": "d08e43db-144c-4363-af2b-2ff518a62051",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7416393f-89a7-451d-b3a0-7ca5a90b73d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ce6e99-fe83-465d-851e-52febfbe53bd",
        "cursor": {
          "ref": "2b25c157-ee74-4a91-8093-4349ebdf52e2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d69f4899-9d3c-443c-b999-9ee49beafdaf"
        },
        "item": {
          "id": "42ce6e99-fe83-465d-851e-52febfbe53bd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e2c01283-bac0-4d2c-81f1-09a634ef8540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62062d7e-9075-42c6-b1f2-f6997163e8a2",
        "cursor": {
          "ref": "fe6279bf-1eaa-48e5-a778-46806ec684dd",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "19dc9e59-73e8-4e7f-a35f-5d02c0363504"
        },
        "item": {
          "id": "62062d7e-9075-42c6-b1f2-f6997163e8a2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f125c9f2-4666-4c7c-999b-b36c78e3ee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af00c359-ee17-43e5-a92f-9c6ae9f023d0",
        "cursor": {
          "ref": "78b45f3a-3064-4c83-87d1-42c161a01f3e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4df553b4-de61-4759-99f5-441e5a3fbe57"
        },
        "item": {
          "id": "af00c359-ee17-43e5-a92f-9c6ae9f023d0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "39a166fc-ae44-42a3-95c7-099ad520134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293b42ab-c292-4e35-932f-d67786eb8bcc",
        "cursor": {
          "ref": "8653686c-96c7-4b4c-8b5a-48386e44bec6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8b8e7a6b-1126-4637-b55b-2203af2afd7c"
        },
        "item": {
          "id": "293b42ab-c292-4e35-932f-d67786eb8bcc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "67d1ad25-2498-49f3-8108-56e8be8bcb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8f7251-1d4a-4db7-8765-014f48b88fde",
        "cursor": {
          "ref": "57b28c10-4ba5-4f1f-a95e-e930ab72cd0b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6f06077d-c603-42c9-9b33-30a34ac671ef"
        },
        "item": {
          "id": "fa8f7251-1d4a-4db7-8765-014f48b88fde",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "94a20c3f-82c9-4de2-b085-7f3488437955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c425ab1f-896e-422a-841a-f8c3a650dfc3",
        "cursor": {
          "ref": "950b2a52-2fce-421b-ab25-5a887f2a9cd1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d41222ed-a531-4529-95e6-55135b7be0a7"
        },
        "item": {
          "id": "c425ab1f-896e-422a-841a-f8c3a650dfc3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e8c95658-c3ea-4ab3-b122-624567e55fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e28119-eeca-41ea-9149-bd71e7509dd1",
        "cursor": {
          "ref": "51edf26f-042e-45b6-a5a0-a48b14f6008d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ef14ac87-ea4b-4973-92b3-f78412608ee7"
        },
        "item": {
          "id": "93e28119-eeca-41ea-9149-bd71e7509dd1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fdd1fe84-1195-413c-97b5-c320b418889a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c8850d-25f4-470d-ba9b-a40d0c666a6c",
        "cursor": {
          "ref": "2a9d1632-6818-4827-ae40-961c62a33d11",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7ffde8a8-a970-45c4-8773-b754b4885592"
        },
        "item": {
          "id": "c7c8850d-25f4-470d-ba9b-a40d0c666a6c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4fc8f4c3-6bdb-4907-bf08-503e3a8038d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8774f4ea-3399-49e8-a184-d34abc984c22",
        "cursor": {
          "ref": "bc4392d1-169b-4f61-8d04-7e7e5e58ae13",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6781377e-76fb-4999-b806-a7081d50c3a2"
        },
        "item": {
          "id": "8774f4ea-3399-49e8-a184-d34abc984c22",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2c20b2fc-0687-4774-bd7e-8867e4c4e45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88384914-ba6e-4d79-922b-00d54f157eec",
        "cursor": {
          "ref": "0754ab5d-1698-4b23-b8b9-f72a6fc8c6ae",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e9fd4672-0d24-4446-8480-9a356d2db1b6"
        },
        "item": {
          "id": "88384914-ba6e-4d79-922b-00d54f157eec",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3f21b162-2dd1-4640-91b3-ab260d9ffcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33747f25-f4bd-4317-b7d5-1d0729bca638",
        "cursor": {
          "ref": "80c5d29e-8fa2-46d9-a0cb-74a486d5e71d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "38824519-08a3-4bac-adfd-480e25e5f45f"
        },
        "item": {
          "id": "33747f25-f4bd-4317-b7d5-1d0729bca638",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f37a762-2a06-4d2d-9576-8d04cabdf27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e897b10-a9dd-49f6-beb9-a03f014b1b2d",
        "cursor": {
          "ref": "dad403f2-7f0f-4da7-8861-2677c5871c7f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1afa8240-4cbc-4541-a022-d48edde972c5"
        },
        "item": {
          "id": "5e897b10-a9dd-49f6-beb9-a03f014b1b2d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "070d67cf-4f59-48d2-af0b-541af3addc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f61dcf3-fcd2-4bae-b72e-b3a7c525f0f8",
        "cursor": {
          "ref": "4a5de32d-4d4e-4a4b-854e-88fd4f8cc9e3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "723f86a6-588c-430d-9349-487a9b99fc95"
        },
        "item": {
          "id": "8f61dcf3-fcd2-4bae-b72e-b3a7c525f0f8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "415f94dd-f225-45cf-a8f4-aeff779848e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9fb8ee-238b-4899-be3f-3422a75e4a8e",
        "cursor": {
          "ref": "d581a142-8cb5-4f14-bc51-a45a0ce427d2",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f63d62dd-3e6a-468f-8391-7ab553727748"
        },
        "item": {
          "id": "ae9fb8ee-238b-4899-be3f-3422a75e4a8e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "34d47ea9-1d41-46de-ae1d-baa337e9588d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3fb010-fc81-4ecb-acc4-b510df10069e",
        "cursor": {
          "ref": "44f07659-0ef5-413e-8987-5ae52a601a84",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2bdc0624-be0a-4d65-a780-2099f71606bc"
        },
        "item": {
          "id": "fd3fb010-fc81-4ecb-acc4-b510df10069e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "48e92d9d-f83b-434b-bdc9-50804c7cac1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2838452-1b76-45d3-b8e7-e8852f085ddc",
        "cursor": {
          "ref": "915c6b3b-c0ee-4ca9-ac7e-190c461efa8c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5d11c0ce-4c0a-4a06-8a08-cb1d151f5583"
        },
        "item": {
          "id": "e2838452-1b76-45d3-b8e7-e8852f085ddc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "945623ce-94bb-49a8-b162-b674fc716f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ca79b8-f24e-4d77-a2bf-e5ad06dd36b7",
        "cursor": {
          "ref": "8a98b718-5645-4031-a8aa-f3209f62e3c1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "17562e3f-616e-45ef-a92a-3ebc1e2c6064"
        },
        "item": {
          "id": "94ca79b8-f24e-4d77-a2bf-e5ad06dd36b7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dd16304a-87e7-4396-8fac-6ee291cdafae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2e4d8a-a786-4f8a-a9ad-62ec950c2564",
        "cursor": {
          "ref": "991f9d32-0869-4c4f-8edd-c50ba4fb7773",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "45cf61c9-545e-40e2-a0e7-ec7aab5ba66f"
        },
        "item": {
          "id": "7b2e4d8a-a786-4f8a-a9ad-62ec950c2564",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6b9d440-394a-4fce-9358-06fc371f9f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd71f505-615c-411d-8f14-182635baabbd",
        "cursor": {
          "ref": "9f72dd43-a792-4124-a140-d4304cdd8537",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a73947b3-9478-4529-9739-d1b23147e112"
        },
        "item": {
          "id": "dd71f505-615c-411d-8f14-182635baabbd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d8c0bbd-58d4-416e-80c0-6857f32d4542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac4b56c-5ff6-4d71-9114-e5cb1d119501",
        "cursor": {
          "ref": "5d41384b-09c2-4dff-877a-267c24a60b83",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2e8cc53d-4097-44ca-9488-c92b131aa9ec"
        },
        "item": {
          "id": "4ac4b56c-5ff6-4d71-9114-e5cb1d119501",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aeb0f027-4e07-474a-aa33-5e62964c5540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60c4f37-51ee-4710-a034-34bbfb59a788",
        "cursor": {
          "ref": "6f4bcaed-1079-44ff-9a54-5199fd72e714",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "77e9a528-7f88-4082-a691-464458bb27bc"
        },
        "item": {
          "id": "a60c4f37-51ee-4710-a034-34bbfb59a788",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cba10d80-aded-4576-aa9e-e2aef5d93ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ba2f98-f4fd-4ec1-8148-c3b584a8cd20",
        "cursor": {
          "ref": "34241b2b-868e-46aa-92ef-c673c00cd790",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "68aecb1f-8d4e-4613-be54-62504d682a4b"
        },
        "item": {
          "id": "56ba2f98-f4fd-4ec1-8148-c3b584a8cd20",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dfa1a47a-a53e-4831-bf51-bd06f6ea3bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6625a78-1adb-46b9-a38e-c9daf1e99c43",
        "cursor": {
          "ref": "9f369ebb-fcb3-4f2d-ba81-a6684143de1b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "91fe0710-954c-4128-8e62-02827145328d"
        },
        "item": {
          "id": "a6625a78-1adb-46b9-a38e-c9daf1e99c43",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c226ce70-0c1e-45cd-bc6c-b368a4dec592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990d600a-f64c-4c60-b7a0-2147fd77061c",
        "cursor": {
          "ref": "7586255c-43bb-45cd-b6dc-75d0a813ca30",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "537c07be-caa7-48d8-9b49-55afdec95a08"
        },
        "item": {
          "id": "990d600a-f64c-4c60-b7a0-2147fd77061c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3914562d-5b1f-46f3-8ae5-ab0fce31a0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090c38cd-935b-46e5-9c00-74eb8cbb65c5",
        "cursor": {
          "ref": "5ea69430-7238-4852-ac67-4d8a4aacc998",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "74889ef9-a5de-4dbb-8846-d322c9fb6d72"
        },
        "item": {
          "id": "090c38cd-935b-46e5-9c00-74eb8cbb65c5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c8604771-c970-49e0-a7e2-20355cb542fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2cb29b-92d7-41f5-a787-2a3eb079167c",
        "cursor": {
          "ref": "3a0454f6-ab15-41e2-9403-dff75ad83c65",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "86b6fad9-bb20-415a-b992-ea4cc13d1d4f"
        },
        "item": {
          "id": "0a2cb29b-92d7-41f5-a787-2a3eb079167c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a527b484-fa5c-4bd8-94c3-dc870c26e6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a6efd7-1f4d-4a69-9c72-0aa796a420d5",
        "cursor": {
          "ref": "73fbed04-85d8-42c6-9066-5d3f7d7a5fc3",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "97d53252-8343-482c-89c1-796050b6cfab"
        },
        "item": {
          "id": "67a6efd7-1f4d-4a69-9c72-0aa796a420d5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4aec504c-8431-4e31-a055-8315b67504c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c27f58-027a-414c-a11d-e6b6d4fdff0b",
        "cursor": {
          "ref": "ccd90a6c-6adb-4804-ad1f-27156984a523",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3f8ab270-6441-4b71-b851-ecf8e0679a3e"
        },
        "item": {
          "id": "30c27f58-027a-414c-a11d-e6b6d4fdff0b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "867bd165-1114-4269-a1c0-519299cbf763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6853957d-8cb3-4bec-9be8-ea0eca9ced6b",
        "cursor": {
          "ref": "e8bc5e1d-5384-4fd9-9c0a-c63a6437f647",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "17afc6e4-392c-4de9-a50b-c51817c084ae"
        },
        "item": {
          "id": "6853957d-8cb3-4bec-9be8-ea0eca9ced6b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "14bda23a-adcf-44bb-b30a-768708de8448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d9dfd0-6180-478c-8d2c-e442e0f283b2",
        "cursor": {
          "ref": "bdab0986-69dc-459f-958e-3a650e942bfd",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "12a0c680-ceb4-4081-88d5-427f32f8bdfb"
        },
        "item": {
          "id": "83d9dfd0-6180-478c-8d2c-e442e0f283b2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b17511c4-3e69-49bb-a6c5-33f3fdb84438",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9178330-59cd-40cf-876e-514f70a3c5ba",
        "cursor": {
          "ref": "66c0c365-b8a8-40d4-8e9c-4185735dc017",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d3491634-aed1-4094-81a8-6f66c769019d"
        },
        "item": {
          "id": "f9178330-59cd-40cf-876e-514f70a3c5ba",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "64573e19-f2d9-495b-a05e-9cc328d8c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c1fb481e-2e65-40b4-9f3a-e01ea8328833",
        "cursor": {
          "ref": "4e4eaad8-b4e0-4101-897b-9b4d1c5a997d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "18b8a421-ea4b-4a1e-8c7e-db15d93a7897"
        },
        "item": {
          "id": "c1fb481e-2e65-40b4-9f3a-e01ea8328833",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f94f1b0f-833f-488c-8169-b92f85a4ad89",
          "status": "Created",
          "code": 201,
          "responseTime": 8748,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6f3da5-b2de-424c-81c5-e1821e7c43a0",
        "cursor": {
          "ref": "f3de323a-94a7-4756-9df5-1ea49abd3f9d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bf31b174-0eed-4d9f-9214-c59ae04f3c15"
        },
        "item": {
          "id": "8e6f3da5-b2de-424c-81c5-e1821e7c43a0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6b45f00a-64c6-4865-96e9-4b9ba9cc2678",
          "status": "Created",
          "code": 201,
          "responseTime": 9438,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c430aca7-3536-4963-abbd-e7b1af7731b2",
        "cursor": {
          "ref": "a66ee437-e886-4a6e-8cb8-8474746cebfb",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "95cb6e90-0b38-489c-ae00-6c8698bd7722"
        },
        "item": {
          "id": "c430aca7-3536-4963-abbd-e7b1af7731b2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "14c80f4f-5fca-43ce-9a1d-6a4714a230b8",
          "status": "Created",
          "code": 201,
          "responseTime": 8035,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "273a6f74-1e87-42b3-9d0e-27adc2aa2727",
        "cursor": {
          "ref": "c221f723-bfdd-44e7-a457-29b8bffa854a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6060f254-dcac-457e-9f87-7ccaf2ac0047"
        },
        "item": {
          "id": "273a6f74-1e87-42b3-9d0e-27adc2aa2727",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6c4f4c00-df4d-4b71-a45e-0e98c6e1eede",
          "status": "Created",
          "code": 201,
          "responseTime": 8457,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1a06be-0786-419b-8975-faf7c40d1722",
        "cursor": {
          "ref": "a2d7ad26-5e1e-4a1f-a0d4-6ec6189ad7be",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "043d44f8-36e6-43b4-aef1-84e8752358eb"
        },
        "item": {
          "id": "1e1a06be-0786-419b-8975-faf7c40d1722",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2a0916fc-1630-43eb-a772-6b3e04919532",
          "status": "Created",
          "code": 201,
          "responseTime": 7918,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4883168b-7cdb-46b2-b278-077130cecb8d",
        "cursor": {
          "ref": "56de25ff-5640-4890-86b5-31054e28d03d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "625db7ce-c48a-485a-9483-6b977ca5f7c1"
        },
        "item": {
          "id": "4883168b-7cdb-46b2-b278-077130cecb8d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b7ec590a-09e3-49b2-8bac-40a30fcdd522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "05f7a79c-1c12-42af-af32-0e73899e6d43",
        "cursor": {
          "ref": "1297823c-ccf1-4988-8460-8293b991cc1d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3f562a79-4ecd-4dab-bc68-1cdbf7dfae4a"
        },
        "item": {
          "id": "05f7a79c-1c12-42af-af32-0e73899e6d43",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1cf64942-f0a1-4e8f-a9f5-fb8f16bbb33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4afabdc-f73c-4e15-be93-fe2d9130a656",
        "cursor": {
          "ref": "3a885a38-9e2a-4bec-b878-585cc9e99adf",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b3d2aa0c-daa5-411b-a558-6b3541e784e1"
        },
        "item": {
          "id": "b4afabdc-f73c-4e15-be93-fe2d9130a656",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c31d19d5-9022-4586-b5c0-845e3bf36d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e636ca9b-137e-4bea-b332-2e1df2e74a85",
        "cursor": {
          "ref": "33c29a6a-c623-46d2-a538-385c3bd868d6",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "588c9254-f4d4-426c-873c-4f8d19b0fa49"
        },
        "item": {
          "id": "e636ca9b-137e-4bea-b332-2e1df2e74a85",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0bc32b9f-b1a4-47dd-a412-7193aad5e670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc8c62f-cf06-400e-a5c9-d66d4380aa82",
        "cursor": {
          "ref": "10b58794-4362-468a-8b09-93417e29c02c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7247d986-0031-4e1a-bb94-dafb6e60100f"
        },
        "item": {
          "id": "7bc8c62f-cf06-400e-a5c9-d66d4380aa82",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "725241ae-06a4-4aae-b930-a189eaf24c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafe7ed6-c4b7-473e-99b5-3c610e968dd4",
        "cursor": {
          "ref": "b250f37f-a3d2-4c39-89d9-66cb5c575b29",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4fed2527-b746-45c6-a89d-f20ace4eaef6"
        },
        "item": {
          "id": "aafe7ed6-c4b7-473e-99b5-3c610e968dd4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "55a7fc63-7923-4bd0-98ee-f986c783fceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44adb99-c91a-4825-85d1-fc13807b4d7e",
        "cursor": {
          "ref": "abbd8374-72f5-494a-bc2b-b9053d617ade",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1d6f265b-1d17-4ed5-abde-bf130f2b68a1"
        },
        "item": {
          "id": "d44adb99-c91a-4825-85d1-fc13807b4d7e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "69f973c3-e22a-45ec-b77c-ee9a5b8ac8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f97624-eab8-4069-8929-e1da0d8e42e4",
        "cursor": {
          "ref": "a1325d39-e7d9-4dfd-917c-34f2f50a32af",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c9a4bb32-4916-4141-a9ca-7ff3166f311a"
        },
        "item": {
          "id": "c0f97624-eab8-4069-8929-e1da0d8e42e4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fde3cd0b-5b63-49d0-8c87-af8461853710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754066f1-c80a-44b4-97ab-3145c7e5cf5c",
        "cursor": {
          "ref": "ef777186-f6df-4eef-b712-c96e55ba35f6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2b84a599-d7bf-49f6-8c8e-528c5f3ff39c"
        },
        "item": {
          "id": "754066f1-c80a-44b4-97ab-3145c7e5cf5c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "847cfa59-7fd5-4df1-905f-4122464cdbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adbfeb8-fadf-44d8-afee-3eca00be053f",
        "cursor": {
          "ref": "a9c8bad3-aff6-4ebb-a5dd-41b80ed95a9b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "53c5c824-b09a-4f48-9d99-4b5b89d77b81"
        },
        "item": {
          "id": "8adbfeb8-fadf-44d8-afee-3eca00be053f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b5ab1711-d45b-4f0e-8c18-475caa772900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3afe15-5bee-4b7c-a090-583ceada572b",
        "cursor": {
          "ref": "70704497-74db-4301-bdef-2b3570f615d3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cd294125-ef66-4b76-885f-1c3a8c35182f"
        },
        "item": {
          "id": "1b3afe15-5bee-4b7c-a090-583ceada572b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "63b890a9-8222-44f6-916d-20566f4b216a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a591e70-ba3b-4eda-aef4-5644272514ae",
        "cursor": {
          "ref": "500d589e-77f0-4a9d-a8a8-7937bb65d72b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "403cee3a-0f55-4ac7-8a70-b5bf793872e4"
        },
        "item": {
          "id": "0a591e70-ba3b-4eda-aef4-5644272514ae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f02a2e5-6ca4-4e1d-a507-622aa860cd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b068724-6ad4-404e-9af7-fc6610ba387b",
        "cursor": {
          "ref": "b9a21093-8365-43a8-9d7b-15121b4b938f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6777ac59-0d13-4af6-a3f1-78eb9cee657a"
        },
        "item": {
          "id": "1b068724-6ad4-404e-9af7-fc6610ba387b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c6300401-f1c2-4dc2-b8d5-18f13c7bc853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761f9511-7ae3-400d-8208-d0c566a8914d",
        "cursor": {
          "ref": "11c9b274-40f0-411c-985d-badd0f13cc34",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ffa5d08-a0b0-406e-a117-5d411eab7af3"
        },
        "item": {
          "id": "761f9511-7ae3-400d-8208-d0c566a8914d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "78361b1f-d7ac-413c-94d4-7a1e3f046bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8b737d-9439-4536-a394-b43487498f7f",
        "cursor": {
          "ref": "9730867b-1ddd-4e34-b345-300cf98fbe78",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "15aee557-46d4-40ca-b2cc-13d0d1978343"
        },
        "item": {
          "id": "1a8b737d-9439-4536-a394-b43487498f7f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "924b912b-012c-4236-9a4a-24d4b6deba95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a6e0d-32f2-4f1b-a3ff-5626a68027bd",
        "cursor": {
          "ref": "0b7e9202-3bac-430c-9aa8-a94f485d72b1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "50e71455-6051-42e4-a0a9-9e7b054faa2f"
        },
        "item": {
          "id": "7c5a6e0d-32f2-4f1b-a3ff-5626a68027bd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8d4505a9-03b6-403b-bd1e-f1348ad29280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f102f7b8-3422-49d7-9f34-24ba8791b480",
        "cursor": {
          "ref": "f7e87aaa-2d3f-4831-a304-9bbc77e5548a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6bb12412-fc29-43b5-af6f-7636f8c0b4f1"
        },
        "item": {
          "id": "f102f7b8-3422-49d7-9f34-24ba8791b480",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a6f8558d-62cb-45dd-bf2d-fb8a0dad6584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d893052-d13f-493f-acbe-f5e6164d0dcc",
        "cursor": {
          "ref": "f16bb873-cf7e-4de8-bbef-2cd575ca4135",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bfb95698-2b18-43ed-bc3e-a6eab6f18eeb"
        },
        "item": {
          "id": "5d893052-d13f-493f-acbe-f5e6164d0dcc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d59f3aea-ec3e-488b-a365-3958d79ae76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a875ef8-e8ae-4be4-8e33-9564f6b23a8b",
        "cursor": {
          "ref": "3b8edbe6-944b-40b1-bcd3-cad27454935d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3dd10ca5-4258-4023-884d-1d0ace9527e7"
        },
        "item": {
          "id": "5a875ef8-e8ae-4be4-8e33-9564f6b23a8b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5a7ad6f5-fe8a-491a-96d9-e56e7cf57d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2163cf0d-44a4-4d9f-b0e0-7faacd10d902",
        "cursor": {
          "ref": "e72e33c5-0a2e-4171-88e0-d65bc1032d0c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e939e808-9f1d-4925-86e0-9fe9758cda31"
        },
        "item": {
          "id": "2163cf0d-44a4-4d9f-b0e0-7faacd10d902",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41443a60-ab22-4e4e-9047-ddb022f3fcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ab85f8-3aa5-4721-ae00-0b5e32edae84",
        "cursor": {
          "ref": "b38b427d-7bbf-41a4-8f09-615254d503ff",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "03cf0f1a-42ee-446d-a2ca-385802b62412"
        },
        "item": {
          "id": "37ab85f8-3aa5-4721-ae00-0b5e32edae84",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b52fc436-e576-472f-8f15-5c165ff3b59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f924980d-0407-46fb-835d-5f282b5a7b87",
        "cursor": {
          "ref": "cdf6559b-c944-4f11-945e-5cdeb95df9a1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "eb8b74fc-b33f-4589-b0ed-525d3a50a6d0"
        },
        "item": {
          "id": "f924980d-0407-46fb-835d-5f282b5a7b87",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "174b96bd-3672-4b63-825e-50ba9add4e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3c8789-6459-408b-b39c-3cd3477fecb7",
        "cursor": {
          "ref": "40a533c6-f030-4977-8973-2a1d69d968fd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8fa38b0e-282c-41e0-9f77-dd8f099b26c2"
        },
        "item": {
          "id": "3e3c8789-6459-408b-b39c-3cd3477fecb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f48011d7-c715-48c5-8d2e-0186a85523ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526cd97b-1c0a-4a67-bcf1-306ea6505763",
        "cursor": {
          "ref": "35115a67-7b87-43da-b369-526f37457289",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c648e39d-ef24-41d1-adbe-a184a2102ac0"
        },
        "item": {
          "id": "526cd97b-1c0a-4a67-bcf1-306ea6505763",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "54a39a48-8c23-4044-b3de-fed3874e00ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34cfd95-0eb7-43c5-8491-078acd044123",
        "cursor": {
          "ref": "16a1bf3c-8cd9-47a1-9f3c-22811c89bce7",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9a211f4d-f97c-46dd-9f0b-7c155ae1d1c4"
        },
        "item": {
          "id": "d34cfd95-0eb7-43c5-8491-078acd044123",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2ce94f56-c39e-4292-8b3e-0c3410980a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e52f3ff-54f9-4de7-9273-9cebb2f40550",
        "cursor": {
          "ref": "a04cafe7-687c-439a-bead-2fe15f9a1005",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2dbb4c5e-e207-4d6b-85bd-01381729db4a"
        },
        "item": {
          "id": "2e52f3ff-54f9-4de7-9273-9cebb2f40550",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c928254b-9501-45fc-b4ba-ae107d538d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069edc48-8c1b-46cc-90e8-fbf7531c1c0e",
        "cursor": {
          "ref": "67db0de1-0573-4de9-ab20-ffe94f0f747f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e39ba49e-4016-47f1-bea8-ebe96c482632"
        },
        "item": {
          "id": "069edc48-8c1b-46cc-90e8-fbf7531c1c0e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "05a52395-0746-43e7-ba31-ca73f4f2fa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e7719d-fbb8-42c5-806b-eab291c0a068",
        "cursor": {
          "ref": "09c0d483-f907-413d-b3e5-70f703e5b64c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "904f3639-ce75-4fd5-989e-8ae2164ec2c4"
        },
        "item": {
          "id": "d5e7719d-fbb8-42c5-806b-eab291c0a068",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4fe9ced-362a-42a0-b640-d51ffd914b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407572bc-b741-4e87-b4fe-adafc02ceb17",
        "cursor": {
          "ref": "a896ff67-3bc8-4e27-ba28-460bf4d901af",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4f27c2df-9002-48c7-8b2d-263c04e5e2cb"
        },
        "item": {
          "id": "407572bc-b741-4e87-b4fe-adafc02ceb17",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cfdda364-9af2-4419-b82f-aa9f689f4c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e2856b-dc84-4497-973e-e6f3575cbf9e",
        "cursor": {
          "ref": "f04096b8-4f6d-4c04-97ff-954b4c8de395",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "44f171f0-4bc3-42ec-937d-a950c68ebff3"
        },
        "item": {
          "id": "c6e2856b-dc84-4497-973e-e6f3575cbf9e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6fd7ed5f-5c54-4159-a544-00465bb5a8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9e1fe6-034a-4440-976a-b015b395bc11",
        "cursor": {
          "ref": "ed063053-3bf7-4e05-a62e-bb27255141e2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "daf9dcdb-a07c-43d3-9ec5-97cb4c1a7381"
        },
        "item": {
          "id": "2d9e1fe6-034a-4440-976a-b015b395bc11",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f343c824-885f-440f-81bb-4c6410088dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e45fdc5-0b2c-4d57-b90a-d630b1fdb1b7",
        "cursor": {
          "ref": "e7d35513-cd3b-4083-a05c-b5cb018bb28a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "03c46694-18c0-44cc-a2e5-5f4a07ae15de"
        },
        "item": {
          "id": "0e45fdc5-0b2c-4d57-b90a-d630b1fdb1b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "26811c21-8844-4838-8fcd-099c01a8a900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7303dd-6420-4100-ad02-172eeb16c2b8",
        "cursor": {
          "ref": "6560db75-c510-44c7-bc37-a6b02049a9d1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3a644609-3e7b-446a-922f-9bf3ced6795c"
        },
        "item": {
          "id": "6b7303dd-6420-4100-ad02-172eeb16c2b8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "868b9967-2b15-421f-8652-ef7e5dc58108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffafed9e-aa23-4a3e-9786-7983f812efc2",
        "cursor": {
          "ref": "a916c394-6449-4522-9376-e74017dd9526",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a1bb2539-3f90-4756-aeff-f9b2b7b689e1"
        },
        "item": {
          "id": "ffafed9e-aa23-4a3e-9786-7983f812efc2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2f2bd2ae-3647-4be3-99c8-adcbe123b3eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe45e019-1fda-4afc-8ffb-c45dd070e9ee",
        "cursor": {
          "ref": "e11bdf64-2bcc-4314-9ae6-e7f12d8e4a5b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c8e96ae2-d6e4-478b-af1f-7ca800e79760"
        },
        "item": {
          "id": "fe45e019-1fda-4afc-8ffb-c45dd070e9ee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b72aad0f-4474-488b-a27e-f2e8d1c8ac99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0a6011-8d46-4716-8716-0cce82189221",
        "cursor": {
          "ref": "81522288-a4be-4eec-8f5a-b237e4552dfc",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "76329ce9-c770-46bf-8bb6-759a545e8c9e"
        },
        "item": {
          "id": "fe0a6011-8d46-4716-8716-0cce82189221",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f0ffd08b-e7d9-4e92-8c52-64bd6f3fc44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e6d1de-b2ec-4b4a-9308-61dfdad9a395",
        "cursor": {
          "ref": "9a282093-68d9-47f1-9226-36dda01dadfd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a25b7a24-7604-48fb-b069-d9f0e64bb264"
        },
        "item": {
          "id": "14e6d1de-b2ec-4b4a-9308-61dfdad9a395",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1de09ce3-aaf6-4b15-b7c2-93568e10ddac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed0bac-3aa8-488e-9328-1a68e77efaa0",
        "cursor": {
          "ref": "00252d1c-e25c-47a7-9830-88fde669caf3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6825296b-b2cf-41ac-8954-e0ef751644c3"
        },
        "item": {
          "id": "79ed0bac-3aa8-488e-9328-1a68e77efaa0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8e780f6a-9a65-49ac-81de-c72c21bc68af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6897357b-8c01-42af-88a4-07edd0181b8d",
        "cursor": {
          "ref": "9ce28739-3e53-4233-b341-b10e9f811e50",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b1529875-2b5c-4f9f-a4ee-45ef658557c3"
        },
        "item": {
          "id": "6897357b-8c01-42af-88a4-07edd0181b8d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fb4848bc-64e0-4e55-ab95-51048a5d3608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4fc1af-9b4f-4e22-bc4a-0f3ef56b8706",
        "cursor": {
          "ref": "4d9a2bdf-b247-44af-b953-4b6a3b0783ed",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "862874f2-1f6c-40e8-8d43-441efbb70ade"
        },
        "item": {
          "id": "5e4fc1af-9b4f-4e22-bc4a-0f3ef56b8706",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "286885d1-cd09-4f08-9823-9796a368bed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8675511f-6751-4d89-ab2e-d2081c24bfb0",
        "cursor": {
          "ref": "4c91cfd2-f0fa-4a9b-9895-7bbd7f1179a2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "717e17ca-189a-4c07-b269-560c04001f06"
        },
        "item": {
          "id": "8675511f-6751-4d89-ab2e-d2081c24bfb0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "93601472-4cb8-48e1-b092-80c176e74021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24feb2b0-615c-48d0-a7eb-6e25d9145536",
        "cursor": {
          "ref": "569856ff-3a7e-4813-bc48-f3061a861a7c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d88def25-b790-4699-af49-dd43bfc3e278"
        },
        "item": {
          "id": "24feb2b0-615c-48d0-a7eb-6e25d9145536",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de77561f-36b2-41c7-8f5f-b930b27024e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33fc623-1c33-4c4e-84d9-38aea1167e2a",
        "cursor": {
          "ref": "d7537e38-35fb-486a-b909-3f9db7af59fb",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6e798fa5-3f59-42e3-be47-c65bf89171bd"
        },
        "item": {
          "id": "a33fc623-1c33-4c4e-84d9-38aea1167e2a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "56f49daa-1e43-4e3a-8ff1-807a3a08eeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21b9488-731a-42ca-a3ca-68e8b77b6bd3",
        "cursor": {
          "ref": "4dbbdf4c-9f89-4115-84ba-f211844b16c2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d5086867-267b-4556-9908-f091a90d53fd"
        },
        "item": {
          "id": "d21b9488-731a-42ca-a3ca-68e8b77b6bd3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c14f3fc3-e78d-47bf-9682-7f41a6e8e21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc016d6-8da4-4122-8c96-ebe84891c8d9",
        "cursor": {
          "ref": "7edbf2ff-0882-4885-8e94-fd4f8412c5de",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "110925e3-09b9-46ce-a057-cd4e5c1daf7b"
        },
        "item": {
          "id": "fcc016d6-8da4-4122-8c96-ebe84891c8d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8a7ca6e8-29a2-424c-93de-c1e2c79fb096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f48674d-3dd7-4ac8-817e-ca37d49fcf4c",
        "cursor": {
          "ref": "6a17cd21-9739-4516-9439-97932e012c52",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5034de1f-044e-44c6-8495-6294623523ea"
        },
        "item": {
          "id": "2f48674d-3dd7-4ac8-817e-ca37d49fcf4c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4ac3ba58-6048-476d-ab4a-064ad1d1d652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a6bc73-3e25-4243-90f4-2bff8f5a1366",
        "cursor": {
          "ref": "7d500512-18de-4953-aff0-815447ab7371",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c16c8738-279e-4d33-92b4-624e22d5e7b4"
        },
        "item": {
          "id": "28a6bc73-3e25-4243-90f4-2bff8f5a1366",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8df03bb6-cf69-4780-b908-a17cd4b838fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a31d44-d6bd-4637-b5f3-e98e45cb914d",
        "cursor": {
          "ref": "e3afaaa1-5bd5-4ebb-af13-c4cb8c218da2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f6e1f8b9-0d8e-490f-a501-b0f39117c47c"
        },
        "item": {
          "id": "42a31d44-d6bd-4637-b5f3-e98e45cb914d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a7be677-4c75-416c-a24b-1898938aa840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be10b834-88e3-4486-a511-644ab5877162",
        "cursor": {
          "ref": "d9ccc671-bce1-439f-9986-b5ca2a9437c4",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d369501f-94d1-4a2f-b9fa-bcffed73ae11"
        },
        "item": {
          "id": "be10b834-88e3-4486-a511-644ab5877162",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0b26f73b-d949-49ca-9737-474a8f65e70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54441d8f-a096-4227-b2aa-07cb0d30799a",
        "cursor": {
          "ref": "cd3a6633-c166-46d6-952e-421a00a190d8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "df467521-3962-4b3b-b82c-9c620dda2c21"
        },
        "item": {
          "id": "54441d8f-a096-4227-b2aa-07cb0d30799a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ead974b-6a26-4274-86bc-9bc37c7b6cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb12140-b86b-4923-ae83-0c5189d4517d",
        "cursor": {
          "ref": "8d14d12e-494a-4344-9676-b53468b948b1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b3c7ff6f-74d4-4052-b027-39502f937031"
        },
        "item": {
          "id": "ceb12140-b86b-4923-ae83-0c5189d4517d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f3a4a0b6-3f2e-47c0-94a4-fd2ac446f972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6c0f86-ddcf-4c14-82e3-9aceb510d816",
        "cursor": {
          "ref": "aa6b62a0-953f-446e-924a-b4467512a593",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b2db939a-2805-4bbf-8ac1-fe445b28f40e"
        },
        "item": {
          "id": "8d6c0f86-ddcf-4c14-82e3-9aceb510d816",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "425fdd94-e4b0-4302-b939-12688afab736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df79bbe0-4f69-4ae4-adc0-744b67f5d6c8",
        "cursor": {
          "ref": "05c3f779-7a44-49bf-bbcd-e3312ebe30ed",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d703b889-8b74-40b9-b81b-d5ebf2140f93"
        },
        "item": {
          "id": "df79bbe0-4f69-4ae4-adc0-744b67f5d6c8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b03cd7e0-8fd6-40bf-b218-ccd0d48bdb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebada03c-0cf3-4a34-a1d8-650380f11a18",
        "cursor": {
          "ref": "496ed3d4-9328-4c32-9d39-d3ae854d706a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "22d61d58-27f9-40c8-a994-3c660fe52679"
        },
        "item": {
          "id": "ebada03c-0cf3-4a34-a1d8-650380f11a18",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2a7c0717-6535-43a2-aac9-c0adb6691719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ebdb41-8596-41da-8ddc-c3f89968cf74",
        "cursor": {
          "ref": "d88bdc7b-1d38-459d-9b3e-2e76d4887f67",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b3620a5e-9f74-4632-8ee5-2d6263a9f3c7"
        },
        "item": {
          "id": "42ebdb41-8596-41da-8ddc-c3f89968cf74",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a353bce7-41a2-4f43-99c6-2c63a602d367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921f16ef-e323-4c23-a709-aa638435bc25",
        "cursor": {
          "ref": "7a594384-821e-40fd-bba9-33ca1183fd8d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "432b61ad-47d6-41e7-97a9-8dcdef6d9ec0"
        },
        "item": {
          "id": "921f16ef-e323-4c23-a709-aa638435bc25",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f81933f-585f-476a-98c1-d59bc5deb94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf4eba1-686b-40e5-9482-926d5943d601",
        "cursor": {
          "ref": "7be0977a-2cb6-4386-a32a-20e87f6f924e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ea18d61c-05e7-4048-bd33-1fb4da1e64f8"
        },
        "item": {
          "id": "ecf4eba1-686b-40e5-9482-926d5943d601",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "993f96d4-c35b-4ac6-b29b-d4df4daf930e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c74e5e-bfcd-4729-94bb-35ac5560ba6e",
        "cursor": {
          "ref": "6fc1277a-e722-441f-beab-8ea9610fc593",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "775583e9-b54c-4956-9c55-51fa5cc3d9d4"
        },
        "item": {
          "id": "e1c74e5e-bfcd-4729-94bb-35ac5560ba6e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9213d82d-d039-4784-b8b8-0acefab37ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac4a880-e182-47ca-a99b-c74f862c650c",
        "cursor": {
          "ref": "fcaa5deb-c36a-4304-8970-2381d915706c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3e62f2ea-f200-4a83-95e9-fd632074d181"
        },
        "item": {
          "id": "7ac4a880-e182-47ca-a99b-c74f862c650c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "018477a3-12a6-486e-85b3-bf6326753d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1d570f-11a3-42e8-bc92-b19a062ebe2e",
        "cursor": {
          "ref": "c340c82e-f896-4d01-8113-cfe45d37a5d3",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e2afe6aa-a385-4106-a721-8fd5814da682"
        },
        "item": {
          "id": "ad1d570f-11a3-42e8-bc92-b19a062ebe2e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3d2ca7e9-bdf0-4529-8118-57cefe187f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac91acb-e1f0-4614-99c1-0b1ed372983e",
        "cursor": {
          "ref": "95f6039f-dfd8-4adf-8d20-51862badfc3b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4d095524-da49-48ca-b105-39b5596ea417"
        },
        "item": {
          "id": "0ac91acb-e1f0-4614-99c1-0b1ed372983e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "581036ee-f121-4105-9465-bc7f2b0040c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1f94fe-bdd5-417e-b2b7-be7ad610c72a",
        "cursor": {
          "ref": "974171ba-d123-41af-a1e8-a191fae6a872",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bffc5241-f45e-4f19-87fa-1e74ffb876a4"
        },
        "item": {
          "id": "9f1f94fe-bdd5-417e-b2b7-be7ad610c72a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "93c4b43c-c184-45ad-a076-47921bd1f397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d4c6d1-a3ed-42bc-8359-8b886df6eab5",
        "cursor": {
          "ref": "25d70ddf-030f-4bc0-bc05-d64591bc765f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b88446c-a572-4e12-8b8d-d6c32b24783c"
        },
        "item": {
          "id": "48d4c6d1-a3ed-42bc-8359-8b886df6eab5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ce720497-9d5a-4998-a837-6691d4e2de9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d98db6f-da22-4ee1-8922-c73c6d9ca16b",
        "cursor": {
          "ref": "6f66f59d-73b9-47e4-b649-2dad4ae98815",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "204fcb02-9e27-4a0f-bf1c-e44a0b0ab369"
        },
        "item": {
          "id": "3d98db6f-da22-4ee1-8922-c73c6d9ca16b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fd954810-dde2-40a9-848c-367f7faa16db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbea71a9-dce2-48f1-8f50-8a97dd803f4b",
        "cursor": {
          "ref": "568d2e41-5bd3-4bda-9324-c9d7418f0251",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f98d8197-96f0-40aa-a5f9-8ff28ecf99e7"
        },
        "item": {
          "id": "bbea71a9-dce2-48f1-8f50-8a97dd803f4b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "efaf48eb-8f75-4754-927b-cf0ab55dee0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9368417f-28ec-46fd-bda3-674502086c95",
        "cursor": {
          "ref": "fffaa0eb-f7e3-4fb9-bcd0-c23da302397e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ff52dfb5-2648-4aca-ba98-da917c08d3bf"
        },
        "item": {
          "id": "9368417f-28ec-46fd-bda3-674502086c95",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cd13956a-9c1b-490e-8693-c49d1ea656d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b9d2a4-c3ed-4862-9028-b28e95b7b011",
        "cursor": {
          "ref": "7f82bac5-a1f8-48ea-978b-306c332cb6ba",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cf2651af-3133-411a-9bfc-682726d65644"
        },
        "item": {
          "id": "76b9d2a4-c3ed-4862-9028-b28e95b7b011",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "64a44f21-be1f-4e51-b65f-d3b8cb655b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46604ffd-3e9e-42a9-bb14-e264e317839b",
        "cursor": {
          "ref": "c9fd8c7d-5a12-4570-9b90-b56bcae51416",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "49175d27-4da1-44e1-8ed7-df28571c8097"
        },
        "item": {
          "id": "46604ffd-3e9e-42a9-bb14-e264e317839b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2e4d10f2-e00e-4ed2-bc20-6cc43344b5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052dcf7b-da4a-40ea-9b26-3c000591703f",
        "cursor": {
          "ref": "25c1ebca-bbc6-44a4-b349-5d13c699493b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f43d897f-8c7b-40c2-b70f-f940e65f38a4"
        },
        "item": {
          "id": "052dcf7b-da4a-40ea-9b26-3c000591703f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5db4b19d-7000-4f53-bbe8-1bb5045a4fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7a16b4-5ac6-477d-9678-1c34a4a53190",
        "cursor": {
          "ref": "03d38a67-db71-4b5c-9937-072873a5f0e4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9c5b636f-f75c-438a-a122-7bbe39bdc444"
        },
        "item": {
          "id": "3c7a16b4-5ac6-477d-9678-1c34a4a53190",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "279e0e2b-1fa5-4d6c-9d90-cf578e25a7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd757f1c-3e5d-4602-a2c8-c31515116ac8",
        "cursor": {
          "ref": "aacd0410-a0ce-4ea5-bd6e-11f86aae1eb7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "09a4631c-8a08-49ec-9565-4d7544fd698a"
        },
        "item": {
          "id": "bd757f1c-3e5d-4602-a2c8-c31515116ac8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0bc8c051-716b-47d8-9576-d5d114acc9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a65d9b-0ccf-4a41-beeb-29b8344006af",
        "cursor": {
          "ref": "15b9b54a-6aab-4da3-bb4a-6321ad30f5dd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b0b784f3-9899-4da4-9a25-4852e35ce140"
        },
        "item": {
          "id": "69a65d9b-0ccf-4a41-beeb-29b8344006af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b378fd0-f892-436e-a5a9-5ee033b81cf0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f671fd2d-25a6-4cfe-a283-5f31f1b58d28",
        "cursor": {
          "ref": "760ab152-4f5a-404b-8967-28f1a6cb339f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d2db48e8-f648-4fa4-94d9-8b0e4bc02d08"
        },
        "item": {
          "id": "f671fd2d-25a6-4cfe-a283-5f31f1b58d28",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b6a94026-6935-46e8-a53f-2914d557d378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254040aa-16d4-4b00-bc7d-569f789f76c4",
        "cursor": {
          "ref": "b9295c0b-0755-45c0-9ddb-79aa323a63e0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ed69ea05-fda0-49fd-9625-e0969c8262a7"
        },
        "item": {
          "id": "254040aa-16d4-4b00-bc7d-569f789f76c4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d9bd65fe-c2a1-408e-9e8a-f1eaadea95a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b25c555-f441-47de-b245-fbe195af4433",
        "cursor": {
          "ref": "3771eb5e-258b-4d14-87ab-5d9b263540e9",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4c923856-1640-4e11-b4e5-ecd2932e64ab"
        },
        "item": {
          "id": "6b25c555-f441-47de-b245-fbe195af4433",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7bf0f826-b4b8-4255-8065-c88931ebb92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944f43cc-5f62-4401-a3a6-222580c8b61f",
        "cursor": {
          "ref": "44178f3b-7c0c-4a83-8850-f2c34f30da79",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6a4b4f7f-3901-40cd-ad2c-e0756a2f5593"
        },
        "item": {
          "id": "944f43cc-5f62-4401-a3a6-222580c8b61f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "839badb4-9260-46cb-b444-b9812b4506f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7929b8ae-21cb-4ae2-b336-de70ee174af6",
        "cursor": {
          "ref": "01bb20db-9618-4c30-ba47-1c9f82a20531",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d15082da-5ab9-4867-8f85-b756d7d812bf"
        },
        "item": {
          "id": "7929b8ae-21cb-4ae2-b336-de70ee174af6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "78c982d3-9c84-4f10-ba6c-9a09a8d99f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443cf0ca-334b-437a-8d90-363847ff3c20",
        "cursor": {
          "ref": "e286afc6-74cf-40e8-8f8c-157835a6eba0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "10b0110d-5bf7-4971-a5da-c90b9373f05f"
        },
        "item": {
          "id": "443cf0ca-334b-437a-8d90-363847ff3c20",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0d76abaa-c0fa-472a-a730-b06b7b3fc063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cdb932-071a-4f0e-9693-89fbc4d79b3c",
        "cursor": {
          "ref": "52beed95-fa47-4cfc-b899-ace8d7b715fa",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5f91d1fc-fd11-4483-adb5-65f0ab14c3a9"
        },
        "item": {
          "id": "37cdb932-071a-4f0e-9693-89fbc4d79b3c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "43fa3ed7-b1f9-4fcb-b96f-7bf9ec238937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b16a649-aca4-4b58-93a6-6ca8403e098e",
        "cursor": {
          "ref": "23384b99-0648-4244-87c7-7f6a967d7b03",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2b64269f-2d67-46ca-b3fd-308517f9f4c3"
        },
        "item": {
          "id": "0b16a649-aca4-4b58-93a6-6ca8403e098e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b6f30a32-20ac-460c-9da7-5e15977673c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4fb6ef-7e78-483b-9d25-96a06e00783c",
        "cursor": {
          "ref": "a6c7f803-ec44-4201-a6f6-4ccb1ce12802",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2aa62f66-d43e-4ab6-a388-5524bed65289"
        },
        "item": {
          "id": "2c4fb6ef-7e78-483b-9d25-96a06e00783c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f70af6f0-d637-4138-8247-dddaf7c7460f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3405217-2cc1-4dae-a160-596fa7bb64bb",
        "cursor": {
          "ref": "dfc2d337-dab0-49d4-9fc1-d06222035f8a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3eb44b45-99a5-45e4-b882-a85800c6507f"
        },
        "item": {
          "id": "c3405217-2cc1-4dae-a160-596fa7bb64bb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1aa54dbf-33d8-456e-b21e-1581058e2939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2731cef-1e3c-4ff6-b200-d25dd5d9938e",
        "cursor": {
          "ref": "b34aaeb8-f71e-4e83-9823-4a0293560ad1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "da9e813e-747f-48fb-a027-9417f850206c"
        },
        "item": {
          "id": "d2731cef-1e3c-4ff6-b200-d25dd5d9938e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "172a22e6-1c04-4781-ab19-4040c6e2d6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcb58e6-87c2-44d2-b97d-55f6db5856b8",
        "cursor": {
          "ref": "93ce763e-f722-4f4f-b552-534fcf6cb4f6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e3a17286-468c-4dcb-aa0b-4b9bbee16f3a"
        },
        "item": {
          "id": "afcb58e6-87c2-44d2-b97d-55f6db5856b8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "03688d30-e382-40cc-824d-e255d36e3fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5d0bcc-cf88-4ff2-a1d8-8906dc8fdd8d",
        "cursor": {
          "ref": "1dff29e3-e721-4ebf-8866-5ad8595b96dc",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "938e482a-e66e-4233-a04b-11ee2dbc4f14"
        },
        "item": {
          "id": "ef5d0bcc-cf88-4ff2-a1d8-8906dc8fdd8d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "032086ba-123e-423e-a5d0-e5a19adfabf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f636dd80-932d-4e77-b9ea-d71078f5990f",
        "cursor": {
          "ref": "8e3ba7e0-0101-4e6b-a3e2-460f144d2804",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4651378e-4f88-4d19-9f21-ed3b54c7a3cc"
        },
        "item": {
          "id": "f636dd80-932d-4e77-b9ea-d71078f5990f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f161b50f-220f-4617-8a30-881b851a5b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02340bd1-b978-4677-9255-174d1b238ae8",
        "cursor": {
          "ref": "fcc93fcd-94ae-4bca-8dd1-ddbb7b1f3a48",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "13672862-6992-4017-ac0f-ec3b7c6f8783"
        },
        "item": {
          "id": "02340bd1-b978-4677-9255-174d1b238ae8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fb0c3d11-2155-4b6b-9565-e10c200cd6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fa5104-a63e-4598-8697-701e8b8febee",
        "cursor": {
          "ref": "84e9b38e-7f24-4c13-86a6-f92e309ce701",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7c378a4e-41bf-464a-845e-dce57da149cf"
        },
        "item": {
          "id": "d7fa5104-a63e-4598-8697-701e8b8febee",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "df24abff-7656-4975-b7b6-48f0b142b2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa267c7-a586-4366-be41-4e172cb614a8",
        "cursor": {
          "ref": "920140e7-bd2b-456a-9492-8da59f6e0594",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "abf34f1f-6c66-4a67-8a7c-5b25b2348056"
        },
        "item": {
          "id": "efa267c7-a586-4366-be41-4e172cb614a8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e90d93e4-d937-44bf-872c-0173fe562ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d545c9-74bc-4e89-8b7c-741c8a478249",
        "cursor": {
          "ref": "c37ccba8-bd61-4bb3-aa5c-c95d0a9d91c0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "700e16a7-7a02-42df-be01-bef0e50acdbe"
        },
        "item": {
          "id": "29d545c9-74bc-4e89-8b7c-741c8a478249",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d9acd0c0-860d-4e9d-b96b-45da42c6f25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db57ccad-20fa-4d5a-b0aa-dbab17761c64",
        "cursor": {
          "ref": "22d8d9ce-f264-4f5e-93d2-51b472921519",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4db75d27-5c7c-46fe-afcb-e167999bc986"
        },
        "item": {
          "id": "db57ccad-20fa-4d5a-b0aa-dbab17761c64",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a7cdb41a-9e59-4198-84fe-8231706d9955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dafdd82-1cb9-4c1e-8f0b-81e45cfae03d",
        "cursor": {
          "ref": "f3969062-07f7-4bd6-b897-9a018a0bb6d4",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f9d23c53-5980-4a67-8c09-5de85a5adc7c"
        },
        "item": {
          "id": "0dafdd82-1cb9-4c1e-8f0b-81e45cfae03d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8998dcca-7083-4eaa-935b-8e578c60b653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beb9a5f-7c15-4982-a256-c39571470446",
        "cursor": {
          "ref": "21dde763-873d-40ea-ba96-fa70338747e5",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0a70e2be-4b9d-47a6-a5db-204b198130a0"
        },
        "item": {
          "id": "2beb9a5f-7c15-4982-a256-c39571470446",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6ae519fe-7f86-43e8-9d5f-1eef516624b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e843acfa-282c-4f58-b2aa-3fe974cbd4e1",
        "cursor": {
          "ref": "6f034d77-d715-4bdc-8457-b029a6ef9069",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0fa11521-6816-42b8-a208-c420067add5a"
        },
        "item": {
          "id": "e843acfa-282c-4f58-b2aa-3fe974cbd4e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "434d1cad-0ef9-41a6-b982-46fa7e76fd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fe9df4-a252-4700-b2cc-7a08ff7e5a0c",
        "cursor": {
          "ref": "926bd487-300d-481e-8944-d9c520177220",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c5f0da17-d505-4e2a-b816-7269ed54b190"
        },
        "item": {
          "id": "e2fe9df4-a252-4700-b2cc-7a08ff7e5a0c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a3d2789f-f9da-43a8-9332-81f3f3fe97e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aeb7ba-d64b-4815-baba-c4a56d3d7feb",
        "cursor": {
          "ref": "391d61da-8251-4fcb-9b63-86ff497e1d57",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "aa97a693-5739-4878-87a5-6b013ff33e4d"
        },
        "item": {
          "id": "05aeb7ba-d64b-4815-baba-c4a56d3d7feb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "919ed6d3-ea3e-42f5-b685-16b17ee8655e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636741d1-f9f5-432b-80bf-2510a4e61c2a",
        "cursor": {
          "ref": "60018eac-0228-4233-9bb1-8a6c0e52b943",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "43f8baba-a00c-4265-b295-44ba48057f54"
        },
        "item": {
          "id": "636741d1-f9f5-432b-80bf-2510a4e61c2a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a35e3eeb-a972-4fb9-b0c3-93e6f258f844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263211b8-f451-42e8-93c2-d66ea83d7741",
        "cursor": {
          "ref": "af5a2aa6-e2f4-4fb1-9b62-55f99d29d90b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5944b0ec-6ee6-40ee-963f-db37bbc5b7a7"
        },
        "item": {
          "id": "263211b8-f451-42e8-93c2-d66ea83d7741",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f3759b0c-2967-466a-af2a-aa76372f35de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f1ccb4-b8ae-49d5-936c-232a33dbbfd9",
        "cursor": {
          "ref": "6bc20a06-d3e9-4ff1-a197-9668f47fbbdf",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "45521652-6f8a-4360-aaf8-56bcf7f016d9"
        },
        "item": {
          "id": "d3f1ccb4-b8ae-49d5-936c-232a33dbbfd9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d81c9ae-dfb3-490e-ac43-e862daccec2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dff8aa7-a9ce-4568-bbb9-12246ccd39a7",
        "cursor": {
          "ref": "79b32faa-a79a-490e-a111-4156b206166c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "af6383bc-0856-4167-964d-777d06c5d5ae"
        },
        "item": {
          "id": "6dff8aa7-a9ce-4568-bbb9-12246ccd39a7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "049ac4ca-36dc-4db1-b58d-d0888a9fde89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be1a1c8-462c-45ab-b940-3bc90b49c64f",
        "cursor": {
          "ref": "cd87bad3-b6ca-43e6-930a-efbf57029130",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d53a8b72-efc7-4bae-87dc-e965d3763951"
        },
        "item": {
          "id": "5be1a1c8-462c-45ab-b940-3bc90b49c64f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c8fd4adc-701e-43c6-9d17-7794339a9870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2312193f-517b-44ea-844a-76027d41377f",
        "cursor": {
          "ref": "8f8743fb-00c2-4cce-bba9-5eb4c15f319b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d66af0bf-8b85-4ce1-9271-7681a06df1f2"
        },
        "item": {
          "id": "2312193f-517b-44ea-844a-76027d41377f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dfcb8928-8cac-4325-830e-f9e4adc504d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9468c814-ef28-4cc7-a102-dacd43392ecd",
        "cursor": {
          "ref": "3ce2a292-c352-459a-97ea-d994843ed40b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ab5a506e-ef55-4448-b149-03b3f6ed5a0e"
        },
        "item": {
          "id": "9468c814-ef28-4cc7-a102-dacd43392ecd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a487e071-69c7-4034-b1cd-5b8934b9813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fac115b-8fa7-43d1-87e1-6ad00173cec4",
        "cursor": {
          "ref": "23bd9beb-2018-4c38-9468-2cc5d1dd2a46",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ef2ec30b-b192-4bea-97e6-731e11835f54"
        },
        "item": {
          "id": "5fac115b-8fa7-43d1-87e1-6ad00173cec4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7b4fb4bc-5ff0-4b84-bb3c-10f7ffc2b80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad59392b-cfd4-4d72-8774-144a46fa2226",
        "cursor": {
          "ref": "f4634ffe-0e1a-497d-b686-328987f15c6f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7d91f10f-447f-48fc-93ca-10a8c735ab5c"
        },
        "item": {
          "id": "ad59392b-cfd4-4d72-8774-144a46fa2226",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7be42efd-c382-4b42-bdf3-4eb16b1e85e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238d6def-ddbe-4b56-9bd5-672f96547713",
        "cursor": {
          "ref": "d091fbce-1687-417b-a9ac-86cac2698728",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "33dd6e88-ebe0-48b1-b963-5718492c2cb2"
        },
        "item": {
          "id": "238d6def-ddbe-4b56-9bd5-672f96547713",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c2f7ee49-6c2f-4bd3-b108-5a22fe4d61c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2df67f-5c0e-4b3f-8d03-bff82a762ba1",
        "cursor": {
          "ref": "25760af4-ba5c-4399-a115-6ff4236c4291",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "08df1da9-c8b7-4701-8fe1-e98f7bc7d443"
        },
        "item": {
          "id": "3c2df67f-5c0e-4b3f-8d03-bff82a762ba1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b22c164e-ab83-4128-94de-5733f2fb9b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3710d48-abde-4686-b906-23f7f38e392d",
        "cursor": {
          "ref": "f9ae95cb-2d57-4530-9ec1-c4abe775349d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a9899a04-7c06-4c82-acbb-523ce5a7c386"
        },
        "item": {
          "id": "c3710d48-abde-4686-b906-23f7f38e392d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a49cd843-bc7d-4167-adcc-07fbf2054624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe25cf37-a649-41d0-91cb-61ce180ba5ea",
        "cursor": {
          "ref": "bb81bab6-6bf0-4a36-a21c-17268e3c0f6f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7de7d601-abb3-4e32-8cf9-c30c18a5e1ef"
        },
        "item": {
          "id": "fe25cf37-a649-41d0-91cb-61ce180ba5ea",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cac69523-99c7-4557-a369-a4efc8db9176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61fcb09-1b3c-48f7-bddf-c210b882a893",
        "cursor": {
          "ref": "460ba8e1-0e7c-4006-9440-f0038c8f533a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "37a0d479-9194-49a9-90d7-5b1dd96f7973"
        },
        "item": {
          "id": "c61fcb09-1b3c-48f7-bddf-c210b882a893",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b4c572c8-931a-4efb-a3a5-f7400d55e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7750d293-b7f8-46cd-ad33-9990e8be0eb6",
        "cursor": {
          "ref": "981a2531-16d5-4d84-b23b-bcf7ea35d06e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "85ab0e9f-e2c7-4e62-8212-891e3ef9e4c0"
        },
        "item": {
          "id": "7750d293-b7f8-46cd-ad33-9990e8be0eb6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2d36cbff-f60a-481f-b546-623a80fc1228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e956019-53e1-47db-9841-f1c1a43f872b",
        "cursor": {
          "ref": "89237784-c05b-496d-b28a-79574258e922",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4b9d8129-18af-403c-8dac-ab4a4c781acf"
        },
        "item": {
          "id": "9e956019-53e1-47db-9841-f1c1a43f872b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "30978d3e-2a8a-4b6d-855a-d6ad162df1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195cdcfb-42ef-459d-85e9-69e8037f1a2d",
        "cursor": {
          "ref": "0116e00d-387b-4692-b9ca-148a5df87ec0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4e2e4a35-094b-4053-aa7a-ba3af5c815d2"
        },
        "item": {
          "id": "195cdcfb-42ef-459d-85e9-69e8037f1a2d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "540e79d6-e24e-4873-ada0-45087428e772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f159a5d-fb83-4ca7-b48b-ed8336d84894",
        "cursor": {
          "ref": "026f0bbf-2211-4726-9fdd-57b1ccb311e8",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9695dfa9-a3ac-4859-934b-87c2bf6ea589"
        },
        "item": {
          "id": "7f159a5d-fb83-4ca7-b48b-ed8336d84894",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7d5cd8d7-a382-4222-b53b-72a7b64f2f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09383e7a-44b7-498e-9dc0-c320e8014612",
        "cursor": {
          "ref": "362d4229-a54f-4de9-8bcb-10d228987fcb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a07b2d74-9825-474d-9ff6-b1f31e927ab2"
        },
        "item": {
          "id": "09383e7a-44b7-498e-9dc0-c320e8014612",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f3e1ac38-c633-4508-b8f1-9665406c1604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba858694-110c-4f7b-9081-20c1147a5dec",
        "cursor": {
          "ref": "a9c03662-8e54-40ec-a9b7-5872ced2beba",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6b4bf061-b78c-4018-9654-88ee6fe4d7bb"
        },
        "item": {
          "id": "ba858694-110c-4f7b-9081-20c1147a5dec",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a1f27af5-4e96-42d8-97cc-1e03a0a92f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88315af4-ebaf-419f-90c2-5cd586cf25eb",
        "cursor": {
          "ref": "a8265c8b-c453-4dff-8415-a5b4e5f904a0",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "91a1509f-6b1e-4a55-aab2-b849edb55a12"
        },
        "item": {
          "id": "88315af4-ebaf-419f-90c2-5cd586cf25eb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f0384ed7-3860-4477-a40d-adc295a4342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dbf9df-7c69-4439-8bff-0ecd57f72d95",
        "cursor": {
          "ref": "1a853e81-6f7e-4942-8672-832d5a4a4f1a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5fad662e-fde1-47c5-9e02-e656cd7e7b63"
        },
        "item": {
          "id": "f3dbf9df-7c69-4439-8bff-0ecd57f72d95",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "84b296e7-f52c-4569-a97f-18940fe7d5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf00d78-4bdd-4243-9848-8ae9959c225c",
        "cursor": {
          "ref": "ec424e4d-76b6-4827-b742-9cf771f6c558",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "021f500f-1fd0-4605-b138-64f9fbc526ac"
        },
        "item": {
          "id": "0bf00d78-4bdd-4243-9848-8ae9959c225c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5dfc510a-76e5-4ba1-99d8-5e8e11d8f10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d0eb38-957a-48fa-b5bd-85dd8945e241",
        "cursor": {
          "ref": "6eab8670-ea6a-4f55-b171-427cf075e6cf",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3c51b1a9-25ac-4338-a979-abc09e680d02"
        },
        "item": {
          "id": "c0d0eb38-957a-48fa-b5bd-85dd8945e241",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "28317ef7-5fd1-4687-b23b-7aab2137d837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3453a-7538-4ed1-acf2-f1859c2c9d64",
        "cursor": {
          "ref": "b00c0d4d-4d63-424f-9680-0f07ae19bc3d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f9b782d8-3afe-49b1-9b76-1413e9da8724"
        },
        "item": {
          "id": "79c3453a-7538-4ed1-acf2-f1859c2c9d64",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fe7f4967-9169-472a-913d-ece1311dd7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdb125b-2966-4a34-85e4-7fee3c68126b",
        "cursor": {
          "ref": "f54e56ff-b3e8-4e29-b0fd-791770e7c068",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "62619e4b-63f3-4195-a261-a9bf6109714d"
        },
        "item": {
          "id": "cbdb125b-2966-4a34-85e4-7fee3c68126b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e6a07ebd-ede3-4a24-b675-0df047401ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2222bf8-7b2e-4f6d-841a-afcd0f8c3305",
        "cursor": {
          "ref": "cb64ea8c-a64a-4df8-ad82-d442b3428fba",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cc1a0509-0700-4d8c-9a82-487c955f2293"
        },
        "item": {
          "id": "f2222bf8-7b2e-4f6d-841a-afcd0f8c3305",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5d017216-c829-4501-b525-a979465c954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955e6b53-833b-4857-b48a-45ed01d03cdb",
        "cursor": {
          "ref": "e33175c1-cb77-4495-bd9d-0e7c345e8243",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "73171d8c-9fe7-4bec-aabf-18de1f94916a"
        },
        "item": {
          "id": "955e6b53-833b-4857-b48a-45ed01d03cdb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b2ec34bb-1fa1-4a39-901d-fd8b0bbffca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dba973-2232-432e-8a24-dd1f1a089f98",
        "cursor": {
          "ref": "2a16f75b-85f1-4d45-af01-5fac4c2961c1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3ff8b43b-4a2c-4394-bea5-b79695c7ff56"
        },
        "item": {
          "id": "25dba973-2232-432e-8a24-dd1f1a089f98",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3eb7a11b-d527-42e5-af32-82f5e087bb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78629bf6-0213-42cc-acb7-1dce35852c85",
        "cursor": {
          "ref": "dfdae396-0501-412b-99a8-6e1b619c044a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ee06540c-0aaf-40a6-8ce2-f4c5a36e2d16"
        },
        "item": {
          "id": "78629bf6-0213-42cc-acb7-1dce35852c85",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4528fcfd-73aa-4cb0-9ae4-80cc9c3f225b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85edb43e-1a19-46fc-8459-228c32457760",
        "cursor": {
          "ref": "80de5b4c-2316-4cad-88a0-180156f6c9e4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "51af9432-4dd3-444c-b952-3054208f236a"
        },
        "item": {
          "id": "85edb43e-1a19-46fc-8459-228c32457760",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d1ca4a5b-50e3-4d90-9497-951071e018bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecee65c-1e98-492f-9528-901027feef34",
        "cursor": {
          "ref": "c524db63-32a3-4a51-a1d0-7ab68b7024c8",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "45c1be9d-509b-4cfc-a20e-2df27be94a87"
        },
        "item": {
          "id": "7ecee65c-1e98-492f-9528-901027feef34",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "188ecea8-fb45-4ff6-a83f-2373523381bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad380d80-64e8-4b9b-b031-9cc8bf5b7027",
        "cursor": {
          "ref": "79885697-7efd-488e-8d12-20adeac26844",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "851007d0-419b-4b42-9001-d540e560d176"
        },
        "item": {
          "id": "ad380d80-64e8-4b9b-b031-9cc8bf5b7027",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "914870ff-542c-49dc-a9fe-c1c35c5b103c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffd6a7e-6cb1-490a-883c-6e7be40dc85d",
        "cursor": {
          "ref": "e1aa64b1-cf47-48f4-8de8-77d3f39174a9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "deecfd5a-93d5-4747-a846-b0b4fc466851"
        },
        "item": {
          "id": "0ffd6a7e-6cb1-490a-883c-6e7be40dc85d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ca40df85-0f0c-4d3d-9d96-d7766f0c1685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca0470b-7fe6-401b-a1f3-193e01830aed",
        "cursor": {
          "ref": "537c4ae5-79d7-4644-bb39-62a3820b456a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1acbd450-d6b9-4b89-9ad3-fdc611a7982d"
        },
        "item": {
          "id": "9ca0470b-7fe6-401b-a1f3-193e01830aed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b4971e58-8fd5-4c86-a70b-3c280ee45c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f737e3-2db1-42ef-941f-b713f97f7c19",
        "cursor": {
          "ref": "fffe9388-1743-45c9-9246-1a6d7ebe5b82",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "34746d76-f870-43f0-b867-d4561983f6ce"
        },
        "item": {
          "id": "56f737e3-2db1-42ef-941f-b713f97f7c19",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6c1098e8-b757-4876-b4e7-1eb992f34ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158775af-6ec6-40e5-acc2-a833a8a79111",
        "cursor": {
          "ref": "c1866410-5d68-4f14-ae2c-414abbc87772",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "78eb8066-fe57-41a8-bca6-d3b368041af8"
        },
        "item": {
          "id": "158775af-6ec6-40e5-acc2-a833a8a79111",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c029f610-d403-48c7-bb5a-f81e7747b637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269f3d17-1c92-4568-bb61-82182d4b7144",
        "cursor": {
          "ref": "af6fb107-f0b4-4399-9f5e-6e82d13e64fd",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "daa9c0df-69a9-4e8a-9ac1-eb243c3ad878"
        },
        "item": {
          "id": "269f3d17-1c92-4568-bb61-82182d4b7144",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "681f39b5-b411-4af7-95ff-fde858330fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bace89d-039e-4c02-8a8d-e4fa6bb9a29b",
        "cursor": {
          "ref": "9a3a04ca-2595-4198-b14e-0299a3dfb0b5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c62daf19-ad26-4b91-b30d-2558b6f1d6f5"
        },
        "item": {
          "id": "4bace89d-039e-4c02-8a8d-e4fa6bb9a29b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "745dba7d-8060-41ef-ba9d-37770bd0cd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f940e665-c21f-493c-b1c7-ea8e7365e411",
        "cursor": {
          "ref": "ed16df86-bf08-4849-8e2a-162129af17f9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9944b592-ac69-4beb-b076-0b25edbb59b2"
        },
        "item": {
          "id": "f940e665-c21f-493c-b1c7-ea8e7365e411",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "476968ee-e7fa-4b3f-afc0-9aa7b3954381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2c3231-27ac-4464-8b7b-d9bdecc64d7a",
        "cursor": {
          "ref": "42cbc3f1-95e4-4f00-bd4b-8ded84679731",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb64f4e3-f4c3-4177-9e83-44cf6ac79487"
        },
        "item": {
          "id": "1e2c3231-27ac-4464-8b7b-d9bdecc64d7a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "39c347fe-ad39-47ce-ba5d-fb4c03579d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e93aada-32d9-4cdc-9d6f-13f98eccde6a",
        "cursor": {
          "ref": "0762fb6b-e5a9-4121-b0eb-4d42aaf14b76",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7dc4e16a-2c50-4039-a77c-a27717e2c2f7"
        },
        "item": {
          "id": "8e93aada-32d9-4cdc-9d6f-13f98eccde6a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bc36e371-7b38-4190-985f-4f59306a6d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466dd9c5-9156-40ef-85c1-ad5e101cf8fb",
        "cursor": {
          "ref": "b62901ec-f604-45b1-9b21-da4a93eff8e8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a9b24c28-8925-4828-8b0e-df63883efc0b"
        },
        "item": {
          "id": "466dd9c5-9156-40ef-85c1-ad5e101cf8fb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6f7ec6a8-f154-4301-8b0d-c5a6d54752e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70830965-d68a-45f7-bedd-49e7c14b5d5c",
        "cursor": {
          "ref": "dfaa5082-2685-466b-95be-80372928a1e7",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fea6e73e-395d-4333-9cc6-ea695f78fe47"
        },
        "item": {
          "id": "70830965-d68a-45f7-bedd-49e7c14b5d5c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf6056d6-68ae-43fe-a24e-c5d36903aa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d8eeb6-efff-4d6b-b7aa-d2c8ac40e5d5",
        "cursor": {
          "ref": "45df6a48-3af0-42cc-821a-5a7321d7b576",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f039a717-e41e-4826-8996-be7bd92a4673"
        },
        "item": {
          "id": "07d8eeb6-efff-4d6b-b7aa-d2c8ac40e5d5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8e943a09-611f-4243-8e74-b72a448dcfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3200ab0f-2d9b-492a-8bac-667585b90f2e",
        "cursor": {
          "ref": "8ded8217-1ad3-462c-9c1c-3e445e585933",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "89115275-382e-4fb6-8a56-7759c07065a5"
        },
        "item": {
          "id": "3200ab0f-2d9b-492a-8bac-667585b90f2e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "124f2e45-9693-4a8c-b686-485fdd1cb00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aebf0ca-d2b2-4833-aa57-b91946d42e2c",
        "cursor": {
          "ref": "44cfbcc7-2546-4931-8ae1-ab3f4a224471",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "86ce6b25-b251-4b16-82d6-c5c18430636a"
        },
        "item": {
          "id": "2aebf0ca-d2b2-4833-aa57-b91946d42e2c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "86080bfb-d7c4-4d07-9999-53e2093f1f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51923950-de19-428d-a8c6-9915d356fbea",
        "cursor": {
          "ref": "f2f81f73-7980-4f52-95ec-d3f790550024",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "625553cf-71e0-43aa-8d7e-f7290fe95968"
        },
        "item": {
          "id": "51923950-de19-428d-a8c6-9915d356fbea",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "411cd07f-702f-4ac5-8529-422eac2e72fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b28f6a-99f0-43db-875d-c06a24405199",
        "cursor": {
          "ref": "9777aa45-2604-43fa-b915-9cc1ec2fec70",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "63ca768c-44f0-426e-97ee-29a7e522d721"
        },
        "item": {
          "id": "86b28f6a-99f0-43db-875d-c06a24405199",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "70e8190e-ff70-408a-a60d-1f3ebc50c816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f7ac92-6fde-4b74-9d8e-550b5edfecbf",
        "cursor": {
          "ref": "07b8e063-3e4a-4d69-82bb-4ca7d0c0eb25",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "987aebf4-57c9-4c21-b6bc-0a1fe286991b"
        },
        "item": {
          "id": "31f7ac92-6fde-4b74-9d8e-550b5edfecbf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bce14420-b5f7-464d-a67d-c52664d022af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0620d4d2-c40a-48fa-b1b4-9bd6977f182c",
        "cursor": {
          "ref": "34afb8b3-6288-4198-be52-d4f4e1fb6b1a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "48b1f256-3b16-40e9-ade6-948e683dfcb1"
        },
        "item": {
          "id": "0620d4d2-c40a-48fa-b1b4-9bd6977f182c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "db7a48e1-c1eb-4820-a279-e79afab7f97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ced061-5a58-4f9e-8f7b-8034c7e05d33",
        "cursor": {
          "ref": "f737a832-0056-45cf-b747-c1cae6743553",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a3ce3226-2e0e-4017-bda4-81b327d1734d"
        },
        "item": {
          "id": "f9ced061-5a58-4f9e-8f7b-8034c7e05d33",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4dcb277b-1c2f-4402-b588-76a8a812fd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04bc797-4b82-42e7-9c4a-3021a1d4c0aa",
        "cursor": {
          "ref": "8b1a8eae-0e63-4d2b-9fd2-d9bae8b13a0a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8e5ebc76-7c01-435a-ad85-eb48b78cc54e"
        },
        "item": {
          "id": "d04bc797-4b82-42e7-9c4a-3021a1d4c0aa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9b627d8e-3411-4619-acee-c23f38d1bb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738a7e09-ce24-443c-a331-e9bfa748ba88",
        "cursor": {
          "ref": "aeb7a01c-80b5-4f5c-bb4a-c2a66096df90",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1d1695ba-fc4b-49ff-a702-080313c31caa"
        },
        "item": {
          "id": "738a7e09-ce24-443c-a331-e9bfa748ba88",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "663f563b-7c13-451f-831e-a85d14bae5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2677ff47-435b-46bf-a9d2-3ca0e1942bde",
        "cursor": {
          "ref": "2a404ece-d2ea-4bd0-808b-bd705fa0e527",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4463cdc0-e51f-4f2d-a917-7f7566b6751c"
        },
        "item": {
          "id": "2677ff47-435b-46bf-a9d2-3ca0e1942bde",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a27800c4-e9ae-45fd-90e0-7a8d03456db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd691c2b-9f51-4ce3-8345-8e0e8b9e9c1c",
        "cursor": {
          "ref": "c9769cce-4cf2-4588-8e46-4968526a5b9e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cc8a693e-e70c-4af8-a0d8-2b4d8679702c"
        },
        "item": {
          "id": "dd691c2b-9f51-4ce3-8345-8e0e8b9e9c1c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1aa19b32-57b4-4499-8efb-df51edd50fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ef725d-c363-4fdd-9265-6752060c7512",
        "cursor": {
          "ref": "73a6f71a-7cfa-4d1e-827d-25f806a2cf88",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "48299f86-bd0c-43ea-b13b-a6d0810d75e1"
        },
        "item": {
          "id": "c2ef725d-c363-4fdd-9265-6752060c7512",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "311a5b8d-7932-45b2-a9ce-63bb09fb0899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff71582e-5979-4597-8bc2-88079e5a49e1",
        "cursor": {
          "ref": "45e83a08-6272-4367-abe2-b196ddfa9713",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e99abb4f-ff76-4c24-a5b5-ea73ab3cf8d1"
        },
        "item": {
          "id": "ff71582e-5979-4597-8bc2-88079e5a49e1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5072ee02-6430-4a0d-a302-983b613b9c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab79d8-241e-4802-97ab-5da5006acc54",
        "cursor": {
          "ref": "113a610c-74c5-41e8-9496-168d23811b02",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3229513d-5971-4d07-aa83-1d5681273de0"
        },
        "item": {
          "id": "e6ab79d8-241e-4802-97ab-5da5006acc54",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7e6992ef-692b-4ed5-afc8-8bdef969cbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafde54c-f444-407a-9518-db02db08ecf7",
        "cursor": {
          "ref": "4354f0a2-c1d0-4c03-a0ea-35d37d27c292",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ff82d13f-d495-4a4b-86e7-4988c00801d0"
        },
        "item": {
          "id": "dafde54c-f444-407a-9518-db02db08ecf7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b10cdc5b-5f71-4a98-996e-16c5abd74164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396295b8-9a32-4c87-b2c7-e1a8d8b09c86",
        "cursor": {
          "ref": "c4bc7dc0-6b54-4a40-883c-cbc0d5f74b49",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9c61c710-f1fd-4a47-bac7-6066714434b0"
        },
        "item": {
          "id": "396295b8-9a32-4c87-b2c7-e1a8d8b09c86",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f1b8faf9-f3fc-4d45-8e55-a4e6a1074f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f9833d-e9c0-4794-a164-8f220818da99",
        "cursor": {
          "ref": "763de0b1-4809-4c8d-bbff-01511cfb0f08",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1c124c94-58d5-4a9d-8f51-0d7acc63d333"
        },
        "item": {
          "id": "50f9833d-e9c0-4794-a164-8f220818da99",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fc99ce6a-6fd0-4880-9766-6aeaf4a0345a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7abbe39-8e26-42d4-9286-4a784db8147b",
        "cursor": {
          "ref": "3a28eb73-7ade-4b16-b320-5a6bb9b44f68",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "46e70f67-352f-449e-8f52-83fbeb57f5f6"
        },
        "item": {
          "id": "c7abbe39-8e26-42d4-9286-4a784db8147b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a67c3d03-2250-434c-a7cd-84f5f4806353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57b3587-7861-4ac7-8f4c-94bdcb83fc02",
        "cursor": {
          "ref": "a594bb2a-5f73-464a-90fc-9ad16dc03d91",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "783c55de-2434-4e5b-b3db-cf0994e16da4"
        },
        "item": {
          "id": "f57b3587-7861-4ac7-8f4c-94bdcb83fc02",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8af9eec9-ddb9-45af-8542-6205b562a213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ea1636-40f3-4c74-a15d-18a1f82d657e",
        "cursor": {
          "ref": "b525a7f4-9ac2-4302-adc3-b708cdde56dc",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1bb0788f-fcc1-45b7-a22c-5900d057a154"
        },
        "item": {
          "id": "f8ea1636-40f3-4c74-a15d-18a1f82d657e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e8eb045c-67cd-44bd-ad3f-34541a6b82ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3ac176-6266-46c9-b144-377c7b673c17",
        "cursor": {
          "ref": "b3dbdff9-889e-4dce-8fff-1909fa19c50b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e662bac4-2469-4219-aba2-b8fc1d12afcb"
        },
        "item": {
          "id": "7f3ac176-6266-46c9-b144-377c7b673c17",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e33037f9-741e-4d43-8c6b-59f71be0e33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65373c9b-01cb-400c-b5bb-3594b1bc0bf6",
        "cursor": {
          "ref": "0ba60066-1993-4b7c-bab1-103029675ebe",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d0e87aee-1122-43e8-8dfa-a748310ae9f2"
        },
        "item": {
          "id": "65373c9b-01cb-400c-b5bb-3594b1bc0bf6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "94f13341-4eb0-42b4-98de-71d60d8cb419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc87345b-d5a7-4411-b1b2-61e0db5903df",
        "cursor": {
          "ref": "391aa201-335a-4b79-9b85-59fe72889250",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0ecb435e-887a-40ab-bb96-e94700aea671"
        },
        "item": {
          "id": "dc87345b-d5a7-4411-b1b2-61e0db5903df",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "00603242-7192-4357-986e-7baf620f2ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44dd06a-51f4-4ba9-a300-6f0c27fee459",
        "cursor": {
          "ref": "67b745c4-0a54-4f11-a252-285416c395c3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "32678d80-d0d9-4569-bdc7-7e2ea24288a5"
        },
        "item": {
          "id": "a44dd06a-51f4-4ba9-a300-6f0c27fee459",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a62cf9e7-97e3-416b-8eb2-603bac0eb470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e1bff1-bf54-47aa-8e16-e4f0d4d8d3b2",
        "cursor": {
          "ref": "8d3d682e-1b6e-4c1f-8b1b-3e6fe7af4ea9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cf1fabce-fb02-404b-abf9-1594ea5ca8c4"
        },
        "item": {
          "id": "77e1bff1-bf54-47aa-8e16-e4f0d4d8d3b2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "45d44921-78a8-4d12-9387-3d62617a2c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065910f1-ac08-46c6-a270-e001b7d72ba5",
        "cursor": {
          "ref": "26a7da29-3d88-429a-89ec-3a656a39b9da",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "925cb36c-107d-4829-aacb-d5283374f8cf"
        },
        "item": {
          "id": "065910f1-ac08-46c6-a270-e001b7d72ba5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b6016c5c-815e-4db2-bf5e-657ddadc5fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02aca9e3-8f24-4c89-9d52-591022520d72",
        "cursor": {
          "ref": "a9bc2e8e-6100-4e96-a612-4e1383c0824b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9c7cea67-0e0c-4691-95e1-7e143de06371"
        },
        "item": {
          "id": "02aca9e3-8f24-4c89-9d52-591022520d72",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "20b699d0-b4a6-4014-ad81-6b29da54007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8ca022-e1b8-4328-a01b-d70a500cb684",
        "cursor": {
          "ref": "fb73fc94-8d04-4d62-8cba-cbda34ae5c04",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "422b6954-4184-4cab-977d-07e109a9818c"
        },
        "item": {
          "id": "dd8ca022-e1b8-4328-a01b-d70a500cb684",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bf1abe56-ea28-4b23-8db2-7913ae097705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde0e6ff-1fd2-441b-9a79-56cafdcee34f",
        "cursor": {
          "ref": "72a6b1a0-b37d-48de-b79c-0039c1c4d3e8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8f09f1db-6917-45eb-9adf-5474267e8c83"
        },
        "item": {
          "id": "fde0e6ff-1fd2-441b-9a79-56cafdcee34f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9a4a887a-8469-4265-be69-4742df749591",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8e8676-4a25-4f78-afb2-206883497ba1",
        "cursor": {
          "ref": "07f65cb7-a216-4049-afec-897ff11dc1e7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0e1e97bf-63c9-492a-a983-a084a2437de5"
        },
        "item": {
          "id": "1f8e8676-4a25-4f78-afb2-206883497ba1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5ea4ca1f-f243-4361-a550-6bfa7df5f24d",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e783996e-698f-471c-b1d0-5d6f1bb81ef2",
        "cursor": {
          "ref": "3199fdfc-ea8b-4c78-895f-a2e2f44d9786",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "29d59691-332e-432d-9928-8e33dbe11ec0"
        },
        "item": {
          "id": "e783996e-698f-471c-b1d0-5d6f1bb81ef2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e9636c2f-32eb-4eef-8dca-c7866d8a1097",
          "status": "OK",
          "code": 200,
          "responseTime": 1465,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23fc1fd-a11a-4325-a811-feb2eea1ed92",
        "cursor": {
          "ref": "cee1554c-1598-47b5-814b-3d42b58de651",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0c81dc4c-591a-40a3-b0fe-32b9edb1b877"
        },
        "item": {
          "id": "e23fc1fd-a11a-4325-a811-feb2eea1ed92",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "317a76b3-9c6c-482d-af36-a186f84098f8",
          "status": "OK",
          "code": 200,
          "responseTime": 1307,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf30035-7d07-4742-99f5-15d5634a9a24",
        "cursor": {
          "ref": "6e94127b-048c-4902-975e-b91443048072",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6f21603e-89c9-46db-bf74-a7d69d522dd1"
        },
        "item": {
          "id": "2bf30035-7d07-4742-99f5-15d5634a9a24",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3590921-13b8-47e1-b82a-bf9c705e6ab7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf30035-7d07-4742-99f5-15d5634a9a24",
        "cursor": {
          "ref": "6e94127b-048c-4902-975e-b91443048072",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6f21603e-89c9-46db-bf74-a7d69d522dd1"
        },
        "item": {
          "id": "2bf30035-7d07-4742-99f5-15d5634a9a24",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3590921-13b8-47e1-b82a-bf9c705e6ab7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbd4c3c-de65-4399-af9a-da60954bc47a",
        "cursor": {
          "ref": "3d5af765-07bd-40ad-a53c-e3f52c759450",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "15bf72ac-ab6a-4ab2-9a82-3f8200017b13"
        },
        "item": {
          "id": "2bbd4c3c-de65-4399-af9a-da60954bc47a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f1a9a820-2b1b-4f1e-943f-3bec2b10c464",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239e1d76-52af-436c-8d62-247a6fb3fd93",
        "cursor": {
          "ref": "45a0e8af-b828-415e-b8f6-d67ff5311a64",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d44bc903-f13f-481c-81bd-0902c789b3a2"
        },
        "item": {
          "id": "239e1d76-52af-436c-8d62-247a6fb3fd93",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "86b06ad8-4efe-4b67-9712-69aa0f059118",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}