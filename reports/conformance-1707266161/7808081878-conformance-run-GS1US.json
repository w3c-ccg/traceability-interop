{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "085c54f4-f54d-4308-b00b-468a19e21bb2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2faa9dd1-4222-4b1f-bbc6-4e18eaae0377",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85fa22d1-5cd5-48be-8251-c1a5bd802291",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8928d980-0d80-4cca-a839-7d35d301a9e9"
                }
              }
            ]
          },
          {
            "id": "af61ae3a-7487-45f0-ba23-24066a6f12af",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "425c49dd-ada2-4d68-947d-6157009f58a4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b06503f3-8903-428f-81e5-f0aeb332e77b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "72dfac48-0331-4e87-b840-d64032ca7912",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e8f7511e-97a1-47aa-a62f-d9901f7f67fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7bd13698-dd20-4462-b69f-fd01f7483a04",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77b236bd-c400-4ed3-a587-ca24ee66c90a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e516f59-beb5-4492-94e3-c15e95744490"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a5ae9db-2236-4962-8057-a0fd6a51fdc9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08abaf0f-5e00-4d30-ab18-42f9c26867ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a368acd-7b23-4c2b-85dc-82b55fa90b57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05f1c1eb-01bc-4efa-897c-d1820a54cb78"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "473995f5-3e15-4bc0-a1ab-d3f36217d0ca",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "28a4e115-607d-493c-8452-50c25170f511"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c1de271-9019-454b-9ef3-90f148c9c25b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "752fa9ee-fddf-48fc-8068-df57f45a441e"
            }
          }
        ]
      },
      {
        "id": "117835c4-00f5-4f9d-982c-c47526233249",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c0aa5bee-cde5-4581-8e92-4769989f764c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5c40605-7709-4355-8916-ef2ebc4f24c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e96b0677-f89b-4710-8f61-a1b3d56f92d3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db7d8d3-d01e-4e33-9714-22f121b8052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "540b861d-958f-4c19-8a85-61c928f7a511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205a0eda-d618-485b-81b6-485b94b3a9d2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d585fa-fd03-49e1-b08d-72f5c3c0405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dee5e32-467a-4802-bd86-8c12d77c4c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39a5526-04d3-4d9c-a5fd-671a454ca654",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2b6f96-de39-4a53-aaa3-c308d83a9cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b91502e-f360-42d8-aaab-38a1f8e822ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1872217-10ec-4ec6-9290-8d1431051ab1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9efa3eab-8d33-44ea-b0d5-d0ed32d90fb9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896a9d19-4bf0-4a10-8191-7c33f9b5e4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34f89846-fab3-407a-a225-af05a417d5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b7c955-dfca-4ad9-be21-30160b512b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7820cc-31fe-427b-add8-c4e65435d86d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17b5256d-2941-4f84-a95c-6a733d64ff8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "541253e3-58fb-4e8e-9320-238c69a22523",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d166fd73-3e2b-457a-8b14-045b36ad8fe3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2fc084df-cd18-486a-894f-22dd336cb298"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c4da313-ab33-41f4-b672-1f54f7afa99b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e0a6fefb-789b-4263-86d9-5a8c3531a42e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bbf9c94-6b8d-4499-8df7-ae9dbcab98ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b382a9d9-ceb9-48e2-966d-d42ee9f5b19e"
            }
          }
        ]
      },
      {
        "id": "db90c4dd-8a4c-4700-8b22-b542d1ca3c65",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "01e8a2ac-f3fc-4a9b-9fe3-cccaa96202c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42cb9970-a71e-442c-b97b-6b6f8a8813e0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6f619001-b98b-4ef2-9653-2d59f6088388",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72cc149-9eaf-4ba9-bbad-e9033e20d379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ee19cb-65a3-44a9-a76a-646088297778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1a0205-dcba-42da-a9e2-70e52f275477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd2de1ec-d96c-4fe5-8548-f6883928014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67828895-5721-4f68-92a9-7da1f44f2c50",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3f6ee6-699c-4e29-a59f-9d101313a93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c677de6b-bbad-4243-9354-8115b3e40dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6969c7-5a03-4a1e-8125-6d7341b80ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d581085-fdad-4a9f-8ba7-f2920fb50581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3a4b52-cf71-465f-b5e3-d665cdad9536",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725dfe8f-c44d-42e7-8fb6-89cf668d5e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13674d7-7378-4625-9cbb-c8e903a07e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9573302d-abe4-424d-b07e-8935cdc47bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43e161f5-1696-4c3d-8d99-6f35347ed4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f957d0-f2c5-411c-9f2a-b72d8365a36e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d77632-22a7-418b-9350-284ddf6e60bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93eb2b1d-470d-4173-96ea-3e26d43c72d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470a56c3-3159-48c7-b8b1-1bbd1b673c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fb76c35-dc0c-43e2-829a-277a489152d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9f649b-d8c2-4792-92d9-d6973017e66e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde1596d-9314-4104-9f86-2d8c68c2120a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14ceecd-32f1-47e0-9721-8f7b8db83936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deb894b-0cfe-4ff2-b055-1832acbfc204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c632bd62-65ba-456a-8c3c-4c909f654b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87836d63-f02a-46f6-a0e1-d6c340e21553",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067f8bf3-3eeb-446e-a23c-7ad26119e6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d5c61d-b686-442d-a687-8ee946e615d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7278177-3fb5-433d-9f4f-8482a39bcf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99f7834b-76ba-46c1-8268-b6fcbc421eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9729ffa8-ab6c-4c78-89ce-8d7cc425f563",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e453e7-bd43-40a8-abb7-42c98088e0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfa14e9-98eb-4122-ab5b-ffc456027ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccc4b33-555a-40e0-b24e-2e96d7dd8533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eb97d75-2b6f-4ca9-9dab-e359938d0dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d3f39d-e7e6-4a58-b588-709d88787856",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3929d7c3-0ca5-4893-b9ed-3ae9c77df114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce2d434-e858-420e-a9e2-ebb089c5d21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3ccb17-8bb0-413a-a138-50b6d7fd838d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "914a93d5-5391-4546-84a7-b6ca6e0aed06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8b6ad2-9b98-4ba9-aeed-981417a0152e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dbf84f-5775-4d63-bb8f-c4ed2f4f5394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01888f2f-cea9-4cf6-9140-5128eb62fb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fa90ba-b322-4565-b83b-8dfff6cf43d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8e83ea0-d997-448e-a034-daf03042d4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97075aca-161a-44dd-8473-4f16b80000d8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cd613a-74bf-4ffb-a864-3a6e357ec346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c785d862-da74-4434-997a-03f0c7fe4333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae4d234-40ea-4fe8-bce7-a94d4b24d04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca4e4f13-3e47-4195-a7ac-53a027d8a9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f641b58-ab23-4458-bd16-dd634f7f19b4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20ad77a-ef70-4bb9-b089-7daf4e0671a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08185d5b-5715-4a42-894c-4d9fea9f8e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60337793-510e-4e2d-a994-ebf33cd8bee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b385a97b-7159-4bc1-a062-fb77514b5b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501c66ea-f900-4be6-9c8c-25d61b2903e4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c3988b-8311-4f17-8a1c-2729bf136b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3898ca1-d0cc-47b1-856c-5bc49a1dc7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7b8d6d-0d1c-404f-93c0-80f2a62625b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "076d2994-131e-4060-bc17-875edb8ab4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e676499-4f2e-4736-a1a9-66f93f026217",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe89a37-1785-45e8-8525-f2eb1e551293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57a91c1-70b5-4883-a0cb-f2cf28cb2343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd11642f-b3da-45b2-9bbf-8cfc9e3a8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb8c91ac-3f41-43ea-94a7-4c831e350209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e894664-ffb3-4900-a6ba-bb318c4d3e3c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e77d50-5a7d-4779-9be9-2ebf52cdf219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99e6ab3-a0a0-4347-81dd-00bac8024731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67809a30-b5f6-47b1-a1d3-bf6bfe143662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37d5fede-1b18-437c-a53d-55e7ecb2b576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7438fa08-d353-460d-a475-8dd716cf1152",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d2d77f-7bf0-4110-a5cc-4ae746c76f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b2461-a993-4f5e-b077-132fcabac7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d821b6-7b7f-46d3-8941-e6dbf2b0146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54065624-c2c7-4b9f-b8d1-3acfbbf1597d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f0cc3c-631b-4ebe-bb25-cfbb9db9691b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b16ebc-05bc-4e7b-93eb-b9be9cf01b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43116389-cc98-426d-bf00-991050f3d2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b5c84d-a723-4744-ab7c-7a4e1a9944ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f22a6ae-9df0-4ef0-9e08-0eff1ebe574f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197f79b5-44e8-404e-af77-e66755c9233f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77247e0-06f7-44e5-822a-2fa5d8b9c3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc65fd57-4e7e-4623-8eb9-1ac7cdb48f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2701089-88fa-485c-b175-9024ffa14334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41d0cc8a-eab7-4292-9e92-963a826f2619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea042c37-e8e3-4c4b-8325-b521fe1fdd0d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143dca61-756d-448a-a2aa-ae587400fae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447d8c9d-abfc-4801-9162-3fe059bac2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2147fd-4548-4c98-af1d-47cb9c665d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3693e9a-bbf3-40f8-b59d-74cf5e1fbf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b2dd8-bf80-47dc-aea0-55f3f54b62d0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe795f8f-07a9-47e3-b8a5-d474596b6985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38af4735-da4e-4209-bada-509147f4438b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3546924-bb6e-41b0-ba54-aa3c2f22a5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c5a15c-41cb-47e8-b1e6-177aa7bb2ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8812e45-4b1b-4668-b0d9-4b7118ab1421",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab59fee7-94a5-4837-9df1-a4ad3a30b006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761a6a46-2252-4d7f-aa42-702ab6ae7def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379768bf-6818-420a-96ea-99448688f475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7351284-b9a0-4124-b80a-ba2b523747ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497b510e-5db6-4431-a2a3-cd12eac845b3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c56ad10-6484-4014-b5d6-6e6d241aae5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650cdc75-ab76-4123-8a18-a983e41b3983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197765e9-b680-49c6-ba01-f5a181408dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0583af2b-0868-466a-8d76-e455ddef5922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43527f9-9fa9-458e-9496-e32de851ecd2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c65d95c-2a5a-4422-8eac-8ae12bb07924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412152e4-2e1a-4f94-ae59-42a27356c378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa987881-4e26-4a44-83bd-c2cf9ab5c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2133b46-6465-4efd-8d45-6ff415f6e3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f525f8-5a99-4202-aa86-5795edcdbc8a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacbcaee-f112-4d09-ab9e-15ae518686e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492408b9-b89b-43bf-a9a0-4b7ed5f85545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5d9a55-00f6-40ee-a9f1-936686cbf376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a617f1-abc3-4d17-9463-9132567b3ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b5fcd4-606b-4b4b-9ae4-ec79c0b09140",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd578249-c55d-407f-99d0-38a74f464832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910545ff-d03f-4f36-92f3-762fdf65ca50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1c9713-af69-4abc-8c0f-6d80d25573c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1cbc63-f672-4d1c-8f57-57c396b2f5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477ef71e-0956-4f1a-ba06-2d7d22627727",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537f4384-421e-49ea-8a8f-2f487b852d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b6fd1b-edff-49b3-8094-439a8d7dd668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f0497a-cd34-4e39-aaa0-a40124c85cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa684b1-d9e6-4ed7-83a6-717bc3c3bc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09f0a1c-78e8-473a-8629-351656620bb1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bb5053-b6ad-47db-ad5d-4ed5ada97e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798d96d3-8d76-461b-9c83-5f2aa1ad3aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79125d2d-bf3b-46f3-8306-a3362b07eee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3ba994-2c1e-4b54-ab62-09a116085803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6f5ad2-6258-4ab0-b3c0-f448c5e1d0bb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a385a62-c9e7-448a-9a5e-aa4a3a1558f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7992d8-bf40-450d-ac81-aa98fa838322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3824bb-a8c9-4d20-8a9b-fb568f97beea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b8df29-f5a0-4b90-8ffc-f5447491f67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45abeeea-1a99-4c47-a55a-011427157f3d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a479c9-be68-47f0-b85d-553606dcb812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cb8ec9-a86b-4bac-bcd9-b1f3b8e46b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b64b3f-6068-4e1b-89c5-31478c0814ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bff59f3-43f2-44bb-a386-9fd3c30a3ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d4ef75-f0ea-4fe0-a6ac-c6500958b25f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9139deed-d0e8-4297-ab62-36e2c5e7714b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b6a598-aebd-4bf9-93fe-344363ca84f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8573151e-241b-476f-9a2b-6498f156cab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9979b0-95c8-469b-97d8-4d5ea1ed3da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f09abe8-ec0c-42cb-97ff-bb995da02190",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a27bf9-a044-4a39-9cb5-3777b6bd5caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855d91e4-ca9b-418f-885c-96dc918c6033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2b897f-9dc3-4b18-b137-c336d56c4f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c9993c-240f-4c50-a315-efe75f459d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6821ad9d-b8ee-43db-bc1d-508820fa4156",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a905ec19-2e98-4d6a-b38a-027dcdde2b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01298642-475b-4204-bbbc-2c1c97c27ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c50d70-b247-45a6-9d0a-fc7733a1d5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "348c3a3a-c367-45a4-84e1-f4cbc1cb1672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef32d97b-164c-405f-9d50-c3d340d74034",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fb1a9c-9f88-4333-b07d-b75ca59f7b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53ccd07-6778-4cbe-acf1-91204e941bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85ca60e-54f5-46ef-8146-6777bab2c68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1858112f-8a43-4731-8720-59aca5b2b780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7467c099-106f-4e37-baa0-224a41a7d6df",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f275d302-9c1a-456a-8a31-7807f7c17e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11159f24-87ce-4b5b-90d8-0cfa5a3c62c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c98214-2b52-47cf-a86b-e70a4d637d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3f5556-5290-4c4b-a59f-892c32e11f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43a84e6-f16c-4055-91c9-d631483fe6a2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b7739b-fc78-40a4-9ee6-10b22effc62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32609742-1fc3-456c-a90c-07dd814eb726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789a9a5d-bb8c-4a45-821c-7d2a331ac0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "453fef0c-c01c-469e-bbf3-3c2bb49e12ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97f24df-d321-4691-a722-165e6e166c11",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a99b370-958f-4b05-b83c-279481f98645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484b23ac-6f12-4b5f-bc86-6bb59e22b745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e174f11c-6739-4e13-b58e-8a374b026e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "439d40f8-8774-41ac-baee-2a1de16bbfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b933e0-49b7-475f-9e9a-37167686c5cb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e0990c-0f2b-487c-9b45-f6f92ea6f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b26e39f-e736-4ac2-b654-03b470d4f8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc9e750-83f9-424b-a8dd-c2df266dedb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3610867-d4a3-41d9-9671-39c2ae8f233f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24580766-8601-4f4b-8fa7-b2de8b861ecc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e98044f-48a5-4b88-a772-1ca540d89ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d81902-91c8-46b5-8910-1e20094541d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7b2025-a2ac-45b9-92a5-f4557291da14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb435785-4bad-4748-843b-1d8b4ca0ee73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322f3d28-8df7-4d0c-bdbc-a12a5e46ef5b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90454a43-cc64-48fe-94e5-c39a29e88067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85322876-a4af-4336-8d64-480ee22e1098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69104b5-ed40-47fd-95de-8a97a80f991e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f2bb15-686f-4b50-924b-3cec0f13b814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2378c6-7b06-49b2-bc14-aeb9e0267fe7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0417e75-f312-4c8b-b5b0-12c590ecbe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9925ff14-431a-4d4f-b322-f9ca211f9987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9048e88-41c5-4727-b472-a95a14806f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfca8631-6c20-47cd-a4ef-477c15a547a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6c0b97-d3fa-4f6b-96ee-5ba0859a1796",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86a8476-11af-48af-a9ea-fc6e20516ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ffefbd-54c6-4008-9e01-30b7af815d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aa7219-b942-41dd-9d73-41a9c9699762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9286a737-04dc-496c-9b60-2d68b907941a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8df3d6-c654-4ed7-8c4d-101adb1fcc2a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dc83b2-b522-4927-81fc-2042ec5ddb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231b2eb1-e187-4fb2-b899-dbb8f92b1700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac136e3-3959-4477-8e80-f4480556fdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3adc92-1eff-49c9-9e01-a892b21713aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd1e172-8446-418e-97ae-4d2138cb4bc4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e03db4-270d-492c-b322-94f0d8c030b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb92767-9b02-4c6f-81cd-249019d4905d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364b1b63-501b-4fa4-9d0f-3aac5d9b7837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "383496a7-7fb4-4e24-a84d-bd1ad3a46b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde692d7-2327-487d-a99b-8cd2b954d95b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d224774-1669-4d86-ab28-9440fae8e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81110a7-5d19-4c7e-9777-5b85c2a1d1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de1c285-ea9a-4d41-945a-3c5b83c3c6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "056b51ef-2fe1-4d9d-8dda-1f1865e4d129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2946117-9aa6-441b-95e1-0804560aeed1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41f90a8-6722-457f-8e10-f031b4bf6aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f40104f-e2f2-446a-a382-4e44d9388c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f143ad4-29ce-4ae8-ad63-e1b3bfc1ddf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca9e024-fef3-4748-a79e-05e79446b0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2d223b-9a20-470d-94cb-1bf30f21b304",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd0121d-3833-41f4-92f7-87c78b9e308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05dcda7-9122-424e-b715-facbed048175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53e8df2-4f91-4a76-b957-97b61ebc2547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc20027-8a11-4849-8709-c57ce6185691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393960f1-dffc-402a-a11b-e390bfe4719c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5e6793-5ffb-46a2-9f25-96dc9498aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22856204-3865-460c-8986-4519346895ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16667dd6-e6b6-4d39-8e27-4e9775468a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc110ef-5863-46cb-8765-d55c6fb3f9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3869c52e-4caf-4e29-8f45-cf889e3b8a93",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23728559-02a1-4e07-b829-7ff0d5958657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a62c2f5-5ec7-40fa-847a-e7c08f16c921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d44062-16c0-4868-9773-2583107d8068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "861f30de-20c1-4f9f-a50c-93b7d88c2449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f57b4e-324d-4258-a993-f410fe161b4d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da3f44-4e37-4c52-83a6-29af5fa8f44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62e05ce-0619-4a8b-ab04-80dc64c10fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4735ec-97f1-489b-809d-2e7e6d77de4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51554cf5-47fb-48ee-8b61-a087793e6ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6fe19-ff25-4b2e-89a3-ab0c6370a7ea",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94299226-c1c1-4c72-bbb2-de26d30932d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bb04d3-5aae-437b-a61a-c5084224c02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28718ed9-086a-4a48-9aad-6d6ef94e624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fde6cd9-cf32-441d-b318-ebb9984f7ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc91c37-d194-4e5e-9ab1-9634ae2a626a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002d624b-3e80-4631-83cd-5141919190a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8895fa07-b2e0-40fd-9b29-126b9bd30fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aff9e8d-c008-45f8-a237-4668d51e2644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc51e019-2c43-4c3a-a40c-96cc013c6994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83fc068-2553-4ab3-8c25-ac11d6931de0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00885cce-88cf-4b14-a889-6d8ff4ceab2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4431304-e9e1-4eeb-aa42-2f12387311b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5f44ad-7d57-49c9-8e62-36e42674ea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "09be8942-7c1f-49ff-8a03-ac26407a2ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b595e2-4996-4460-8c0b-adb12a72b5f6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc50ad2-c848-4fa0-b74b-9b58ae22acf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96cba29-fda9-41a6-9e90-dcbfbf5fd483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169ab67b-76a5-4e14-a291-aeff83d0d704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6985511f-27bc-4fae-81b4-d6a996b1e356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3a95b0-aefd-456d-b523-917c31722621",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb21e38-ba50-4f37-8aba-b5d56577300e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa323a68-01c3-4bc1-a2ee-3829d6716e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac00da46-1525-4286-a6f5-f8fba1e49bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8a8c02-a147-4299-8448-d4c7fb60c21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ade82f-803a-4a30-b9d0-e44f4aad18d1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c956a9-3287-406c-a586-681084999522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6fa7f9-56cc-41e5-84ca-2cf6b5ecb26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2bc559-5baa-490f-8cb4-d17ef27e8cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0158e1a3-0268-4e8c-a563-d7f528d5c496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1322b828-0529-42d0-aec4-71a32d604a70",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1146e7-b834-4ced-81c1-56c633cdf841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f059f4-9e16-42f8-8d8a-09216fb1175a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97347f71-9465-4587-a3c0-3672aaef2131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0390e6-5599-4227-9775-03bacc10a1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92615bfa-7335-43d8-9c00-fcd13e1d0f81",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e78659-997b-4fa9-8e34-7835ed01096f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205ccd53-cf31-4356-996b-8135dc732093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aeea473-dbcb-4524-9f7f-506e3188c9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2579a175-e053-4e83-8ca5-7902f5b691b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec4fda3-c9a4-4b5a-b1d8-06becb238a42",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c62529-7b4b-4933-b631-7fa96472ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6f6c4b-5d8e-4689-b9fd-780805ac8140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8208378-3d2a-4ed0-8fc7-12313ee1553d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c319651d-64de-470e-b722-6048ba9b0716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7465e9-ce22-4490-aa3c-13f334f43e6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc57535a-38e7-49e0-a7fd-e37c8ae1131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b19114-ad25-42b0-874d-139608d47945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5304f2ea-f640-4298-ab0b-ad354b6adfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e95d41e-814e-4a67-b544-e45f5e142e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99fc8bf-f7a1-4208-860a-74b71c784916",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275f0515-ee14-45ae-b9d0-02015b05817a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042af7f4-f851-4955-be81-9d6f3b68a571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfce094-0e8a-470c-b7ef-e3d9dab5aace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d745d8fc-8035-4c65-b749-1d9799392b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81f999e-ede2-4218-ad3f-a9ab7531f7c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062112e1-7f95-4522-863e-75f57248cec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc3e4c3-964f-4f14-9af1-6b07b9ef10a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7ca02c-0d92-459a-8ea3-8995ff955bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c20fd7b2-6a5d-4c05-a5ca-a8deeae4e0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad63026f-8a98-40cd-9973-4b9e913a421c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38f4836-ca17-4c2c-a1da-8241fade97bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c25b69e-f92a-475e-b514-312b2f0dba2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de90505-d1f9-458d-ad40-0c9bcb86287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dccc7c54-097e-4059-9659-40abc12b6a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0464c7-f2a2-4faf-a03e-2d5b2e1980d8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f44fefb-fdac-41c9-9f8d-36294170a20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affe5160-43bf-4fae-a51f-31954fb33300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0d9a39-3561-4d8c-a7ed-1e158a2d68f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5981ed37-30ee-496d-80f6-38f556ab4ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6043c0e5-7422-49b0-9e47-c85c7515142d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f5d109-0ef7-463e-8fcb-aa8f4ab27ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134b5456-69a4-46d8-9fe7-7de2f799a549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2d28d4-64f5-444b-b509-decfc9ea071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9712e779-00bd-41c0-822b-b7995fb38a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5991a113-fd9d-4223-aade-39ad6d7784f9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8412418a-3cdc-4042-8d3a-2007c9ac46a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143ec311-302d-4d8d-9652-562c7dc1c1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbcb1f4-888d-46e5-94a1-3450e3f609ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b492b0a-871f-4b60-8165-89514cc67674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af173263-7e00-4b0b-a84e-be196e26d6c2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e8d194-bbdc-46c6-858c-538d2ec9c20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749ef2e5-f7c1-4291-8e4b-9ebc846b48cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75776df8-3f1c-410d-826b-e0ee46fdf4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a79f3a5-e3bf-4321-bd5e-ede3a69357f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe10957-1610-4aed-84d2-533bc4b6f53a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29a9564-aab6-4811-9cbf-886af302d087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e793d16e-fdd9-41da-8d5c-413aab249797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9cd874-9ddc-426a-8bfe-3c2630177e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf73c6a-0e65-405b-9a81-4d5d4e705488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009e1883-9305-47ce-aa90-f9973130498a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71e3c89-d8c1-416a-b96c-1dab78d845ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa121f93-c6ec-4000-97e6-d08c592dfef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2444b314-0a21-4b96-a06c-3feb32723884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db8307b5-ab7a-4323-9827-8919b1994211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4d1be6-ec28-4515-a3eb-5eb777423614",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce821286-28e5-4a54-95ba-5e1efce85836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760e21a8-265f-4cbe-b40a-3c656aac9ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49b1255-f7ce-47f1-8cf2-59ceb1b5c687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d44adc-e863-47f1-9321-034b7b3d6de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33aba6a-6623-4ed4-bbf6-b091014f01a7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9d6dbe-4626-4b4e-92df-6dd24a51294f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43361c7-f0b2-4d9d-8070-fbd30f54b3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ceec43-2f08-48d8-b722-bd81475cc657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e383c34e-92ef-41d6-b8c2-3cb7c68ac3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f9ceb7-5ff5-45b2-956c-05ae52cc2772",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dac6b39-8013-4420-b968-3bb36bb43c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e2eac3-25ff-4a9b-b4b6-8fa37c36de14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de58cffd-1e49-4bc2-a930-7947cf1c31b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9aeefc-a5ad-4e4c-9c6a-9e33219db112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f55a26b-831c-423a-9123-1a8a29fa8056",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46353a0-8597-40c2-9996-aa6d145086e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2da8ac-2d1a-4094-869b-d1c77a5a75fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13fda6a-ea7e-4c74-b43b-df0af792a3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "824fb509-b33e-4552-af11-9af6ed51ed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8047f0db-ada1-4562-8b15-c77c3d4e3efa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d4dc1d-89bd-4a5c-9d18-9f5ac60496f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e8e3c1-7b56-4b97-b96d-94f257b1b859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33df77d9-d5eb-474e-b04d-d302d230208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0052f3-7e25-4ad6-ac25-302731911a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aaae3e-4ef1-4851-9fb8-b4ee82f8a6df",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67763411-d9fe-4e82-bb58-c7fdc305075c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762dafbe-64cd-46a6-a179-c55bc330f48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a95ad6a-f63d-45c4-8257-3a7ed4bc654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "835be40f-3f44-4fea-9a94-78df8a373c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96412dd2-f8ea-4b78-9a76-e5912a339bc0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58633be4-b438-42ed-b953-a7dee5d11ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc0f82e-bb08-47bf-9e68-7a19eb708975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c777cd-9052-4f6a-8d65-9901d142f620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "006c8a7e-5f43-4cf7-8623-d625184631e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987e0fda-9ac5-491d-a2a1-eb3210257912",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9c7aac-8ce4-406f-a4ad-819678961034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e26904-de0a-4c39-b002-290a6ebd7058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf1c540-7da7-4dc1-90d8-b051507a8367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99bc33df-0c75-4b13-bc82-d87d6b0eb13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01123922-ccc0-4c31-a14f-d9a65e177755",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2f6427-6043-4584-8f2b-60515d9b285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0774441-45af-4285-9779-2f40d8c82dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b17b629-db99-415d-b2ef-abf6342277de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2442cc2-46e0-4147-bd2a-31f5776cd68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21eadc88-ba74-4111-8fda-9ca73266dc5b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364e60ae-37a2-4a76-8216-9f2b6bdfef23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d971952-0439-4b09-8633-156e993476d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2461485-8655-443b-b7ce-93b4bc4b73e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92bccbca-4411-4c40-9f09-8848494f7c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb35dd6-298b-4a55-94f1-9c921eda511b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02f43a6-8386-4815-8e21-706c8adedb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2380fc51-79c8-4534-9d87-086a55d32207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4cc3cb-d2d2-40c1-9b26-372769c1675e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9c00d8-85ce-49e7-ade0-48482fa94404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6392d5c6-517d-4198-b95d-8d00b276d2d6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8d2d95-9e35-4d2f-9c2a-208ecd1e4420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380e6f0c-8799-4e6e-9320-2e699cf10448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99760928-b766-4398-a90d-96ea3f0c8952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb4fca1-37c9-474d-9b18-6f55c03d8dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47fa6d4-0361-439d-928d-3caefc69ef49",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b48dc2-3afd-48c4-aaae-bd000d1772d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e42c11f-dafa-4a7d-9fee-ab51572b3c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8992913-a77a-4770-80d4-f07ee4f797d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a475cb8e-bcb8-4706-95d0-c8ad1650f271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b24c6b8-dbe0-4b8a-8f37-284884fcf039",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5beb6355-c4d4-48db-964e-5e4b8c0e5916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bace525-58c4-49c8-b8fa-c6ae01826166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf33f33-c8b0-4b48-821a-dbb431d1beb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5304b817-e7a3-4f00-b9c5-ce575d818506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f75915-aefe-4871-b22a-aef4f89a50de",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552c2e2a-8bd3-4234-8cca-2b3c0847720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3490b86b-c99c-4665-9087-a599366fa5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55090cd0-11b1-41ae-a722-6e6ffa320d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de229d77-92a9-462c-b4a3-4fc334c6c2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f9c4a5-8e91-41f4-ab2f-4c72470ccf6c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fcc6d4-a7e9-44f6-a6c3-268073dffe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cedd4b-6036-490d-a5be-0a52329b4d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605d34ce-f2f6-4030-b230-ec3b6d294d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16601509-a933-4ea5-8035-201ebf57d82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4118fd-6583-46f5-afd0-a2aef679e162",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0180197-1523-4969-9705-bdf12cdbbdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62202507-af70-4ccb-aa21-7febc147e273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97598983-b1a3-4c43-b035-3547805576ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfe95d2-b688-42ba-8c08-ad7f5c0709b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6174666-f793-402b-a11a-0156839c5195",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12520746-1b90-44c7-9db2-fbf3a8472ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a61850-83b0-472a-beaf-68feccfd14ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6240b2-7c7f-4861-82e1-83194a2ec179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd68331-962b-48d4-a6c9-a6fcac0e5a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39d3f48-f063-4988-ba37-d9e876905405",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3584f2b5-64b4-40f1-bbd7-ca73c77ce504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d41a321-2538-431d-96ce-18c1a9736a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f875f6-a9e1-48b5-bde0-98a51b20cfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd554920-03d0-4fa4-98e0-0a4ce5fb42f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f287e48b-aa60-45b4-834b-36dcdde11483",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3814505-1726-4fe2-a5b1-5c07aea732d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2153990-a5c9-473c-bb6e-d10bd61e71d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629f2e42-c7eb-4355-a10e-119af6add4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c83f2c56-4b24-4698-a112-83e2d5fd27ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada8d8be-7341-4d4c-9668-c872fcfd6f06",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267e4c70-68d4-46ef-874f-dfc5731dcab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13db95c0-fb39-411a-95ef-0c16446dabac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620460b7-d3bc-445a-9c7b-d20130a9b8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfa5cff-a6a9-4409-b0dd-1bc902cc5638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29213a81-d290-4fe4-a622-0cd1ca2c3b3f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d962f4ba-4a4a-463d-a683-17e04c82440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc69448-f79d-4c92-9d51-f82765822d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692cc4f5-3b37-41f4-a095-d8ad61a6bf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "464ff932-15a5-4e87-a299-d1317fca7df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7cd60e-d599-413a-93a1-469b064f4d0a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fab02fe-85b2-40d9-8ab9-bdcd24c42428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8940007-ec98-4480-9cd8-e8fd4252d5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed00434-660e-4e97-9aed-4d831446fd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5885a9b9-3f65-4e62-8522-453cb23b1d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9148ef4c-1257-4dd3-822b-3db8a92dbc2d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfa60ea-9855-482a-87ea-c852c320c59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c506ad-241b-4e59-b49b-26df785f90f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d201269-f0fe-4db1-9c56-957f8703e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b9e43d-12f9-4ce3-a182-5119dd8f370b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b6962a-5bfc-4bb2-b034-589a95f005b6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e28b115-332b-4c59-85e6-d06bd6df5658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae41f758-c7c0-4eb5-992b-0b68cf970bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6f513-ba91-482c-9d14-c9f04a814aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "42a103fd-3eeb-439a-8c5c-66e49e9c78b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "558ed8fc-cd26-4506-bdcd-2530fb54cdd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fac358bf-9c04-422a-bfe2-b5592825be51",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08cd850-ced8-47ae-a5d8-2e207ff184ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "865a39a2-2410-45da-8614-d1169b70298a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f97082a-3e00-4b02-ae59-47f66f6377e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d0a1893-9a50-40a2-b863-6dc17ef737d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76b1deb8-02eb-4e3e-af93-f335a29bf205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35b90474-3e81-4c29-906c-64901ca14013"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a76aaf5-c606-48b9-9db6-dd396b924c1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7086aa2b-2ddf-422e-99b4-9c93f14b2d01"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "722fc0e1-3f12-49ea-8dfe-bff53770bccd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f6d860d-389a-4749-b741-4abff5105227"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b26b492-2f04-4e63-a67d-5353bde5c9e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb3738f1-f1b9-40b6-aed3-287d1e6bfafd"
                }
              }
            ]
          },
          {
            "id": "f8e706a0-5d2d-4ba8-8a36-22c5d325aa6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a9972d5-a4ad-4046-abf3-6817a5359637",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b84c0340-3716-40ec-a6c6-561f37ea739d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a425332-273a-4286-a496-549587f8d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b9206a33-fe4c-4b51-9372-45abae0b2290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aad308b-9786-4ff7-8d15-2f69439616d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf365b2-a18a-4e6d-88ae-d0b799dd2d13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f574dea9-44a0-4acf-aae5-eb0700e27ed1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "681cd98b-24a0-40da-91bd-a2388ecbd181",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73eb1c30-8a47-42c1-b0a0-9aacc1289211"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "329a673c-1d97-4021-bebb-bcb98021d954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5b67b4b-d4ef-461b-a560-aa212915bec4"
                    }
                  }
                ]
              },
              {
                "id": "675fcb82-8bf4-4b42-88b2-7f06aae20091",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b152a89-853a-49fb-99f3-62e96e456234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ab8bf16-f3d3-4211-bb70-4741e7441bfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4edb0fd-2cc1-47e4-ba70-26f8e2e5edcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "679ff251-e832-44d7-87b6-6b160ecec741"
                    }
                  }
                ]
              },
              {
                "id": "3e191ac5-baed-4df9-b9cd-e3fc077f9519",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36fc5e40-57cd-4690-a9d0-e9c946345109",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6def8cd0-9184-4b24-9d01-164b0aae1348"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bfa8ecd-cfa1-40a9-af5b-f22e3c56705d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a5e47c43-6475-46d5-aafc-90360625841e"
                    }
                  }
                ]
              },
              {
                "id": "87aab0ee-65a8-4c55-9c6f-39d877a7d79d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7b7b964-6d18-46f0-b39c-6539894275d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cd38f1f-7c9e-4bf3-ba2b-4da5084c6279"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cb1093b-6d3d-4158-9d8a-7cd985351718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "32804e1e-e89e-4d5b-bc3e-83e08f2e2a68"
                    }
                  }
                ]
              },
              {
                "id": "60a97b6b-1b15-4b78-aec4-8e94795c7eb0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f39fe9dc-f706-47f7-81d5-bdd8cabfc0d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a8580d5-a3a0-4ee2-90af-a9948e47574c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "737aec1e-03d8-469f-a47b-48d88b619eb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "30bc1ec5-e5bc-47e3-ad4e-a32abc2e10c3"
                    }
                  }
                ]
              },
              {
                "id": "a8131f85-d061-4e55-9d03-29dddeb45c90",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "463ac6e3-dc1e-4e4c-ad0e-1094603aa56e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "670256da-2066-4925-a505-a2827f6a0dbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7f591a8-80fe-46e5-a421-5d789c26ee99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18358389-9eeb-44f8-985f-aee203fc22fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f287d43a-e54e-4ecb-a820-8460ed1025cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2d3980f-7f1e-456c-a923-1dccda90df3d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "041b3a05-7368-4e2d-9edb-44a928574f70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db442cc1-6adc-4780-8d67-46c557f1f314"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88832b97-2ad8-44e7-9440-621326ae9bc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "df97ff4a-b6e0-41c7-b178-30c4c9fd3cb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d6a6016-c1b8-45ae-80b2-1e5afe72cae4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb47d8df-02ec-4699-ace9-d9718e238fd1"
            }
          }
        ]
      },
      {
        "id": "6c29e2ce-58e1-4772-b493-f14ca5044fcd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7be4f801-9b2d-43bb-b7f8-16453380afe1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94dc205c-7337-4496-aa82-177726e1d107",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a1ee90f-2776-4ca0-8bc0-b68fedc63dec",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837b359c-f330-408c-b1e7-aa171e8176bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c48721f-1259-4e03-a039-bec654126b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8736d27b-b24b-44a3-9734-ed8ef37dc2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60be9c2-05fa-40fb-a2fe-6839675dd46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd792514-13fb-4489-8b7e-b1f6add25341",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d504c1f8-7e01-40c1-8e11-61109710afea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab71c512-a9f6-458a-9772-6eb6244aff47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f69fed-8b4b-40cf-983b-b7e79fbbcc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cd4025-c37d-43a4-9881-01d5d4d45d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea07c28-2062-4349-8406-05850d7f6946",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab62bd5-2c1f-481f-9f0d-b584aa2f2f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efef474-4625-475c-9750-452c7241ef5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b55a25-a138-4a15-8c40-96420cc2a01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ce7397-23b5-456f-86f2-479c0e24235d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f220da30-3516-4c07-b4a0-52ff1daaf2c1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18897268-86d2-4617-a916-5f2153e54c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7ef72f-adfd-4d10-aa58-bdee47c373c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5573b2b0-67fd-4c56-a808-8282a4a4cbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56d65a25-1012-4ff0-8aff-f5c34d694c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b6519b-77ce-42d6-8d00-06f704fe2a24",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f1689f-82a6-451c-95bb-ec2f0182ca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c3ed5a-d89a-48cf-8089-8fd4fe57cf70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6edc3d-4601-4c8e-8b23-116406520dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e4e07b-d3a0-499c-ac89-de9c6afa7024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fb5fda-b9fc-4544-9941-14667c071798",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a997df-c177-47f3-9be5-97720a6fe762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ead23f-3b44-4d7a-934d-0488f354e688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7982a787-cd16-42b1-87de-1dc2501c3330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1befb8-dd1e-4879-a498-23ce10c190d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686df67a-f38a-4a57-a808-987e41794402",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a642d280-6e1f-4e83-a07c-1bf2b21c10a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea9211c-d9ec-4a56-bed2-b225bcbf6a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e6f462-230e-4d68-86d0-ef22ed2f8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f20a5870-7e1e-4613-b5ea-e21aa4082ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dea7ac9-e452-4d8d-8cfa-30e111551cf3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e76675d-39b9-438e-96e7-5d2578955efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1803df-87ed-4c9a-88d3-cf1d746f9f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf15b36-d5aa-49bb-854d-70789e558964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7f2077-c33e-4abd-b16f-b7b8bb9249b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4066e2d-7422-4e8f-92d1-c6ec9ba03770",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a48ca0d-3823-440a-b8ab-7e9df92dc837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106fe266-8486-4918-8123-bc9079b88791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e618235c-a367-48a5-9372-fc9802312ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c0a18f-bf68-45a6-b751-d9249db78587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a702d1-d8be-4b77-8e79-219f1f36994d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396d1612-87bb-4aae-adc6-90ebd337b021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81cf450-8a99-4bef-8a5b-300aad6ffdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06c06ab-a093-443f-b8a9-58395353dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e148b952-6d07-403b-834b-0da4745009fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9cd7a0-4ba4-4e60-bd72-ae1c42d47010",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313a7924-65c4-43c3-b7d6-e406ea00f4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e51eabf-cfaf-473d-94c2-66cf3d51baa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816f655e-70a9-4120-86af-f93680704b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a49fea0-c5e8-430f-b0c4-471e8511f9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced80e45-4131-4389-9763-7c0558db001b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb5fc2a-4955-4708-8c33-c19ae47ebdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99671083-d9b9-4348-8ef0-59d1fab880d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5915b3d9-d897-40da-aae4-ad8738ea91c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98505904-fe44-4318-86c7-6e31a4dcee7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471077dd-deda-4a25-9389-5d308b6b9b18",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77dd407-3c41-4d7e-88b8-283181f98ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e03f1f6-6448-46cf-a7b2-2b2161cb695c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dfe465-6bef-4d61-8260-41b195d1aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c1c2ac-4fce-4889-ad17-a86d23637997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee8e39b-c79a-43b5-ad26-670db151ccba",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1e34ae-fed0-41b8-bccd-64496ba5e5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17ee63e-669a-4439-9e58-b2727c5a0ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd428706-393d-4402-a93c-1b9087f5e0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be97826-b1e7-43b5-a32b-10203c11e9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa975b3-3575-401b-90ed-f759b4639fd7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001dcd20-06ad-44c5-a6c8-e265f5d73d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df294e91-7f89-46e0-8b79-833c0e80c1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ac89d0-a42c-4fab-a241-4b23cef23de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "29361e3e-c10d-4c66-948d-3ca6271d5b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cede2b4c-0e16-4fc0-a8e9-b492ea964bdf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ff4a72-e944-4c12-bf53-35d4c485591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87511ceb-d29a-4619-b3b4-41694621636d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4819c449-2bbf-444b-9a40-926f8725ef23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfba281-de94-489a-8b00-a6ccaa80f949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acdb21a-3952-4d7d-9367-daffc8180516",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a08e8b1-e003-4f2c-8f70-ed37e22087ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e455a5c-afaf-41a4-97ee-647ae3803000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3406d88f-3318-4e81-acd7-a027ec184b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0635028b-8d5c-49c6-a9b8-632d2ebbf281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb0a982-88e3-4eb1-a8e1-361265a1801e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9922ff-bd15-4d2a-b6a1-38b3af95536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919f3779-85f0-4f53-aba3-c47efdd94713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95f0bae-8a42-4a6d-a0d6-915a00d85a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1da0b5d-a250-488e-8a78-115b9e0b1175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf353ea-dbf4-4688-87c6-04a01d596593",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a1354a-dabd-44e2-a36f-aa104f30c40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653fffb4-2cd6-44c3-9dd6-78dbf4629b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205adabe-6d35-4e49-b0b3-2ea59602f481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3704464a-0655-4f9c-a0b8-46eacf4093b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdd17fe-5e33-4c95-bb84-201fb64ffba7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295f6e23-3aa9-4e90-b1fe-8199d2b23bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7e4358-abf5-4414-94fb-523e7d265119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba9a577-b5cd-4237-ac07-42b91f28ab01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "609bfa66-756c-4937-a94a-1c30ee94c143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a170e7-05e5-4dab-8aa7-7af31f1e5350",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5527c91-36b8-4239-b89a-f8eecc78ab8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4598cc-a48e-4512-ae35-dff473f9814a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2012b463-e5d8-4c36-9aa8-e2df557f4bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b270c82-e39d-4223-96b8-f927e6d0039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee05e70-2cf2-411c-a540-2fda2fe79144",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a944126-d10b-41ce-ac67-5f2a977ab59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4b6c5a-5e58-4445-8d8f-5a1d122e8842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b954bc3b-f428-47da-8192-1c04ffde0b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a707ec9-b67a-49bc-93ae-43eb394f2a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90becf77-4c5e-47e4-a031-24390764c0ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445788c1-e984-4b94-822a-161bf803848f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9a7c9b-3396-43c4-a3a2-f92bf6846efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe536e5-5412-4563-8300-faf2a96e1cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46cc0d15-b142-4258-8df8-eb2f22c04e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b67356-8fda-4430-91eb-447976265911",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34e83a6-9303-44ae-86ae-5bae39c50f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e6a819-3b08-4da9-a5b7-7af82dda8747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab8fc6a-95c2-49e7-95c1-80a89984263d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c61a57-de71-45f2-bc9b-1077111dde1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c8b5b8-25d7-49e7-af07-d8cce0491891",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5563ff95-8de1-4d1d-be88-d2204eefd762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3071dd0-8007-4b03-81a6-cb344cd26d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2762ac4d-38da-4597-b088-403fed657958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b79b786-1a11-445c-ba33-5c92581cebd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6869aa45-a552-483a-a293-b535826c6528",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048f0edf-e3d9-4158-9cfa-1af5c049b423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287e5801-3af2-4349-8850-de2820bc8bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe67eb4-e5a6-4802-925f-ac4385441e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c458bfd-fbe6-4bd3-ac4b-af163b210c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b9cc3f-1004-4600-b08d-34d4c3779a50",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd62406-2f11-40c8-b751-44605909f32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330d7df6-364d-4acd-bf02-5e3613c008a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf4b4a5-265c-43ef-90a3-7525874f4802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f9fece-43a3-4a16-bebd-6045eccc79fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9229d17f-3c84-4925-b9fb-13c15c06fd96",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eca1bc3-a037-403e-a130-010bbb593b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37932188-cc0e-4d7f-a661-fc53e0ac1520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bff3d65-0cfb-4b92-8ba1-de2515fecf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ff11ac-f578-433a-84e4-ddf1eac7b140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea703bad-7f71-45f7-914a-f9c4a200bd75",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f897b13d-9fe1-4491-8c81-bcd48e527814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae37a972-73e2-4cb7-93bf-aad0de675ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f937c5a1-65aa-4ce1-8403-c441de646498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e2495e-5aee-4ef8-bf35-068104f0edf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e494ba-1777-41fc-a237-6133150c32d6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3461c4d-6a86-4ca3-a036-6868cf310dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70370612-9c1b-402e-b2ae-b917b7aa13ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb99683-1648-4ac4-94b0-2fd32ab433fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d68767d4-2731-42ca-9075-e3622e806388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383f4c5f-2e54-475d-b2a4-8eef6494f2db",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a600bc8a-25c2-4b33-8664-68285ea5cc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0bfa22-48c2-42f0-a4d0-dead0e0d9b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a985b8e0-1134-4724-9ce7-09da140b845d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "314acd2d-5fcd-47a9-9408-e898ed5b729a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00bca1b-3282-405e-a7cf-5b54c50ab8d7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e260125c-77b3-41c2-8db7-697a768d7ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56d3871-af7f-4d54-a3a5-0bafc8f3f2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647ca06c-966e-44b5-8b42-8582f9709de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5553feb6-e868-4a72-9e98-c12f4fbe7061"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c8ed493-caf8-4e44-b5f3-c4f0da033bfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a300f518-44ea-4561-b209-7a16d31552fe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3306a2-2157-4585-ae91-1d0c0170b528",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2d664c81-d5d4-4fb3-a906-7c172840118e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4120f700-521c-40c5-979b-090a341faf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "563dbfb1-54e3-4f63-991f-70cca181dca2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd6d65eb-7471-4a49-a6b9-aea0bf76ea40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee156e7a-f7fe-4dee-958b-6a6c027f6adf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f19f74d-e747-425e-82e2-41ab3bea4969",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc1bc40a-6d4f-4425-88f5-11fe4ca6aa29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d298274-249c-434b-a1a4-ec27d7a2c5c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c26807e9-3596-4308-a7b1-19ae7d94e411"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9baa6e09-9afe-4f18-a2f5-de100060c502",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3542826-7845-46bd-ad60-162938c8732d"
            }
          }
        ]
      },
      {
        "id": "4f17f081-1295-4cc8-b7f6-f8fb383712c8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7f208e28-580d-4dd0-af13-b593fd579403",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d929a1a-05de-4d41-80ea-5a4d94755c64",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8bcc3e6-4c64-43ea-b722-7ba712957e72",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb47a507-b708-4ad1-95a8-be42694a77ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa27e3e-7f5c-4a8e-8f9d-aaca78d41573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693b5c53-1940-4223-9e7a-5f8c9e517f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e063375-5772-4371-99b9-517a2fa35f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850b9b15-05cf-495e-8afe-dad9d1e7e47f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ae106c-8e76-4bf3-a4f4-b77b3a2dfdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19a64f7-1f8a-4688-aa23-636270d2296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e5419a-2887-4e8c-9023-fcdc5ffc905d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96bff403-b18a-4629-9755-0c59d6160314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250b926f-1943-47c1-8b7c-635edc9b81c3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ce2527-9e94-4aea-92b6-0b865d8b9077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc55197f-9e95-426c-ab7b-670c49fc2e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e174c9-a112-44c1-89d1-b6fd3aeef9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86b72615-5e2e-4b60-8b85-66424226e415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d01862-3918-4fde-960c-c96c87974918",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf815ea-e545-42c5-a0cc-bd3563bf1007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286ff532-ced1-48e3-96a8-e4f8f3e8de1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2979ef83-0fbe-4deb-860f-454994369d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2806df35-f65e-4115-8f59-0ac1f6f80a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e200be37-f777-4b74-b0b0-b385a2de0f66",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de172ae-ebfa-4d72-bf36-dc01771306c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439c08b0-3186-4e63-a52b-40e7eb134394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b328b6-d044-4a2d-ba67-7b8ee5219b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c9940e-465b-48c2-859e-c992b0866b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdf988c-6406-4538-8cc7-0cca5d341af1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e711fa53-1a87-4ba3-ad1f-f2d4c712cab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cb6e06-b1db-4178-ab61-b110f7bcc390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f69529a-8716-497a-88af-1373f3bd65e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a17fe7-7dc6-476b-90f5-158b8c4cb978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5979bc2b-0b1b-4c5d-b897-dbb41e769037",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93c377b-2939-4766-89bd-6ab086720ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f24fbe-d6fc-406a-b7f8-118a2ea6b485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ff40cc-494a-493a-a863-843ac03d73b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da9b9be-1273-4f35-9f28-3803eb64bd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3fb594-af50-439b-b8d1-adae7a5e62fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8586b029-77cd-48ac-8b58-252caef5fcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc51f93-64a4-4e51-a76e-745c4a70ee88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafd2c09-7956-4aeb-b0f1-bd1c2c695e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "781a4e49-147e-4ef9-97d3-eee08d2037d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e53570-fe69-4862-a5ca-58be8d982a4e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b19e74-d06c-472e-8cab-348e524e7558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffc5d50-c689-4dbd-a6fe-435c114a192e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9a069a-759e-4b59-a1c0-28ed3bc2f474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c2b4ab-9acd-47d6-b1b6-20478c098696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3580141-60ce-4106-aa2e-33f652f01570",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d00fcb4-dd0f-4351-9da7-217f029bc003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f019794-3e79-46f8-8b8a-6ed953729313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dd534d-0f39-464a-9688-e268111c5f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2fddc9-35f7-4b14-8fb5-85733a136075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5373e53c-6a70-46f1-be41-9a80fd00e847",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610ebe55-1017-4a47-a687-a3d663f6ced3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda9dc0b-b833-4820-b9b1-e584803bfc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ac8f76-2a9d-4a56-a192-00cdce8c01ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ece08d60-08f8-40ef-afaf-45623ac65987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2e3a34-e421-4818-8827-df2d39235f1b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6d501e-5913-4aba-91b1-33c684917d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb99865-a7ef-4aa4-9cea-210f39ce4695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9904944c-14bd-4648-b839-809e65f0668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df674408-19d9-432f-83d3-870a36a8f14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218fb1a3-33b0-49be-a311-d6d77e051bbc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48778bea-4df9-4ab5-ad10-2e1332e9e9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee9fffc-e534-4cf2-b88b-9d942835a9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137ead72-0400-49d3-9d55-b226bd49d9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0ce718-12d7-4f64-9e22-10791814ae44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7461930-8391-4464-99c2-743ad0226806",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1fa1b5-7aaa-4510-b7e5-10a7e936acc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f608476-3c88-4a3c-8f91-affab50d8080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09dd7cb-1333-4db8-b7f8-b41c38f6cece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f50efe0-2096-41cf-af88-aaba6228a8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9c5237-b411-4246-bfd0-de2b5c05b080",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73487526-743f-43fd-ace2-23e193306753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c86e51-dcae-45d4-875a-e471303b0d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0f3720-80b1-49eb-8318-5f4234ea1e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f5c7c3-5f58-4456-9045-f12ef5832f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e9c019-efe9-492b-8825-09fc7baff307",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9cd0bd-06be-46cd-8e92-ec1d20676b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b306000f-75c3-4db4-9e87-4937e7f5fc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc37bf52-4ae6-4e7b-b39f-acd1d49a16fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7425ba37-9a41-49df-aecd-1f91658c4ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaf5582-71d0-46a5-b286-358e62ef826b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f55c18-04f5-41aa-bae6-e4bc318d30fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc4800d-d4ec-4810-9655-a1adfdaffd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3780ecc-cc41-4268-a1bf-301d8d84f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d2311b-5a2b-4e6d-aabf-b23c4893779f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73583946-c92a-488f-b40c-ecd486141434",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f07331-3211-4373-b247-5a2a6926cba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d174a2c-9799-4935-8907-6167eff6ed70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5de225-d679-4ae6-a4ba-db6706398f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e70bcf-a647-4484-823b-87ae68609ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62071f2-2cc2-4f04-8516-db8067289a73",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7d9656-2652-4787-ba2c-1a951bffd425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76551a8b-6946-493e-b331-b5e928faffa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893272cd-2058-4f4f-bf64-c63ebd7c4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6afda68e-b917-4436-9476-2a6ed060e2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b9db2f-a0bf-4e34-a504-28e0e3adc18f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e15a1b-f228-4e2e-952d-743c5dff2c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ee73a3-4d5e-4be1-b1f3-58d83719a6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba8930f-0b56-4df1-aa50-049283b2c335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23183aa-8f4e-4a42-9367-8eee7ee5c11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49dcd32-38cd-49ea-84db-cca454b4ee42",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1cb200-0d7d-4876-8a91-53739eda7d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9d40a5-e959-4d36-ae6d-640f21793f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cfe680-e813-4e6e-8bad-6ea3436ffe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71dcfdff-f34f-44fe-9190-8b8efd37fda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8204a4aa-f5d7-48bf-9e2f-9589624dbda1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0bde16-65fa-42c2-b0c5-d245c19370a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cc0e59-6811-4b10-ad4a-d14fab73dc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bb4df9-5aed-4478-84e9-6b75f56f78ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c45d622-7ab5-4fe1-a08d-67660bdc22ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22448b24-6ba1-4e19-a9da-8e6479586513",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a739843-a474-4227-ad28-f0d269a5f8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c1d3a5-bd41-4ff9-a9e2-535576676373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3414b37e-442f-405a-a9e2-5b0dea88d3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a10230-059e-4cf7-a137-e9ee7c34d8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08b582c-a4a2-407b-8100-13bc95111063",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cd653b-50b5-4bb0-b040-9040a37db2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2c6fcd-bcef-4695-9781-81171c0fea71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ac89e-e571-4d31-b4ad-6f74ba761f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b58df2c-1083-4daf-b564-46c462c6969b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b11db91-d3be-4dba-b89e-feae1bceeeb8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca11562b-9046-48bf-bfd7-51aaa826c502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3738e00-7c8f-4833-ac47-172d8c3396e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d5c74e-f5e5-4784-ac40-c8ea81ed22db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f8a5b7-54fe-4e9f-a9c4-f00f0d516954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd36cda-2475-4c39-9323-cd9f31eb7dd2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24588d63-55a1-4635-9434-75fc52244c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91294be8-d95f-4541-a67f-5df5c83424ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddd30f7-a60c-475a-8cd7-e5f630b418fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e285859e-c3f7-43c9-8950-d4d9e4c265bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8a9866-127e-44f5-8a6e-d742278d43eb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b116611-8821-41cb-94fa-71a209d50db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dd8254-4b36-4220-a2b3-110ae0e8416e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d014ca1b-9a6f-4b8c-9d64-b5ac673a3e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f758c81-4b6c-4003-840f-41b31eb519e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d199f3e-ff69-4c21-856b-aef2bbe2577a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ba144c-9df5-4388-921d-dd85c26d6cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcab18f3-a859-49a9-bc5e-b40df264b344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1378fd9b-2649-46cb-b3fe-bc9f8d55ac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a621ae38-0949-4e87-8fae-125e912eaed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cb45f7-46ff-41e6-835e-2df5baf7045b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfbf220-d23f-414a-8d50-376d5091816a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60483e4f-9d6b-4b9a-a60f-00cd6813f389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb186de-a510-4a38-b97f-aa1d477b7496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9caf830a-c392-46e2-af98-b127543e7eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ae4436-51aa-4498-8e9c-08a9f0ccb69f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619e2bbc-193a-459b-9adc-62bfd3c9dd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d453693c-ffdd-4b8b-8319-d35eb39db62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23701d5b-06b1-4249-a80a-ecb42a6efcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0786a285-141a-4071-bcb2-8175bcc47a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be93604-e550-47e5-b326-3e92c0469d91",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6422ae90-6068-4578-935b-e555d0d3c84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700eb92c-c232-4233-b3ae-0750c04eb0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc37c822-c977-4243-957b-192e2071d0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c99e769c-eafc-4680-a12b-5d12bf563e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07e0d86-d152-4e34-be04-75e8cde8f2cc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880103b9-644e-4a3d-81c6-2f07f2376ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085ec4d2-9e23-4d2c-8b75-de9195c69f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5e3d9b-53d5-4283-ae74-c276d57669f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f135d329-df88-46ca-a69f-d874c1bc1a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a735ae-6a1b-4af4-bc15-96279b153a65",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f312392-0e6d-449e-9348-f49aa769a54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6a8c9d-b43e-4d5e-b0bd-c9b333a21249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51add45e-14e1-41a1-a1c0-378d7e90f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "449b5d2b-a95d-4173-be49-aed5febea0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb3dc4a-0934-43c7-9e14-96e2b8d26511",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a346090-4bb9-4e9a-ac63-b3563cd713ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25184507-f174-4c16-8e27-b9a94b2e9575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b82e9f-f334-4049-a2d1-aead68cc77d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70349f2-8d97-430f-ab8e-bf9620047b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad26427-4095-473d-9c8a-030555b6ffdd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb82e45b-f0f3-4bb5-95e4-565d19361594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8e4c27-22d9-44d7-bd27-dca8c266c451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf8ea0e-b1de-4c64-b740-fcc96b045105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e842ae-7916-44f6-979f-bf02353dc341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea5d1ec-f448-48ac-9ab9-85afaa4dfcf6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ef63b2-3f51-4c17-9f3e-f1000f5d4230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34abf71-e5e3-40de-92cf-d5bd4b8928e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55ab4ec-177b-45c4-ba89-f3c4a278c60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7034aad-e254-41b0-97cd-87cc709ffc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c69be7-5df4-48ed-bfa7-2e4436801dde",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d3b2df-6355-4a89-a325-66d8caaaa723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9dfea3-6a68-4a62-bd7e-e75a9beffeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0532633b-0c75-41ce-b0c9-f1c3137f7938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08f9474-dd12-4f0d-a428-8660bcaa95d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "edd2ab2d-2d52-424f-8336-d7e9dc712891",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82813632-ebac-438b-a2d8-69f61285aa4f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2905f51-a338-400f-8eed-62a4a4f4f87f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "742d96a1-3912-4039-8bc3-b59e7a6b35a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a43693-985c-43b9-ab50-4905cbb89cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2bc174b-9b89-47fa-8e44-eb60b29ba4ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8814bb2f-590c-4160-a81f-d9a4b6d962fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "331488f9-6fb3-4bbe-a947-0ec3b37796b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2381b8ff-24ed-4573-9a20-dd142bc571b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c07a02d1-d7df-4fa9-8030-37003d4552b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9120be6-98ec-4989-a938-d58c79e81724",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38dde17e-9a44-4919-8f8f-de0d46c3ba86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bd3e5f9-f687-4ea0-b867-d9e5726148d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d0305c1-c7b1-4c66-97ee-98db557c0048"
            }
          }
        ]
      },
      {
        "id": "af00b06c-d28d-4219-8f7b-3908292487f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d5d1a767-6f4b-4dd6-8440-d1c16f37d253",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df925613-e3ff-4230-a171-8ea3da979552",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "233bcebb-b94f-4b30-8b0f-7eda0457dc0b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b9143b-fae6-41c8-85b8-1a43832eded1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f60c705-0669-425b-8e37-2ef896ae93ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a871073-5e56-4b87-a01d-73c801a59c35",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5256ea7-7366-4379-bf4c-29955c180b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c212da3d-46a7-4d90-9b70-5873c947ab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53aee71a-0086-4b8b-9958-c1e3fb64a421",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ab46c2-a72d-4059-860b-debb66a22beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cea7f15-f985-4c6f-90a2-426de5230bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ba0f9-2513-436e-84be-06737d634082",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef4add2-4ec9-4cd1-9857-fddd98fd8bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762006a4-42fb-48e6-ba44-dc54e62ee6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fcdc68-416c-4c6c-bee4-c5af11ef0240",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b0f2da-ac60-41cf-9560-682a5422a4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81cf34b-4855-4eb3-935e-5c642285da64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001cbaff-73b9-40aa-ac18-0c689a852085",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a7c53a-0b41-461a-a7a3-d46ea3ab8a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0714d1-aa8b-4d34-88a8-da5635061951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df91ae9f-1308-4276-a7a5-fcbd64763de4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5799659-4a55-46dd-bc58-608dbc917a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc2b54f-ff5f-4d19-811a-4b54232374fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9fa43a-63ec-4961-aa92-a2cb51d8636f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9132f42-a8e7-4faa-8e62-069bd3da8f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779796f7-a500-407c-a6da-ac37c992badd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf13572-4a5f-4888-9c2a-4bba53653adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f621bef7-e8e9-4f09-87f5-2b6c429d013d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f69ddf3-f8ab-499c-9ce1-c957a1f9d81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bea37e-f193-4e0b-88a7-1618fe00cf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab457948-8fd9-4220-8911-f9d92991651e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc787bff-c303-4c5d-810b-05bbc1d1a65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b07e2dab-40af-4711-b80a-f51c016323d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a6f1a1-85b0-4c2e-9de0-a15eacbe07f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f444159d-e537-4da6-987d-6f77c41c6bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ed19b4-4b6a-41aa-8c33-7092e9018541",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d49ecb-b31d-4bfd-a899-f96221a26a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6a7aa7-7707-43dd-8782-49ecc373603e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ce6d98-1f67-4b70-902d-95431a9b1bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23943310-706a-473c-b7a2-b4f15b87fbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15437d17-0a47-4d08-bf69-ada05ba5a434",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b958519a-1528-4871-8c13-5841c2c751b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9ec117-93c4-4837-9086-962448503b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "526b78eb-3d57-40ba-af53-ad994a84baa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f944b0-b9e7-4125-abf0-da25be1e0264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123a32e6-9593-4378-b675-50d59234eed7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55612f7f-59e4-49b1-a9a9-e3c20f4d83e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4326537f-6ea2-4c99-9fca-3c4a77f893fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaac691-dfce-4e77-b9d3-0e43e101764e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abfc0c1-c9dc-430d-a903-5ef525ac3a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6dc828-146b-4dc1-ae54-abc07c8dd486",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f537cde0-906f-4b3c-aeb1-22b68e12e4f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87582bb-9bda-42e2-8b3a-6930c8062766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7555dd-ca3d-431f-921d-9f8cc0d6ac32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4056c7c-8d9d-477b-9fbf-695d6f13c0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43972c9-8b8d-41a4-b728-0b619a251296",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883d4fb7-d3dd-42ae-abee-d280b3bf4be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d200cf48-a94c-4062-ae05-6b7576321d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532047bd-4749-4a5c-a10f-c4c5603d591b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248509ab-6fe4-4c52-bfd6-de43c1c992e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc91ce2-66b6-4eb0-80d5-3b9b96bc20ad",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409e194c-bb7f-4246-9ebf-b375a00f9c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a62a43-386c-4f72-9898-5dd7e7ff5628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e53631-de7b-4c0b-bda3-c42b6e9f2b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f305caf-0df1-4b47-8b49-2ed834d7485c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b414c32a-de3b-4edb-bdd0-7ef8418a388b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6c9219-bd9f-415a-af52-521f5a4cc036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2147af-7f7f-4760-8d1d-7cc10a47abeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e51cde-bdc9-4f29-a6cd-629de17e4351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf387f0-b32c-4318-8057-c9d4d8b8342c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681383ab-9006-42b8-8366-02ebc093ca1b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b44b15-47f9-48c2-88a1-829aad186f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3eedae-87e1-411a-9e87-7b93af2a0558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7ede7f-453e-4028-b155-16f6d19de059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33c50eb-0452-475e-a57d-d74299c4499c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b054da-4158-4504-9cee-751d7e50518b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1926b627-200a-48ea-918b-f51b4babc0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c665c1-e1f3-4801-9312-d44cf1edf810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7600b6-ff0c-45fd-870a-12f16c5072b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00891dd6-fd8f-48ff-8715-aef9cdb8fd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324d8fa7-4ff1-4cf0-ab12-aa4c9d508960",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd938abc-7bc6-4c66-b16e-3370308bc29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f396d6-fbb1-4720-b026-7a4079a2162c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746d466c-60b1-44ba-9482-c15b250d55ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85589b0b-a144-4873-94b7-5411ebe68d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0a04c2-baae-45b5-9f48-7a9eb66cfb5d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89edbe40-541b-414d-b6a9-0ed82130c40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dec41d2-7351-4237-89f4-b4ac988de52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede784f7-245e-4298-8773-0ebfd355a78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1df2458-7cd5-4b2e-88fa-165abf45b3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eda657-ebb5-4663-9c81-15b911a1c2b1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d06e9e0-bf6f-464f-8709-e2cf4be00e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c86b0e1-4a62-4cff-b96a-eaebcace64ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6045d8-97dc-4477-95a2-ba42233c3380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c520de-3748-413d-9711-ef8a4694c698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2a707d-6824-4272-b0bb-edc843770516",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da06fa2d-129b-4dc7-b86b-47a178136c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d18c21e-3dbb-4a89-838e-24419cc0be7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bca6ea-99ff-435f-a0b7-07c178a7c283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ae68b7-fd06-4d9f-a97a-095feed665e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b89c2ec-afe5-4699-acad-4b9a6c767c00",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c703e2-0838-44f1-b8d7-098fdac4bd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0f5318-b701-4bea-9ab7-574d7f007e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa83faf5-16d2-4d77-8100-11772813ef01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9b71f3-5de9-479f-bce6-0032695a16d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b60f76f-c55c-4cc4-bf53-14298748d44e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2c42f3-ff86-47ed-92ea-9463ada02e5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5368a8-e97d-4924-a167-43d2f31fb814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e453bc0c-bbcf-46be-97db-6aeb968516c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c59a63-646c-4949-b77a-f670b0aeae75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b853db36-39e9-42b7-a062-936b0593cc78",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ffbb26-c5f1-439c-9288-d30e652dc294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1dc3bb8-bb79-4a41-806c-c88f1a75bd29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ad18cd-b5b3-40f4-97ff-75dbb763c7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b720003-f44d-453c-a66e-7e96f6a56e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015caaf7-15d7-42f8-9a6a-6f5fd8d1a0b1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09288464-21c4-439a-a5b7-9ac9fd194107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04400d02-1be6-41c5-99a1-6d9fb1c801cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebef717-aea0-47df-aba0-090368b267c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21dae4f-c2c4-4a5b-a525-11ba30a283e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bc0475-598b-41bc-a30d-5be9e217fdd5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90158c7c-c914-443a-a95d-89109f856b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568ab71f-23f6-4bca-a50e-96212cc9171f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0781c950-de09-41f4-9ca3-1a1515961f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6af3e4c-97ab-4353-91a1-2d89a3d43974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57148ec8-3090-43f0-b77a-3adb1874cc2e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1e39f4-3432-4aaa-a76b-0a21654f7167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a7e9c0-5be7-4e22-8d48-e34e4bedf078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b536b536-5717-4880-81ac-9f5815f296f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91680fb-167b-47d1-b4d7-1d6f1d3398b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbf8413-6156-499e-8740-d441d45c9440",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e199308c-4ed4-483d-81ab-25b9b42b1316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde3c669-05ce-49b5-950f-1a6d9aeaaefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3650c81a-7e4d-4848-a3a0-e68bc09d9a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f26ea53-bb6e-4d31-a1b1-18fe69b0f3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842cfd9c-878e-4173-b7cf-ca4ad14a022c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be702db-721e-4236-b88a-2f12cd4788f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf435e91-272c-4c0c-86e0-94393cd00b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da7a917-2bc7-4929-88c6-598d55e9f3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef3d03d-9ba1-44c7-bff7-7dd86ce3d6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02a28c2-ca0c-469b-96b2-a400ef213746",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04104e7e-0316-49e8-a5ac-df2c242a6c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "572c4329-1435-47c4-bc6d-51d2a6e94b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ae4c73-40a9-4e3f-8ccf-4d018017561d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f709814-b3d7-4cab-810c-4c5861b17d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f572a5-cf28-43fb-9a59-dc3d4ee8286d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5545f9-0302-4095-ac72-057730aeca23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a312d68-e715-4d55-9c57-2c5036face13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3e0386-9585-476c-b750-20a578cbc38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9479f29-afcf-48bc-9826-d53e056705f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6757948-a6ba-4034-ba01-27ba24d1743a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d334aee6-8959-4d65-b00c-ee91d4594946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bf800e-9a04-4a53-a38d-105ac511715b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9167fa8c-673e-45a1-9b29-fac292c345ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39e6906-637f-410e-acd4-fb09859a3611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45906264-7ec1-4770-8bac-0cc5b06a5c75",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542d81f4-8b87-4b86-a1e7-0a5742783834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "894835c7-9410-4749-a446-689dbdffb262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a619ce-0872-4e19-b0c8-09672c2277d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb0f828-269e-4d39-b679-6f427452857e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d5ca90-50ea-488c-82e6-48a190e8a303",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38b7a8-4d0b-4e11-a86a-599ed96eff8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce75846-b375-4673-b8d9-23ee41b8bba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176b2123-933d-4b80-a404-98ec99d22595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca90f7c-918c-40b9-bf99-057026b893fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c2babd-26d7-4d34-afe0-1ed3121385b9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a69b64-0927-4e25-82b1-7d1d37782b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958ac37a-d3b3-4482-bb93-86127e09fdc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709b7e86-6e5c-4000-aa24-3cd0e46861a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fca5f6a-f15f-48a5-982d-8e8fe498a07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fb53fc-e046-4096-bf1b-2e8a4a30347f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fc2ffd-9bd8-4939-ba39-46101dce3bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc59118-f313-489f-be7f-d551d851e4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08acb373-a53e-4709-8582-80bcb207a4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ea8341-014f-4994-a7df-0bc7e5697e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513bd968-a89a-492a-8b7c-62bdf5de4ce5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8a8ebe-c24c-4f9c-bf06-08829ce8a8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ee9874-c40e-4de7-96fe-628ae51ca609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87ddc28-92cc-43d4-8b87-bf1340fac02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304223bb-5916-4a71-a09b-56004d1e91ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28fef61-4cbe-4fb8-9298-a12c1a196d0a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c29cd60-6570-4c35-9e03-8842df73eb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbb91e8-b74e-47c3-9efb-69acd3b496b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c75d6ca-0eaa-4812-8dbe-3371f640ec40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8e1552-9f11-459b-bfea-84ecc8a0a642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56938722-6f12-438e-a173-19b48cd9a8b1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be7f00e-040d-4f65-9aaa-e1127296f652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb478d7-ee22-4f77-b1e7-f758b9552bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e03737b-282d-4a53-9fc4-e6dfb6cebe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6186bd88-3b01-4acf-8a8c-93dd3a771ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba44cc8-bb3a-4fcd-b87d-ce842625fe9d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39ac012-1bb7-45c8-ac68-2274dccdd1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab57a617-fa2b-4321-83a8-1e0ba2156c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b12467-0ff5-4d08-b16f-4742395821b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98df8721-6f7f-493b-abc2-c2e30f6e8495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdd6324-1d3b-49d8-890d-84e3e32ff2f2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2866de6-b013-45a5-8a35-0ce2c7fab4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264f1b46-641b-4ab8-8df8-3f5f3c39870d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592e88a9-9c4a-4e02-8d34-5868e40d041b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa8661b-f15c-41f2-bb77-4edfe758a056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d0b3f0-776b-41ff-9a31-fd2f1cb9d8d8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5a6440-6121-4191-ac52-a26c0017e1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23a48c3-b0c1-4c54-8e50-b1cbaa58eca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cac8e5f-06c6-4877-a813-4d4755e3ee7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd456e9-a163-4dd5-9574-931634abfe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee3a54d-daec-455e-b17d-e6a28abe7627",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3507c662-e33c-4418-a31d-3f69245832b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa93bad-2ad3-4972-8ec3-ef0f548784dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f4af74-3e90-433e-9279-2efad1d68034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b52db6f-ebd4-423a-ae44-3d3ff61b06bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9550011e-bfd2-4635-bbc6-cf51ef65803e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a5d67b-6492-4013-b068-0ce54e952892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c3c49d-6732-4f71-bfbc-8904030f5ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df152b5c-aac7-45e5-b588-520efc28cbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a1f35c-2953-4077-8930-2221d0f551cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c208b9a-4206-4256-98d6-94b643a12a48",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6be7c50-52c6-4013-a5a9-8aedc4134d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdefcd0-346e-4b37-9606-ec5d789fe054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988bfe53-5b9d-47cd-919d-5ce396daa704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8470437b-6a5a-48ff-8a4e-abdcb07562f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fada4bc3-04e4-4b65-b276-189aad6f06e9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98566bd0-2bee-4546-acf3-81bb0dfd7399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf25d6c-05a1-461e-b389-f8ac6a0a920b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f49697-6182-4988-8773-d16076b08add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2064cfd6-d905-44ed-a4ca-4e328f8c2995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c14a8e-8a9f-4a30-9e91-04bd6583a551",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db04a0e1-7b2c-4059-a107-677295bc9597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1882024-67d5-445e-814d-450e18c05eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aa25c0-9df3-4be8-b76e-c42bc341a6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f204edad-5a11-4de8-a94e-eb8a749463ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dd070b-e320-40a2-aef1-82a56fb76297",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc2b5db-fadd-4412-abb8-d0ff4eb9e99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8bdfc2-9c05-453f-bea0-0f2674991447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64574aaf-5f3d-4213-bd91-b5ec2daaf6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f76c313-e84f-4644-a33a-3234a0e079b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4252a6b-c100-49da-a283-6e2028069e70",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6243edcf-7ba1-4231-ae38-c0ea31b8be34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab5249f-441b-4258-b821-24637116f5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f819a185-f85e-47af-b890-31d7a570e32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57b541f-3902-492d-88e3-91d11aba1e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23596560-7264-4d23-a7ca-c9f43161fd6b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41c9e02-93c2-4812-bcd3-001e1a225445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2a6ed1-813c-44c7-aa64-936061811ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c250ac7-e4fc-4ed0-8487-e0950abc2a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c592807d-30bf-4785-8a16-942dad5ce3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bed4a6c-e283-43cd-9909-ba34624da65d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0d6b2d-62a1-4eeb-8446-7778d323dc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb39031e-5788-49b7-8bd4-cff577ac523a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ed543e-61f2-405b-b17a-79da66ce3fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93215063-fc51-4e31-80d6-f67c6bd3e473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17d9481-f836-4dd8-9e74-3d31e422c5f5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edaec23d-884b-4636-b316-71186de45a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd22b978-ca7e-4c95-a80d-61a99560eb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3207de31-d09e-4456-b24b-7907698fcbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b294076b-e368-4c75-af5a-0bcf49a3ed54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c51f791-b3d2-4b71-b22a-603fab00f614",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbf4291-c8bc-4d16-82de-46307984e308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8aa97b1-a37e-4933-9971-493f50457f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805734a5-d0c1-4d44-b419-47bba6e9b0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92c38a9-cd57-4d5b-9f5d-edc11be31289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9f13df-4475-4f12-8f32-6ddb1eb53e96",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64904e80-9ecd-4214-a018-0a981d07c490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfeaac8e-7076-4bf9-8910-b91f7b241661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13281ae-a1c7-486d-8105-4c7a8106f417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0494b0-265f-4f2c-b22c-c83e9aba18d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dd3070-9b5f-41a1-8452-9944f84974cb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d020436-d6e7-4e74-bbdb-4625b21fb573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9a29f5-ba7d-4ea4-96be-46ba51ec7599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0249f3d3-f48e-40b2-9a12-dbf7faa50a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac25e695-003f-4e82-8b9d-1930d9647684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c652ba34-f131-4b66-871f-4664d03d59ba",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294d7d4a-e107-4a36-bedb-a5f67787997a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5f40c0-6ab0-448c-849e-38316bd28dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bea69bf-a0c9-48f2-bdac-312de3bde890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa031fc6-f4e9-402e-90fc-238dc18daa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fb0191-4a81-4ef8-9a06-f3ed091bd621",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92235056-057d-45d9-ae39-077f5ae6fa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5101f56-167a-4ba8-bfb0-41f728a5f504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1de6ef-76f8-4c67-a20f-b8fd1c5dd4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919321f2-4c87-4fe9-a9aa-5e7f4ce0efbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd509d2-b5c4-4735-9dd3-6d9cdfb44f94",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2954093e-c48a-49b6-ab8a-546e4713baa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8e937f-a770-4810-8efc-8dc0cd9f6af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0caf1cc-b128-4519-826f-9033930a2c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fcad12-0b6a-4e86-b7f1-b2ecde22201c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326532cf-b273-43ae-bbdc-63158e8861cb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d626190-2d3b-481a-b087-c7903916a128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebcbf11-fa1f-4d40-985c-ad5e8542ccb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7377ee01-77f6-4dde-8fd3-e51d14983eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f009578-6481-433d-864e-8ff9777de4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a332a786-3a9e-41fa-b8f6-6ce248a46b24",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d099a0-e608-457a-85f9-2c1e417931bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1dbda7-56dc-4c40-8c66-a27b2a2778f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b083085-02c2-4645-9338-8636f9728d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bea129b-5c56-45b3-b380-1bd9771cd266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df14f89d-51f9-4998-af7b-c2091b812cde",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e800fe-4cd3-4ac9-85a2-2b2a22f59422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d09f01-9269-4915-aa08-2a57e90a8f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ab2f99-7931-4f2a-bf88-38482ca778d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6fb46d-6652-4528-99b4-a02c7423d040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c750e5e-d545-4338-8c63-75c6f638b034",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3657da70-f00d-490d-b2c4-6d7566625bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2057b86d-f12d-4f60-9bf1-8ab30d375385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86136f8c-8593-4cdc-96c2-a907a5f55ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43f83ee-5035-425e-8123-194dbb655b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2810b579-8155-419b-a72f-4c6a152db691",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af52acf-e167-43c9-943e-b9fcfaba70cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bdd4911-44a3-4f2e-ac8b-4649bdbe83cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17116066-31e6-4b27-96c1-12582d7b72de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877d93c8-4b7c-4216-b060-60a3ed78e40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea29f47-512c-41ae-9b3e-27b19d89d3de",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf2e58a-916b-4638-b47c-cc6efb226187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f42788b-d34b-4184-a496-17303bdded0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c5a557-5dda-4958-8b78-480b289fe59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b87a59-4251-475f-8e49-683c0ee16daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba20e02-3690-4889-82b6-ff2c7e49301b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f4fa9a-f756-4cf6-9ba8-d2b8414f41ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a93fbbb7-c26e-4bbf-9f3b-c9453c62e56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eefb424-921a-425c-b971-d6f20f7bfd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b880ec-6123-4d18-80aa-5b194d696428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4949d36-ed56-4e22-89ff-59c5593e0fd7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8791140-3757-49c4-96c8-a7675c170fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca420d5a-6934-4e59-bc3b-bc1a4d553183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47710cc0-9b2a-45cc-aa41-0541e6355853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acabee51-0e4c-4edb-bb6f-e622e2bab0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d24b74-5d0b-46c6-90ab-35547d0b37b6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcfdba1-83d1-4b1e-bd33-c962792761dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "809fb5d3-fd36-459e-b2eb-64cd26b37351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7153f0-1969-4240-9685-acc9e6020e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd254c89-5059-45ef-91ac-266b8102d179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e18541-860c-4d95-9129-591877a03cab",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c2ff5f-f7b7-4352-9387-ba77e3e745e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eed4041-bdcd-4146-8995-52ff9a5bc13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274e56f6-dbd9-44a5-80d7-b62f92dfd903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302b9501-123a-448f-97c5-d5b377472997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1025504-d543-40fc-9c31-5776f083bf08",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c8a639-afb7-4124-87c2-9d2c4a865a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2962b60c-e2a7-4737-85c0-fbde2524b8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866e38db-6a90-4639-8389-09de26f70a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b82064-994b-4bdb-be16-1e6a5f35f23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde06990-2a18-49df-a791-35cde141a77f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc83d6f2-faf4-4fb1-b4b2-e338d4fb21e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ddedfd0-8eac-4b3f-8369-51ef9c7307ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b2e60c-14ce-4066-8875-0f4d0326afa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a23dc1-eeef-4b0b-92e2-ef0595d3d71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23574a7b-6c8e-4c38-8a80-b096480789a6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84dc645-bb3e-4649-8677-4f39a4ab1975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808c90e4-2fa5-43ee-9d33-f1d84528d4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafa1990-3f99-444a-bd1c-64fd73b4157d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839fdd71-fdf7-4713-b273-849aa1ebf480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6246c920-0f5c-40da-bd21-96e6436d9cb6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7471fb42-1da7-4087-bc51-6afd1b8813d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5dd911-e9e8-4cd4-90fe-2e4ed0707675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053ea627-fd49-43ea-99c7-f48378d081cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81a2e25-0dd2-4b16-bc16-00b271d0a6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6474e794-aff6-4508-b415-51453be68c0f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875c775a-56fa-4a6f-bbe7-8007c69c3d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c1b78ce-b9cc-4620-b3cd-15c57c624dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a5a66-8c71-41a7-8aed-b314a209107b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a7324d-47d7-45a3-b5cf-486d4fbcef00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4398c8e9-bedf-4104-bcfc-bbdacb7238e2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8a00e6-3c50-4657-bb8c-6eed41fc10f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba103170-c9c3-40c7-a2d9-9924727c9bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfe7d86-810f-4083-9ec6-e431cea66a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72bf5ba-e43f-4a91-b2c5-0ef01290783f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd47fda7-7365-4078-b5a5-c7d7a9be9440",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6599e166-3057-4b1e-a447-9de3e2560a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6aece7-c088-4f75-9d1d-5aea8d3d2dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07d76c8-88df-43a7-b67b-da979ce871ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89be513-0714-42ed-a320-6ee0c34aa453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5a588c-61fb-4c52-8fec-1284c0a4fcc6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db01041a-f933-4730-9d81-47898d06ff58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c462e19-a6da-4259-b376-61dbad9e3d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8bb149-84b5-4573-a249-6e5aa50865d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bee12a-e16d-48f5-9503-81ea1edb811f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b2f066-925d-4a9d-9cba-7bc74d23d065",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ef2087-ee9e-47c9-bd2e-3b81e683b2e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "009b317e-fe0d-4827-9e7d-5ed3cc395569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827899fc-d99c-4685-8674-759cc84c9fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2218ab28-a495-470a-9dc7-9ee0f51d8cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c563fa3-6c88-48d9-bf2c-30cb8f1e2383",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d487c87-9861-4bbe-8d4e-bf3713bfa649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844c6804-5a68-41ef-a354-8f89359b7cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b991245a-1d94-46a0-9043-a013f251205e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc2311d-d7be-463c-9d9f-48565f4caa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dae60a-9ad1-4596-8c50-8c9f081ce3ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d9bc8c-31a2-4bf1-82df-c5a985f2c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "482b386d-d7d6-4f4a-b4cb-217a1ae42c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50dbefe-ee58-48d6-8cb1-7153fc827b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f4e136-7ca0-41b4-8c59-25bef53542b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41361ec7-9863-4606-885d-866b54655b12",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ab4405-c3da-4f01-98e2-47600bc064b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "430a9c2e-3e6c-4c99-a04e-d130157d1b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f431b4-7c25-4e0f-9a57-b98d61e9077d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a021926-da50-426e-9ac8-6d0accc778ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e829fd60-31d0-4b58-bd14-ecae47bd5fa0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18a8ac4-bb7f-4ff6-89b7-36a85bdf0b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991cc070-63b9-45da-bbd7-3d111d7cfeb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508f4ea5-b7e7-47f0-94e2-b6c087ba21d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4355fc6c-1b1d-4cda-a920-b51031985af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9762b430-ca1c-4ce7-9379-23ba8b2f0cf6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc03fbd-05b1-4c06-bc43-e2021787f621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cef0b0f-a7ea-4dad-aa60-494cc733d9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85cc581-da67-4fbe-ba69-79cd610ba41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd988bc-ed48-4496-bc20-10e80823cd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a776597-7dbb-4b64-a1fc-86625f43dd86",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd31d7-b0e0-47df-bf3b-af294eb4088f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bcd446c-e34e-4769-9359-69e02a0d1804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380aa3e1-6ec6-4dfa-9c53-67e69c8a28ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbe1ccf-8da8-44b7-a6be-9baed524637f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee2b663-3c9a-4b61-9c90-e1f4ceeaddff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b1ddda-fe80-45c6-a5d0-78386c443e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9256e8ff-7b12-4730-904a-4b989710952e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b647b4-b4af-4347-8182-dfa05467561a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51add22-b9d6-4f3f-9af6-5d6ed18fa912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfe8c55-272c-48ab-ac7f-dfff77812710",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc94325-c06f-49f8-b3ae-b151191a544d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c75b205-db6e-4154-a0b7-8c0d69f140ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aebcd6d-e2e8-4cd0-b81d-434004a36fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99558ad5-5670-4d2c-af7c-9823de6dbd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063d64d8-b1f4-4f22-8be3-0ddecec0ce60",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3521ff8-01e0-4088-a5d3-77565be0a33b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d3513d-7090-4462-ba78-e1513c3b06e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35af54b7-d5d8-4d57-bc2f-e2133b31486e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033e28b3-b894-4661-b1b4-5f67251a1b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e9297e-8e4a-4a38-b87c-c5613d2bf97a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae01f7b-0064-42a6-87a1-1e06065d1735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4297d4-0c60-4da3-9f87-48a6108010a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa762a4-fff7-49be-95c5-82fa0bae65d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0918eb9-4d32-4b3a-8299-21f196f08193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441e8c2c-12d4-43aa-b371-ec0d94785322",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5702be8-36b5-421c-8033-fcdc93cb08a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27666a07-8493-4c7c-a301-f4c91ee4b62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe50292-6aae-4082-a56b-31a6f1ed225a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101c8b19-fe61-4c75-8890-6b2a2baa7772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ef5803-9323-4379-8455-3a557c3ed6ea",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae2a3ba-642b-4d76-9e3f-41f22c1803fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e9bd89-a8b4-4c64-a13a-e8de7b41774c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a76b93-91ad-49dd-989a-0163ae050332",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fc5dd9-55fa-4088-a250-001ddb41e603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46720aae-75d4-47a0-9041-f3e2bb144d1c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d147345d-9c15-4d97-b284-02b9b18f2b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70dd0a54-32a2-4e5f-bd49-4fa30bc43103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0904d9e4-2ea7-45a3-8e7c-d0ce5ddd3dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fa0ce4-8a39-4176-b0a4-587eb46812cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0eda3d7-3208-44e0-a2d6-5fa51d4da334",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1016017-fad4-4600-8393-990fd3dafe9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02703c05-fdb2-4ef0-a534-33daa2861ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eb0321-6d2c-4640-b1c8-8f5473534710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdfdc8f-c6b2-4dae-b90d-1d45861b8688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76e4d19-527e-4796-bc11-6dff1244d793",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbdb1e3-5e31-47af-a27c-59cdabddd37e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb7f911-3741-4cd2-aefb-159552a9e8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5af018b-398b-46f7-bff9-85f8955f81ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd20c52-7977-474e-a3ef-cf8f7f5db012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27544fe-5625-4d94-85d8-abb760556545",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcbc3a3-ce48-4132-8b00-292cda9ff82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "530475df-f364-430f-83c5-f84e0655f7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c33f5c6-61da-4096-9ed6-46858dcf8793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bbd369-a14d-4305-bc3b-c38e77defe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff861c6-3200-422e-87a0-9062b2136e0f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2421ae73-5e6b-4902-8c0b-6102525ecc0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542a2c89-c6e4-42cf-9eea-b58283c4ea6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f89e16-5098-44ef-8302-818f576b6130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2525f0da-f181-4462-b02f-82581ceee4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d2837-795f-453a-9f49-1df72b165400",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2fb77d-1b42-4601-8965-9c2f2fc71006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27f9ed1-7715-4ca7-a8f9-ea5a235b1a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861d9ea9-238a-4e68-9f62-4f5e22a32250",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d9592b-3532-4bdb-8bb5-73f040a86a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0ff86e-65de-4901-85c7-bb987a9cf69e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417812f9-d5a9-4ca7-9497-58b337d4be0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31d3060-c7a1-438c-9ffd-445f2d6980c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96b4ad8-304d-4df4-b62c-fc1fb51b3a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056d1dd5-425c-43df-a731-6fe785954f57"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df65b15c-c129-4dc5-bd28-8785be3ece98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a165a18-8740-49f5-a88f-7193ee2d6b6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "806b1517-01ed-453b-8b01-593532b30023",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9af2acb9-df96-4217-91e6-09ceedca7644"
                    }
                  }
                ]
              },
              {
                "id": "a12b553e-b9c0-4b7c-ba90-271da9c7e124",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5f7fc0d-4321-4e10-a576-ddce2b9f99ee",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b215c0b5-b6e3-4814-811c-c00178ddd39d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c722b02f-6fbf-48a3-9ca3-88841775b38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b10d35-481a-4b9e-939e-02612ed05ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1d72e17-ca99-43d0-ae1f-584eeb2ca1a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9be92ff7-b805-4629-9e71-f8d7a8d600a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "318d9c96-fd66-4ff3-aa23-873feb0218c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93906a60-738b-45ca-9190-b8315e9f62c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "927fcd73-9225-4b99-82a6-6704b86e1601"
                    }
                  }
                ]
              },
              {
                "id": "aea3f224-9aeb-4494-8422-40888c2c4aaf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5479da28-5172-446d-bbd6-799e2978a31a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524516d5-2c04-4632-91e9-c6b5872dd497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3126ec5d-ee5e-4f34-b7ab-aa3c8d9ad143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a16b25-6ad5-42cd-bbcd-3901f1e6cc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfead3c1-12e7-46c3-ad95-01a3f0bfb3de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9f166fce-16dc-46ef-b8e3-9df2c401ea87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "116b4920-680a-4e91-bfc7-d7335c521363",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8ba7040-4510-45f9-8349-f7f951051ca1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8f7aa0c3-9a9c-45d8-ada9-1a4ed3bd79e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e8734c3-b820-45cd-90ba-b380bdf278a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50b24b07-19a7-48a9-a8dc-b1df86adf201"
                    }
                  }
                ]
              },
              {
                "id": "d29f1b1e-f8c8-4538-b1bd-8697899627f4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d754fce5-8433-4dd0-9a6a-274521ba5c93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f5871d45-07e6-4861-b830-bea961eaad2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4102e449-75be-436e-a8e1-c5559702a676",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "250310f8-b570-4726-8880-91210738a24f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56105e45-743e-48ef-9a88-23dc40b67832",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e738cd79-721f-4669-abaf-e73ac77b47ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a931ed38-4716-412b-ad1b-b55259a0c320",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afcfb77d-cde4-4ae3-b66a-0ecb9d1f61ff"
            }
          }
        ]
      },
      {
        "id": "df327e50-20cc-41ed-a06c-6dc9869591a1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bea22ffe-ed09-45af-b32d-03079acf0dbf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb0ede32-4d1a-4492-9bfd-88830a16689a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd846b36-fadc-468a-bbf7-7a1871b37122",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9a7dc3-f9d2-472e-9443-b3c907a7bc5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21cb7877-43bf-4b6f-93b9-4c8da8349d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa7403e-26e0-4c1c-8456-aeb2fa0d3855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9368715d-7969-4bc0-a429-620ad0333b3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8bbd647-50aa-4b63-a674-5b3f4752ded1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abd2d72c-c518-4cb6-b6e6-0d304c03e1d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7999afac-982f-4999-9db1-e1affbc5c535",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb96ce99-2754-45f3-91fa-37d0d1bfd43a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a16af7fa-871f-4379-b651-1795f714984b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d0750993-c6cd-48a1-aad6-4fb7715116ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc457719-9ffd-4fe0-86fd-448bbee36c91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c62bf5a9-e315-4c2c-8213-120553b07882"
            }
          }
        ]
      },
      {
        "id": "dae7169d-ebc6-48c7-8cd7-5bfe83bbf6d7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ce82eb01-a105-4c93-ae4c-83e7264582c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c1b9b9c-2c00-40fd-aed2-54dd93c3c4ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ce1317e-7ea7-4c11-8987-c3cebe992d0a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc20248e-c684-4820-b400-1e26aac2f6a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3968e3f3-eb55-41a4-a408-cfa9afc2baff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008be879-c819-463b-ae87-c4baa47bbb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a538ff6c-fd9a-4fcd-85b1-583e26a0c5ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3340aa1-77b6-402c-be37-0db67a4cf40f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96f65fa5-dccc-49a6-b09b-273086700a3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9885a94-55ed-4c08-ab6e-6a4acefd0f52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b108c7d-7208-4753-9c96-daf589c1c7de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a35ee7cb-a35d-48f7-b2eb-b4baeff574e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f5ca42c-9bae-4717-b65e-6edd543bc19f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c01f50ea-6a33-4efb-ac95-c8265f36e875",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7991012d-cad4-4f1e-afbe-4166aca728f5"
            }
          }
        ]
      },
      {
        "id": "e2e0fad8-783a-44ef-a1c1-5aa0c461f21d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "348ce3ed-c155-4ff3-97b0-bb91cbf61cad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86aaf4b9-e3cf-4e8e-92ef-d221550f676f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d4e912a-7979-4ce6-a4c0-d9ffb3e48380",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3578cb1-11d3-4265-9cd0-31585d59627b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1421d3db-6088-41b8-8a1a-27900d12339c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d6fdbc-3f90-4a62-854c-6583e51399ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bba827e-311d-401d-8f05-a24d52a5f4e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d9a2ecc-a880-4433-bc9d-3a98eba0304c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27b354c4-b62c-4842-89fb-3aaefa34e04f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c6d9b76-6175-4ce6-9166-9ed06ed93dba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f7a221d-6699-4460-b90a-ef77cce8e785"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c07196bc-1076-45a6-ab2c-2b290917b843",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1eb734eb-6572-44e2-a02a-c152c683ddb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d451b153-35e9-4436-a66d-90ea207ffa1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cf63e99-f29c-4cf1-8452-83a11e0f6821"
            }
          }
        ]
      },
      {
        "id": "65b9d0c3-5d2b-4a9a-9019-30055cd00081",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49ca505f-048a-495e-bad3-769739246d61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a99cdfb0-ca0e-4e87-8c7d-c0475d27284e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a9158f63-5233-43d7-9a6e-f85e5bbdb797",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b25ea3d7-ed1c-4c1d-a18c-a50d8f03fc0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d251912f-c537-4e33-9af0-43b47f0a9d75",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.9578947368421,
      "responseMin": 6,
      "responseMax": 8794,
      "responseSd": 621.1339757017058,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707265948157,
      "completed": 1707265990912
    },
    "executions": [
      {
        "id": "2faa9dd1-4222-4b1f-bbc6-4e18eaae0377",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2870e95d-8281-4c9e-9936-cc15be9bd30e",
          "httpRequestId": "c753ac50-6850-44c1-a28a-3019227315b8"
        },
        "item": {
          "id": "2faa9dd1-4222-4b1f-bbc6-4e18eaae0377",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2bf8423e-52e4-4550-a73a-3f9996f8fff6",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "af61ae3a-7487-45f0-ba23-24066a6f12af",
        "cursor": {
          "ref": "33fc47a1-3b00-4c23-8f81-f07190cea00a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "875e38d0-dd85-4012-81e6-f3c496df8e07"
        },
        "item": {
          "id": "af61ae3a-7487-45f0-ba23-24066a6f12af",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f3b73b55-5e2a-4fdf-9b6c-0b4af3649c97",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "7bd13698-dd20-4462-b69f-fd01f7483a04",
        "cursor": {
          "ref": "0727c84b-0abd-4763-8041-4e8145fd38b3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ff328b0f-ecb7-43fa-97a2-86ec2144edbd"
        },
        "item": {
          "id": "7bd13698-dd20-4462-b69f-fd01f7483a04",
          "name": "did_json"
        },
        "response": {
          "id": "9245bd50-409c-4917-8926-753feefedf88",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96b0677-f89b-4710-8f61-a1b3d56f92d3",
        "cursor": {
          "ref": "cddc810c-aac6-458a-99bb-d14592f3f48a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "58f81657-b49d-4404-b67b-026e2fb3ee3c"
        },
        "item": {
          "id": "e96b0677-f89b-4710-8f61-a1b3d56f92d3",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb45c44c-fb23-4e9a-93d0-212e1ec52ac7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2580,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96b0677-f89b-4710-8f61-a1b3d56f92d3",
        "cursor": {
          "ref": "cddc810c-aac6-458a-99bb-d14592f3f48a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "58f81657-b49d-4404-b67b-026e2fb3ee3c"
        },
        "item": {
          "id": "e96b0677-f89b-4710-8f61-a1b3d56f92d3",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb45c44c-fb23-4e9a-93d0-212e1ec52ac7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2580,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205a0eda-d618-485b-81b6-485b94b3a9d2",
        "cursor": {
          "ref": "5b7e173e-7fa4-41fe-af9c-061e3b9466be",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5159e4b7-c056-4d3b-b47b-6f20765ac0c0"
        },
        "item": {
          "id": "205a0eda-d618-485b-81b6-485b94b3a9d2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0282873d-eef1-4cd1-b6a3-8fc35bbc6aac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39a5526-04d3-4d9c-a5fd-671a454ca654",
        "cursor": {
          "ref": "eec48ea1-b34d-43d7-8080-2fda5c704c40",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9baf1cf6-bd8b-4a04-9d61-4aea43fb5c71"
        },
        "item": {
          "id": "d39a5526-04d3-4d9c-a5fd-671a454ca654",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e93475f3-3f10-4c73-a963-6b32b98d76c0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efa3eab-8d33-44ea-b0d5-d0ed32d90fb9",
        "cursor": {
          "ref": "c3d52ef6-1808-4834-a06e-c695f4236da5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "db17f272-ef2e-4709-af93-ab68a9af4633"
        },
        "item": {
          "id": "9efa3eab-8d33-44ea-b0d5-d0ed32d90fb9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7777d878-a271-4696-8539-b884852003cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541253e3-58fb-4e8e-9320-238c69a22523",
        "cursor": {
          "ref": "7d620fd2-59f3-4a20-82ad-afe0a4df25df",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cc547f8c-d1a5-4895-9992-ab1d39b417e7"
        },
        "item": {
          "id": "541253e3-58fb-4e8e-9320-238c69a22523",
          "name": "identifiers"
        },
        "response": {
          "id": "b8ecf62c-a489-4701-b4d3-e3f21d29812f",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f619001-b98b-4ef2-9653-2d59f6088388",
        "cursor": {
          "ref": "8bf332ef-83a0-4395-9913-e913271d3b26",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7c938f8d-8c66-4986-b4d1-086f55a7eec0"
        },
        "item": {
          "id": "6f619001-b98b-4ef2-9653-2d59f6088388",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "22c72aab-a4b4-4696-8f72-89b0f92c0bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67828895-5721-4f68-92a9-7da1f44f2c50",
        "cursor": {
          "ref": "91c30cac-4242-408c-b8bf-52addfb3ea67",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "914f3916-7466-4f99-a2c0-2b1ff8f7efb6"
        },
        "item": {
          "id": "67828895-5721-4f68-92a9-7da1f44f2c50",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d1a3d719-83fb-42b2-a676-ea2773d41f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3a4b52-cf71-465f-b5e3-d665cdad9536",
        "cursor": {
          "ref": "53575448-e3e0-4682-9285-d474efbe8674",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "026a7bd0-ee05-4612-8b98-13c927024bd2"
        },
        "item": {
          "id": "bd3a4b52-cf71-465f-b5e3-d665cdad9536",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7ba84786-32fd-487e-a352-9fd034b85abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f957d0-f2c5-411c-9f2a-b72d8365a36e",
        "cursor": {
          "ref": "800b4fc6-22ed-4acf-b9fc-2ff3517dfdb4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6190887c-9d6c-4472-82db-783231069d36"
        },
        "item": {
          "id": "92f957d0-f2c5-411c-9f2a-b72d8365a36e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7e912eaf-cee8-4483-a6ec-179a3123f1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9f649b-d8c2-4792-92d9-d6973017e66e",
        "cursor": {
          "ref": "53bcf420-5f7b-488a-92e2-7d501b5da66a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7a89aa6a-a217-4c74-a408-03740556a419"
        },
        "item": {
          "id": "fc9f649b-d8c2-4792-92d9-d6973017e66e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dfa175d3-e396-4212-af59-80877c6db43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87836d63-f02a-46f6-a0e1-d6c340e21553",
        "cursor": {
          "ref": "1e626215-3832-4353-9960-a6cbcf7f6a4c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "babd0997-a857-4897-985d-8a7d4b25e99f"
        },
        "item": {
          "id": "87836d63-f02a-46f6-a0e1-d6c340e21553",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4361f148-7fef-484f-8b98-6b33f2befa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9729ffa8-ab6c-4c78-89ce-8d7cc425f563",
        "cursor": {
          "ref": "e16ec2b0-fcb8-4ae5-88ee-6795a258410d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "762e29aa-7425-4b31-95a5-fa9b1e2e152d"
        },
        "item": {
          "id": "9729ffa8-ab6c-4c78-89ce-8d7cc425f563",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "af4db6e7-ab1b-4acc-b715-5884c5e66d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d3f39d-e7e6-4a58-b588-709d88787856",
        "cursor": {
          "ref": "7433a666-b847-43b8-bb27-1fe8856c20d1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "156871e0-de9c-4ccb-8948-49288694ea04"
        },
        "item": {
          "id": "a3d3f39d-e7e6-4a58-b588-709d88787856",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b16359d1-81de-4a3a-84de-9cab13b1bce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8b6ad2-9b98-4ba9-aeed-981417a0152e",
        "cursor": {
          "ref": "7b8a7bec-3dd5-48ac-9389-439d434d4bfe",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f90e661b-8548-4d62-933f-a41205ea54f4"
        },
        "item": {
          "id": "eb8b6ad2-9b98-4ba9-aeed-981417a0152e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b87036a9-cca6-4ede-90ee-5363158cce14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97075aca-161a-44dd-8473-4f16b80000d8",
        "cursor": {
          "ref": "05db0f84-5517-45fb-a5c6-eb5b850ea13c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "45c4d88d-01c0-469a-b675-874ac7f390f1"
        },
        "item": {
          "id": "97075aca-161a-44dd-8473-4f16b80000d8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "40ea66d5-9df3-4b76-bfee-daae66d90316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f641b58-ab23-4458-bd16-dd634f7f19b4",
        "cursor": {
          "ref": "52ef63ce-2749-48c5-9144-8d99f9369c22",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "52dc1c79-df67-4285-9744-2987b489d368"
        },
        "item": {
          "id": "7f641b58-ab23-4458-bd16-dd634f7f19b4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b1d37b49-1796-462f-8558-b9e523434c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501c66ea-f900-4be6-9c8c-25d61b2903e4",
        "cursor": {
          "ref": "9376b592-1135-49e2-95df-6821f4482df7",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ba6279e1-9e5a-417d-8fdc-7ae854c26de7"
        },
        "item": {
          "id": "501c66ea-f900-4be6-9c8c-25d61b2903e4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "032d1409-051e-4902-9dae-c2c13df9751a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e676499-4f2e-4736-a1a9-66f93f026217",
        "cursor": {
          "ref": "bc89ff7d-4392-4a5a-851b-d2dac79035d7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e7a1b3c8-5a5a-41bd-9c89-4c314149e16d"
        },
        "item": {
          "id": "2e676499-4f2e-4736-a1a9-66f93f026217",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "655d1c68-e50a-4ce9-8393-2bb62ddffdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e894664-ffb3-4900-a6ba-bb318c4d3e3c",
        "cursor": {
          "ref": "3590543d-b13d-4b3a-8d18-1ec8138811d6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3838ce14-3a6f-4543-b92c-53f7a5717ce1"
        },
        "item": {
          "id": "3e894664-ffb3-4900-a6ba-bb318c4d3e3c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ecf39462-351b-422e-a056-ee844320df28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7438fa08-d353-460d-a475-8dd716cf1152",
        "cursor": {
          "ref": "db4abaab-5edd-4b89-bb5a-7905f7e0b9f8",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b7c79b15-b0fe-4e19-9d3f-a67a3c12ddc2"
        },
        "item": {
          "id": "7438fa08-d353-460d-a475-8dd716cf1152",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "942ed9dc-ffae-4056-93cd-6345def0f37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f0cc3c-631b-4ebe-bb25-cfbb9db9691b",
        "cursor": {
          "ref": "53438d92-bb1c-4ba5-a00c-6aff95b316f3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fd11704e-41fe-495e-92b6-c6fe50105474"
        },
        "item": {
          "id": "a7f0cc3c-631b-4ebe-bb25-cfbb9db9691b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cc8f2294-05cf-4f94-b3bb-d44340b338d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197f79b5-44e8-404e-af77-e66755c9233f",
        "cursor": {
          "ref": "48b35520-a11e-4dd4-acc0-96512ccbce08",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9495b3b1-d8a5-4674-ab0d-2accdab70d74"
        },
        "item": {
          "id": "197f79b5-44e8-404e-af77-e66755c9233f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3943cbd8-adc5-44ca-9545-a03d8a15d1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea042c37-e8e3-4c4b-8325-b521fe1fdd0d",
        "cursor": {
          "ref": "dff6b7ea-9910-4347-8e73-279b3e97fadc",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "21a5f889-c35b-46bf-8d49-591fe1260b92"
        },
        "item": {
          "id": "ea042c37-e8e3-4c4b-8325-b521fe1fdd0d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0aea69d5-b742-48ad-90e3-7c4a8eed3a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b2dd8-bf80-47dc-aea0-55f3f54b62d0",
        "cursor": {
          "ref": "7c799e87-923a-47c6-a7bf-c8d627213691",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "51c7d3c1-8a9f-4477-950a-e16d9ce40ab0"
        },
        "item": {
          "id": "9f7b2dd8-bf80-47dc-aea0-55f3f54b62d0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fe30b861-6c63-4a64-b571-e0278c7baeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8812e45-4b1b-4668-b0d9-4b7118ab1421",
        "cursor": {
          "ref": "90198f1a-e31c-4b34-9100-f7f649d9159b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "780d6524-8d57-4ee2-8a5e-4a0d5daa48ca"
        },
        "item": {
          "id": "f8812e45-4b1b-4668-b0d9-4b7118ab1421",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "67f0fe6c-9db2-468c-a0ac-864442d22fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497b510e-5db6-4431-a2a3-cd12eac845b3",
        "cursor": {
          "ref": "2e5da62a-3908-41b6-b360-7917f447eaca",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fc69f22d-2bbf-4bf5-98e1-bcc0e5df9d3c"
        },
        "item": {
          "id": "497b510e-5db6-4431-a2a3-cd12eac845b3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "84014c7c-eb65-489a-aace-96e342242e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43527f9-9fa9-458e-9496-e32de851ecd2",
        "cursor": {
          "ref": "8ee91686-3f21-4fc1-87af-304096c5dc4c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5437d66f-041c-44d9-89da-f98a2f1879ba"
        },
        "item": {
          "id": "c43527f9-9fa9-458e-9496-e32de851ecd2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8de3e8f0-5e97-4e6b-a741-f5b9506926a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f525f8-5a99-4202-aa86-5795edcdbc8a",
        "cursor": {
          "ref": "b7a4f231-9f8f-4385-8391-0a46d3f4bf9a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8c372231-3438-40a1-83c9-888921f1dab1"
        },
        "item": {
          "id": "b6f525f8-5a99-4202-aa86-5795edcdbc8a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b3cb7cc5-be38-4808-82a6-d1ccd79fb75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b5fcd4-606b-4b4b-9ae4-ec79c0b09140",
        "cursor": {
          "ref": "3b30ca37-36f7-4254-917f-b04e1a9fad68",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f68fb51f-9e6d-4003-93ed-d59cfbd60a94"
        },
        "item": {
          "id": "c0b5fcd4-606b-4b4b-9ae4-ec79c0b09140",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5b4b5622-ae17-4595-8f04-83f208e417e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477ef71e-0956-4f1a-ba06-2d7d22627727",
        "cursor": {
          "ref": "ef5a58c7-5244-46a7-ab77-6c54a1aa6633",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "42a39e5c-267f-47d6-98a3-527c8e430567"
        },
        "item": {
          "id": "477ef71e-0956-4f1a-ba06-2d7d22627727",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1eac3b28-9a01-4502-a2e0-1681a489974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09f0a1c-78e8-473a-8629-351656620bb1",
        "cursor": {
          "ref": "6d4c1c7a-6e6d-4d7f-af63-ff776f5cbd72",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f243afa5-b363-41b6-9947-ec7ed40bd239"
        },
        "item": {
          "id": "f09f0a1c-78e8-473a-8629-351656620bb1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "13e2a3ce-c858-4c66-8516-c396d951e48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6f5ad2-6258-4ab0-b3c0-f448c5e1d0bb",
        "cursor": {
          "ref": "b64d4fae-6a2e-414a-844a-972bef36198e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "311ba3d3-570b-434c-b808-89a451a37def"
        },
        "item": {
          "id": "fe6f5ad2-6258-4ab0-b3c0-f448c5e1d0bb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e20f8a08-7787-4525-bc05-4076993cfecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45abeeea-1a99-4c47-a55a-011427157f3d",
        "cursor": {
          "ref": "a7869117-9c5b-4b80-bb89-133b243fe071",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b307c6f2-c4c1-4d4e-a642-a4b4bbd89a9a"
        },
        "item": {
          "id": "45abeeea-1a99-4c47-a55a-011427157f3d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3548c652-53fc-400b-a11d-0b0a43484246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d4ef75-f0ea-4fe0-a6ac-c6500958b25f",
        "cursor": {
          "ref": "73dbb1eb-9bbc-4b50-bdc2-9ec5fb0a0cb1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3f85a492-475f-44ab-810d-92857990ea8c"
        },
        "item": {
          "id": "f1d4ef75-f0ea-4fe0-a6ac-c6500958b25f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "09ab816b-5742-42ba-83a5-a579aeb510ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f09abe8-ec0c-42cb-97ff-bb995da02190",
        "cursor": {
          "ref": "eb25de66-0818-4f33-92a7-621d268a9d07",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6d12aa61-a66e-4681-af53-a5ef003df426"
        },
        "item": {
          "id": "2f09abe8-ec0c-42cb-97ff-bb995da02190",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "004038ad-0748-4565-a273-ba855d63d411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6821ad9d-b8ee-43db-bc1d-508820fa4156",
        "cursor": {
          "ref": "f7930040-6ec7-4fd5-a67e-1b350d03e021",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6af34489-faf2-405e-887d-ec71bf0885c5"
        },
        "item": {
          "id": "6821ad9d-b8ee-43db-bc1d-508820fa4156",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "efddfd7c-f9f6-4e8b-9d84-ee6f7e14d30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef32d97b-164c-405f-9d50-c3d340d74034",
        "cursor": {
          "ref": "f12548b0-2b36-4a82-9ad5-e91edad45e2f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7e56680e-0f08-44f4-a2ab-f5b5b8284160"
        },
        "item": {
          "id": "ef32d97b-164c-405f-9d50-c3d340d74034",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "06b7cbae-a039-49f0-b0ec-90fbcfd00227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7467c099-106f-4e37-baa0-224a41a7d6df",
        "cursor": {
          "ref": "8396d89f-9b09-4eb0-9a50-d3c3f270ea7a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7ab25a9e-d46f-4a41-b272-dd4322d522dd"
        },
        "item": {
          "id": "7467c099-106f-4e37-baa0-224a41a7d6df",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6aa3bd8e-a5e0-4eef-94f9-7c3cf9a69432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43a84e6-f16c-4055-91c9-d631483fe6a2",
        "cursor": {
          "ref": "3044915d-0fa5-4842-8bd0-3cdf0cbc5f8e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e8d419c1-dd16-4ddf-8b66-a923f5b9b159"
        },
        "item": {
          "id": "a43a84e6-f16c-4055-91c9-d631483fe6a2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e512a190-de20-42c5-aa2f-cff67161200d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97f24df-d321-4691-a722-165e6e166c11",
        "cursor": {
          "ref": "2561ff11-94b2-4ac4-818b-72a206d0c3eb",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "30be3e44-1a96-40ea-bbb0-a96cc118b911"
        },
        "item": {
          "id": "a97f24df-d321-4691-a722-165e6e166c11",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d0455573-23ee-4d07-bd1b-8044bf9b3dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b933e0-49b7-475f-9e9a-37167686c5cb",
        "cursor": {
          "ref": "c852b7c9-78ec-44a0-a302-f88bbca091f8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8419f3ff-a0f1-4c0f-8915-a8ac07e602b5"
        },
        "item": {
          "id": "97b933e0-49b7-475f-9e9a-37167686c5cb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0ada958d-9c61-4f98-b0d0-acecf2fef6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24580766-8601-4f4b-8fa7-b2de8b861ecc",
        "cursor": {
          "ref": "49a52e70-5405-4393-a7b4-967fe5467391",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "44b7a8e0-1cce-4e03-bae8-aed561f9410b"
        },
        "item": {
          "id": "24580766-8601-4f4b-8fa7-b2de8b861ecc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2f35369e-ab20-48a7-9a40-3aac3e3e2bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322f3d28-8df7-4d0c-bdbc-a12a5e46ef5b",
        "cursor": {
          "ref": "a170d70f-784f-45e9-a747-fef5789f643f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f724ee02-39df-4743-81b0-9392bcd20040"
        },
        "item": {
          "id": "322f3d28-8df7-4d0c-bdbc-a12a5e46ef5b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cf9d3497-3c3e-4463-9441-f6c927013e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2378c6-7b06-49b2-bc14-aeb9e0267fe7",
        "cursor": {
          "ref": "d111ec9c-8810-4b77-b683-5d2c50f2a626",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a003ae4a-7fbd-4af5-9855-dfa247c05c5d"
        },
        "item": {
          "id": "7f2378c6-7b06-49b2-bc14-aeb9e0267fe7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6d595d2c-195e-46e3-b217-00febf0df5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6c0b97-d3fa-4f6b-96ee-5ba0859a1796",
        "cursor": {
          "ref": "6d5a1c9f-3814-4c72-a7aa-73b94df454f3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ffb30840-5be9-48dd-acd8-db39b93964b8"
        },
        "item": {
          "id": "5d6c0b97-d3fa-4f6b-96ee-5ba0859a1796",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "783ba6e7-5a0c-4a59-acf4-0d0359dd6c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8df3d6-c654-4ed7-8c4d-101adb1fcc2a",
        "cursor": {
          "ref": "b897f1c5-463a-4503-a93d-32533ff17f9d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d70a23ed-859f-4613-bca4-03c237075fd2"
        },
        "item": {
          "id": "cc8df3d6-c654-4ed7-8c4d-101adb1fcc2a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "05be544d-00ac-4760-b793-301cd81a4603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd1e172-8446-418e-97ae-4d2138cb4bc4",
        "cursor": {
          "ref": "51907780-a2d9-42d3-af7d-43f4b11a45c5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "41d0ec3c-f4e1-4daa-8da7-167b146b0599"
        },
        "item": {
          "id": "4fd1e172-8446-418e-97ae-4d2138cb4bc4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "beb04ca2-fee9-470d-b958-436cc76f8d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde692d7-2327-487d-a99b-8cd2b954d95b",
        "cursor": {
          "ref": "58d2bc8b-af1c-4e73-b442-6ed72411c03c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5232599e-e0c7-4d84-be0a-a991095f7c32"
        },
        "item": {
          "id": "bde692d7-2327-487d-a99b-8cd2b954d95b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ad1594ca-34ff-41da-90a5-d21434a445e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2946117-9aa6-441b-95e1-0804560aeed1",
        "cursor": {
          "ref": "f46a94db-fe11-4b02-9d71-6754f384a0d8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e7ef034-a78d-4b91-9126-e70fc6c0a8b2"
        },
        "item": {
          "id": "c2946117-9aa6-441b-95e1-0804560aeed1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b942cc7f-f312-4e05-8c0e-aef73c8cd446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2d223b-9a20-470d-94cb-1bf30f21b304",
        "cursor": {
          "ref": "8de4717c-8727-48ff-a3be-545beae72098",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c9507f7d-e45a-4b5f-a1b3-2d18fec344b5"
        },
        "item": {
          "id": "af2d223b-9a20-470d-94cb-1bf30f21b304",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "09766ad8-790f-4ce0-a340-b935d0dd2bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393960f1-dffc-402a-a11b-e390bfe4719c",
        "cursor": {
          "ref": "3f8f349a-91f9-4f08-8922-e1613437d65b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9adf9e67-e4f0-4291-a454-e3d137115aa6"
        },
        "item": {
          "id": "393960f1-dffc-402a-a11b-e390bfe4719c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aad0950d-1d1a-48ad-9bb1-dd901d837684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3869c52e-4caf-4e29-8f45-cf889e3b8a93",
        "cursor": {
          "ref": "9f1f5052-2e5e-4692-a37d-e0a062a3ae9b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3cca21ef-9ced-4127-9e17-a8c2ef5a27a1"
        },
        "item": {
          "id": "3869c52e-4caf-4e29-8f45-cf889e3b8a93",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1eb17f5f-7c78-44c2-8806-bd935997ab91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f57b4e-324d-4258-a993-f410fe161b4d",
        "cursor": {
          "ref": "277a5a62-81ad-4ac8-91cf-0ba6ca973ec1",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b23b578-2953-4c14-b243-e157b410caa4"
        },
        "item": {
          "id": "c9f57b4e-324d-4258-a993-f410fe161b4d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "36b4e6b8-6ab5-4fb8-9236-361946bff697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6fe19-ff25-4b2e-89a3-ab0c6370a7ea",
        "cursor": {
          "ref": "c4c70908-c869-476b-b736-043dd5349afe",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4c7a86fb-036e-4c72-8055-1cbc6919f62b"
        },
        "item": {
          "id": "40f6fe19-ff25-4b2e-89a3-ab0c6370a7ea",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "edf20400-aeed-42a9-8261-e7da7a6092b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc91c37-d194-4e5e-9ab1-9634ae2a626a",
        "cursor": {
          "ref": "206d45ee-1275-4567-9891-dfd2144d02ee",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d4ace192-5b3a-4d65-9777-c2005bf8627f"
        },
        "item": {
          "id": "9bc91c37-d194-4e5e-9ab1-9634ae2a626a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b33b2277-3462-49fe-b134-5a86b154b66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83fc068-2553-4ab3-8c25-ac11d6931de0",
        "cursor": {
          "ref": "70dfcef5-01f3-4597-b51b-0460ee34d6bf",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ab71cfa1-4654-41b1-8bc7-a4ba5ed83619"
        },
        "item": {
          "id": "a83fc068-2553-4ab3-8c25-ac11d6931de0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "93dc7f50-6a4b-40c5-a6a0-bda824b7e2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b595e2-4996-4460-8c0b-adb12a72b5f6",
        "cursor": {
          "ref": "b47d71ca-bd63-4ae6-9fc6-2f253acafdf4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8da85420-39cc-4a11-8f17-65ec2393bcd4"
        },
        "item": {
          "id": "b7b595e2-4996-4460-8c0b-adb12a72b5f6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ab2068ab-2e93-4a7f-ab49-b99b3572aecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3a95b0-aefd-456d-b523-917c31722621",
        "cursor": {
          "ref": "37f406f8-8bf4-455b-a4a1-04a6c9a8a2c8",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5c0ad490-93bc-421c-a363-5ca2633326c7"
        },
        "item": {
          "id": "2a3a95b0-aefd-456d-b523-917c31722621",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c56a3974-dd62-478f-95db-8b768753aa81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ade82f-803a-4a30-b9d0-e44f4aad18d1",
        "cursor": {
          "ref": "5677963b-0899-40d1-80df-2a8d1162496b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "71ceff7c-7ff5-4a26-954d-9d1e3ce00331"
        },
        "item": {
          "id": "f3ade82f-803a-4a30-b9d0-e44f4aad18d1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8d9423c6-5650-42f1-a183-71bdeacee6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1322b828-0529-42d0-aec4-71a32d604a70",
        "cursor": {
          "ref": "f14c0dd5-643c-4297-ab5c-f0ef3e48122c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b2e35597-5eaf-4662-9b02-f5e19cf332f4"
        },
        "item": {
          "id": "1322b828-0529-42d0-aec4-71a32d604a70",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "acd5541a-340d-485c-acad-50fe7fa4ebfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92615bfa-7335-43d8-9c00-fcd13e1d0f81",
        "cursor": {
          "ref": "f53b628c-995f-478c-ab9d-a28ab87e60f3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c0377242-68ac-479d-97ba-ac08c44aab2b"
        },
        "item": {
          "id": "92615bfa-7335-43d8-9c00-fcd13e1d0f81",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fc6f8982-fecf-4c27-8af4-4e8a242834f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec4fda3-c9a4-4b5a-b1d8-06becb238a42",
        "cursor": {
          "ref": "28d244be-36fa-45fc-b440-3567e64c58ba",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a506fa54-3788-419e-8cac-c63a0e255a10"
        },
        "item": {
          "id": "5ec4fda3-c9a4-4b5a-b1d8-06becb238a42",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "02c24032-2ece-46ec-8444-fd4c8c1e3855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7465e9-ce22-4490-aa3c-13f334f43e6c",
        "cursor": {
          "ref": "b9cd1f34-a99a-4f71-b695-02737ac1b89b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b0e46cf9-36c9-407b-b700-440ac0210a1e"
        },
        "item": {
          "id": "7b7465e9-ce22-4490-aa3c-13f334f43e6c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "31bfb21e-6f0a-4e1b-93ca-9d9b55fe938e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99fc8bf-f7a1-4208-860a-74b71c784916",
        "cursor": {
          "ref": "bd1a17b1-07dd-4840-b2ad-d80075fc48aa",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0d48fadf-ef24-4461-a9a8-7e060703efa4"
        },
        "item": {
          "id": "d99fc8bf-f7a1-4208-860a-74b71c784916",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cfa11e1e-8d49-419a-9f3f-b84b72edc76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81f999e-ede2-4218-ad3f-a9ab7531f7c3",
        "cursor": {
          "ref": "90755e4d-328b-4bf9-9f75-096750360f23",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f0528bdd-e5c4-467e-acbd-4413c8d6094b"
        },
        "item": {
          "id": "e81f999e-ede2-4218-ad3f-a9ab7531f7c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d26c1d2b-8d26-40b4-a976-4364fafb9408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad63026f-8a98-40cd-9973-4b9e913a421c",
        "cursor": {
          "ref": "dbe86fb1-da22-4d40-a412-9501c6ad913b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2ca007a5-4ecc-4a93-8455-291173f42a5d"
        },
        "item": {
          "id": "ad63026f-8a98-40cd-9973-4b9e913a421c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eea6de0f-f990-4d2c-b06e-08035b08dfea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0464c7-f2a2-4faf-a03e-2d5b2e1980d8",
        "cursor": {
          "ref": "a2a1e83a-d7dc-48aa-903b-74e7516b6a2a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c0046511-74db-4609-9dd5-569593950119"
        },
        "item": {
          "id": "5b0464c7-f2a2-4faf-a03e-2d5b2e1980d8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b6d90be6-10a2-4071-897c-5bd89fb957d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6043c0e5-7422-49b0-9e47-c85c7515142d",
        "cursor": {
          "ref": "e1f9abe8-71d6-41b4-9b10-95244752a61d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1adc30d3-30e6-4fba-9fc3-10be8c66ba99"
        },
        "item": {
          "id": "6043c0e5-7422-49b0-9e47-c85c7515142d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4b082c1e-83d6-4606-a9e4-fb7df38120cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5991a113-fd9d-4223-aade-39ad6d7784f9",
        "cursor": {
          "ref": "0723f2ec-30cc-4814-ac29-839df0f13bd6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "944ecc83-bd78-4682-9c15-a09c8509e784"
        },
        "item": {
          "id": "5991a113-fd9d-4223-aade-39ad6d7784f9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c4c7f9ac-d260-470c-be6a-8a28e4fd100a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af173263-7e00-4b0b-a84e-be196e26d6c2",
        "cursor": {
          "ref": "9396766b-df9d-4dc1-90c4-68e644a7c49f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "14b38678-289a-4fb5-b073-dbc11ad4f9ee"
        },
        "item": {
          "id": "af173263-7e00-4b0b-a84e-be196e26d6c2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "749c58e3-6620-4273-8103-47550eaac5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe10957-1610-4aed-84d2-533bc4b6f53a",
        "cursor": {
          "ref": "5fd6d921-a45d-45c2-966f-68cd5e40b73f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "16be5298-bf9a-4eed-94f4-8327e0283d08"
        },
        "item": {
          "id": "8fe10957-1610-4aed-84d2-533bc4b6f53a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "63b308f3-6222-4607-bb86-01bf0ec220d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009e1883-9305-47ce-aa90-f9973130498a",
        "cursor": {
          "ref": "0622ef94-9ba6-4f0c-9cbb-8481c79d8374",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "86ad705a-3d6d-4148-8eba-21d727dfde03"
        },
        "item": {
          "id": "009e1883-9305-47ce-aa90-f9973130498a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "672f9b70-9f5a-42ad-8fbd-0cc3c74e6009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4d1be6-ec28-4515-a3eb-5eb777423614",
        "cursor": {
          "ref": "67936c5b-f9ae-4545-ae8e-f0af75ca1a51",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eb2e1ea5-e95b-4d44-90de-90dcc9ca49d8"
        },
        "item": {
          "id": "4a4d1be6-ec28-4515-a3eb-5eb777423614",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e52fca22-854e-4be3-8374-4305a7d23ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33aba6a-6623-4ed4-bbf6-b091014f01a7",
        "cursor": {
          "ref": "de62d7a2-866f-430d-b9e8-cb6f14f72a4c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "22b116ab-750d-4e9f-8431-bb0347f0c237"
        },
        "item": {
          "id": "e33aba6a-6623-4ed4-bbf6-b091014f01a7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0c403a0f-42bb-4c5a-8572-f16c8da1a476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f9ceb7-5ff5-45b2-956c-05ae52cc2772",
        "cursor": {
          "ref": "dc1fb705-20f7-42f5-8644-b49eb1377622",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6b344048-0852-43bb-85b0-02f1edf80c24"
        },
        "item": {
          "id": "e3f9ceb7-5ff5-45b2-956c-05ae52cc2772",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f652da3d-0507-4545-8842-8e48edd45a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f55a26b-831c-423a-9123-1a8a29fa8056",
        "cursor": {
          "ref": "b81c3a69-f4d6-4934-a3a8-28212fec87f3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2cdb080b-2e3f-4d10-a648-3a23f6406bfa"
        },
        "item": {
          "id": "8f55a26b-831c-423a-9123-1a8a29fa8056",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "64ed21ce-806c-4760-84fc-ace012e789ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8047f0db-ada1-4562-8b15-c77c3d4e3efa",
        "cursor": {
          "ref": "20a64f9f-ecf3-4bd7-8649-3f4ca077e0a3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "140c27bf-bed7-47c8-bf8e-eafe30155b41"
        },
        "item": {
          "id": "8047f0db-ada1-4562-8b15-c77c3d4e3efa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "feadb419-d812-4569-b8ea-2d7a0d7426e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aaae3e-4ef1-4851-9fb8-b4ee82f8a6df",
        "cursor": {
          "ref": "4a454c46-ed09-4aa9-a783-1413d285ed12",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b1da78a2-bd39-43f0-b983-665f2573c34d"
        },
        "item": {
          "id": "40aaae3e-4ef1-4851-9fb8-b4ee82f8a6df",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4eeb8eea-2d43-418e-b7f2-3e849b3d4b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96412dd2-f8ea-4b78-9a76-e5912a339bc0",
        "cursor": {
          "ref": "4109a059-d36d-4bfd-8540-5d0d7bde5a8e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "780366af-0e6e-4add-a57c-34caa28850ec"
        },
        "item": {
          "id": "96412dd2-f8ea-4b78-9a76-e5912a339bc0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "28473455-4ecf-426a-a174-56f48e58a969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987e0fda-9ac5-491d-a2a1-eb3210257912",
        "cursor": {
          "ref": "b7a1efa4-b0f3-4858-b9f9-e7d70d90668e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "adffa545-bf97-4667-b239-e8e3c10017a2"
        },
        "item": {
          "id": "987e0fda-9ac5-491d-a2a1-eb3210257912",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a4c26d1a-02a6-417b-8828-5802278fc817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01123922-ccc0-4c31-a14f-d9a65e177755",
        "cursor": {
          "ref": "b43c90bb-9d2c-4db6-aa69-f0bd0771a55f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8bc167d7-c9ef-40e1-aad3-31f8382a2f56"
        },
        "item": {
          "id": "01123922-ccc0-4c31-a14f-d9a65e177755",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "df9d2548-96ec-4fcf-bea5-4c1acfba0f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21eadc88-ba74-4111-8fda-9ca73266dc5b",
        "cursor": {
          "ref": "cc20faba-1310-4b0a-8a88-8bc26e05a0b5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f0d2ea2d-80e2-4a5a-a383-a7b8444366d3"
        },
        "item": {
          "id": "21eadc88-ba74-4111-8fda-9ca73266dc5b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3f273dc-ca8e-4333-8985-a4fc3cfd5d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb35dd6-298b-4a55-94f1-9c921eda511b",
        "cursor": {
          "ref": "7a65dc86-d487-4140-adaf-74dc06fc0f17",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "711198a2-612f-45ec-bf57-0a3a8842e07f"
        },
        "item": {
          "id": "ceb35dd6-298b-4a55-94f1-9c921eda511b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "58d2b230-f83e-48d3-9a45-7812c2d4fff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6392d5c6-517d-4198-b95d-8d00b276d2d6",
        "cursor": {
          "ref": "1b319a0a-313f-4369-873a-7f136d336513",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b731ad23-129e-4996-8cd5-b43d5cd8e8eb"
        },
        "item": {
          "id": "6392d5c6-517d-4198-b95d-8d00b276d2d6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "98ad60e4-3ac0-43a3-b007-d40cf2bf47a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47fa6d4-0361-439d-928d-3caefc69ef49",
        "cursor": {
          "ref": "24f7338a-69b4-4d1c-88ef-5d4bc232c2a8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3c1dd187-3dd6-414b-8cbf-0eee5c5f2c2e"
        },
        "item": {
          "id": "c47fa6d4-0361-439d-928d-3caefc69ef49",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "07c80925-87ad-434c-a919-9a10e09efd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b24c6b8-dbe0-4b8a-8f37-284884fcf039",
        "cursor": {
          "ref": "5c5ea46d-e759-44b3-a272-4a6954bc6e2d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "557ef3b4-03a7-49df-b1eb-6a02a5afc8e8"
        },
        "item": {
          "id": "3b24c6b8-dbe0-4b8a-8f37-284884fcf039",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8be2a6ac-8127-49e1-bdf7-21c2be093392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f75915-aefe-4871-b22a-aef4f89a50de",
        "cursor": {
          "ref": "14d15a17-505f-4bf0-aac5-12fb2bab499a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "02d047df-78a4-4d20-af88-77b935a06093"
        },
        "item": {
          "id": "c1f75915-aefe-4871-b22a-aef4f89a50de",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a474b61d-cabc-42ba-b963-649764d13245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f9c4a5-8e91-41f4-ab2f-4c72470ccf6c",
        "cursor": {
          "ref": "122ec6e1-1ea7-4361-85b7-aad23080e231",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "264d4799-b6c4-4338-82d5-ccd28aa24e52"
        },
        "item": {
          "id": "48f9c4a5-8e91-41f4-ab2f-4c72470ccf6c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c9412912-6ec5-4b8a-b3ec-45dbfd008199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4118fd-6583-46f5-afd0-a2aef679e162",
        "cursor": {
          "ref": "185e911e-06ca-4871-b659-b3cb12ec635e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f8b19bbb-a5c9-48de-8848-f08937832a9f"
        },
        "item": {
          "id": "eb4118fd-6583-46f5-afd0-a2aef679e162",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "985c2ec2-c9ce-4454-9238-e70324cfd8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6174666-f793-402b-a11a-0156839c5195",
        "cursor": {
          "ref": "320c22bf-823f-4c93-a917-51b96705381a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2259101f-5ef4-4488-8b98-dc35e8e47e86"
        },
        "item": {
          "id": "e6174666-f793-402b-a11a-0156839c5195",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6ccb6a0f-2eb8-4c09-b090-fcb6bcc4aff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39d3f48-f063-4988-ba37-d9e876905405",
        "cursor": {
          "ref": "a8b2dc80-33e0-40c8-afd8-86caacc7b65d",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bb3a32a9-f2c6-45c4-8c69-4adde44d1d32"
        },
        "item": {
          "id": "b39d3f48-f063-4988-ba37-d9e876905405",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9fa89c37-044c-4e28-ba14-3a1b1fe87169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f287e48b-aa60-45b4-834b-36dcdde11483",
        "cursor": {
          "ref": "b5488300-2c15-49b9-9466-53b9cd2822fe",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2e537396-624a-4d4e-88ee-04a6cab55bb5"
        },
        "item": {
          "id": "f287e48b-aa60-45b4-834b-36dcdde11483",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a321c965-3256-4e24-90ef-3cd1fc13dd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada8d8be-7341-4d4c-9668-c872fcfd6f06",
        "cursor": {
          "ref": "2aeca37d-64a3-4120-869b-36508a585837",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "be562f78-ca95-472c-a291-724cd7721c1e"
        },
        "item": {
          "id": "ada8d8be-7341-4d4c-9668-c872fcfd6f06",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7b4f62ff-7d13-40d8-b515-93e003d4e345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29213a81-d290-4fe4-a622-0cd1ca2c3b3f",
        "cursor": {
          "ref": "2d6a27ff-be1b-4151-bfcc-7e57757e1a0d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b506fad5-b444-4197-93c5-a6eab1612856"
        },
        "item": {
          "id": "29213a81-d290-4fe4-a622-0cd1ca2c3b3f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "90354c8c-8c08-431d-b673-9dc7558b85c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7cd60e-d599-413a-93a1-469b064f4d0a",
        "cursor": {
          "ref": "053a4c08-8c90-4386-8402-3bd4ee5a0503",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "25b13d6f-6ea3-4729-8532-61e746e66ec1"
        },
        "item": {
          "id": "7b7cd60e-d599-413a-93a1-469b064f4d0a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "875a8a95-9dc7-41b8-9c8a-47e537efeba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9148ef4c-1257-4dd3-822b-3db8a92dbc2d",
        "cursor": {
          "ref": "46c8cd1e-63c9-4bf2-ba64-cb95ed215a15",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "61eae3fb-7931-4418-b5ae-65731b6d9872"
        },
        "item": {
          "id": "9148ef4c-1257-4dd3-822b-3db8a92dbc2d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "314ac5a5-e23e-4abd-be4d-5a0d8e78049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b6962a-5bfc-4bb2-b034-589a95f005b6",
        "cursor": {
          "ref": "aaf26b2b-c8ba-4a59-a50e-ddb94cfaa34f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2160b9d6-74c0-41f1-b680-3a7a2aa08f02"
        },
        "item": {
          "id": "65b6962a-5bfc-4bb2-b034-589a95f005b6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e209f044-f7b3-49a9-acfc-bca7b8d83669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac358bf-9c04-422a-bfe2-b5592825be51",
        "cursor": {
          "ref": "e43685ac-9a58-40b2-a62a-b5943d0c0aaf",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f2e7e096-4b6f-4728-b97b-71f70f8c1ddd"
        },
        "item": {
          "id": "fac358bf-9c04-422a-bfe2-b5592825be51",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "52f1d669-34c5-4845-8b74-da0316e08f50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84c0340-3716-40ec-a6c6-561f37ea739d",
        "cursor": {
          "ref": "f4552880-db7a-4c49-bd75-c031eda8a7eb",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eda455ff-f205-4739-b481-ab0b797940fc"
        },
        "item": {
          "id": "b84c0340-3716-40ec-a6c6-561f37ea739d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3df79b99-1054-429d-956a-0ed18a4a96d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f574dea9-44a0-4acf-aae5-eb0700e27ed1",
        "cursor": {
          "ref": "a7697401-2a17-4ede-8a80-b915e93a2abf",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "47119ebc-9111-49d6-aa47-dc578c4574cc"
        },
        "item": {
          "id": "f574dea9-44a0-4acf-aae5-eb0700e27ed1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e1ea2d8d-d27d-4229-b5a6-5536cd10f8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "675fcb82-8bf4-4b42-88b2-7f06aae20091",
        "cursor": {
          "ref": "69411614-6baa-44af-95f2-0f5877f9444e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c6f96a46-94f9-415e-8cce-d20914cae565"
        },
        "item": {
          "id": "675fcb82-8bf4-4b42-88b2-7f06aae20091",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "466961c1-97c8-402d-be0a-38243d1a462d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3e191ac5-baed-4df9-b9cd-e3fc077f9519",
        "cursor": {
          "ref": "298e43a1-8039-4b2e-9a51-7e0458bb1ab4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a8cee4d2-a08e-4af7-b4a3-59b65d031da5"
        },
        "item": {
          "id": "3e191ac5-baed-4df9-b9cd-e3fc077f9519",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "98017961-1abe-4c40-9e2f-bed53867ffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "87aab0ee-65a8-4c55-9c6f-39d877a7d79d",
        "cursor": {
          "ref": "c1d4b515-2298-426a-83de-105307aca565",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "edc56c40-6d39-4b4c-8da9-f50813f3df28"
        },
        "item": {
          "id": "87aab0ee-65a8-4c55-9c6f-39d877a7d79d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "720482ce-6e84-406f-860b-4c31153ab3a2",
          "status": "Created",
          "code": 201,
          "responseTime": 8794,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a97b6b-1b15-4b78-aec4-8e94795c7eb0",
        "cursor": {
          "ref": "03682e5b-ee06-4453-80f0-13d07b51579f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d5bcf8c6-65e7-42eb-a294-ddc9cdc891b7"
        },
        "item": {
          "id": "60a97b6b-1b15-4b78-aec4-8e94795c7eb0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0e7bbcf8-a36c-46a7-99af-8b79ab619616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a8131f85-d061-4e55-9d03-29dddeb45c90",
        "cursor": {
          "ref": "f1683b44-e05c-4420-8f63-f853af1620c2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8147e751-9c00-4102-9828-4bd3dae70be0"
        },
        "item": {
          "id": "a8131f85-d061-4e55-9d03-29dddeb45c90",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "14fd9ad0-79f9-4939-b3cd-11ab808b96f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6a1ee90f-2776-4ca0-8bc0-b68fedc63dec",
        "cursor": {
          "ref": "77403097-4087-41d5-b69f-fd9e7d803b20",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "822579f0-08f1-41cc-b829-d9e3178ea936"
        },
        "item": {
          "id": "6a1ee90f-2776-4ca0-8bc0-b68fedc63dec",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b73f740a-8a40-4337-8125-0129cef2a0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd792514-13fb-4489-8b7e-b1f6add25341",
        "cursor": {
          "ref": "dd9d069c-a81a-4db0-8468-e7aa0d1902b0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "400fd4f5-f368-441b-b491-072eab7d176c"
        },
        "item": {
          "id": "bd792514-13fb-4489-8b7e-b1f6add25341",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4e323ed9-cb19-417e-894e-f3bc6dc7db84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea07c28-2062-4349-8406-05850d7f6946",
        "cursor": {
          "ref": "f4517040-c776-479d-be02-96c09e4fd244",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "231eb9a4-4833-497e-a76f-310dfd0f3a5e"
        },
        "item": {
          "id": "3ea07c28-2062-4349-8406-05850d7f6946",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "26638433-ea6f-457a-b932-ccb940910309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f220da30-3516-4c07-b4a0-52ff1daaf2c1",
        "cursor": {
          "ref": "b982dbcd-900c-4a1c-8da1-27877adf66e1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2df16f99-6806-4a05-b3a7-a49d44d409a8"
        },
        "item": {
          "id": "f220da30-3516-4c07-b4a0-52ff1daaf2c1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a6192e44-ba59-4aff-baa2-e4f4abdd7ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b6519b-77ce-42d6-8d00-06f704fe2a24",
        "cursor": {
          "ref": "8e412ab5-b52e-4fbf-b69a-3156395371af",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "34bce2cf-5050-4e47-98bc-00b4718b9633"
        },
        "item": {
          "id": "d4b6519b-77ce-42d6-8d00-06f704fe2a24",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9a2136c4-7345-4e9e-8381-e434771463c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fb5fda-b9fc-4544-9941-14667c071798",
        "cursor": {
          "ref": "f8351b06-15c4-4394-93d7-f1c7147e19e4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ab622d12-95e1-454c-8cdd-91e4c4010896"
        },
        "item": {
          "id": "c7fb5fda-b9fc-4544-9941-14667c071798",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e147abc0-598b-4d30-b10d-2784850debb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686df67a-f38a-4a57-a808-987e41794402",
        "cursor": {
          "ref": "47d64f3a-994f-40e0-ad8b-332610b04c4f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "70a47245-97ae-437c-8ef5-36a3b1d89fb8"
        },
        "item": {
          "id": "686df67a-f38a-4a57-a808-987e41794402",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "deb6536d-aaa8-4644-bcd5-993378180be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dea7ac9-e452-4d8d-8cfa-30e111551cf3",
        "cursor": {
          "ref": "600883d2-4857-49d3-b4e0-8ee3bf14b547",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "85614fef-efc6-440c-a595-9f78cc891112"
        },
        "item": {
          "id": "0dea7ac9-e452-4d8d-8cfa-30e111551cf3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8074180a-22ee-4c95-b12d-a4aeff40cce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4066e2d-7422-4e8f-92d1-c6ec9ba03770",
        "cursor": {
          "ref": "85c9b571-a1f2-42ea-b25a-ef05c23b566f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b362234e-4d47-492c-b4d4-e91b8a8f1cea"
        },
        "item": {
          "id": "a4066e2d-7422-4e8f-92d1-c6ec9ba03770",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2dd2b6b6-8060-411e-bbd6-b9a8b71f6373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a702d1-d8be-4b77-8e79-219f1f36994d",
        "cursor": {
          "ref": "18631133-2b2f-4627-bbe1-a65119ac7e2d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6e87cea4-ce00-441d-bea1-b86b85ab579d"
        },
        "item": {
          "id": "21a702d1-d8be-4b77-8e79-219f1f36994d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "86374fc9-8850-42da-80f5-1a66b8a18ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9cd7a0-4ba4-4e60-bd72-ae1c42d47010",
        "cursor": {
          "ref": "b135f8b2-668d-4900-9da4-94104863fac9",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "96da040e-7156-4a22-af62-2f0c86c9d129"
        },
        "item": {
          "id": "7a9cd7a0-4ba4-4e60-bd72-ae1c42d47010",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5442fd1f-5e19-459a-92a4-39b1d60de755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced80e45-4131-4389-9763-7c0558db001b",
        "cursor": {
          "ref": "bc5f5973-048c-4a4c-ba3f-3720774a01a0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "813a50f3-d661-40e2-b05c-c7ff78497b00"
        },
        "item": {
          "id": "ced80e45-4131-4389-9763-7c0558db001b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "be3a0fbb-3e3e-494f-afac-33aec627a8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471077dd-deda-4a25-9389-5d308b6b9b18",
        "cursor": {
          "ref": "d44d91b8-f5fb-447f-86f4-b4faaf4b60d3",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b1af5216-bc29-431d-8dc4-d6236e66ace0"
        },
        "item": {
          "id": "471077dd-deda-4a25-9389-5d308b6b9b18",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f330e3dc-f088-4e80-8518-ee0b4bcb406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee8e39b-c79a-43b5-ad26-670db151ccba",
        "cursor": {
          "ref": "95a8f346-5a67-4a8c-84f0-f8817944f61e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f64cd495-6bf6-4f0f-ac2e-40e58f55a84b"
        },
        "item": {
          "id": "dee8e39b-c79a-43b5-ad26-670db151ccba",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4caa400f-9165-4989-8402-fd4a64378e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa975b3-3575-401b-90ed-f759b4639fd7",
        "cursor": {
          "ref": "004b65f7-20c6-41ba-a2ad-8df047dba978",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5889085a-1c85-416e-bd47-0437c859b569"
        },
        "item": {
          "id": "0aa975b3-3575-401b-90ed-f759b4639fd7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cb618e1e-b200-4418-b842-378a793b9431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cede2b4c-0e16-4fc0-a8e9-b492ea964bdf",
        "cursor": {
          "ref": "7db8a608-a377-4aad-b5ae-01b2cc741da1",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6470569a-842c-4ade-965d-e43e9a1930a2"
        },
        "item": {
          "id": "cede2b4c-0e16-4fc0-a8e9-b492ea964bdf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ab2d4f5c-09d0-477b-8cdf-a07365c060ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acdb21a-3952-4d7d-9367-daffc8180516",
        "cursor": {
          "ref": "ceceafeb-73e1-4e40-b769-368bb2e8fd7d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ea57ab49-5055-4e87-9b1d-08f45cdf910e"
        },
        "item": {
          "id": "1acdb21a-3952-4d7d-9367-daffc8180516",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bdca3beb-07ad-467d-be58-7c27bba8a16e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fdb0a982-88e3-4eb1-a8e1-361265a1801e",
        "cursor": {
          "ref": "d4e95aa9-a43d-45fa-aff4-fa34a6e74b39",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f70545a6-cb88-46fe-9e33-f4494c84de4c"
        },
        "item": {
          "id": "fdb0a982-88e3-4eb1-a8e1-361265a1801e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2008a7e3-9f75-4550-8fbe-ef9018fcf0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf353ea-dbf4-4688-87c6-04a01d596593",
        "cursor": {
          "ref": "516d98c6-819f-45fa-92fb-12bd6cbc99ef",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5adfdd3f-5c9d-4ad2-a48d-964ad20f6e46"
        },
        "item": {
          "id": "2cf353ea-dbf4-4688-87c6-04a01d596593",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ee121dbb-3f21-4606-9869-1ac7036bd09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdd17fe-5e33-4c95-bb84-201fb64ffba7",
        "cursor": {
          "ref": "207247df-92ca-4d25-910c-6bece7c0d2ff",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d0f7139a-d73e-421d-b499-18cabbe0411d"
        },
        "item": {
          "id": "1fdd17fe-5e33-4c95-bb84-201fb64ffba7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "77a32982-e8b9-4270-aceb-d3e231091a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a170e7-05e5-4dab-8aa7-7af31f1e5350",
        "cursor": {
          "ref": "8b59e959-0f9f-45fb-bdeb-76f813c7aefa",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b8645433-e0a2-4c9f-a787-709397def28a"
        },
        "item": {
          "id": "b1a170e7-05e5-4dab-8aa7-7af31f1e5350",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24579059-8701-4cee-b7e5-3d474736cb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee05e70-2cf2-411c-a540-2fda2fe79144",
        "cursor": {
          "ref": "367ad827-9324-4f0c-82bc-ace86f318ed4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "500c9dc5-43fb-4150-9205-5de5b6fd8ca5"
        },
        "item": {
          "id": "eee05e70-2cf2-411c-a540-2fda2fe79144",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ffdaf297-7260-4d24-950c-420fd5b2a5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90becf77-4c5e-47e4-a031-24390764c0ac",
        "cursor": {
          "ref": "3e7c0545-2b14-4a2f-a100-2ef5cd1dd633",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0987c979-e9da-4f26-afb5-4065b6cf4851"
        },
        "item": {
          "id": "90becf77-4c5e-47e4-a031-24390764c0ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c3311e0c-24d4-47ee-b00e-6e984cba0fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b67356-8fda-4430-91eb-447976265911",
        "cursor": {
          "ref": "fd4d212f-a657-4dce-a936-8928f390856e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cbcb592f-25c0-4e2f-a27b-93bf18590fd3"
        },
        "item": {
          "id": "a5b67356-8fda-4430-91eb-447976265911",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b21687b-a471-48af-9bd9-d911ca94c44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c8b5b8-25d7-49e7-af07-d8cce0491891",
        "cursor": {
          "ref": "ee5d1a40-308c-4cad-b4e9-972c52c713c5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "69ce668e-fe9f-44a3-88cf-3975347dda22"
        },
        "item": {
          "id": "84c8b5b8-25d7-49e7-af07-d8cce0491891",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "97034084-9110-4251-976f-5eaa3d39c930",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "6869aa45-a552-483a-a293-b535826c6528",
        "cursor": {
          "ref": "53d3d506-51be-471b-b51a-3fce00d134eb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b1cf7d6f-85f7-46c1-9dc7-269c25266c02"
        },
        "item": {
          "id": "6869aa45-a552-483a-a293-b535826c6528",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d55a78db-9cac-42b9-8cc0-7471e5e51159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b9cc3f-1004-4600-b08d-34d4c3779a50",
        "cursor": {
          "ref": "39df1fe0-4e9a-4970-b4f4-d6edeb7140a1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cfd45913-4015-42bf-b121-4a6386269f57"
        },
        "item": {
          "id": "48b9cc3f-1004-4600-b08d-34d4c3779a50",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d99f4f78-9e9b-4f3f-b532-c6a072e36d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9229d17f-3c84-4925-b9fb-13c15c06fd96",
        "cursor": {
          "ref": "e6a1d95b-e9ce-41c0-ba08-db34d42abbd3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "123e3a79-a4fc-4194-85d4-276f582a55d8"
        },
        "item": {
          "id": "9229d17f-3c84-4925-b9fb-13c15c06fd96",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1f00be0c-0d28-47ea-aba1-8bfc5ea5e4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea703bad-7f71-45f7-914a-f9c4a200bd75",
        "cursor": {
          "ref": "f940de6c-c733-4b81-9075-d28b0a3a6d0f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a4141108-8aa0-4b1f-a0af-20f51ce6498f"
        },
        "item": {
          "id": "ea703bad-7f71-45f7-914a-f9c4a200bd75",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6bff4eb2-2250-4ae4-a0d8-1a3dea0f7028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e494ba-1777-41fc-a237-6133150c32d6",
        "cursor": {
          "ref": "ac611ce6-80dc-48ed-8c51-eebf98b16eda",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8c261091-83d4-41a3-83a9-8b89011e2c58"
        },
        "item": {
          "id": "b0e494ba-1777-41fc-a237-6133150c32d6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9f26b781-f043-425c-80b0-785ca8eddf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383f4c5f-2e54-475d-b2a4-8eef6494f2db",
        "cursor": {
          "ref": "31b0af3d-fa35-4337-8751-98746b676086",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b133e854-e67a-42de-8504-0d2bc3aa9d99"
        },
        "item": {
          "id": "383f4c5f-2e54-475d-b2a4-8eef6494f2db",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "be644af7-9151-454d-aa22-303a701aafb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00bca1b-3282-405e-a7cf-5b54c50ab8d7",
        "cursor": {
          "ref": "358ca834-8c3b-43a0-9db1-baf2cae15959",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ee13b944-c749-4eb8-afc0-134539bebcac"
        },
        "item": {
          "id": "d00bca1b-3282-405e-a7cf-5b54c50ab8d7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2f4df18b-0f87-4964-960c-493547067055",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 144,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a300f518-44ea-4561-b209-7a16d31552fe",
        "cursor": {
          "ref": "044a00fd-b630-4aa1-aa12-51accb7ace68",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f388617a-505a-4102-95e4-0d0ad4bbd503"
        },
        "item": {
          "id": "a300f518-44ea-4561-b209-7a16d31552fe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9fbc65d8-3fa6-46f7-808f-5e30b3b655ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bcc3e6-4c64-43ea-b722-7ba712957e72",
        "cursor": {
          "ref": "2a079cfd-2ee9-4d43-80fd-506eb5737636",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4809473c-709d-4c86-bf02-356609ecbd52"
        },
        "item": {
          "id": "c8bcc3e6-4c64-43ea-b722-7ba712957e72",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3bc330fb-d745-495b-9a3e-e8c907ec05f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850b9b15-05cf-495e-8afe-dad9d1e7e47f",
        "cursor": {
          "ref": "aea308b3-433a-4a45-9429-8bf57c444916",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e3d7cb9e-5145-4ec8-bf49-75ad2221192c"
        },
        "item": {
          "id": "850b9b15-05cf-495e-8afe-dad9d1e7e47f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1fdc6f32-786c-4936-842b-b40847edbecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250b926f-1943-47c1-8b7c-635edc9b81c3",
        "cursor": {
          "ref": "dceb865e-1057-4435-958b-9001292b3e1d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "59062fd6-6f5f-4f1e-8db8-ba313c7c3029"
        },
        "item": {
          "id": "250b926f-1943-47c1-8b7c-635edc9b81c3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "57c05d20-2001-49c2-a506-94d4de5516ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d01862-3918-4fde-960c-c96c87974918",
        "cursor": {
          "ref": "c41ed155-fb65-4c1c-bf90-cf70961627ee",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6b180dc1-46d4-451f-b26d-4e741f3d3c98"
        },
        "item": {
          "id": "42d01862-3918-4fde-960c-c96c87974918",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6262a98d-5a95-42f4-9991-4a47431fc22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e200be37-f777-4b74-b0b0-b385a2de0f66",
        "cursor": {
          "ref": "d2ad005d-c0ee-441b-bbed-c3593dabaf49",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "25b5138c-456e-4fe1-9f3d-4a1467ad7904"
        },
        "item": {
          "id": "e200be37-f777-4b74-b0b0-b385a2de0f66",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7ce389f8-fabe-4e59-bff9-bac95bbee865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdf988c-6406-4538-8cc7-0cca5d341af1",
        "cursor": {
          "ref": "782f591d-08ce-4d97-b28d-b9ebe79a3f89",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1e872349-bb23-4101-a645-809c13a154c5"
        },
        "item": {
          "id": "1fdf988c-6406-4538-8cc7-0cca5d341af1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a1bc0944-728d-460e-8436-195ebba7448c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5979bc2b-0b1b-4c5d-b897-dbb41e769037",
        "cursor": {
          "ref": "30681c90-50b5-4aa5-84c4-56889017fde1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "13bc18f8-0d6d-4f0f-a58e-8413cfc488ef"
        },
        "item": {
          "id": "5979bc2b-0b1b-4c5d-b897-dbb41e769037",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f121f77e-3868-4c8d-ba36-a62b26903ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3fb594-af50-439b-b8d1-adae7a5e62fe",
        "cursor": {
          "ref": "1e14ba99-c8fd-43d7-badf-fec74a6ae535",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7504974c-aea0-4a40-91bb-ca7a46b06048"
        },
        "item": {
          "id": "ce3fb594-af50-439b-b8d1-adae7a5e62fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7739a1f5-2aff-4e02-b456-7dea5dadaf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e53570-fe69-4862-a5ca-58be8d982a4e",
        "cursor": {
          "ref": "0acfbfe3-cf04-4fb1-970e-0e851759eaa3",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5278bf95-b284-4f5a-9b99-959213e5267d"
        },
        "item": {
          "id": "27e53570-fe69-4862-a5ca-58be8d982a4e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fcf30447-0edd-456b-9032-91b7f3b0b7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3580141-60ce-4106-aa2e-33f652f01570",
        "cursor": {
          "ref": "8ac835c7-3acd-4786-8d5a-eb502e45224b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "36bc8a09-1c91-4b84-ba47-ff041bcd8e8d"
        },
        "item": {
          "id": "c3580141-60ce-4106-aa2e-33f652f01570",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0223811b-129d-4ada-931b-086f88ebe4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5373e53c-6a70-46f1-be41-9a80fd00e847",
        "cursor": {
          "ref": "2dd5f82d-7cf0-44b1-be1b-ed28147e14b4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "21de2822-d8f3-4a13-9a6e-aa0f389d0244"
        },
        "item": {
          "id": "5373e53c-6a70-46f1-be41-9a80fd00e847",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4ae4e2e8-95a6-40df-a98e-d6ba9fcdd63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2e3a34-e421-4818-8827-df2d39235f1b",
        "cursor": {
          "ref": "76e80e96-d2dc-4f71-aa9f-400797ea83ec",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d6922f22-15a8-4398-a8be-84ed59324efb"
        },
        "item": {
          "id": "8d2e3a34-e421-4818-8827-df2d39235f1b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "591fef62-aca4-420d-8610-fe883f484b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218fb1a3-33b0-49be-a311-d6d77e051bbc",
        "cursor": {
          "ref": "f7979d81-9862-4afb-ad2f-704279ef322d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "57467379-c21b-4b41-8adc-13c98f43722c"
        },
        "item": {
          "id": "218fb1a3-33b0-49be-a311-d6d77e051bbc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68cd505d-4cef-453f-9c0f-c14e5476306f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7461930-8391-4464-99c2-743ad0226806",
        "cursor": {
          "ref": "cd1fb35f-06cd-40d7-8068-c3c6d3d3a59e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "14b47573-3b1b-4a82-894f-0018d5d48341"
        },
        "item": {
          "id": "f7461930-8391-4464-99c2-743ad0226806",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f69414b3-cd54-49e2-9d11-3197fd48cd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9c5237-b411-4246-bfd0-de2b5c05b080",
        "cursor": {
          "ref": "91631635-65e2-46f4-9670-e3821701b1f3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "30d4f5b8-9e2e-43f8-aaf9-9aeb1e23c0ca"
        },
        "item": {
          "id": "9b9c5237-b411-4246-bfd0-de2b5c05b080",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "39173fc2-80c5-4cfd-ace8-e0ebc8d6b377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e9c019-efe9-492b-8825-09fc7baff307",
        "cursor": {
          "ref": "0d8db7ea-9308-4c73-9072-3e8fa515a8ee",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b05499b9-add0-477b-b89f-5756cc3a9b8d"
        },
        "item": {
          "id": "68e9c019-efe9-492b-8825-09fc7baff307",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2b069cf3-bed4-455c-acf5-1406063cadac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaf5582-71d0-46a5-b286-358e62ef826b",
        "cursor": {
          "ref": "a7302ec3-97f0-452a-b494-2b91345e2d71",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aa1c9261-4e0e-49c7-8790-7d8b1aef8a20"
        },
        "item": {
          "id": "0eaf5582-71d0-46a5-b286-358e62ef826b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f6f18707-4da1-4b85-8e80-9894e2201786",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "73583946-c92a-488f-b40c-ecd486141434",
        "cursor": {
          "ref": "711fd6f2-1014-49fc-9840-73d9cb1a40ba",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "76e34b9d-9ca6-4fd4-a5ef-9809ceeff3b3"
        },
        "item": {
          "id": "73583946-c92a-488f-b40c-ecd486141434",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2861e8e7-908a-42cf-ad80-382fc959360f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62071f2-2cc2-4f04-8516-db8067289a73",
        "cursor": {
          "ref": "e2af2360-2b8f-4831-8fbf-0d460a557c8a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9e3d0c2c-ae78-4fd6-a663-43721adb5910"
        },
        "item": {
          "id": "f62071f2-2cc2-4f04-8516-db8067289a73",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3ea27186-9dc7-456a-9ef9-ec3b0dc722f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b9db2f-a0bf-4e34-a504-28e0e3adc18f",
        "cursor": {
          "ref": "dea52b8b-7e29-49e4-96bf-71ea24b67499",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1783b9fb-f5d7-4efa-87c4-7701590e50dc"
        },
        "item": {
          "id": "34b9db2f-a0bf-4e34-a504-28e0e3adc18f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2cb95773-b68b-44dc-83d6-dd725a1150e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49dcd32-38cd-49ea-84db-cca454b4ee42",
        "cursor": {
          "ref": "ed00d5e9-8877-437c-a97e-152592de2db6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3fc37b2b-b17d-42a1-87db-b2c657190a8b"
        },
        "item": {
          "id": "c49dcd32-38cd-49ea-84db-cca454b4ee42",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1f38174b-f327-49bd-86e0-fedbc03f6c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8204a4aa-f5d7-48bf-9e2f-9589624dbda1",
        "cursor": {
          "ref": "e09475a2-2030-414a-bebf-9ac99ea45268",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a0b2152f-43c8-4499-bae5-210d25227f2d"
        },
        "item": {
          "id": "8204a4aa-f5d7-48bf-9e2f-9589624dbda1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bdb538bb-c0b0-4908-ba0b-54bcfc0299a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22448b24-6ba1-4e19-a9da-8e6479586513",
        "cursor": {
          "ref": "d5243bb2-db8b-497f-8e89-eceff2c6b149",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "afad2809-f47e-4d5d-9435-6e99ec205d48"
        },
        "item": {
          "id": "22448b24-6ba1-4e19-a9da-8e6479586513",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "25765830-b71f-4b25-a3ad-8c4f5071dec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08b582c-a4a2-407b-8100-13bc95111063",
        "cursor": {
          "ref": "b04d9ae8-7725-4df9-893f-c55fdcad70b8",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "33c9066d-f0b5-4986-b661-93412dcb0342"
        },
        "item": {
          "id": "e08b582c-a4a2-407b-8100-13bc95111063",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ac08ab56-5e35-4146-9728-0fee766927ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b11db91-d3be-4dba-b89e-feae1bceeeb8",
        "cursor": {
          "ref": "02d4868e-903d-494a-924e-3decafacf4c6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "608f55be-d70a-4718-8bc4-ecebfd37c047"
        },
        "item": {
          "id": "0b11db91-d3be-4dba-b89e-feae1bceeeb8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2093fc1c-2927-4f11-af2b-16a89af3439f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "cfd36cda-2475-4c39-9323-cd9f31eb7dd2",
        "cursor": {
          "ref": "5f47aed6-305d-4931-b3ac-9df4bdc8dd74",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b72fcc4c-ba26-49a8-9b66-5f495602e495"
        },
        "item": {
          "id": "cfd36cda-2475-4c39-9323-cd9f31eb7dd2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f0a9e5bc-b53e-426b-8b6b-af079ea6e844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8a9866-127e-44f5-8a6e-d742278d43eb",
        "cursor": {
          "ref": "249c5652-cc0e-430f-8c2b-8b4b8f7bbfa2",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c394f87c-efdd-4761-bef3-d80a0ba3d1ab"
        },
        "item": {
          "id": "ad8a9866-127e-44f5-8a6e-d742278d43eb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "366416ef-897d-4b4d-909d-2058a0ab63ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d199f3e-ff69-4c21-856b-aef2bbe2577a",
        "cursor": {
          "ref": "7a92b760-0cc4-409f-bc13-3d852294ca73",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0b4ce3a6-af68-4f84-9c56-c2d824d11b1c"
        },
        "item": {
          "id": "5d199f3e-ff69-4c21-856b-aef2bbe2577a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "01dc73d0-af7e-45a4-b8ff-58c419e566be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cb45f7-46ff-41e6-835e-2df5baf7045b",
        "cursor": {
          "ref": "020d1d2e-923b-4c3b-be73-5732444a3a79",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "296ac804-b870-4b34-b2b3-9095971b3119"
        },
        "item": {
          "id": "f2cb45f7-46ff-41e6-835e-2df5baf7045b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1e6dcb6d-fab0-440f-a2f8-485c679e21a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ae4436-51aa-4498-8e9c-08a9f0ccb69f",
        "cursor": {
          "ref": "326f5dfd-72ca-4d68-83d3-07f264598728",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4f829afc-6829-4ef6-95aa-2dada8005be5"
        },
        "item": {
          "id": "62ae4436-51aa-4498-8e9c-08a9f0ccb69f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "05d59891-52e7-4efc-8663-4515b1d6cb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be93604-e550-47e5-b326-3e92c0469d91",
        "cursor": {
          "ref": "758743bd-8d87-4d22-a33e-2e22284dab28",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1657817d-84e1-4613-bf1b-56f007972e9e"
        },
        "item": {
          "id": "9be93604-e550-47e5-b326-3e92c0469d91",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "54a19bb2-28a6-4dea-b254-97dc1709662d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07e0d86-d152-4e34-be04-75e8cde8f2cc",
        "cursor": {
          "ref": "ece42626-1d67-49df-96eb-d91561b9de08",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1f208545-d229-4526-8a05-1d408c07b2dd"
        },
        "item": {
          "id": "b07e0d86-d152-4e34-be04-75e8cde8f2cc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1ad02e37-5417-426a-b48c-3ccd58646287",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "f6a735ae-6a1b-4af4-bc15-96279b153a65",
        "cursor": {
          "ref": "d930f3c9-3147-402c-acc2-156b8f93a1ae",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d9962ee5-af82-4bbb-bf67-296ce5d654f3"
        },
        "item": {
          "id": "f6a735ae-6a1b-4af4-bc15-96279b153a65",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9a60208a-b152-4560-a0c4-8db971ad2d8d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "cdb3dc4a-0934-43c7-9e14-96e2b8d26511",
        "cursor": {
          "ref": "c98a285f-9001-46f4-9b63-673e44be5a17",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e35b7ec6-f10a-476a-b735-89903913b29f"
        },
        "item": {
          "id": "cdb3dc4a-0934-43c7-9e14-96e2b8d26511",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3c057c9c-1360-4a60-9a4e-c9980ca9493e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "fad26427-4095-473d-9c8a-030555b6ffdd",
        "cursor": {
          "ref": "08626818-075d-4578-87d0-f413aeb65ca4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3b6b0c57-ec38-4323-884b-d0f66f7f6564"
        },
        "item": {
          "id": "fad26427-4095-473d-9c8a-030555b6ffdd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "97611818-1c4c-42ce-8f2d-0e8907725d21",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "eea5d1ec-f448-48ac-9ab9-85afaa4dfcf6",
        "cursor": {
          "ref": "823408c6-2f8d-4565-888e-46b9dce15319",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bf338115-e536-4f84-9bf0-1f68a684dac0"
        },
        "item": {
          "id": "eea5d1ec-f448-48ac-9ab9-85afaa4dfcf6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "04e768ab-f353-491e-a900-a66db3712800",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "46c69be7-5df4-48ed-bfa7-2e4436801dde",
        "cursor": {
          "ref": "10b4c1d7-47ca-4ed9-ac47-dcf8a538c5de",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2e7f96a1-b282-4dd5-9889-71e8e85c62cb"
        },
        "item": {
          "id": "46c69be7-5df4-48ed-bfa7-2e4436801dde",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2ce88e15-be03-426d-84ca-31be14e4c786",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "82813632-ebac-438b-a2d8-69f61285aa4f",
        "cursor": {
          "ref": "ba3e2e25-92da-427e-b277-4378486ada72",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a37fe3c7-bcee-4cc6-8bb5-04911d89b33a"
        },
        "item": {
          "id": "82813632-ebac-438b-a2d8-69f61285aa4f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d6f5855c-a121-45c5-a086-3617b7a3210f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233bcebb-b94f-4b30-8b0f-7eda0457dc0b",
        "cursor": {
          "ref": "4d0fa46b-133c-4f50-8f82-cfa187ffb51e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "139899fd-f874-4ea9-82ce-8a886c5cfc04"
        },
        "item": {
          "id": "233bcebb-b94f-4b30-8b0f-7eda0457dc0b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b81032a5-36be-4460-9af8-5da025fe788d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a871073-5e56-4b87-a01d-73c801a59c35",
        "cursor": {
          "ref": "b3ced443-fa90-4d9d-8db1-f6d0e153171c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "059e0d9e-7439-4143-bd94-bd0fa5be6c05"
        },
        "item": {
          "id": "7a871073-5e56-4b87-a01d-73c801a59c35",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ef2bae3f-ac06-47f2-9ecc-c30cceb61bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53aee71a-0086-4b8b-9958-c1e3fb64a421",
        "cursor": {
          "ref": "c0420877-accd-4184-b158-dcec5e6d3ea3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f3b8885d-d1f5-4f5b-8630-668c4720e7e6"
        },
        "item": {
          "id": "53aee71a-0086-4b8b-9958-c1e3fb64a421",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5b1befb7-f525-4d6f-8c98-79de0a9aa229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446ba0f9-2513-436e-84be-06737d634082",
        "cursor": {
          "ref": "0e572a00-3e74-4ea1-8773-1d432745bc0d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3e439141-ed9e-473d-a639-68f825aa0f36"
        },
        "item": {
          "id": "446ba0f9-2513-436e-84be-06737d634082",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ca51a175-6e56-432e-bb4c-1fe5f5103620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fcdc68-416c-4c6c-bee4-c5af11ef0240",
        "cursor": {
          "ref": "b1f1e7a2-e457-4bbc-b23d-7f1b49411b8c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2eea6cce-041c-4419-9d23-a020b5e1ba6a"
        },
        "item": {
          "id": "88fcdc68-416c-4c6c-bee4-c5af11ef0240",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e0cc490-bed7-47c4-a79e-b6fd65f6255c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001cbaff-73b9-40aa-ac18-0c689a852085",
        "cursor": {
          "ref": "b640b5e7-e50c-44b7-8df7-5abba7b74402",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "98972265-2096-4914-87c9-7745fc761a5c"
        },
        "item": {
          "id": "001cbaff-73b9-40aa-ac18-0c689a852085",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a35e4de2-6962-40c7-92dc-ecd62e2cb709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df91ae9f-1308-4276-a7a5-fcbd64763de4",
        "cursor": {
          "ref": "c9709552-a321-45ac-bd0f-082f4a8fbaf4",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c17ca7a8-8b55-4a27-beaa-f897293179f2"
        },
        "item": {
          "id": "df91ae9f-1308-4276-a7a5-fcbd64763de4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4ffc3f1c-1021-4087-93f7-708dca3d0a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779796f7-a500-407c-a6da-ac37c992badd",
        "cursor": {
          "ref": "18fc6e2d-e60f-49d4-bc00-fd2e39b62d7c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a70785d1-4890-48ec-bf9b-0195a875df63"
        },
        "item": {
          "id": "779796f7-a500-407c-a6da-ac37c992badd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a9666df9-f89b-42e0-8163-070c8860a028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab457948-8fd9-4220-8911-f9d92991651e",
        "cursor": {
          "ref": "f282bfce-4e24-488b-8766-c8e63992a172",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3e35e561-c4f3-4f44-af3f-81dde9126c42"
        },
        "item": {
          "id": "ab457948-8fd9-4220-8911-f9d92991651e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "87eca7fa-48b3-4ff7-b380-f1cd36ed0ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ed19b4-4b6a-41aa-8c33-7092e9018541",
        "cursor": {
          "ref": "52be1125-7f20-4f1f-b4df-282905c609c8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cbe961ee-e927-450a-b0d6-71a69864cee0"
        },
        "item": {
          "id": "e2ed19b4-4b6a-41aa-8c33-7092e9018541",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f7008cd7-c014-4128-80d9-caf27257d92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15437d17-0a47-4d08-bf69-ada05ba5a434",
        "cursor": {
          "ref": "903b53fc-fc74-4461-bb9c-9bb78e379dc6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "82a5d0c0-f79b-4a61-8963-3c7476dcf8fc"
        },
        "item": {
          "id": "15437d17-0a47-4d08-bf69-ada05ba5a434",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "732ac4f4-e93f-4869-8a64-849a82539096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123a32e6-9593-4378-b675-50d59234eed7",
        "cursor": {
          "ref": "b8e80914-3ef0-45f5-bd82-324233132aee",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d13d6af4-ed55-4e6f-965a-ccef704f2739"
        },
        "item": {
          "id": "123a32e6-9593-4378-b675-50d59234eed7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fc7b8172-c7d9-4a5a-9aec-3f0e39b81982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6dc828-146b-4dc1-ae54-abc07c8dd486",
        "cursor": {
          "ref": "9826ad53-7802-411f-8087-1291f56e5e3d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "386e299a-b3a6-4249-99ec-b886dc34eb35"
        },
        "item": {
          "id": "be6dc828-146b-4dc1-ae54-abc07c8dd486",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0f9010e5-db2b-4d00-9105-a06527903055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43972c9-8b8d-41a4-b728-0b619a251296",
        "cursor": {
          "ref": "6864cce9-9e94-4020-8d60-595a86e30322",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e0057b73-ebf4-470f-a492-466726eec608"
        },
        "item": {
          "id": "f43972c9-8b8d-41a4-b728-0b619a251296",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "41db0169-6b86-47a3-8d2e-f29e78e323b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc91ce2-66b6-4eb0-80d5-3b9b96bc20ad",
        "cursor": {
          "ref": "98e53d3c-6950-4968-8439-5af4359a861e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9cdf6d5c-ec8c-46eb-9c0d-0c44a280b63a"
        },
        "item": {
          "id": "2bc91ce2-66b6-4eb0-80d5-3b9b96bc20ad",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "49d90a35-228a-4cf9-8b2a-b732e25b1ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b414c32a-de3b-4edb-bdd0-7ef8418a388b",
        "cursor": {
          "ref": "0a58dbab-ff00-421c-be7d-d1f87dea775b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d3017a57-aba9-44c2-b475-42b3bf84b13a"
        },
        "item": {
          "id": "b414c32a-de3b-4edb-bdd0-7ef8418a388b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "26f0e144-34f2-4580-87d5-97b0de6a88a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681383ab-9006-42b8-8366-02ebc093ca1b",
        "cursor": {
          "ref": "8aef858d-0df0-4783-a0a2-74836eb8e6c0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dfd06fee-6157-4ca3-a00d-98022f26d8e9"
        },
        "item": {
          "id": "681383ab-9006-42b8-8366-02ebc093ca1b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "eb751086-2329-4685-9dfb-11c58f46836b",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "43b054da-4158-4504-9cee-751d7e50518b",
        "cursor": {
          "ref": "66394f07-df5a-49d5-8ccd-f1f351cf5f60",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cef9bbb1-58d6-4356-a8e2-ee5ff9a3714b"
        },
        "item": {
          "id": "43b054da-4158-4504-9cee-751d7e50518b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2e18021d-afee-40ca-971d-ce150b083f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324d8fa7-4ff1-4cf0-ab12-aa4c9d508960",
        "cursor": {
          "ref": "4e84d701-3b5b-4d49-84fc-4d19b983e74b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "93517163-5ed7-43b3-8186-6875aaa4edfc"
        },
        "item": {
          "id": "324d8fa7-4ff1-4cf0-ab12-aa4c9d508960",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "21b6d13a-cd73-4102-8dbe-4b525423d3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0a04c2-baae-45b5-9f48-7a9eb66cfb5d",
        "cursor": {
          "ref": "3960d01e-f20f-4ab6-84fc-61083bcd9f01",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5ac8c350-012b-494c-b63c-8ffc6f649b0d"
        },
        "item": {
          "id": "fd0a04c2-baae-45b5-9f48-7a9eb66cfb5d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9b04531d-b96e-4e86-b1fc-6d2ef4ff642f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eda657-ebb5-4663-9c81-15b911a1c2b1",
        "cursor": {
          "ref": "4fc355e1-f219-4cb3-a854-dbb349d6e0e6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "401d459e-115b-4cff-8f89-328534a615e3"
        },
        "item": {
          "id": "52eda657-ebb5-4663-9c81-15b911a1c2b1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "755b1147-dc74-4a99-ac85-3161f1636ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2a707d-6824-4272-b0bb-edc843770516",
        "cursor": {
          "ref": "44efd0b3-b2c1-4012-89df-520d1d163949",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5565e0ea-b246-4796-ab1c-92ab7bf9d74b"
        },
        "item": {
          "id": "1b2a707d-6824-4272-b0bb-edc843770516",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4bfb22f9-225d-4ddb-b95d-555845f68e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b89c2ec-afe5-4699-acad-4b9a6c767c00",
        "cursor": {
          "ref": "789aed64-f3e6-4b37-9fd2-f4351f3320f8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "99384bff-aded-4332-815b-87c22870dbe0"
        },
        "item": {
          "id": "0b89c2ec-afe5-4699-acad-4b9a6c767c00",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0693d9df-1469-4d35-aca0-89aa41710e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b60f76f-c55c-4cc4-bf53-14298748d44e",
        "cursor": {
          "ref": "ec6c009c-4b2e-42f7-899a-14b6f410de58",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a8a79a13-2df0-4663-8d69-6c901f6bba81"
        },
        "item": {
          "id": "9b60f76f-c55c-4cc4-bf53-14298748d44e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b88794f1-a571-4383-a5e2-b2c28bf05368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b853db36-39e9-42b7-a062-936b0593cc78",
        "cursor": {
          "ref": "ad392cb0-71f4-44ae-814a-68ce11f24828",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6e0c84ac-c2ff-4146-ba50-d8cd2fdfa6ad"
        },
        "item": {
          "id": "b853db36-39e9-42b7-a062-936b0593cc78",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c58c190b-69b1-44c7-b077-e9a0b8cca884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015caaf7-15d7-42f8-9a6a-6f5fd8d1a0b1",
        "cursor": {
          "ref": "8e07a309-9005-4bbc-af22-5a710f73d3b9",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "65124fbe-95d2-45ad-aa9f-ee971393ea2d"
        },
        "item": {
          "id": "015caaf7-15d7-42f8-9a6a-6f5fd8d1a0b1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fbb35f40-ff94-4402-b764-9b0d8099804c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bc0475-598b-41bc-a30d-5be9e217fdd5",
        "cursor": {
          "ref": "68ef24f1-8d4e-44a7-b4a6-2de7f9c71247",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7b578366-964c-4d75-8a6d-ecf0efe00734"
        },
        "item": {
          "id": "29bc0475-598b-41bc-a30d-5be9e217fdd5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "56639009-6037-4a48-9561-65c420274cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57148ec8-3090-43f0-b77a-3adb1874cc2e",
        "cursor": {
          "ref": "ad2f8550-ce7b-4b2b-9a04-932235c0ea66",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1f42dc02-9798-4076-849f-75f5d09efc63"
        },
        "item": {
          "id": "57148ec8-3090-43f0-b77a-3adb1874cc2e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "27a43a4b-f8c2-4ae9-8c37-c200ca5fe33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbf8413-6156-499e-8740-d441d45c9440",
        "cursor": {
          "ref": "371b4617-0fd4-454d-b186-c105c96b1001",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2030cbcc-838d-4072-947b-1ee63fca8688"
        },
        "item": {
          "id": "cdbf8413-6156-499e-8740-d441d45c9440",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dfd0031c-e3cd-4147-a4b2-d479514f1d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842cfd9c-878e-4173-b7cf-ca4ad14a022c",
        "cursor": {
          "ref": "73ea12e2-f24a-4157-bd21-727e90096cbd",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "773f1d8e-2477-479c-9601-c73e6eb66426"
        },
        "item": {
          "id": "842cfd9c-878e-4173-b7cf-ca4ad14a022c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4c76909e-e14c-4f64-a54b-7e404ae22d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02a28c2-ca0c-469b-96b2-a400ef213746",
        "cursor": {
          "ref": "c20f2fce-ed66-4149-a4bb-5a7fa779a207",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "61f70cbe-d7cb-4043-b1f9-4ae18c9134f0"
        },
        "item": {
          "id": "e02a28c2-ca0c-469b-96b2-a400ef213746",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8c4316f4-0903-4e76-be38-af9594ffd8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f572a5-cf28-43fb-9a59-dc3d4ee8286d",
        "cursor": {
          "ref": "e7405e51-8ff4-4e51-a59b-546abb336c6b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "774e0978-7436-48c7-bfb2-a975b05e46af"
        },
        "item": {
          "id": "18f572a5-cf28-43fb-9a59-dc3d4ee8286d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3ff729c8-0888-4f0c-b463-c802b8caaeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6757948-a6ba-4034-ba01-27ba24d1743a",
        "cursor": {
          "ref": "4dcea9eb-b422-4449-babd-528e205c1df3",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cf99ea75-3095-42ce-a74b-6ef288298e04"
        },
        "item": {
          "id": "b6757948-a6ba-4034-ba01-27ba24d1743a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "08f01cf0-14b7-4e37-9370-4cb67ac02e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45906264-7ec1-4770-8bac-0cc5b06a5c75",
        "cursor": {
          "ref": "41e39e75-3a86-4568-9c1f-cc3100fe602c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d8b28843-ee36-4eed-8d14-dba1789d2635"
        },
        "item": {
          "id": "45906264-7ec1-4770-8bac-0cc5b06a5c75",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b5d997ad-7303-4e98-a093-c975a843a77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d5ca90-50ea-488c-82e6-48a190e8a303",
        "cursor": {
          "ref": "ac4c362a-d84c-43b9-a4d4-981876f49ed3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2a2c0194-c9ab-421e-b097-e0e90b5336e9"
        },
        "item": {
          "id": "63d5ca90-50ea-488c-82e6-48a190e8a303",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7beb925d-b179-483b-83e0-9e7be15e39cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c2babd-26d7-4d34-afe0-1ed3121385b9",
        "cursor": {
          "ref": "66623ed0-8b99-46f4-98fb-2fa8cba31273",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "280c9168-bf5d-4f58-b803-7fa4a97e745f"
        },
        "item": {
          "id": "72c2babd-26d7-4d34-afe0-1ed3121385b9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a1d40098-1547-492a-a6bc-33f43e3f0ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fb53fc-e046-4096-bf1b-2e8a4a30347f",
        "cursor": {
          "ref": "2086f943-6fa7-41d4-bd3a-73ccf3361cac",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "11bffd1c-7603-4bb9-9947-5ee8ab67c86b"
        },
        "item": {
          "id": "e3fb53fc-e046-4096-bf1b-2e8a4a30347f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e48720b1-a03b-4fa0-b3c7-564eb5ab3b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513bd968-a89a-492a-8b7c-62bdf5de4ce5",
        "cursor": {
          "ref": "f06afc12-a34b-4b1c-a3a7-6ab763ff95dc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5e9f9784-1448-403e-a994-462ce46bc70a"
        },
        "item": {
          "id": "513bd968-a89a-492a-8b7c-62bdf5de4ce5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dccfb041-5da3-47ec-8132-e59301956051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28fef61-4cbe-4fb8-9298-a12c1a196d0a",
        "cursor": {
          "ref": "145a9164-34ef-48de-9a2c-85be80245cf4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "febb8a26-b05f-474c-b717-0268449e90fc"
        },
        "item": {
          "id": "a28fef61-4cbe-4fb8-9298-a12c1a196d0a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "697e12e2-1feb-47da-8a71-f60733264703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56938722-6f12-438e-a173-19b48cd9a8b1",
        "cursor": {
          "ref": "04b8f86c-3221-40f1-81ce-08806a7332dd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "22b6db31-cb55-4b50-9c96-72db869c7eb0"
        },
        "item": {
          "id": "56938722-6f12-438e-a173-19b48cd9a8b1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e8db0a20-9460-4616-b465-fb96e4d0d1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba44cc8-bb3a-4fcd-b87d-ce842625fe9d",
        "cursor": {
          "ref": "f64aa699-d89c-4086-a1a7-e41a59e03182",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "139557c8-745f-4e90-a457-f64c8a6ff4cf"
        },
        "item": {
          "id": "fba44cc8-bb3a-4fcd-b87d-ce842625fe9d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a2fef74f-89fd-4175-923d-29abcd0e1d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdd6324-1d3b-49d8-890d-84e3e32ff2f2",
        "cursor": {
          "ref": "6d9b141d-ebb9-4de6-b286-4842f6d14458",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "01eb90ff-e188-4160-aa7d-e449a7708535"
        },
        "item": {
          "id": "ffdd6324-1d3b-49d8-890d-84e3e32ff2f2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "32060c0a-034f-460b-92a2-8374d146bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d0b3f0-776b-41ff-9a31-fd2f1cb9d8d8",
        "cursor": {
          "ref": "0a0fe9dc-577e-47ed-825e-a98ad3928ada",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "655983c1-2977-4377-b9f1-2510e4c7da72"
        },
        "item": {
          "id": "06d0b3f0-776b-41ff-9a31-fd2f1cb9d8d8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "00da1bfe-5c04-448e-856d-7e206a7ddb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee3a54d-daec-455e-b17d-e6a28abe7627",
        "cursor": {
          "ref": "0f291d21-fccc-4da6-9f9e-2262e976df43",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cce51414-fede-4d1b-9b58-d03feec0ad1b"
        },
        "item": {
          "id": "eee3a54d-daec-455e-b17d-e6a28abe7627",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7db3ea8d-f6c2-4b0f-9714-5a2f6eb28201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9550011e-bfd2-4635-bbc6-cf51ef65803e",
        "cursor": {
          "ref": "2a73f109-cba2-47cf-9f0d-5da0a26216e6",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "81dc0f66-a58e-4012-a154-c361da08c676"
        },
        "item": {
          "id": "9550011e-bfd2-4635-bbc6-cf51ef65803e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "49f307ef-2618-4ca0-867b-14882176b744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c208b9a-4206-4256-98d6-94b643a12a48",
        "cursor": {
          "ref": "b104c788-aba4-4d02-9a12-f59512c02064",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "95fb18f2-5314-4837-b512-869036447eb6"
        },
        "item": {
          "id": "5c208b9a-4206-4256-98d6-94b643a12a48",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2e1d9b43-2618-4e00-ba2a-8e8f72daafb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fada4bc3-04e4-4b65-b276-189aad6f06e9",
        "cursor": {
          "ref": "55f9b8e4-9645-481e-8ee5-93fd67f0498a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1e65fee9-f951-4db7-b1f2-9aefdd59466b"
        },
        "item": {
          "id": "fada4bc3-04e4-4b65-b276-189aad6f06e9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "83b0df6f-20c3-493f-a138-91d3e9ba04d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c14a8e-8a9f-4a30-9e91-04bd6583a551",
        "cursor": {
          "ref": "84d63b6c-66d3-4a12-9329-d323694f82ba",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6ab0fc63-3995-45bf-9bee-f527f6dd367b"
        },
        "item": {
          "id": "a8c14a8e-8a9f-4a30-9e91-04bd6583a551",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0d40d13c-e145-4931-9af6-1c3402eac813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dd070b-e320-40a2-aef1-82a56fb76297",
        "cursor": {
          "ref": "ab8d7ced-e8ab-42db-bca1-ade3c9564d3d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "aa375181-9013-4995-8940-09e9dc0cff4f"
        },
        "item": {
          "id": "24dd070b-e320-40a2-aef1-82a56fb76297",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7bfb0b48-1d58-4d44-aabe-86f76c34cbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4252a6b-c100-49da-a283-6e2028069e70",
        "cursor": {
          "ref": "4cd7429e-3ebf-4b64-9998-ecda09d5685c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d429eb74-da08-481f-a3df-e01a82fac3da"
        },
        "item": {
          "id": "d4252a6b-c100-49da-a283-6e2028069e70",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "40feb949-436f-46ab-bfeb-ec328bf9cd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23596560-7264-4d23-a7ca-c9f43161fd6b",
        "cursor": {
          "ref": "86fed66f-ff07-43fb-a9f0-bd70764cd97a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ae386827-4b41-43ac-9fd5-766e6f9f9420"
        },
        "item": {
          "id": "23596560-7264-4d23-a7ca-c9f43161fd6b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "32b36f17-7bc9-4b6b-a0a2-d5ef23467790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bed4a6c-e283-43cd-9909-ba34624da65d",
        "cursor": {
          "ref": "83cb0943-049c-4da5-bacc-8d699669a36a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c3b4a4a7-6caa-460e-bc3c-7341557a7a03"
        },
        "item": {
          "id": "3bed4a6c-e283-43cd-9909-ba34624da65d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0b169c10-1e09-4799-aee2-53ec6e2ee00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17d9481-f836-4dd8-9e74-3d31e422c5f5",
        "cursor": {
          "ref": "e408b063-9d9e-47a1-843f-c201c010b763",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4e5ff0ad-a2b1-45cc-ac0d-8fcc399afb43"
        },
        "item": {
          "id": "d17d9481-f836-4dd8-9e74-3d31e422c5f5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "91f6386f-9a49-4924-83c8-e70ad36b5b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c51f791-b3d2-4b71-b22a-603fab00f614",
        "cursor": {
          "ref": "c93cf43c-c716-478f-9e75-b89bce7a7f84",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e61ba7f7-b60b-4fda-8f80-70895af80a26"
        },
        "item": {
          "id": "5c51f791-b3d2-4b71-b22a-603fab00f614",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "00ce26e1-fd4a-4a05-addb-6f96bc494c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9f13df-4475-4f12-8f32-6ddb1eb53e96",
        "cursor": {
          "ref": "c6af8301-6350-4b0e-a737-d2e87dbb709f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1a12c0c3-09e5-4dec-b19c-7f142f4dde93"
        },
        "item": {
          "id": "6a9f13df-4475-4f12-8f32-6ddb1eb53e96",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "19510db8-64e1-42c0-824b-ef2a7bd9e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dd3070-9b5f-41a1-8452-9944f84974cb",
        "cursor": {
          "ref": "c7241b89-89f5-45f9-bf52-cd9a58bedcae",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5af05113-a0f9-4b04-8fd2-811664a11db5"
        },
        "item": {
          "id": "e4dd3070-9b5f-41a1-8452-9944f84974cb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7d43872a-619a-4226-86f3-cc3bdff44aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c652ba34-f131-4b66-871f-4664d03d59ba",
        "cursor": {
          "ref": "4228d7a0-0f1d-4ec1-ac86-14993cdc5278",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7aacf7e9-2db6-4c04-b65c-52de3d66f903"
        },
        "item": {
          "id": "c652ba34-f131-4b66-871f-4664d03d59ba",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "050cfb1f-072f-4408-87c5-7eb79ad790d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fb0191-4a81-4ef8-9a06-f3ed091bd621",
        "cursor": {
          "ref": "ce82ff07-d0d2-4ee8-bb3d-e56a7d746fae",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b6f57da4-9be6-4c11-930e-c5ec51325eb7"
        },
        "item": {
          "id": "d8fb0191-4a81-4ef8-9a06-f3ed091bd621",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3c1a3b1c-d94d-4b67-b5b2-8c7ce5e351a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd509d2-b5c4-4735-9dd3-6d9cdfb44f94",
        "cursor": {
          "ref": "c743c5f3-9b02-4d2a-ba1e-c9278646cae6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a4aa37ff-cac4-447f-bf2c-cbd9a06b65db"
        },
        "item": {
          "id": "5bd509d2-b5c4-4735-9dd3-6d9cdfb44f94",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2a9421ab-f7d2-435a-ac67-ee76d7b2b2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326532cf-b273-43ae-bbdc-63158e8861cb",
        "cursor": {
          "ref": "bf6628b3-a7fe-49ab-ac32-75681aa3ae31",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "17622703-eed3-4118-b1a8-a3e5e58c6047"
        },
        "item": {
          "id": "326532cf-b273-43ae-bbdc-63158e8861cb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "774e6023-37da-43e4-b811-b30582225405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a332a786-3a9e-41fa-b8f6-6ce248a46b24",
        "cursor": {
          "ref": "91d682dd-db87-4041-9e01-7092004585fb",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e1ae339e-5568-4dcb-91e8-f1b835693e55"
        },
        "item": {
          "id": "a332a786-3a9e-41fa-b8f6-6ce248a46b24",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ebfeaa9d-1374-4e4a-ac6c-e8e217f66dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df14f89d-51f9-4998-af7b-c2091b812cde",
        "cursor": {
          "ref": "b5cffcb6-bec8-48eb-a375-2eff70299fe8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d815f0a6-a342-4e5b-8dec-b06ab4d268c7"
        },
        "item": {
          "id": "df14f89d-51f9-4998-af7b-c2091b812cde",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ef1b8ca8-c112-4a5d-bbf7-0efb1ca5c656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c750e5e-d545-4338-8c63-75c6f638b034",
        "cursor": {
          "ref": "911d1340-5153-4255-bf9f-c72b91b744e9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9b2623e9-90c9-4cd6-9ff1-43ae2b91b272"
        },
        "item": {
          "id": "4c750e5e-d545-4338-8c63-75c6f638b034",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4898176a-7910-4aad-8aa3-baf1d704ae36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2810b579-8155-419b-a72f-4c6a152db691",
        "cursor": {
          "ref": "bc19082f-2a40-46d7-9987-b37d14b6a6f0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f4e1e10d-7a38-42f0-b131-67173fc09e15"
        },
        "item": {
          "id": "2810b579-8155-419b-a72f-4c6a152db691",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "56634a69-499b-4695-b8ab-5d34b41379f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea29f47-512c-41ae-9b3e-27b19d89d3de",
        "cursor": {
          "ref": "f865f9bf-e9dc-457b-8941-31fc79aed799",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e7ddc6f6-251b-4745-b281-f3f935c1e7fc"
        },
        "item": {
          "id": "eea29f47-512c-41ae-9b3e-27b19d89d3de",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aabea9c6-ecc2-44ab-adad-cd09fdbf3194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba20e02-3690-4889-82b6-ff2c7e49301b",
        "cursor": {
          "ref": "e0c4e4c2-ad92-432b-8e19-79f9fe2b261a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2b26b33f-9d1c-419f-910a-a78f1eab0b3f"
        },
        "item": {
          "id": "3ba20e02-3690-4889-82b6-ff2c7e49301b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5db9c0cf-57cb-4a59-b4fa-05c644381db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4949d36-ed56-4e22-89ff-59c5593e0fd7",
        "cursor": {
          "ref": "036f4067-c7e2-4b05-ad31-fe41ff92a7ba",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1738744c-fd9f-4044-ab51-9ae7640357cf"
        },
        "item": {
          "id": "d4949d36-ed56-4e22-89ff-59c5593e0fd7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2ae174a8-616c-4313-b502-d219dba44955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d24b74-5d0b-46c6-90ab-35547d0b37b6",
        "cursor": {
          "ref": "df873ade-9620-4896-96ae-b466d4704682",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc492a59-464c-4e7f-8fcb-d7ef34e8bf1c"
        },
        "item": {
          "id": "40d24b74-5d0b-46c6-90ab-35547d0b37b6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b22d0917-17b7-47c5-bf27-3afbbe4d714f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e18541-860c-4d95-9129-591877a03cab",
        "cursor": {
          "ref": "e460c167-bbec-4b97-b142-1746b2f8bd32",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c282c20c-6ff7-4274-bfc5-c68048a9aac4"
        },
        "item": {
          "id": "46e18541-860c-4d95-9129-591877a03cab",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "992e2898-e3f3-4a1f-832d-c079aabc178a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1025504-d543-40fc-9c31-5776f083bf08",
        "cursor": {
          "ref": "f6d202b9-bdb8-4bea-977c-e251bea4fff4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e04a14b7-e311-4e72-bc1f-2b396bd0a2bb"
        },
        "item": {
          "id": "e1025504-d543-40fc-9c31-5776f083bf08",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6189d282-0bd6-45a0-a120-2c8168392e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde06990-2a18-49df-a791-35cde141a77f",
        "cursor": {
          "ref": "d448d068-2741-4f11-a83d-45d4f1f39f95",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4cf88d6c-7bcd-4076-ba51-a18f412a30e1"
        },
        "item": {
          "id": "dde06990-2a18-49df-a791-35cde141a77f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "af98b22a-1c6e-4d74-8b0e-90e014111643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23574a7b-6c8e-4c38-8a80-b096480789a6",
        "cursor": {
          "ref": "8682980b-a654-4633-a354-aebb6f5ed3ab",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "761f1874-94fd-486f-ad18-f76cc53b9c5c"
        },
        "item": {
          "id": "23574a7b-6c8e-4c38-8a80-b096480789a6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f3838596-edc3-4c7a-8a47-e8c10a81db0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6246c920-0f5c-40da-bd21-96e6436d9cb6",
        "cursor": {
          "ref": "81fd9cd0-2315-4986-8d46-a5ddff6bb3df",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "da831d76-38cc-4432-a4ba-887fc9414c0d"
        },
        "item": {
          "id": "6246c920-0f5c-40da-bd21-96e6436d9cb6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f6e7ca9f-672a-4e2c-bb5a-99e9521f25bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6474e794-aff6-4508-b415-51453be68c0f",
        "cursor": {
          "ref": "21c48573-2a53-42eb-b6de-f95dc2bb3a32",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7fcc5e72-dd5c-4eb3-8237-68503b1bc64c"
        },
        "item": {
          "id": "6474e794-aff6-4508-b415-51453be68c0f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0ef8d529-c2a7-4ee6-9a16-06fa8353f091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4398c8e9-bedf-4104-bcfc-bbdacb7238e2",
        "cursor": {
          "ref": "844bbb2e-a828-4bee-840e-07a15de9b3bd",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3b800fd1-d714-4bd5-98fa-bd389a0a5173"
        },
        "item": {
          "id": "4398c8e9-bedf-4104-bcfc-bbdacb7238e2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "597b0ec6-b88b-4362-ace7-1a91bbd5f7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd47fda7-7365-4078-b5a5-c7d7a9be9440",
        "cursor": {
          "ref": "44690b15-1158-4c92-b91b-75011e657778",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bf6d2fd8-5bc1-4421-ad81-d8c059bb0a28"
        },
        "item": {
          "id": "dd47fda7-7365-4078-b5a5-c7d7a9be9440",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dbadbca9-5814-4397-8d7b-a191e42167ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5a588c-61fb-4c52-8fec-1284c0a4fcc6",
        "cursor": {
          "ref": "7ed37dc9-726f-4a3f-a1ee-990122d34150",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ed400174-2815-4843-9531-d9e770bcb0f7"
        },
        "item": {
          "id": "9c5a588c-61fb-4c52-8fec-1284c0a4fcc6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4ed86e8f-c3cc-4e1d-b340-12687036b590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b2f066-925d-4a9d-9cba-7bc74d23d065",
        "cursor": {
          "ref": "fe6e9e53-e77c-44ee-9941-c63eaaa3a783",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "af56d4b4-9b43-4c41-9d83-afead5ab9f15"
        },
        "item": {
          "id": "01b2f066-925d-4a9d-9cba-7bc74d23d065",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "99cc1f9f-7941-44e5-9792-ba150c5c8bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c563fa3-6c88-48d9-bf2c-30cb8f1e2383",
        "cursor": {
          "ref": "624dd185-cd26-4530-90db-ae016fc5385b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c68b5a6f-9a0e-4edb-853f-54e76c178b4b"
        },
        "item": {
          "id": "8c563fa3-6c88-48d9-bf2c-30cb8f1e2383",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8d683894-e797-4925-9ae8-03e814c7096a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dae60a-9ad1-4596-8c50-8c9f081ce3ec",
        "cursor": {
          "ref": "5805423d-2a8c-440b-b062-ecb6086376f1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3700f58c-f6e2-4e8a-a677-b6af57c139e3"
        },
        "item": {
          "id": "54dae60a-9ad1-4596-8c50-8c9f081ce3ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "66cd9778-9ddf-4d9a-9975-6103392efa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41361ec7-9863-4606-885d-866b54655b12",
        "cursor": {
          "ref": "a6869e6a-fbd2-45ab-9508-2e2b9180ca50",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9c01bba1-fd4c-44a4-a3dd-70af34900d7c"
        },
        "item": {
          "id": "41361ec7-9863-4606-885d-866b54655b12",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1c64a957-2ed0-4ce2-86c0-e52b2e57bdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e829fd60-31d0-4b58-bd14-ecae47bd5fa0",
        "cursor": {
          "ref": "28ed8abe-3541-4229-a01c-a7e46a9f592e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "917f6be2-d201-46c8-8bce-7c49db754ddb"
        },
        "item": {
          "id": "e829fd60-31d0-4b58-bd14-ecae47bd5fa0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "877033b7-d8e2-4884-a03e-3a784ab9ee05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9762b430-ca1c-4ce7-9379-23ba8b2f0cf6",
        "cursor": {
          "ref": "748039e9-8313-4ada-a335-bf45bca0782c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "381981e0-9733-4157-9ad0-52b6b7d0e642"
        },
        "item": {
          "id": "9762b430-ca1c-4ce7-9379-23ba8b2f0cf6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f2e376d8-b07b-4642-969d-85500c251490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a776597-7dbb-4b64-a1fc-86625f43dd86",
        "cursor": {
          "ref": "9fe70f94-413b-479b-a7f5-e65c25093880",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6d0b2e5a-999b-4f4c-aebb-735ae5439170"
        },
        "item": {
          "id": "6a776597-7dbb-4b64-a1fc-86625f43dd86",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fe33fb48-cad5-436b-9e21-af5dc62edeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee2b663-3c9a-4b61-9c90-e1f4ceeaddff",
        "cursor": {
          "ref": "747c0138-6efb-433b-b031-c3840cf22161",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "09b48397-68ad-4bad-8e0c-1bbeb7b89379"
        },
        "item": {
          "id": "aee2b663-3c9a-4b61-9c90-e1f4ceeaddff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cf917605-29e6-42b4-9db2-d87dc27324fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfe8c55-272c-48ab-ac7f-dfff77812710",
        "cursor": {
          "ref": "6653df81-fca3-4b17-b00a-257d0379d35f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4147d206-bce8-4540-9f39-7479ddff4355"
        },
        "item": {
          "id": "2bfe8c55-272c-48ab-ac7f-dfff77812710",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "32e51697-f658-4e61-9978-dbfe8d03cb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063d64d8-b1f4-4f22-8be3-0ddecec0ce60",
        "cursor": {
          "ref": "0a34a08a-a778-47c9-a554-44bb0fe68fad",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "84404188-e1ae-4511-95fd-6a0a59990fc6"
        },
        "item": {
          "id": "063d64d8-b1f4-4f22-8be3-0ddecec0ce60",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "166fd733-84ab-4aea-afa9-8578648b353b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e9297e-8e4a-4a38-b87c-c5613d2bf97a",
        "cursor": {
          "ref": "4a26d89c-481d-4710-8036-0c75423ca1de",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "60e428d8-a42e-4342-a34a-1ac8a1ae0f15"
        },
        "item": {
          "id": "05e9297e-8e4a-4a38-b87c-c5613d2bf97a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "048623a6-7fdf-4416-8c1d-b86042d54794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441e8c2c-12d4-43aa-b371-ec0d94785322",
        "cursor": {
          "ref": "07d05c49-51a4-49e1-a034-dbcef377b3cb",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ffe60f3b-816b-4d55-88d3-a4122c88bf68"
        },
        "item": {
          "id": "441e8c2c-12d4-43aa-b371-ec0d94785322",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6e758274-f4ad-4e9f-98c3-c8140166f7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ef5803-9323-4379-8455-3a557c3ed6ea",
        "cursor": {
          "ref": "bc939908-1e5c-47ce-b906-a320b66c2c48",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d221b2fb-5697-4b9f-ba47-1c2e5e359356"
        },
        "item": {
          "id": "78ef5803-9323-4379-8455-3a557c3ed6ea",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2fd39740-ad68-4df3-b91f-b808e8ce6789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46720aae-75d4-47a0-9041-f3e2bb144d1c",
        "cursor": {
          "ref": "91a63203-56f9-411f-8b11-5cf6b82fca71",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "208d2dce-990d-4f97-8103-5d08e696704f"
        },
        "item": {
          "id": "46720aae-75d4-47a0-9041-f3e2bb144d1c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9ee53a1a-6389-4d69-a5cb-33c9afafd548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eda3d7-3208-44e0-a2d6-5fa51d4da334",
        "cursor": {
          "ref": "1a66634e-a23a-482e-a4c2-a55c7126f4a6",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "39a292fa-9dec-42c0-808e-c703f1ea31e6"
        },
        "item": {
          "id": "a0eda3d7-3208-44e0-a2d6-5fa51d4da334",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "35c9c032-9596-44b8-8d28-6fa71070c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76e4d19-527e-4796-bc11-6dff1244d793",
        "cursor": {
          "ref": "43c3ac7d-0101-42f9-afc5-ea5204ad34e8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "19c30260-19f8-4748-88bb-3c0b76b7ecd7"
        },
        "item": {
          "id": "e76e4d19-527e-4796-bc11-6dff1244d793",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2650e04d-9409-4c03-858a-a8c5de694179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27544fe-5625-4d94-85d8-abb760556545",
        "cursor": {
          "ref": "f31b2c6e-901e-4ce9-9061-5c70ba0e3eb5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "77f06746-34fc-4948-bb3a-84c6a495bca3"
        },
        "item": {
          "id": "f27544fe-5625-4d94-85d8-abb760556545",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "878e1271-0720-46ab-9cc3-8c002a42925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff861c6-3200-422e-87a0-9062b2136e0f",
        "cursor": {
          "ref": "29d7b754-dd28-4ba9-aec2-8bc848b83614",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0e25da54-446d-456a-8109-de678abe7f40"
        },
        "item": {
          "id": "6ff861c6-3200-422e-87a0-9062b2136e0f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f47bddb7-dce9-496f-8092-4aaceaa410bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d2837-795f-453a-9f49-1df72b165400",
        "cursor": {
          "ref": "0bf115d6-e249-4441-ac78-3274539f70c5",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1f6ce545-540d-41ef-9abf-30a986724733"
        },
        "item": {
          "id": "088d2837-795f-453a-9f49-1df72b165400",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "55465389-78dd-4c88-8b70-b69b9a8cde08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0ff86e-65de-4901-85c7-bb987a9cf69e",
        "cursor": {
          "ref": "de736606-a2ba-488e-b0b5-be1f1dd8d9d9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a711ad09-ca4f-4d3e-a400-2475c2d9c98c"
        },
        "item": {
          "id": "cb0ff86e-65de-4901-85c7-bb987a9cf69e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1777ce9f-6c01-4ad3-b70b-32c2b1b33743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f7fc0d-4321-4e10-a576-ddce2b9f99ee",
        "cursor": {
          "ref": "baa5f86b-e9ec-4b65-a2c2-e45fd304cb0f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "16f33d7b-6c7a-440b-a848-f241f16a8d1d"
        },
        "item": {
          "id": "c5f7fc0d-4321-4e10-a576-ddce2b9f99ee",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2a82cf71-097e-4847-86d9-b4c936b5f78c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5479da28-5172-446d-bbd6-799e2978a31a",
        "cursor": {
          "ref": "88f22a5d-262a-44d9-abb0-6b760e398cc1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2dcfed90-8f23-47ca-aa9b-8a8d9dc65531"
        },
        "item": {
          "id": "5479da28-5172-446d-bbd6-799e2978a31a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ce1d2720-7daa-45dc-9764-1925251c8449",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "116b4920-680a-4e91-bfc7-d7335c521363",
        "cursor": {
          "ref": "e346b444-e1d3-41a3-84ef-686efdcc39e7",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2303f1de-eccb-49b4-bf60-9e6fa29e7eed"
        },
        "item": {
          "id": "116b4920-680a-4e91-bfc7-d7335c521363",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e3df3841-66d0-4964-bd93-a10248cc6276",
          "status": "OK",
          "code": 200,
          "responseTime": 3053,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29f1b1e-f8c8-4538-b1bd-8697899627f4",
        "cursor": {
          "ref": "bb4fc508-8deb-4ffb-80e3-0018cdfc6c79",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "98eb6973-72e3-4d69-88f6-73304b93d77e"
        },
        "item": {
          "id": "d29f1b1e-f8c8-4538-b1bd-8697899627f4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0aca8603-4457-4cfc-82b5-db5c2f3d2e19",
          "status": "OK",
          "code": 200,
          "responseTime": 3192,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd846b36-fadc-468a-bbf7-7a1871b37122",
        "cursor": {
          "ref": "e7e8d9da-5300-4a6d-badc-cc7350cc9237",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "250c3a41-4cf9-4a81-9c94-5e64c52c2e80"
        },
        "item": {
          "id": "cd846b36-fadc-468a-bbf7-7a1871b37122",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4fa401b1-6ae6-4d8e-b857-e7975e16b03a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd846b36-fadc-468a-bbf7-7a1871b37122",
        "cursor": {
          "ref": "e7e8d9da-5300-4a6d-badc-cc7350cc9237",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "250c3a41-4cf9-4a81-9c94-5e64c52c2e80"
        },
        "item": {
          "id": "cd846b36-fadc-468a-bbf7-7a1871b37122",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4fa401b1-6ae6-4d8e-b857-e7975e16b03a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce1317e-7ea7-4c11-8987-c3cebe992d0a",
        "cursor": {
          "ref": "ca04031a-1762-4807-aad4-4cbf751a9741",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f133db76-e0f8-45c9-8387-b882e03d7c48"
        },
        "item": {
          "id": "5ce1317e-7ea7-4c11-8987-c3cebe992d0a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bf9af0d0-b1d7-4d91-95d1-a870b24896fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4e912a-7979-4ce6-a4c0-d9ffb3e48380",
        "cursor": {
          "ref": "c0b82e59-9dc5-4fb3-a257-c5fb97cf8e4f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "572877fe-6ff0-4bfe-9b6d-ed263a2e9805"
        },
        "item": {
          "id": "0d4e912a-7979-4ce6-a4c0-d9ffb3e48380",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4f64fa85-e3a2-435f-b312-013c4a2bb3a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}