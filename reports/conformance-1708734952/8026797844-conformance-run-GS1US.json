{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "46630a4b-7251-414d-80fc-e35a5ef9c12f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "df1a1236-4c50-407c-8969-2d2a4b13b42e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2499b87e-7587-4604-8dca-f8a7eda4f4b1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "37818879-edda-4ff4-9163-16a1421cbd88"
                }
              }
            ]
          },
          {
            "id": "d97e589c-6d4b-489b-9fc3-c49c904df569",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2acd4ae-fc04-40ce-bdc3-11285225f3f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8aa9ed44-94cb-49e7-9365-b7cae7e3a601"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e929629d-d00d-4ba3-ba2f-ebfc4cd084d0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a664a0cf-c5af-4b94-9766-30b61e1a83e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf5272be-5da7-45d0-b1f5-0a4f8cd5f530",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f26b15b2-b42d-4c80-b58f-6ded93b9ba5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cb63800-113d-4989-bfe6-a71af17793cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2be7905a-2c0b-4c46-be83-ccb767eb6ef9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c36cdf2c-6e50-4e2d-a635-2265b25dca67"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d6b1c5c-72b7-4815-9743-c510cabbce3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92799179-9238-4188-b19e-240694c5fb5f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cd4ef4e-910c-456d-b044-b4d51f809b35",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "42c1bb9c-30e4-4093-b2aa-9dc4a1bcc819"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59ee9a59-cda3-4b04-891f-bfaad8bd07c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f7f070c-704e-4193-900d-7f892ca6fabb"
            }
          }
        ]
      },
      {
        "id": "f045cd76-bc36-4806-9806-9f57bd7bca68",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0a313ee4-2ea6-435c-9a89-3deaf5d5a984",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d83ae1ae-37d8-4aac-9b28-5a1199d6e3a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0876074-9221-47d0-aaa5-5b807c6b32e7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb763ec7-7c61-4561-b18f-7af55ece09db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c274d20-d021-4b6b-9d05-3260de87028c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec08f94-aaf6-465c-bcb3-8ff0e439dacb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328953c9-272e-4c0d-93cd-0bbb86e16d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a850aae-e679-44d5-aad9-cb3e5687e146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded1b861-f68f-4d21-bc64-5ac27155e9ba",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb7917-681f-4ae2-b01c-96a7f981bce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75280c87-a860-4849-a55d-dab5c7bbf688"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "022a2925-2307-4903-abaf-73a63b8d7c33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8502a81e-60f2-4a9b-9848-3523eba6777b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b02164a-b04b-4aea-807a-69e9dc530bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a9cfbc8-30b7-4e3f-b598-f74487c5d61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee2668e-3145-4bd4-b4c4-ce33e9ac1147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03616825-e8f4-4c46-a74e-4ea0f203ff27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5a75e35-10bc-403f-ac14-7575a17813d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50c4ddcb-bd16-47b6-bd05-2f79860cfee7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d8db8ee-1aaf-4a39-adc7-27471225e668",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "238ccf07-2168-4d73-a912-f1ae581fa02c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7413f839-df74-4292-9615-17c70b55a96e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6bbe1e35-2c36-4f2f-99fc-8daa03b52156"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f9f52a2-87f1-4f6d-a3c4-3a1d26819f7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f6a429e-4d60-48df-99db-3e9aec4b679d"
            }
          }
        ]
      },
      {
        "id": "1735fa73-d0af-49e7-bfc3-8ec9a1da660d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1dad6c06-7f63-4e39-9ec8-c146f6b64d4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f600f419-ce0a-4bc0-9a1a-d60889b2da12",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bac98516-a281-4233-993a-b37694d52b59",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55723c60-c5df-4a3f-98bf-e44e03bd59ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a0dc17-d3a1-4f7f-ad99-7bcab1e47cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb59a8a0-91ad-4e08-b6d6-7e621d4c1d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1b2e2e1-50b5-477a-ad7c-0e242f54284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3707cbf2-7d9d-4d81-b651-741970c85709",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf2267c-4bea-4965-9957-e928e6de2467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad0e86d-02dd-4943-8f2c-9f07643dd7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb6d9f1-8001-4bee-a20c-aaf82205ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f27b4a5-3b71-4f4f-b55a-acb2d155a259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f674870-08ea-4b58-979c-feae35fc575d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c30e39-2ddf-4f3f-8872-9b4ede87c1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41463023-7cce-4253-9acb-6e3469553caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d622bda-5714-4461-8d13-aada502a24b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e83f343-c845-42c3-aeb2-383c96b5f637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bcede3-d1c5-4dc2-b7f5-13fe5786c398",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e54cd81-7dea-4c5f-994a-70cdd7006aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ac02b6-a86c-4011-b18e-a9601c06b821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24834fa1-0911-4642-a419-b1a42c093500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bb71a83-62ad-4f57-a4b5-cf7e92342c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1287455-e912-4c62-8e4b-8a31a97e152c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806ab47c-cc66-4c7d-bd7f-f4c7a84a2263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e74c77-29d0-47a6-8567-05f6898a224f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d40db8c-d517-44d3-b486-542456be28d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "551c56b7-5a1e-42c1-908d-c1144b5e1685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4e18d6-801b-4e52-98a2-1ece6b287db9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2478d1f0-ab79-442f-8a5f-31f2f0a4e8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316b71cc-b067-4d69-ac5e-527761d5f14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0344e565-32cf-45c8-9ddc-0af73b24598a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61c0c7a6-8bbc-401b-88d1-6a5460ebc213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0f1f19-3475-4296-b548-7e2a656d4e8b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd673031-b78c-4d32-99c1-5898829a8da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a10766e-8651-4b3a-b126-ec8d8e1957bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedde0f5-d98d-4661-b8a3-0261f6d46d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ad13a07-8ae6-4fcb-b854-248a59ca71c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531eea31-d0c2-4508-a8bd-21182637ee22",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7f0958-cf5f-448c-8d01-703b320c7330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1240bac0-af9c-410e-89d6-1a91714a08ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8add72b-9efb-4d2d-b2a8-2bcdbf623794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7687a0ec-712c-489d-bad5-e227174badde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea023dec-ed72-46bf-84bd-fd1378eff196",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7edde85-7cfe-4165-a8c6-73221c0f917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbe2c77-4bd9-4680-a043-607b8e48a0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199954fa-e238-47fc-a895-ff45d36aebbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62d20e0c-004b-4d71-97d7-05de27ba37cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4f4197-ab2f-4171-8141-b6ecb4a199bb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadee86e-3e95-4f7b-9c7e-c9f3ed77d30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091f1bab-3cf1-4706-a416-9e011d1a78c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f46869-c624-4b51-92a7-fdaab5b8ad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f40709ad-c5a5-46d8-9420-c6a41c02c47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c06dca-2f06-4c4d-8c62-d49ea0ea75ca",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380bcc44-c17b-4fd7-91b0-9b42a7ecd1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772f2ebc-95bd-4c91-aaee-c3205ae77be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a475d953-69f9-45ec-8697-701edbd1adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c5f1efa-b0f3-4fa8-a015-748516fb49f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68af3892-fc3a-4e1d-b540-f4a578e008e2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12a2854-f4d0-4e17-bcfe-92d557a45980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7f6814-9992-4887-aa80-63abaa5d86d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd5336a-dc27-40dd-9177-866acacb7d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7482f363-1b5f-4ce3-9a12-7f2283a79720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba05c5f4-d83e-485d-bf2e-75b3e9cbf15a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b9e4b6-7191-48b9-b870-d94a74b3c973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9a2df5-1562-48ef-996e-44375fd71408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bf502c-eb4e-49a1-addc-858ac4c85590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d99967-c2d9-449b-85dd-8543518a92e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131d3346-6b89-4a1a-a5c3-0331df22f6e8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e7eb15-28c5-46c2-a3a1-5ccb38b562b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e37ac9f-a1a3-4e03-93d7-5e16fdd7aa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb10836b-6ba7-43b8-967f-d3d995127122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "971cfae4-7ed3-4c27-91c0-ffa95ec17ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e1d31a-456d-441e-9136-5a395abcdb18",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3fb28d-547b-4069-b53a-ada0ac1cc173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ea691b-c54a-4ee7-ad81-f4800c0ae41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b00c585-af93-41a9-9d6f-2c582836e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eb3eee5-8272-4734-a936-83c814243274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2738816f-b267-4c76-9927-345a86e160bb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bdad32-5cf3-4808-99e7-bbda8a1e9b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de806d7-640f-49a3-9ea6-c1a8cde8b049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aba753-8829-4154-94c9-c9d8825040b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "871ab26e-3cba-4440-8d1e-25d9f8f629ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccae1c9-31fb-47b4-81bb-00ee9d4cfc87",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd4015f-8a08-47c6-872b-ce5cdc1e88fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ddb98f-7f31-4933-b506-4302105cb052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c452e276-c3e7-44b8-a5f8-ac835987aca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56776dd4-707b-4c50-892b-2df5602615e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7961c7-363b-4b68-8e15-f250879827d3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea8af57-db50-455e-8c43-4dc6fc5b5143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32ea465-48b0-4fff-bed6-54ec49d7d3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6244c8b2-6122-46c3-af97-5c321599b95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea530ac-0000-4cd4-81b2-9b1ec6d18e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b20e647-1cca-4904-8f4f-d7228a5dbe0b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57fddad-5322-48bf-a241-6cba1566f4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0719395b-1251-449d-ac6e-7edf11714a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dd0f6b-292f-40d6-bce0-7fc3df470dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6796d984-7d46-48d0-9715-907a19c7855e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600d2f35-9b38-4b9b-bf60-15203c4c99a5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89be9dc-b453-4870-b790-ce70e40d3d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303014d0-0527-4746-aba6-dd87d1f11eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d492fe-2929-4218-a845-0077daca6d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56c22e19-d2e4-4bb5-b08f-2baf9b38754c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5288c12-42ce-49ab-8da4-26137b11d30e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161a3204-970a-4811-959d-e315c25fef19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07c4d41-2f81-435f-af50-9663a3af7807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bcd90a-ec32-408f-9bb6-8caa432638b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1256e3b-e4fe-4db3-ba8e-9a4af68dd5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ecb76c-d3b2-4aec-a911-2b8909f367b6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369d2a3f-f88d-4a50-be26-188378ac85fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506838b1-417b-4ec2-ac9d-a08f4d779c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249e8dd1-71ad-418a-a228-b91a6ea2a633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48d3bdb1-0e61-4f5d-b94c-83dd63fb7a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ab2235-0f78-4e7a-b490-3101e5817bbe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950fecbb-d2e8-4601-b24d-d53285d429e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498b9363-61cd-43fa-b11f-416f97a85778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37070c33-e490-40f6-a332-56d0d42430b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02110af5-07f9-4efa-9cf5-9d594f64c90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cf476b-4fc4-4167-9146-201b869b05f6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745dde4e-4a70-48ee-b154-b489dad67402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdcb9ae-cf8a-4dbd-a4d3-14e2c3587fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af05fb6-93c0-46d5-8f5b-1f7080b3daf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0e3f07-a445-4bd7-9a17-0fa60e225cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfef805-8f16-42df-8ea8-3dbf3c45ad57",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7087ace0-781a-4ca0-b965-cdf4ea22812c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d618d35c-323a-41b4-8d70-8febcb4704b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20aa508-fda1-409f-9446-d11e081e0bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "139e6fae-27be-45c0-8ee6-2a2c03c964d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f72a72-c242-4324-834b-610a07bf0aa9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f7e510-6ad5-44da-abcd-0a1ba43e008e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ec542a-de49-499c-b11c-d3e7c4840992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c532964e-8319-41ed-8664-22c82b8896be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf23e4dd-0a7f-454a-9c05-ce883235f4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe4d0a7-c9e4-4db6-9a15-4837c91d164d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528f58d8-4f5e-4930-9d8d-161ac576f9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e93226a-8695-462b-a386-235d151bb63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef531fc-9887-4a5e-b525-c09d30e363f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e96b5560-8ae8-4724-808c-0e97b26be849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035b0464-2be8-47fa-b835-c184a0e59dc5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2891175-14b2-4af3-b149-85466e94f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18534ecc-6aab-44e0-b9e1-62cdceab3979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77019d8a-40cc-4b00-bdd2-dba03eeddfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b530871b-8016-49cd-ba42-91fb3516bf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe7953c-3eff-41d8-a37a-ade94164d156",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733979aa-9536-416d-9768-0bada16fec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e4d068-0f28-45e7-9247-0bbee01d145a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a803059-7017-4bd4-b14b-1c71e0f900fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c54df7-b770-4f96-adca-301b25016edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b16ed25-a06d-4000-95f7-2886f2a39bb7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d452e7ea-6294-416f-a4dc-c537b6b566a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40f09d9-2ea6-4d7e-9865-fe8187764cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7afb0ba-8e49-4b7b-9014-f9e5e75da2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bb80bf-db68-4939-95c4-b5fca156bd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f85be7-7a14-42cf-8f41-7c21dfecb072",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f8d669-19e8-4ce4-9343-142d3d16ddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24465496-6dd3-4c0d-85aa-303a8bf3da51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3ba5a2-bc92-460f-85f8-7b2fb62f08b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c140c5-f777-4083-8dfd-7f78905359ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a95d966-bc38-473e-9d77-fde64f922a99",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbcaa64-5841-4261-915c-8efde78a5c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c3d947-1c16-4ee7-b122-ec124f8deb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76add68-e243-41e9-9af9-1b372ef538ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "224025a1-5477-4ee9-aebe-d9d4caef6ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12a29d1-7353-4281-9cb4-f26c1788f32b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8983cff-b670-487e-9743-43442ea21bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc6ee61-7683-4091-8841-b6d69b0b8ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f56339-3a61-48bd-9729-94c4a98f12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9a7213-a1c7-4f96-9116-8ef2433e6f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a8262-3b7c-43e6-a291-1a387224ee61",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c01d032-07e1-4541-8ed0-87e5ca79291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b27422a-a3d8-4c89-8171-8acce28f24da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc57d86-681e-490b-9919-99d9868664e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e18750-6c7a-498a-9602-f64ea359ad27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dcf843-bb29-47ef-b5f0-31a8f8650909",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87395ad3-aa51-4edb-a3eb-5679f42413c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab0a2a1-3446-4ace-9efe-947f130922b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd09b66-a85a-463b-8ea4-2f3b0db2e19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0a43fbd7-0d6f-4cd9-b305-74d88da1807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f333c7-5837-4949-853f-dee21eed2a8e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a023c3-4a78-49dd-9337-99d4a195c81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bcb28db-f663-40c7-b514-ccf5b6ddb120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cef95d-fc1e-4da8-9b55-162154d26829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d7bc0d-97ed-4329-82f4-de58e550c847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94328a02-0231-44be-9094-b446aeb05965",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a7915b-778c-4a0f-b470-4118704951c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80a9951-63b3-4a06-b51d-41b1875ded8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae232760-78c5-4b1e-a7b1-923c05176187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90dac8a-1da8-42ef-89f5-9b8cb7b75e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7158ab-18dc-4bef-bb49-d794411344e2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3dc353-ee0d-4190-b7de-b4073a1bd5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a546830-2339-4247-b386-ad38788d8a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c04cf16-9d77-4d24-b1cc-6c5161377465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c64b5658-2408-40f9-85c3-ccb243171886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b77a456-2a80-456f-8e7a-e777f4598c0e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c44094d-c09f-4aef-ae3d-f1696a488871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48aa267-a123-4fd5-925f-fc73f44dd6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8967051b-20e2-4b15-a06e-9c385b997047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccecf81b-b344-44c2-ada6-46926b365f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa62f9ed-2e62-47c8-bdcb-3f669cc63c45",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727186c6-0475-4674-ab81-e6aa627bf1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77725804-9c56-42ce-8910-9b65fe4385d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6361c503-0ac2-4b3d-a213-157650e025e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e093ee2-4372-495b-aee5-5dbe67fb0914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9efaa04-2d17-41ea-93fd-044fc9cb3162",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e1f84b-19fa-428b-86b9-3ebacf1bcc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2443631-1915-453e-8d3f-c5a1afea73d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25520bc4-c4df-4481-a784-de83f64de8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b1fadc-314a-428e-ae64-ac29a6f64cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05588dd7-c607-49da-a0e7-d4df7c11e519",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b0d910-6e8c-44c5-9c5d-b482a9c788f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e186457-88fe-473e-b338-b8923ad0747c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9fa4aa-f817-44f8-a74e-e83323171192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "94bef89d-da80-467c-ad81-627d7ab8e443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65642940-81e1-4b14-9c09-19a66aa66fde",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67e674f-a942-453b-ada3-04e88e281568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671b4a99-b48f-4de6-a5d8-631acc11d2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d13ac-c4ed-4646-ad3c-14ba7a4247d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b69abf00-6f65-4cae-a1f1-aadc3f05d6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71aac3b3-0396-4721-abbc-3acbed75f382",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66093f65-7448-4644-aba4-008b9bc6da22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91efb77-27eb-4327-80e7-b5a2f305d19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011501a1-ae91-47a1-beb0-502662769913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b186b0-e357-4948-a25a-c461647a134d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6789ae5-b8f0-4243-8a0e-c769f85c3224",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b78b671-8d6c-4df9-bda6-87eaab77039c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0723e4-0daf-4efa-8b7e-37b1bc82223e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c049fe2e-aeac-40eb-87d5-c46fb2a3e1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c144dc4c-e3bd-4e94-bfbd-f698e402c983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b4b114-f74b-49dc-9b6a-b9a7b3e9e1bf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed7b8f5-8101-48ad-ad0c-e053f824c99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c566c23-f328-4a7d-a8da-ee255a5256b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41687dcd-1f1d-4adb-82bf-cfc72c4deeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d653de1-4e11-49de-918f-8e4435281a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67516b34-57aa-43e4-9fcb-32d6538b1ccb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8b87c3-b1b0-4731-8c33-8e2adbfb3530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2a457e-1c1d-49c3-a860-c1b6a082c05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643f9c92-8ad5-44ef-b10a-66d1ff0bd41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b06f0da-43bb-49bb-9a7b-05902b440259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edb218b-0a42-47a5-9812-047c47ed52ce",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0c017e-b521-48d6-a4b8-f62dd7cae9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c36389-d49b-4271-9369-0d81e2594332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c81b30-69f2-42d8-873e-c51e3ac0fba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8626a6-9705-4f77-8d80-9e83a233abe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bf2af5-1efb-4cff-84bb-44d04d777a39",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea37195-15c5-4dbf-bd75-857419e1e00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a70bd9a-cedf-4d7e-97e1-64b580d726af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d535fd-e990-415d-b56e-9ab1b27f3aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2976b689-b491-477e-8e0c-0c1532626214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd017eb-a923-4bda-810e-5b49b8fc1437",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69003089-64b8-4f16-a43d-1f836a75d327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf4290f-dfc2-4739-9422-2ad2a5872607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7cf3c0-669c-4948-9cdb-994d67faa701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8660e766-4a55-4bbf-b565-76fee0181f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286b27ee-f7f5-4418-9d47-052c03afc67a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213e3fa0-0c69-4f12-9040-683fd2aaa8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5242080-bcd5-4bbe-b86a-a9356f80011e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea1031b-3a5a-451c-b6ca-814ddb6a5d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e3980a-b5d8-4460-9a36-47a335849ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98624a2e-898e-46d4-a6e5-3503ec01091c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92c077e-d7af-49ce-ab6d-e57c70aa3204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b32dc3-b0b4-41b1-936c-5de9d4b086ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469da8e7-5ace-489f-9083-79774fb0ad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b16ca8f5-e35b-4963-bb22-fcc2a3004bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2ac501-5b43-42a4-b42b-5b9cff25200c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0695942c-9135-446a-9dd7-ae17ab260103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5e701d-918e-4ba2-8391-dc0f86b25e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9146e1eb-1959-45e7-93b7-04714606e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "240f6505-e0f6-4662-baae-4c62646bd19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b95442-cb57-404c-8a09-c97b4e25d3ee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c81c4c9-71d3-4a19-bd14-a693321bc360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febcf708-56fa-40ff-8ec8-5f35e731365e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d43d84-ae90-4bc8-8fc0-e843491edd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c2b38f-0384-4472-851b-c5aa750a1b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf10cf5-76c9-4352-a48a-b8dded5eef0f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc8ebd3-5a7f-4d04-87a8-69ab4b0295ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32454f0-37d0-4347-b7f1-69fff5707b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be0c4e5-e2fe-4859-a490-caac3e9e1ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60ed753-2274-42ba-a9d5-e6bc108229be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7767a0-2125-49b8-a3b8-b7c0e014bdec",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a873904-25f3-4744-881c-7a5097ae3290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9815fe-dd30-44e0-8cf7-550b8776a469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2503a92b-36a9-4d74-94f6-a331a623a916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4efbfa67-c8a7-4c70-a71d-9455754fb248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7339f6a6-0461-46d3-9b4e-d272ccdeb494",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12547054-52c5-469e-8166-451f285b4f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a4d061-0e26-44b9-9f3a-29d24ef6b393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661981f6-fc48-4533-8207-247c8588ed28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1ce24f-1b62-49b5-9b97-3c1263038b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a43a572-d4a7-432d-8efe-c7578698de34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1822eca-8ffa-47b3-95f4-9064fb302de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f55d526-f00e-4b7b-abf7-ffc224c0f198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa77829-8d40-4d0a-8c44-2e37a762988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f94d16b2-d998-426f-ab7c-698396dbc5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3c6773-73bf-4c4a-afd7-6c86388ab465",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e4118f-efaa-477b-a5ea-daf7e57fa12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c7875c-fcd6-432d-a0ad-58b1261f8cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96573824-8db5-4c02-8723-0a2b79d362b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba05d3e6-0656-4ddd-9def-f641441df2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240cdbc6-544d-4789-b54e-635cd06e9e59",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120f5d4e-8600-4417-bfc7-d8b1df0469e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f3bbce-0c0e-4b39-9649-f53f8f53238f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e346d61-ac43-4215-b04f-666d97a49686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f4f04a-35d8-4170-87fd-0a28f6c5b6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227a17db-a4e5-420c-913b-b71566f376b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2efb91f-e61a-4151-8f12-f3323457e915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502c9c55-773c-4c8d-b12c-9832aa682fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b1e9ba-aa3c-449a-bf4a-ac39f8be3654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7272bb23-34d9-4f02-bca5-b820044674d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ee601b-4c3d-4366-9d79-4e06ec57f5cb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd70354-09ae-43a4-afff-a1cdcfba89c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d54f8dc-3437-4494-a88d-e28f1c83897a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a51205-4f88-4e7b-8a7b-6d2af8637c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3149a1f9-e28a-486b-9cfc-7c776272eab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3c8060-3c12-48de-9fb0-68937251f49d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1371d244-9ade-4115-abfd-4cdf70764905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5c7c2a-5d57-44d0-b221-03c0ae931e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9875a83-4bb4-426c-9ec8-5a3b86eec212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a60b8b3e-1402-4522-a954-8f7be9f6c87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4463df-96ad-4a47-a6de-aadebabb60b5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a96b53-2500-4f3b-9ed2-1b957b8e3285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf6bf24-c4a0-4a9e-ad06-1d006b539c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9358b5-2769-47fa-9665-aab8a19873ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d22c3f2d-dd1b-435a-b159-9ff87b2b9f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4223054e-381a-4eda-a973-27c70ca8f76d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8566128e-739a-46f8-93de-977f83234a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bff5bac-553d-4a3e-9295-685e9325c460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aa96b2-8c83-4cb2-9f92-9d213a16609b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1760ce52-d45d-4232-a711-2219d1baa107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbb78aa-8383-4ace-9c74-c5fac1c59915",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a18021-ab29-46ee-98e1-9ffec3f20b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec068f1-7fd4-4a26-b1c1-408d55d9b3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8f79e7-22a7-4d29-b2c5-a0ca997378fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a5ccfb-8dfb-4006-bb5c-1744b10dc707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85c2c14-8f89-4482-943a-ff26d85d9806",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee989334-7b19-4d68-a33e-e00b1eee605c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71a7c51-4264-4faa-990c-ee7ff0bd438a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae85063d-f118-4018-8a2e-036942e44352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82c6e7c3-3fe6-4ba9-a1f3-233d649dc3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb45eab-5080-4fd2-b975-55df06b10fbc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1898ef-3189-48ba-a3c2-bfdf113a2f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81181bed-e977-4a8b-89a1-8cf55b92d512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6394e36e-47ae-4d81-8746-453e4733ae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "417b5f70-48a0-48aa-b698-b900efd0efe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422b67fe-6763-4222-bb0b-2fc7bf5a4ab3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2979ca08-5a39-4bf3-aaa5-3ae0125c6601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de3e696-a0eb-4a74-a027-4e0b9434fc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431adff8-cec9-442c-b382-0e4f3a02abdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19022ffa-1aa7-415e-8f70-3f286be75d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eda7ece-612e-4b5f-b54c-bc1eb683275f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a51b6f-b4c6-444f-8bcd-0a7028bd39f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71851e24-15d3-4b4a-ad86-40a21b6e20aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d64e9d5-73b0-421a-8aa3-91ed7146635f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11146683-c698-4722-8e53-577fedebe7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c173188-da7e-4edb-a627-d1edbc99b080",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92de142-75b0-44db-8a57-2ccde113ddca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9cd552-ed10-4dba-9b2e-ac3800eba563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466f01f2-0e96-4a17-8eca-3183f6ea8858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae093d75-ee2f-41ce-b7db-03640efe9a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70eace4-b178-4331-93f9-7a0f2ce33ad9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6f494e-9b58-4c15-85f5-59b96705dba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9da73c0-14ce-4ef5-bd76-a8654adef586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f49899f-e54f-4939-823c-bcef5e11c3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7df1a9-40f9-42d5-b4ba-fd5386cbef41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7f9cd0-627a-48f7-949b-324361f0c1b2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3103a032-f615-4963-a774-c6a115214e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52823a2f-0dd6-445b-be23-45fb4b7f4ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da9f664-b8f1-4163-bf38-7bf4d136a81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "299c1f12-04fd-421f-b9cc-50e058b744bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56f133b-de33-483a-adb7-08af2e783799",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dc1d1c-a240-46af-b8a9-01f3666d4d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b45479-4484-4e34-8d26-ad6413aebbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df71154-7ca9-4b61-86a8-58cc3ca771b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82180cf1-dcfc-4c94-89d1-c4a2ef40904a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1613b21c-d759-4ecb-960b-17609b720768",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6e2d32-2c0f-4d32-9db5-7198b38ca856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a83296-71ac-4ac5-8c8c-c959f3883834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f26bb1-c1dd-468d-bd7c-213aca04e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a67453-4ca8-4ba0-882f-c5f3f17e4f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409c696c-7f09-4c37-9de6-ec848b1e70f9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1d47e1-3ae6-4eb5-a43e-f57e84da0b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3762e7f-bd8c-4491-a9cf-124d5974349e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3838b9-f7ab-45db-b60d-5430cfb42194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94c472b-3a88-46ba-b6bf-be472ce4d220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f56e3b-4586-41f6-97fa-f7fdddd0eadc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bf95a0-a7f4-453b-868e-53247f785b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8351fd27-fe74-4c69-a3ed-30b76b374ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3e8e4-b2b5-4671-ab54-65691f9374cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28d25971-9997-4569-b4cc-35741b94e984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac1e1ed-3b34-4385-856a-e65e359d32fe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2ee092-3f66-42c4-ac95-c57e63142e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d073cf5-1a75-4c8b-bed0-0b4cfe2d4128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69921ab7-08d6-4dc2-a50b-fbe08faea0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce5537c-eb3f-4f72-9a0b-f6fa5aad1003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891ea23d-07c6-4b78-9583-bc1506831c8f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9608abb8-7d77-45b8-a8fd-21b04802f656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10292d7a-9c08-4c36-b63a-896804402556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea31f3c-ed81-4870-8767-0bb0cd0c4391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a47416-16be-4755-9f8a-ad501ba76908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0219eef3-0d5b-4459-9e68-a0d849c1bdf8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f94880-2b8a-419f-86b4-30de41439ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6fb01d-2880-44bc-9883-03e794b2e5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2839e7b2-7f9b-4d26-84dc-6bde74888c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "682a0bc9-ba38-432d-9bad-dcea2447806d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484bd107-6b61-4805-925a-c53b5bfe150b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342746c5-d5a5-4789-bea3-7a9fa0761dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf5f167-f796-4794-b1a7-fd5f1c212058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556fb3f6-2b5b-413e-98d7-285ae56195d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8f2f16-a2e2-4298-aaea-4b537819362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cd4faa-ed4e-49a1-a316-4031f1850856",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23927ff-9aaa-46db-ac7b-14a989b161ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3066706-a34c-47a6-b0bf-b2273df58e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f7f05b-8c80-403b-9a8a-054007f6d47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc35fb2-64ad-47cd-b342-dea1c7779f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913c1db9-d03c-4a3c-a862-254591389503",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da4d292-5dee-4927-b6d3-497f366f2179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68fb975-c215-498c-b343-6e8658b3cb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bd8c44-30dc-448d-af77-b227d1ab2849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b02bdaa-6df7-42dc-900f-ed5c1dfa2eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc33e57-1560-4d96-aa52-769384281aa1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c34acb-9a04-4a28-8da2-4572b97ba4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee696a7-799c-444e-8e2a-478c4b39ce9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac86b10d-d4de-4877-b4aa-d65896d69d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "497fa74c-ceed-4096-a6ea-06fd812a7f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19868fad-341f-4444-b1b4-38ec57e1216b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2394382c-2e6d-47e7-9962-96924cd3784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6dec32-2e91-47a4-a216-c45dbc1c0ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d2aeec-d1ca-435b-b3ae-d6491f7a49c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9077a475-6cda-4229-919c-fdd10dd414f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0483a908-1f5f-494e-8070-ea4e8d3410b2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e4346f-86cf-43fd-adfb-64d1f10dc9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b586cdc7-30c6-4866-a013-0ecedbfd2d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c9995f-f77e-4f4b-ae17-cae009c31b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c68389f9-c8d3-47ae-8b9f-2a788eb83cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1159c79-8ff6-48c9-9ff8-58b96d4e7b21",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82970b3e-278d-489b-b500-2577b4fda28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74731dc-72bc-482d-8d61-71063ff199d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822fe3ee-b0c0-4e3d-9bad-16cff64f8ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa2d455-b034-4951-84f4-1058ba630f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a766270-d736-4a9c-a283-60b934b298b1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcb063e-3c4c-45d4-b892-c7c3d3c43d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf77056-d46c-48b0-b409-c71db3273cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645a0664-a76d-4657-8564-30535f682c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7badc41-b7ed-4c44-b188-e650d1d79322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c1afba-626c-48e6-bd0d-2f5fd562c75f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ce18be-c0cf-4383-b350-6aacba0911c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddb3555-de69-4594-b058-c05f40124f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9517dc5a-4bb5-4842-a983-c2596e4de20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f97c7e7d-c14a-403d-8185-2903b7440d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc5adb5-c2c7-453d-a85e-2b70ea19eeed",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db38b302-ee73-48c8-a940-a10a8a787bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54a5537-7771-4f24-8aa3-01bc8b0c4153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc495e1-b3de-472d-be5e-2e20d4d71780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff5d252-6731-4892-88ff-93bf73f37d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243fe907-67c5-4d29-b4cd-96f807c81c42",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea4d1d-5e32-45f9-92c9-3e5e67fee728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0872cf8-c7cf-4017-9e5b-ed6d7f6f3f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932ba048-3ad8-4c93-8135-2e57af827c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f08aa54-70fa-4d90-9596-cfe88a2e2f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16a400f-b816-4665-9bf1-2a22d10fa2bd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f048335-6084-48ac-bda5-0bfe533cec7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "324819fa-0bbc-4e1e-a8e6-8df99511086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d81c4a-038b-4002-ba7b-7f864bb6e4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e548e00-65ee-4ef9-96d4-b76380a0bd9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "785e4980-db6a-4f46-bad5-7ee15304a839",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d70070f2-bba2-4429-8600-aa24c5e50737",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8965e627-5a32-451c-80ad-f3f7d427e31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1aebf5d5-b5c3-482a-baad-c08efca42404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84af43ca-93af-447d-97c8-132e60680b83",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f03a3095-ede3-4bdc-b519-d444f955da63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd37f63e-bf99-4f78-a268-5e83c4894cef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e05fa9fa-643d-4ff1-b6b5-a178922b2194"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18b88451-f1de-48ee-afc9-d37240915cb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ee7b57f-3144-4b6e-a59c-99b662cd75c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64152519-97bf-4051-9e54-19e9c3989b27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db9a5d4d-4b1d-4963-9ed4-77a3f3dd618e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "777fc77b-46e8-45af-8e94-a2acae6c980f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89598246-2532-43f6-af9a-ba025beddad2"
                }
              }
            ]
          },
          {
            "id": "e20a4f12-da9e-4340-a2bc-2d5e7b06cba6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c024115a-806a-4d33-847e-84e1844e4f28",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "76ea2453-8172-4d78-8c65-675e45f37237",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ea60aa-6fff-4c9c-becf-70110acdc823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d7aabe0a-fd8a-4c76-9a90-a1cf54c46233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4ca23d-98a7-402f-87a7-dd85ddf8532f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1433b514-60b2-4fe2-81c6-b6d65bca350d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "175f9294-6571-4d08-b2da-0c8a62b6f52f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2738263-8ab9-437f-913b-915df49df16b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71781d8c-2455-4107-9eed-f73ea71c0394"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16983a57-0d53-48fe-9cc5-e862f520280d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d4c696e-9a87-4fac-9499-74fab07672b2"
                    }
                  }
                ]
              },
              {
                "id": "4a0aed1f-bd4c-475e-b8a7-1027955e1533",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f96fc6e2-bf91-4510-9b7f-76756bfb096a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a25fe48-8160-4225-9eba-e36af7746f38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a16f2ce1-c395-423d-bb93-ed2dbf0490cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ba1fa3e-92a0-4ec3-ae20-3ff187d7c675"
                    }
                  }
                ]
              },
              {
                "id": "a4ded223-9457-43f4-8d2b-a6f0f53837b2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f2d0bac-b62c-483b-b438-d13ec8064fcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02e539a5-8d5e-4207-8420-e8d0c639a0f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c35aef0-55d2-4c6b-acbc-5deaa562d553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4035b28-9fde-41e0-ba1b-4cfbd89e1dfd"
                    }
                  }
                ]
              },
              {
                "id": "74a3984f-5e51-4098-acde-ee2f71676996",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "878ee0d1-1e01-4814-9fa5-59bf7b514cb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aeea3436-92ea-4934-ac85-3e1adb07d199"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a948032-a66d-45eb-a75a-415614f93f20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "208ae252-d46d-4d81-b39d-0eaec5fa12c3"
                    }
                  }
                ]
              },
              {
                "id": "0aca1d19-fbe7-4e02-8ec9-18ce6b5601e6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "506b98f7-1812-4aa7-9eb7-92c192e6d1b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1275fd87-222f-4c23-8739-c20fd239ffe9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47baba35-16ff-4cd8-9c1b-395907f54a9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "28c6f720-0cb6-4730-b681-c08c43fc0010"
                    }
                  }
                ]
              },
              {
                "id": "b9b66380-c93f-4fd6-a776-d7b1f721dec5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af409ea4-b425-412c-a8a7-45492975a55a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36c2d633-0c8a-4f00-b1a0-b10fc7e24be1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b128848-3e02-4e1a-be71-69fde8d79ad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "759ce993-2487-4aa4-8906-fe5057556588"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed9db221-643a-424d-bafd-39d638f94934",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59fc7a53-e2b2-4b61-925e-0da669beb302"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "adb447f6-8f4c-4966-9cb3-8130320e6816",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48566fe4-d839-46a7-8fda-185d39ed64b2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe391b34-1014-47f6-8a6e-e4ff340fb677",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "87f308de-5a33-4b9e-b0b1-5ba523d9dd5b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "021701bd-86b2-4b6b-a1d8-e75d7c534093",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e494d673-c3e2-4b07-9b31-1f55baa4e970"
            }
          }
        ]
      },
      {
        "id": "ef72f00d-4966-44d7-8635-569bf9289063",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "898a68d6-4374-4100-9210-33c1709a731a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed92f5e0-4222-4b1a-8832-b903243cbd32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ee31cbd-df5e-45e6-9692-93703c4063d4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b48609-9729-4f14-a27e-70794149ae73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e5e788-e33b-4ce0-83d8-4b79df7acd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31df0f07-8ae5-4310-b550-4aae8cde542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee65527d-c248-4bdf-9ea7-e8b081dfd04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097e2e5b-3f54-4bc5-b12c-a7fe23a698b8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13833eb0-1078-4f33-86d9-631aac68aca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98dabc3a-cbd1-4608-99bf-3dd738498437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9339c440-274d-4e02-9fb8-5797890a0de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d3cdf2-92e2-4cc8-8a32-1c19db8af887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86731cab-6c8b-4b8b-b86a-bff573ee83fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ef5dcf-d7a1-4a8f-b255-4cc912137afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c46c5c9-1647-4f2b-a019-394243b4e04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81001665-ba0d-4e78-8740-957e84274701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8980351f-6eb1-48cf-85e0-9b7f35701d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1689d425-3304-43f7-b888-d5fe150f33d8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea8b256-2db7-4b3c-a7b7-25c272fb2790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869e57fc-3e64-4b70-8d7f-62984258129d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e48a95e-b4be-4f0b-bd30-8b09e89c7d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8096401a-bf39-4b41-be3f-c5a528689dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc6c7e2-131a-4aac-88a3-33433e7dbc54",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2ccc41-b0f0-4a91-8c35-dda7976ffe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6ab66a-00d6-42fc-bae0-4fed331e8d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd7f0d5-fa7b-4c6f-86c0-e2cc75049403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cf0ede-3fb5-4d15-928f-9aa69b36579b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497c5fcf-0b74-4f42-9e65-ca7f13066d3d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5b4026-fb49-4f0e-aac8-9225994bb2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdd33d5-fe52-4c82-b8ed-6ebc64ef29c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7fb935-b325-4adc-875f-28c91805fd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "244be204-500c-422f-8947-6993b54247cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744424d8-c930-40f7-9a6c-065d9310b706",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082ca6ce-c56a-4ea3-83d6-265b9a13db34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed15c273-da50-4871-b8cf-7ae2fb50f8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7bc18c-5a0f-4d8d-be43-6610e50c9269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3942a55-ec93-4379-ad97-5909bdc39248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c48969-09ed-4b2f-aa39-d346cf85d5a5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d678ac8f-90a8-4205-aa5a-c1bbec11ff0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd46e02-f5e9-4c76-91c5-9febe5aa8917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dbb3f4-d343-4235-88ac-f330ae73b287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0381cf47-b0bc-49f6-b846-2afb40a81a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1d1a14-bba5-4fb1-ace3-0f75f1e61079",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f98c73-3bd8-4e57-b223-233414d4793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8b2f22-a50f-4657-838e-1eabe41e8d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d269bab2-8076-4afa-9eec-4194928492d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df9e013-37d2-4e92-9bcf-f01665ba27d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec959aea-7834-4b94-8f80-fa982c806977",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565ff6d8-36ea-4f03-b29d-6cb59da10235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3000b098-8b19-4db5-a547-7e87a72b3353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2aa791-e1f6-4e6d-8960-03ac6d6f6b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c68665-e93f-403b-9609-895bd71f3162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f57b32-169c-43b1-95b7-e38d1c9da18b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5fe7e5-3a5b-4d66-8eb1-8b4bb570c1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71300bb7-d948-4610-9a0f-0614d7271d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4f7b1b-f7bc-4706-95d0-9d73441b3eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c23714f0-54d3-4f91-8ab6-b92ca8417831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea11f6ff-173c-4d03-ab9d-ed6e43962e20",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc0f450-6a1a-42ad-bae4-975284f845b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548db513-6b9f-42d3-a768-cf23a3d9a8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439eff9e-02df-433f-acf3-0ffcf7cc7294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3035f887-7fd5-4aae-b1fb-4037d24139c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9cc6ba-c9d9-4c60-a87d-03ca7bfa9b75",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29f31f1-58ae-4ec8-99d5-2febc24f4a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b725f69-57a4-4584-8499-fab829a45a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb05b10-2849-4abf-b501-98ad47d879ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24336f70-1826-4c67-a49f-0ff306d16381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d7865b-0dc2-41d4-88ba-75870fb86c9b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4499884-9ff3-4f4b-8576-d1a6fca3bcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a430f505-479e-4514-9fcc-4a3528477569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411a788c-d418-4955-b74a-655c1eaa35a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "62697e3d-70d6-47ab-baa4-77dc73d55f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5d0532-2a68-4a61-acf6-ac7b418aba7a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9191299-2dfb-455f-a69e-e1860df5b2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862f6094-7397-4efa-b1f5-170e00972934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62d64c9-71d1-4da0-9a4f-b53d74c3ac12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8736effa-868b-438a-9de9-b2eb69fbd1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29aaa9fb-3e3d-49d6-a37a-b7a360924861",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d736019a-3921-4e58-abfd-5e2e5be75837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d54ca92-04f2-45bc-9923-edb41ef25336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3a83fc-029c-4e0a-bcaf-591722a043af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "03247558-472e-47aa-8238-da4208321950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797fe16e-550a-4f60-9500-7cc438e8ac68",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc34b1a-9e59-4af7-afb8-8c0142bf43f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45efddba-ecbd-483e-868e-753e4ae97323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4683049e-da21-44c4-86d7-49b7e31e3ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f41995e-9f21-4426-acec-0bd61872c4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5275d64-5b5d-42e2-a9b1-909670daf0a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a809702-bd26-4100-aa4e-59901c02b819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37746ba9-8434-4b0f-b79f-66d271f0ba23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b355faa-73c0-4c58-8524-c7195178e377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c08414-44d4-434e-a514-759154ff1967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c80eae-88b1-4d15-92a2-4aa693e40ff4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e32410-e20f-4193-b47d-4192ed6912a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbc3180-6040-41e9-9d48-35c8e3d9aeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4028266e-f7cc-460f-a9e9-7f181fe41080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a85b9d2c-5eb1-4fbc-8a23-13ac84b1506d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edd6163-d193-4ed2-bee2-3940ebaabc70",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b3e3f1-6911-4707-bbd1-6852d7e9987a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997528b6-624f-4122-b3a7-ffd07ecef11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ac2143-0300-4197-a421-e4aa2f0e2631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d6cb20-ed56-4ca3-bd2f-c6741249ac2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07721b65-0cd9-4015-b9e7-eff2d0321d23",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2f619b-c455-43e3-be3e-75d898fd7766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c5abb4-c8aa-4fe5-b7c2-7ba32ae2ad03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e032fa94-1773-49f7-b2b0-a39ad6fd75dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fef694e-7fc6-4892-8d29-f356ef0a6a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dfb344-9134-45e6-96dd-f596550db137",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf05356-c747-4950-8fb7-794d377bdf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb87623f-6d5a-4941-aa59-e04895e509c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761765bb-da1e-467b-a5b6-266909721949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e050e77-65bb-4565-adfc-14355de04f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e649b759-8a69-48b1-8560-64a26e204657",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619a300b-9532-410b-967a-471c74be8acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2aa6ee-a110-4eca-8b87-2601baeaed23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f12053-70f3-4a1f-a07a-f2ec039d4e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c44fd5-8722-4dff-8f06-ad923d0f4f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a5e357-3a99-457c-afd4-b743d89e5bf0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e484e60-58a5-44ba-963f-524dedb7c572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d472e8-0c5e-44f5-a8a4-f84205703a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69050bd-bef5-4926-a0a4-5dcf0abf3c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd03c982-a029-443a-98a2-e74426feae23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7131182-2173-4a4b-a631-55f5cd0bb8eb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2c816f-62be-4bb0-8891-f0aa42c6ebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a122a120-8a45-4473-a168-32d12c516130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702264f6-d96d-4a7a-a3ce-6617fd1cbbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccc3d85-2ff0-4237-923b-623a24c2734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85332c6-80c1-4017-8c82-533d95937f53",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed606212-b49b-4b0a-8732-7452ab23c10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9050898-47cf-47d4-b078-e18c5a3dd9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3150154b-81b2-436a-8a3e-a62df1b6a436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b9f4d9-e7e6-4987-b786-a087cea4a361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e19bdbe-c151-4d89-ac44-672ed477e00c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660f48ec-b692-465a-acbf-d6c4a6d4722b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fab57f-9dce-45f9-b9c3-cfd334afa071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f14e814-5c42-4978-b2eb-41f0af07173a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bac4a8f-fcc4-43f1-9ad4-505b8cc2e689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7995e3-73fc-40a2-bac4-a55d4298d253",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ba1408-0e5a-414b-aa16-e62b6f958971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c54693-9151-4991-af51-ba129ce80a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73245127-9e6a-4be1-8c4e-e7fb28353fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f729f5-a89a-4048-b2d8-33c335f99c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2792089-1316-41e4-8066-4faff0b49b00",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50caba3b-f2bf-405c-9a5d-7e2a74578b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61c5815-b14b-447e-9039-5c6ec5c999f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f173e6a8-486d-4ac0-8215-716f37923e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "309e94b4-1a3c-4a1a-bbc1-1492d7468327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0550ff32-acc5-4130-b233-2aa17ec3188d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5314d4cd-6c34-4514-be2c-3098e8b588f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e22b1af-bd77-4dbd-9165-135297fbf5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5d2c07-a61b-4b0d-b9c2-85a8e391440a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf0fc55-c64d-4a94-a6b4-018f4ab7e3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98782a4a-d211-4967-9c04-e8464f3611f9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df16d1bc-f555-41a0-911e-71fbecef97b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c9292a-67b2-4b31-86ea-498cf67b2f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c49caf-1a6d-4d50-8fd3-337dca20300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fdb82f-4cae-49c1-92b9-79064ca76f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c97280-1f50-4194-8103-03e0ff191283",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e79fc1f-c381-4a6e-8644-322a1c39e3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce628116-855f-49b7-a97e-06a6522f6627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce473d0a-784f-4d30-aaf4-af22de050d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c2b7ff-e8f4-4a78-bd56-1e4da62faba0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b2f5257-69e2-4c60-b1d0-0f13c8a84b82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa09a550-6afc-4acc-b773-a4ff4acf41ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57319a46-7805-4d13-b708-bbd4ea573688",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd7bc89-ac8f-445d-95c2-43114dc14185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e13ae3a-30a4-414b-8fe2-139da939e504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "334cc0f9-b7ea-4b4b-b742-5be98c49468f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3574544-d0a8-4b07-ab75-ae506d511834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47e5c317-a406-4673-899b-e8ffdd3aacfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63a88040-378f-41f4-a886-6808ff3c6582",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc77f90a-8dc8-46ea-a162-661594a2340a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0ad975d-d41e-425f-a8c9-b19952d70294",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb5ce93d-a1fa-49f7-ac4f-3a07fcf21383"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4914335-73d3-4fe5-9132-147b7d0d6289",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c6493e9-ed22-4528-b5a8-5785cd4d8b4a"
            }
          }
        ]
      },
      {
        "id": "b6a2e0bc-19fd-4fc8-ab30-bedeb3d7b28f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "32070563-a46a-4aac-9106-64a71ffd61ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2c2c48b-6068-485e-8815-65270ec1caf8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03083d71-d6e6-436b-a6e1-0761862deef0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9d1860-9a29-41f8-b8e1-f385719ed900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d58929-9b3d-49c1-9fc3-1f05c12d621d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8d8dba-f158-473d-8a0c-bbc4c7829c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0d33ac-17fd-4d7c-aff6-09d6cbdff952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950999ac-5013-4c3b-9bad-8cbaaeb3df9f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b3008c-5762-4b3c-9484-2dc051e3556a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e18c09-9cf4-4c0a-a2d8-e3e63ccbce29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a791695-95aa-48d5-9718-d4563efd8b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9a59c1-032e-4d35-ab5d-1b561dc660e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ed66dc-2d28-4adc-81ec-8fab23bd367b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2037a4-2edf-47b2-97e3-e969c2f61fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe13a15c-2e1c-4f25-b0c3-cea00c7a660b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e2a3bc-532a-4197-95f5-63ecd33240f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df90c3ac-9b76-4ce3-9737-f126639b4e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5f8842-e589-4f30-a8cb-071537c4f693",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0401656a-729d-48e6-a8c5-7862a4bc61fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e11cc4-2cf2-47b5-83c5-37db0ffbb43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8cf291-e2fa-4c5e-b490-e78046e03135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fed573c-6d5d-4844-afc9-de8f1d1741f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b9baa3-6dc6-42c6-b405-fd62f73f67d3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcff662c-24ab-454d-ac6d-dcc06ad1db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9371d3-dc8b-4e55-89d7-2c81a0bd928e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e594c48-4e1f-43de-a6ca-eac9ad1effc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05dd8d6-576c-4163-8003-22ad023ae3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730aeeb5-04ac-4a64-a6f8-25788169964e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c2af59-fffd-4fc2-a417-ab7d2ccc2bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfbfe13-cb3f-4e88-abb0-a7b472aa1c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da893dd-61e3-4212-a1d7-1bb2aecf3a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "848ab362-5f64-4ea2-9020-a258ce644270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6771c685-65e4-44c3-b793-9efcdf7ff56c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4edc6b8-7f0e-401d-9610-7bf215bfc3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7cdb5e-59e8-4fc3-8e2e-2c99d64bbd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6061b795-11ef-46f9-9c28-7ddef532d3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5144e3a-b5ca-430a-b30f-eb053f57988b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb66e458-e1d4-48ac-94f8-67590cab41fb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478e5495-93f0-4b28-aaf0-4db70e7934ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4370bab-5cad-4393-9da2-90d9be5321eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff5a229-a0ed-4abf-8657-52358a5018cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a40fa77-3db9-4802-a4d6-0da99f213e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd01769-0fe4-4ac9-b2b7-e8a00a9f2121",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3261e3c7-adbc-4eb4-b310-7c33d38d81e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899acf6f-52ac-4d36-93f9-d680ad1bc74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eac740b-616f-4769-a6e3-03d433846509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d34d374-a434-4d15-8800-acf310c7937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bc85da-e7b0-48b7-94b4-ebfc9ef29582",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb478759-9839-4ec9-bec9-fdc9e161aae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ebac86-57e0-4867-99c6-1971b99af9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f304e6-0441-4133-9c07-66d254aefb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7578d9f-27f0-4359-8343-5cc7864e8677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b4b64d-13d6-498e-9279-0bbc24a9b9b6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd68630f-f5ec-4d85-9bbe-088ff3ffcfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd15a5bf-f968-436b-9994-02d693b3c56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc81da2-49ed-414a-8308-575369a0de6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ba26b2e2-9fba-4efd-a46f-ffc625df67e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ff3659-b95e-4dc1-8123-1c71f5fe4633",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29689f3b-b33d-44d0-95c0-155d0f7c3433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fa3f09-d1c4-4a8c-b5ac-8056d22794be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d519bca-48b4-4ec0-965f-052c580cad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa9f94d-75f1-4f09-a8bb-1d38183d7441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92393f1e-63c8-4d3c-b8a5-edad4606d906",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a370cc7-655a-4b09-85e5-d3c5ec997a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525f6e5f-1684-434c-afe6-919b411c74b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee6c462-f264-40d8-9e5c-3ac712decc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27483344-d32e-4135-9f62-ef083f059868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec13c104-04e2-4de1-b1db-78c49c965e3e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e007b041-d864-4f6c-ba12-40d2f644cb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2779dab3-88b2-4379-9c2c-ee345595e38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c110dc-6442-4718-818e-1b7db9caabb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7abd980-e698-469c-a364-d8f6755d600f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35321595-da52-4eb3-9f29-ecefd27872f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e08f880-426f-46f9-853f-9c8a8e0899db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4ac87b-4d68-474a-b7b0-58686039d84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a03827-53c6-45d4-b382-55b3019ae691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0f917e-aae6-46ce-902c-dd90b024908c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e279dcb-9ba4-49a2-818b-503731ffe006",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8d8a7c-66d9-46a1-b8e2-f946b0fcfaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48912fcc-29e5-4815-950f-27b78a7f9f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac41fc2-8b79-4245-86ee-87e65815d791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad09d896-1aca-4a0c-9985-1bf9a8015a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98abecc2-6908-4c8b-bfb4-c9de3d00d98f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa3239c-654d-4cf0-978b-c5c421a94611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11b4b53-46b9-4bda-9e43-6f9e5838e539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4403e0-b39a-4be8-b757-aee70439c39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "316744b4-e789-4e36-821d-28714c602bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d432733-44e1-4216-86c4-5fd90090a353",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be378fab-37cf-427e-b792-e7bab1f3072b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0346de26-1f3d-4e15-adae-5f02ebe21ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a48d6c-e871-4e77-8474-6eb5090cde1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed7bf21-3728-4735-b640-1a8ebd4de81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dcc32e-3c79-4e0b-8bb4-6e1155476cc1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed4429e-3c8a-4477-b30b-debf8a89195f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64682fb-c57f-4b80-8f4a-91b238a1eaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99658f65-f97e-45a0-bd2f-679cf92ed1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03670531-9c77-4040-8f62-61505925a665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83549cbf-a4fe-47a4-bf80-91cc6f1ba50c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9e5e0a-1f50-4483-ba1f-3c872d7cf995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d906b42d-3a99-4ea0-839e-3d81a59b3ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ca8d39-1810-48f1-a50c-673ec5ced6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72d8db1-5661-4b43-b066-05226f51d40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f2bd55-740e-4d43-8d7d-7ba05570808c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6769879b-bca1-462b-afd4-ae50305d263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19c4769-9576-4f76-86ef-8b2eae6fc9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fbdef4-633b-403b-8235-db915aab4611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb45a5c-73df-4d09-8fd4-d7ac0b4fc479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ad893d-4867-4bc7-a2fa-1535b66dda8e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d0d31c-0198-4c7e-a147-21829240772b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2c9283-59ad-4334-b8be-043170068a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd51509c-f104-4016-8e15-8d877e724f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f87f03e4-abb8-451d-ad56-cf26dbbe7e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab9532d-f498-4500-a24e-83a6a090b25c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c035f385-0f4b-4b0e-8bcb-b7305cab1667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce865d07-e425-4fab-a9cd-09e86ace8f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7083f681-66d3-49eb-9c3f-4b173ece924f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa41aac9-0518-4bb8-b2f4-6c065a6b7fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85fbb85-97e0-44d8-94a0-0a6f0365437e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516bd242-cfe1-44a2-a885-4eaa2593a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0a01f4-96bf-4636-96e3-bb33e23d1203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579b5744-70c0-4b7a-a026-2fffe587736f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93374ae4-953d-466c-b80c-da1a4ca44793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f8fada-ce9d-43f4-8c0c-149047f635ad",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b24973-2356-4f1e-919f-9332db34a753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6709d01-2eee-4c75-a1c8-d15ceab92939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c1e255-c31b-46b5-8067-78e8a01b90c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98febcc-efaa-415e-8935-6d7218f5d0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcea4876-4883-4746-a1b8-236d7f319447",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c8ae28-e5df-470d-a09f-4b0128b4ea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e1503f-fe0f-44d8-9111-039a84051b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0c66f0-edb7-452e-b93c-9eb0e24d8506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368eda1c-c4c4-4886-b5d6-980465be50bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe8941a-22b2-4935-893e-cf3b488eb131",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba48141-12fe-477d-a28c-35ed9bba8b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972f2a8c-5ed2-4650-9a67-5a215669a6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed4a121-12b8-46e5-9e3a-1ef1076bde6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c32add-67a7-49b5-a016-6bbf666575b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b8ce6d-84f7-40ed-9cf5-f850cdc7faa7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce558b01-dca8-4bf5-a225-58a091017df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38738990-475a-4694-88b4-3b696fae4bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ef22c-dd43-402f-9ab5-568519ee49eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9973489-60fa-44ac-8d2b-354b040aed11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dd7dbb-e1b2-42d2-b151-4a87f9a59cf0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4734278a-3d88-4060-a7c9-10165824ad05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d562dba-1e1f-4e61-82f8-ddf0f4060d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac4364c-f3cd-4522-bf88-0cee4ba735da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a642f9-2fd3-41c1-9646-39726ec2b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2d1082-7da2-4899-9470-1a3cb865fd7b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db4f5bd-cb3f-4857-af7d-59bf2429328f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5b3aaf-0721-432b-8500-2d26a7c08bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d3152a-529b-4141-9319-6b6258dd8fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32481b9c-5eb0-42dc-8c67-2fd65a9be733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27513fac-004c-496a-9bb3-4aa13072b1a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb2890e-eadb-4470-8b12-0461e4f71266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc98aace-bd49-4bdf-934a-67828da1ef44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7e6bb7-5d90-41fa-a723-ae319e4f61e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40784e5f-fc2c-4fcf-a11c-807bc89e6a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c58c213-df1a-4964-8cd3-f2a288013702",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcdf1b9-fc71-4f47-a1ce-ebf3ec408c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee4b7a1-fd97-43c7-88b4-1d603ef37243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d68463d-5389-4a8e-8b16-5612997da16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a889fa26-4eed-4414-8217-540db258e3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cb4630-954e-4642-928e-e194dd2d0906",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b30715b-60f0-4acb-9ea6-f9f9af4619c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2082d255-1d47-4c21-8200-b38a2fdf4008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3bf872-992c-4a7a-90bd-b6be681a9315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae8c3ad-09ba-43d8-9705-865c45d5c85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac96e28-59e5-49ae-b222-0708c222a584",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb93498a-b2e9-4fd6-b794-fd3f6fd80543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a07960-76d3-4685-914a-066e88f68e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6366ed5-d04e-4c58-aa43-e4e45db26897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8657f622-5d11-47a9-abdd-9b3e15adba5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd6d8ac-66a8-4d16-8de7-2e6d0be465d3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901b8e68-ebcc-45b5-8e83-9963f5e32f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f90248-e414-48ac-ad5c-86db1ad06463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445fd2b6-f388-4cd3-9209-da9fb00a22bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a99e3f-26b1-47a6-984b-38a9e6033a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fc6d9e-267b-49f1-84e8-25c39298f70b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c2a26f-1d09-4c25-8f8e-96b9306be994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4115e6e7-dfa0-4030-aa2c-19626421ff1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c065faea-30b5-41ef-854a-d40896cd100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d24e24-529f-4db6-88b6-e58f56c4a11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227e97e8-0231-4014-866e-e594764b3e4f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d257100-b3f8-44c2-98f4-d5555ac4d0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18673b32-1000-4b7d-9cae-da243818e183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792b5790-1995-40d0-a3aa-45ca0fb2dd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2180a8-16c3-4a36-8d25-c9f9edc0552a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a4b7839-0e2f-4c0f-a107-7e343271e0ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d94e8368-d510-4554-98f1-b976010c15a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3920ab5b-0faf-4414-8c5b-aa53a96d4842",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6f054759-8bd7-4add-97fa-788811372689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e74b895-d85a-4619-8c27-03579e08b0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5edd60ac-c16f-460b-b008-ab6c2e0b2aa6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb7501ec-5e3c-4a9f-b9a9-03e806ec6061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86888e27-7db0-4a60-8f81-d27f1c1dc424"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3386cc21-f9c9-457e-8050-8715e49dc190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e8295a1-6f6c-4ae4-9788-f22d6d05c6ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4979c31b-d398-4714-8fa8-80c23b1f56e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4908a45-5f37-434b-a881-159adc58bdf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "088bf95c-fdb5-45e2-bd05-f88c669aa7d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c2b73da-20ee-442b-b426-dffecca5bd60"
            }
          }
        ]
      },
      {
        "id": "d730b093-daca-498f-bc79-02d328799926",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9e6b7f2a-95dd-4586-a120-b704bb7ae3f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b60752d0-069d-4c83-b4c5-c41a05f8d3b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15923ff2-abfc-4844-ad96-3d9c5fabb913",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153e5f3a-2d13-43d5-ae6e-2fb893abf621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5382af27-a930-4ea1-80cd-f7e2ac8a2de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b9c8d8-7544-404d-a7db-16903f827873",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd43a07-590e-49bb-8d07-7a9776ec5af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5f7e5-c0e9-432c-84d1-cfb30ba5b939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605b19c0-d65a-4831-b29f-2c141eafbdca",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29c5549-bec5-4958-9df6-71af78121630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1917bd71-df25-4797-a7a1-37351ad2e2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9523ad7-b17f-4130-bd0b-0c495ef3b0bc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adf2c88-5f25-4131-9c71-df71f4f030bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf67041-f177-4c8f-94f1-47730deb52f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7de36b-dad0-42aa-aac2-a704347e2dec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031508ba-fe8e-4303-aa5b-56f31f662166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b5cbef-1232-49a1-ba3a-c10bbda74113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2afa6b-9d00-42b5-af3c-f83f96be9b67",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5fd5f2-0cb1-42ce-9a36-15fe1a6f69a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d0fe3b-9d2b-430f-8883-dec02ddb04ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365c6fcb-1f76-443e-aa68-2e9d899b8c0b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5267a7ba-1692-47f1-8bb7-74ffd2b080c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4c276c-c137-4f2e-8b15-d27cbc65444e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570be87c-cedc-497d-a752-4dfaf1e1114c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab1d18c-8b07-4075-973f-2a1efd3b7d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93ba401-3f32-4301-a481-4c709c03347f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ad8b52-7287-4e8c-a130-623ebee361f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b542484-7880-4e5c-ac29-410539dda630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e242f932-546b-4aaa-9a1e-4d01aa0c92a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c324e91a-443e-40b7-b3b8-6c4edd40dfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef270316-d133-4a51-92dc-1ef4bcbbfc22",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8226ff3c-6e3b-4ef7-8820-18b32953ca81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a30c57b-cd4d-49d8-9aaf-65393392f5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d2158d-44d2-418c-a4d5-1f73df001528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e9c138-105a-47b5-9773-457c5e8759a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c91143-0563-451a-ad52-127eaeee0d0e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45862e0-bd01-4f12-a544-36ded5e3ea34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c08a8fb-75b9-4bc6-8a3a-67af01fd1614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9601d648-8417-4b85-b7cb-0ae9a40888a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9010b5-c923-41e3-b21c-cf7df6c789cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b48cc0d-e1c3-45d4-b228-e38f019f09d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8372a31f-2e31-43fb-8a15-8dd5d4e4810a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca4a0ec-10c5-42cb-bb10-36303c9c8503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449b4e35-f6fa-4dcc-99f4-b986f1af87c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1405214d-9bd7-47b3-b407-290f67908ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b823ca8f-4f84-4b83-967f-78d3ca870a0f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84347c46-52e6-4ba5-a1d7-97bf727d9613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d20b97e-cda3-4e2a-9c1c-43fb3c76d890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6e505c-07e9-4464-af0c-08b4a79d14c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4dc440-d7a8-4f8e-83a0-12a33f16bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f19d479-bf19-47da-87cf-0b870bdf1745",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6c30d7-fc18-487a-ac9a-a0c93f6e07d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c4623e-c7b0-4f7e-9e5b-90b22e47345f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d97acc-61c0-405c-bbc0-229342885cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ac41f3-b738-4b7d-a7ab-bed252b807d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b8a897-1570-42c8-859c-5416fcf9cd39",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b5d23f-e2c4-45a8-9a57-48be86906ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc8991b-65d6-4217-8cf5-c032d625def0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022ed5aa-44ce-4526-8c51-6213206607f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d51417-571f-4a5c-ab93-55d9d64f8acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606fb5ac-db5e-40f6-8c4e-f7c7ed3cc7f2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feed1da-0a5c-4da8-930f-368d241eb2cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4b8bfb-b159-4f7b-b508-4c8204b7928e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95635700-6ac5-4c0a-b645-3921a5e47d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e49a0c-9758-43d4-a29f-e9991d4f162c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86781d53-114d-4656-8d08-529dc9dfd0de",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28937d96-f50d-426e-8342-fa55a3f02822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c5147eb-e40a-4872-ab10-4e7cc1acadc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb256f9-36ca-4d59-aad7-aed44ea95387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15993d91-5c59-468c-88a5-dadae4258d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e396ba-2317-4ef9-a4b3-27118ca26353",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a058cd7f-5252-465c-b87f-56cf8fc9c28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079a1d41-bfed-4d11-acdc-297b01c6c359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183f24cf-0ffe-4bc5-a8d6-9f237240759b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54679a4-c253-4fdf-a6d9-96b9f9f1fe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0120fc-907f-4a7f-bc0b-f1c6fb5714e3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272db4f9-b024-4c97-847d-676bf35890e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bee3563-e764-47a1-97d2-906950cb4a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eacc6a3-6c2c-40f3-9037-f97edc360a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa79278-150e-4444-bfff-f961f83d40ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc43f950-2969-4985-a3e6-7ee91878b4a0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fe55cf-4a3d-4960-886d-d56cb7d50ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7291eda-e9a0-444f-afb2-e0889511b258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500f7a73-9bb0-4661-9278-fe9130162853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c27b95b-d5ad-4cc9-b432-e15bfdc65eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7e961b-0e96-478d-b458-41b9c97a71c4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca8d90f-e71f-4e31-bcea-2e76206c82ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504d6b99-02a2-453e-bd19-4d242b0435eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fb5ac5-7ef0-4e3b-acc0-351c157fac9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ac40ce-1254-4b63-8ff0-803c9e9f6677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa83c710-0645-4ac1-942d-f53e453c28ab",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4f54ee-f53e-4ae9-b213-59f6e10fd824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e9ec6b-6645-48c1-9bb8-4d47566b4905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4142a47-ba67-4f01-9f39-49234d910704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5980db06-364e-41d2-843c-4136eedd8fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94eec7b-b349-48db-9ba1-fa2ed9b4d142",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208b0b78-5d3b-4776-9e61-9913cc10b93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb11833-c1c2-45fa-a5d4-a41f73cd2afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31051867-4206-4278-86cb-8dec07fb7911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8c9cf0-9e93-4104-b48d-186294701263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b84ada-6483-4cb0-a0b4-b9a517d0b3f2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358483b3-2969-4d94-90e4-7d30f6beb6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd26c7b7-1fad-4199-82c0-a0edd0ba0f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc9a01f-4293-4c66-89f4-b5341a30efd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3b827d-2b25-45a3-9a72-c9d781b442f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97a9bd8-a2e7-454a-a74d-e979930b3989",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab535a16-4a49-4c49-ae13-6b6908513b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780811d0-6eb7-42ce-a044-1155064d7e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0459440-009b-475a-b075-75361d4dbda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81a274d-4c9d-4b4f-805f-72089920bd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d4c5ae-ec2b-440a-9569-16445f86cc9b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a493b7-357b-4427-9644-34c9a37ba98d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d763efe2-525c-4ae5-9727-54f650408f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c9dd04-1cf0-4081-81e7-ea6d6d0fbcda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96538242-6431-4d36-87de-129a476183b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7f87c5-3da4-4d43-8fcb-9ea763600a88",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6902079b-373a-49e2-8815-b6c8be2c5a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411e3579-0b0b-4be8-b233-0c996e926523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d55722-1c28-4f6f-8921-95afa78ceac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32645d83-4358-490a-b1e5-a753db7de1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7070dc69-fb5b-423c-8171-87723298c015",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5ed5fa-37e8-4869-9ea2-0f32af861091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e22fdb-395f-4b09-9830-efad8643665f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718641a0-b1e8-40d9-a43f-4de0b18e8eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c20da50-ee96-44cb-86e8-cf8deb507ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6624fe-6175-487d-8124-a3a4dcd2e5b2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8513c34f-bc60-4d40-aa56-d47773d67c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93021a4b-1e75-467e-9d23-5f097aa82f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ff4912-dd86-428f-a00f-08ed43127ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e811ff2-f547-4ef1-bdd2-6916ae128afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b401bf0-9851-44d8-9136-d38329b2f808",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da13debe-39c7-46a9-942f-f669169de1e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298a7703-416c-473c-9f33-954bf11803cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f3d0de-bb42-403c-874a-64a383e2735a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4664f022-1db9-4bf1-a972-a68037e091e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8543ab85-39d5-43ca-b1f6-16823eb678d1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99c6ffc-cdf3-49b1-ab4d-ddd126ee7dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211149c9-2438-496b-af35-ffc3a6b2b822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f50837-4374-473a-beaf-ff5793136923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9879ccfc-2260-4c5b-a706-3af5ad5181da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba32947-d19f-4b8a-b709-17955ed65533",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6316b5ab-87a6-4d56-8cfa-c8dbb04d43b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20dc9460-27d8-4046-86ed-d80fcf4c425a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abc20b4-add2-4ec2-9a56-6abac27f01c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81caa4d6-9994-471a-a198-f099424fc7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d1b391-5937-4ff1-ad4f-bebb6474d01c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1657b4-6c88-44cd-b594-d405ca338b51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7e7a13-3208-4913-95d2-6689ca7bc823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa613396-e1ba-4345-a1d4-a975173b118e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3a3421-d3ef-46be-80a5-bbe1dd2eadbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e19b8f-0aec-4a5a-a24b-ea1703766be3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3ce5b9-8a91-49e6-b74d-5c251200e339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e20f9123-67f4-47cf-aed0-99ce699de511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19431be7-33b3-4c89-904f-f42273b3f057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cc1c70-6cd9-44f0-aa6a-4da4d8fa2d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53d7af7-9528-4845-beed-85f374481018",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ad7f07-0362-4aad-ba9a-af79c24f4e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df7622d-36ba-44ef-b364-bb9cb033e1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e7f535-6d83-4aed-9bb9-c6b7b64d9b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db456dc-44cd-4f1f-ab37-c6a39ae4da25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d93e03-f241-410e-873b-1e1ddbc6045c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84807f8d-ac15-41a3-b656-67f59b02750b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541d4c24-c699-44e0-a3ca-2ac5eedccece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b35b74-bcfc-44c2-894b-b9477d0838a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d701ee5-8369-4f33-bf95-1c9833bfe1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd7e74b-4a8f-4c9a-be80-748cddf0c17a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9abc751-b915-47b0-9fdd-36c3dfa4b930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f5b723-62af-4aef-b6dc-2f4870d76382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3232e2-d150-4a8e-9c4e-cd9b686b103a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174f087a-cec7-41a9-b0f6-0de5fdba87b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9eabd0-0b04-4dc3-80c7-789e8cf62034",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bc0fe5-47f7-4e08-8004-31a7292f2318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9fee1a-391e-42c2-8493-c531e6dd50da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6b4c00-09a2-4395-8f89-7e80dbe4f34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d8d47f-74be-4faa-b5d5-7471781134c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b92261-0916-4724-a874-e5f8473cd901",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc681e6c-eeba-4f98-8fe4-d808ef35fa56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497f61d4-c47b-48db-92ad-b09ff9230a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52da7722-1574-4f03-8bd7-ff912d043075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc97ccf2-a29b-451a-9fdd-c746597863c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8b1d4e-50e8-4ca4-a3ff-934ba2f0e303",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952d8176-ce90-4e6e-b088-ccdb0ed270e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe032abf-0f88-4325-b8e8-da514ec73ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206f5feb-ce0a-493a-98a3-80aec919fa87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98307aa8-cd6a-467d-8644-ad98455a96f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbf4f48-1d0e-4b6f-8a1d-75819530f91d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad59dc3-7e1e-4a64-b466-357936e8235d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e9e7dc-ef8d-42ba-9694-9139af5302fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5656705f-6538-44ce-9e55-8d754213b323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3e16ae-b131-40a1-998b-f97a13da8ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76432a0e-bffc-4cc2-9f77-3c1346b06ab4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee40951e-b971-4270-9d81-d6c85951fab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f064c72-9a1b-4048-a609-3b93650199d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ed19d3-0e1d-43fe-b471-65ebded6ae9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d766ac-c3bb-4898-b7ff-9fc7f34b7523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d268b6a9-f437-4464-8799-1c8b105f39e5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75194c01-2433-4c11-93fb-c1c211fe2b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011dc70d-f4fd-4d68-9e66-3a6908834a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c298fd3a-4a65-4261-8292-9ecf509af571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea460c02-c9c6-4202-a7d3-afafec152062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3205b880-bba3-4932-b25a-664be1caa81f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6186ab5-0f38-422b-b82c-bfd03272064e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09134d55-2afd-466f-b071-027d8c4d6652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7035d88-7545-4ffd-9fbb-02fca43069de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777d43bc-8b53-4e0f-820e-21eabcab76e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a648fc87-bb52-4e68-92b5-dbeac86c5001",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d783f73e-1aa0-4693-be39-2bfd1e2378fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a033d84a-af7d-4623-b576-ed7d9aee8f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cf6097-2198-4cfb-ad97-15a35e52bbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c139633b-dead-4e6c-b446-5624c9877e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e132d2-998b-476b-8674-f3e60c6d5630",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dfa13c-a56b-429b-9cdd-fc5ee64b6bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8f3889-18c4-4507-bbad-ba41f4b2659b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d56529a-c714-4ae0-ba71-f15567915d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204a5b53-cff0-42dc-97e8-2ea46df0c069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87abfd97-d495-4ab1-9649-276b5279d434",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4473929-5219-4ef9-82a8-8e847ef8a3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fb1b86-9cc4-4274-b623-0ea399c67bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7295403a-4ebf-4dfb-b476-99ffffcab026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe9a844-5432-47ef-87ba-fe975ce264a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba33d29-2afd-4e0b-bed6-c984841df62e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f08c84-a4d7-420d-a241-5e7855a796fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bf466b-622a-4939-b5ea-064e2a9cd771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19391bc0-6743-4496-b696-7f38151dfa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b473277-86ef-419d-8e8d-da672ed31b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8033c090-9e84-4811-9962-8168facc33d0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b381a640-b032-4ec2-9760-3ab40421eeec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69d53f9-9f87-46bf-8efe-31338f97fbb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae55aaa0-7e17-4d04-b535-a0352c2654e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3ef38d-f6de-4a7d-ba8e-d5b5f7c976e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6513ed74-1899-4b21-8221-c957eb181fc7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d534f1a5-0ba8-4f8a-971f-2faa8bab8fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdb770b-3607-47f1-b873-2f3e3fe91106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250f7dee-de2c-4c6d-b1c7-2db9ec9e8eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff98f96-f492-4316-b191-e691c246f070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb5b100-33f2-4ceb-9ada-9b9db5ada645",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9415ebb3-d9e4-452a-98dd-c5a4651a7f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aaa30eb-da8c-4568-a1a1-ec4668ea188c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343d0f24-06cb-40f2-b3bc-67d43f08f88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dc7afa-d943-427b-9e75-9e8ac28f0df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea19f0d6-5d3c-46d4-a98b-487db5bc74df",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca02ce28-92f6-448b-933d-d1d9596c7fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6df02dc-ea7c-49fa-819f-2ca635d6581d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b05cb70-00a7-46eb-9bc6-9ee37243dc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d44d2da-ef35-44ad-b34c-c0064afcc16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73058d54-f5ba-43f5-b545-d4b75fa577fe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0711b98-ef5d-4cef-bb71-6b6da68ee64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fe0ef3-4ca0-49ee-b4ea-40dec92aa74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2eec5e-a2bd-4da0-aa39-081175fa743a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb992291-7184-4130-ab69-826c7700a13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4484c8-ada7-499f-8afa-e54cde3d5176",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c58087-9b20-4d0c-915f-664078fd2b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d01587a-af7e-4df0-a1d2-7adaa07d8152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75301e62-7590-48be-bd5e-588f0c9d280f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40504beb-3fa7-4e99-ab9c-0312c4eac53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383e485f-cbbb-441d-8e25-127f6134b336",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8687e9-7daf-4709-b0ee-87733a94ece3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95d293b-c8f4-4291-a5a3-ebba12ae965e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897fa1ae-8aca-4062-87fa-af6c7d1844ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6ccafc-6c4a-42fb-ba6a-901bf62bc88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329a62c9-3900-4bca-b22c-cb9194a30fd0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc5c6e3-f30d-4578-8d78-331c1833a192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c250fe-2061-40bd-af3b-5e99d4585aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2443d5ac-09eb-4a17-9a44-cdbf7062e6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1a8fcc-1fd0-461f-8f35-916f94a520bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a660445-0c0f-412d-9af3-11c1c168a24d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3e78d0-dae3-4ce1-8d83-89a77dff1767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac89612-1cb9-4fe5-8946-0982fcec6051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09786ae3-4144-4a29-802c-039832a0b6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9997ae19-dc95-42ba-a370-abd05a607c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e0cbf5-781f-4bd1-b32f-75ba31971610",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abed352-9fa4-4db4-a0d8-d8d80cb00611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784eac58-194b-4e22-9c32-2532e2a30a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a13b859-9c35-49bf-8c00-6878bb3ac3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892270db-bbbe-4fd4-987e-fcd77d8d2525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d387c822-eaeb-4158-a91c-b4bb99f7d3ff",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a49946d-39f5-4031-a993-e76cb0be6d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a3b4da-aa77-4f9f-a1df-dad73d332049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2fc1ef-3353-4dfb-b8cb-82d8ca725871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d845cc0d-3999-4871-8ea6-022ae9b4b46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6890e656-b918-406b-8eb2-1767d0514025",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1299c9-94a8-40e0-8b66-754a95bde94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62373090-43ee-4af2-825b-b4161160b6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2175ab6-d2ca-47e9-bede-0aa32ca98c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181577d9-4ad8-41a7-a5d3-d2849f0d5b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913292b4-8a50-4d34-ae8e-5afe6c67014d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03efd7c1-a6fe-4a33-86f2-3ae1ff4e9e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4cf737-9093-4ebc-a140-05e40d17a600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92313b12-948d-4a52-9acc-2d3219a6f88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a6eea2-dd38-450b-bbde-0fe2af1d9d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506f5219-12a6-46a6-84a9-3c22be0973dd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c72af6d-5db1-4bc6-b4c3-ba266d31bb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e35f29-18a1-4dd4-a81b-6bce943d4364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c7755f-6658-4bbc-b4bc-2fed1fbeb73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37df42a-1504-4864-b955-0461d7040ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980fc314-14b3-494f-a15e-2f4e0b0df48d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42d0a9e-f1cf-475e-89b5-e4cb82b17e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1973dc47-d622-4d6e-be90-ca95ad53c61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9101f200-7596-4bce-99c7-afd14c1696d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fb7249-d020-420c-bd9f-5c1d817ec726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d1c74b-eff0-4e49-bb36-6a5c377fc3d2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf70f1d-ea5c-4f17-922d-fa6fa506a1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febf219f-9851-4e8f-8425-658a8c5c6297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e2608f-ea7a-4229-a6ed-981bbe7d5e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f92c2ee-94f7-4c24-848e-326dabec2f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51422c82-fbf6-438b-bc3e-86fe57d06a4b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3266abcc-0e91-4484-b093-215d9defa67f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f056b523-01a1-425e-8f5d-0aa7e54016ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199c711d-dbc5-4959-b46d-f5cdd9916c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0147091c-c836-48f9-a295-72eb27e123fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba3d2fa-e93e-4769-aafb-e066b494448b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c2262-3b85-417e-901d-cdd9e149746c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85a13ca8-f8f2-413c-b941-2b39e83a463a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a613a05f-9e9e-4775-89dd-56189c052993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ed6aa4-3ab9-4f38-8784-7e364e663f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc747c8-fef5-4545-9f0f-dc98aaf76871",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a84617-ccbf-448f-aad8-10c0eef39106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce47d16d-fd52-4d65-a4d7-c3aa7c827bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca4eb83-58ee-4256-ba9d-6654641bcfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957a9994-b6e1-46d7-a740-ef12c3f7f6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb9ffb0-248c-4689-a0ea-f3f30f302288",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44a9e30-1e3b-4f75-a384-3947d97ae23f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56055037-aa4a-4e26-934c-c8ef7ffc3bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e5208b-539c-4903-9bce-d693d77ad4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4389848-f530-46c0-b3ec-8884a4a424db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f7afa2-98b7-4d8a-9d7a-6f34d5984891",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3150428-4e40-49f5-837d-ad70764d9566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a024c017-02f4-4d9f-afb2-d2f7e69d1ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cdc8ab-ae31-4411-bf56-a37b42451f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47452f88-a387-4618-b42b-ee4696f3264a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce85489-7b04-4962-9b5a-531a7365d965",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f9c079-5441-4fd5-8c85-c2380103495d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bac2c86-d1a4-4071-a2cc-0a382c773fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d10651-bd8b-414e-8007-41d30283c52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4000ccba-5861-41cf-a013-f2b1b4cec4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b183da-c005-4fe6-a14d-7320ae6364dd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14564b0-112e-4b50-b99b-d54186cc8eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090db217-0b99-4451-986e-e2a5ec9b44cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944cedaa-c2ec-4be8-a1b5-551ac0f1ca86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b430db27-aac2-46d7-a382-fe4fa2014d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9be3b0-426e-465e-8412-3f7bb2710d6e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018a99ac-84fd-432b-b6e3-de72ec33c7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cfa6f70-8543-48f8-96de-c941a61b3f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae912fe-d687-4e35-adf5-85e5e838c2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644a7a39-f2fc-4f98-9a85-654ec5ebd5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbdf7c6-b987-4daf-ba87-5349a5466c84",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c902aee-62ae-4aef-858a-3fd50955df51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f31abe-500c-44ff-80d5-a7ce5a184ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcfc149-f56b-4581-a3cd-c234d86b3e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2940070-7a39-4289-871b-65b897a556e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852b8bac-640f-4cce-8ca1-c30e90ca381a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99117c6-7fbe-4ad5-932a-db3284ed87a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b52a355-e374-41c5-98a7-c55e07600890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3e87e5-811c-4ea5-8f0f-091dd817b900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acfeb64-b851-4919-9dcb-21951fadfeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a276c6f7-0720-4650-a0f0-7c5c07c73c01",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eeeeb9-3f14-4c67-8726-425a81699d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df28ab93-d3ec-494e-b8b7-54cd3254d5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe61a3a-eaed-44a7-90fe-ecfb6b7759b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d328be1-a023-4405-9df6-dfadb1f895ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6be35d-8d0f-40c0-b060-cddbf534b71c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7251d1de-454b-4dd9-9640-9883d650e256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75438433-3f82-43c4-ba69-b50d2ea34741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c396b073-dd12-481b-904d-9f18b9e13297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e97674-feec-48e9-ac92-c1be51eeb321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11505336-a0b3-49b7-8b38-b67a47685730",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df9894b-860e-45cf-9ad1-4c3f11665ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35df04ca-85cb-4836-b75c-4d9b4d071ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebec1c16-0675-453b-91c7-9ad392b6ecbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e4f3d1-f5f5-4ab6-bf70-42148c9a3fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561cbed9-a433-40a1-a056-0f0c74ac1f71",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44afcda-c0b1-45ce-a5fd-768e625452e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b56b98-8d49-43e5-9660-256a3b85be98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e595135-e9bb-4b9c-8ea6-c28b9618ae98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99d2348-7fdd-4c7b-9f53-b7a60b9312a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc82c26c-aa2f-44d4-bcdd-42cedc25dd79",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6892f3f4-c914-4858-9cb0-13c3a956b27d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c19c293-530e-40ad-90e1-dfa1a1d8147f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1edcbb-80d7-4d4d-a15b-77738fffd3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc6d26d-37b8-4652-beee-069cfbb9653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e370bc39-809c-461d-b066-a66f55216b7c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e70c0d-1a28-45a8-8e41-63a1396c32ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5304e203-3003-41ed-8bd6-334e14d1e1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5b7dad-9a1c-4a36-a797-790be7bbed47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc15521-29bd-4eb7-b617-c7666a89e4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195611e5-ebdc-4a39-a25e-5564ad7d3cdb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b1fa5f-f05e-4e33-8b2d-6435d0fc2df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a009258-ecc0-4956-9007-69ba17b1fa2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cf7d95-5599-45f6-8068-1842e710fcce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0789240c-2b64-4d30-aee6-a12aaad6b73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210481b2-a504-4926-8933-15a695fb9479",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92abb246-474a-4572-91f1-88e7de5272f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9414859f-2967-45cd-846a-59336aedb85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350a519f-4e90-4bd4-89d6-c540f3880811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8de6415-14c3-4751-b233-442b8d35fed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0bb792-fda0-4dcb-a4ec-8cc396cd9c3e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92423153-3fde-43ff-bdfc-4c00462e2c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59396e3-edc9-4513-b6ab-7dc102572140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506a51c0-aeb7-48b5-8324-cc071b347498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5938e3d9-9501-41b3-b669-79793571012f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5263c3a6-0c80-421e-9e11-35e2cfb40c4f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c862f97b-5ca2-4536-8939-5c0cf94ee18b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ceed4a-82f0-4e8a-86fd-582900846bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb3c0c2-117b-4946-9aeb-54b30fc2f8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979401ef-0446-4e9d-9395-0aaa6fe4b986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2290d3e2-15ff-4e15-b607-b6f627d03fee",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbebafa-7c8a-43e8-bbf5-b26737a374b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a27e0f03-5652-47ee-8b27-2c018aedd18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360ad7cf-f762-433c-9e29-b24a4b1e9a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709e3711-d023-47ed-89d7-9be67b020bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ccc8c7-2289-461e-8945-351a1e23d72c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5096c1a-fb87-4874-8c1d-fc96c308a0ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e68877-8bbe-47e0-a382-8c1c6cfac81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755676e5-21e0-40d8-8cbc-e456936eff5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298f0584-d30a-48f4-9ca3-0ecd37612fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc77287-e0a2-49e4-ba3b-1a94e2321e80",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da19f343-8a93-450b-9ce4-5feb8e9227ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac75d71f-e659-4d1d-8f32-15b538618560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f367e531-8a89-481a-b954-e97ae1f90563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ba1983-9801-4334-ab7d-6b4810d8955d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b440644f-f2e6-4752-8fb3-a843d429ecfa",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac09280-3a6b-4d99-b0df-a279ebe38bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f87d075-2766-4d20-b9be-c4586c3830b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fd2b40-f170-4a35-943d-e043ad504988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e817a0f0-30be-4610-baad-4591197d5c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d591de-828a-4b14-916e-98a8bdebb862",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8226920b-8c1c-4764-8d82-4b9a7a05e929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c60c19-e81d-463e-8384-3d616b7323fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9719bcc8-a2fb-4000-90b3-86932f202bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e85830e-0ccc-49bc-9bda-4ab60dd6d807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36703965-fede-4295-aab7-e7902803aec1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c3d8bb-a326-4c2d-a736-36b66e5927ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdcd8205-5ef6-417f-953d-f8b2fce50b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746d1846-387d-462e-94ae-c1bd101983e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8319fcf-e0cb-404d-9e1c-f91aab87d2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f331bb14-5c81-450d-850a-fc617c6c1875",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffb511f-2fa1-4006-977b-3942d3250a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dfec517-2a20-433d-b633-bf9b7240945a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9278630-d1aa-4d48-8acb-f64457624de7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe38d818-4f32-4d56-b1fe-3ad9997ae9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa28292-38d7-4e41-b056-591db869e979",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f867403-6b4b-48c4-b4ed-bd02db8cfcfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457e530f-6d23-4612-8d69-56e3342f3b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adae38ed-2d80-4f3f-8fc3-1c6cf97b7d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575deedf-7ece-4df5-bb8a-57d9fcfef74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65d9db4-21eb-4897-bf3b-7f60c8299653",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d7816e-cc20-4dfd-b960-0aa55e4215b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f0952d-172c-4c6c-b067-3b97c9014c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ea6751-84ad-49f6-81c6-0063e0e005ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b306d2b4-9f68-4373-8336-9540091772e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f357f2cf-c77b-4aa2-a3a0-def5a9628d4b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bef7465-80aa-4a13-8203-3e52985f7efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a62278a-909b-4401-942a-176fc60b13d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1222cac9-6ff8-4639-83f8-e86e6eaa67e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88196071-0a81-4400-8c16-f18bf5f4da90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ebf7d6-29ae-420b-8857-e314f5ae79e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09b28bc-b80f-479c-86a0-39d0c42bba2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989af129-91cb-479a-a8fb-df979f32b51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eace88a2-73c3-4752-95d6-406b6303ec75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdde9d61-ab26-4e11-8947-55c74013c5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52f5cf7-9d65-4c5b-bb82-766b2daeb5b1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ba1746-4604-40a5-85dd-d02b581d9080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc2e537-8d94-4096-8f8e-eaf0849af899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11f1649-bb19-4c33-a728-0a2d5da4a13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acc2b00-b18c-4869-99b1-d2514db6f66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9ec0c0-5ecd-4def-af18-60e65109af70",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616ec6ce-cb09-4920-8b31-f489fb671ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5f906b-d64c-4e51-91cf-d933e19fa7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b66a70b-c45f-4975-8804-cb98d98be6f1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cd98a6-4930-43a2-9d8d-93067d7ff77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bebb511-cd2c-4f9b-8570-bbfe3eca77b5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a62467d-48f9-47e6-9a24-1900390bf70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5dc17e-78b7-4cb2-bebb-77afd40b680e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52acc9b-d410-4851-bc83-23c672f170ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08ecdfa-acf6-493c-9570-d1157f055e8b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb75af3d-a563-4ca1-af1b-bdb86a665941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8221e11d-23c7-4b8d-9a6e-e7e1307a9155"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de5c0770-e8d4-4734-a8df-fac837380c9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47eca22d-2920-4095-a041-f5d72608c66f"
                    }
                  }
                ]
              },
              {
                "id": "3a0d3a96-9136-4a2a-82c4-d8026b0b63d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "896eb3f1-dbde-498f-ae16-aa28ebe9b25f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6314e6ba-2b49-40b6-a5d9-ad5785586858",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "10c4f231-a95b-4a7b-b3ed-976c7feb5d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529ea86d-e134-41fa-8595-af6e95068082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f2e02cd-abdd-4f04-9ac5-f91b454e8af7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b82bc201-c183-4346-b3c9-6b14a8bc822a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c453cdcf-3444-43a1-9c89-6324c25ec2d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ace9050-bd8a-4f4e-981d-7047e3586d61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28772aac-a626-4928-b39b-671ff38d5ef2"
                    }
                  }
                ]
              },
              {
                "id": "022c6515-6309-4393-b1aa-0e944e639b69",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "500f4b81-0485-4204-b01f-5e5920d515d5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac2d3ff-7919-4a0e-a3e1-5d805bab66c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b08929f6-9ec2-4ed9-bd4d-cb7a9ba0213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc64e7f4-f7b2-4790-8ce3-33240a5d1c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e194ac-5cc9-42a7-9ab6-e6c101344860"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eeef1e62-916a-4c59-bac3-c687faa5c568",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3b4c6af-f18f-482d-8b29-0124b2eed10a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b3de973-9744-4d55-b007-1f66eeb662b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "07adb17e-223a-4c7e-982e-b1925f7b5101"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5482cae-e046-4381-8bf0-de7592bcc1c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59a83fa5-a999-4561-be79-174eb13b01c9"
                    }
                  }
                ]
              },
              {
                "id": "3d315f87-2897-4c58-bd34-058cbb18011c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ddf74e-1eeb-435a-bfa7-1b433645fd6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "037facbf-7f4c-4d6f-85fe-31cba63d7211"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "678c2026-8911-4965-bdfc-c756088bd6da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4df505ec-5367-426b-925c-73dccc564c01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54273b9f-afc5-4072-8160-63d87aee38c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fa3bab20-f98f-43b6-9faa-ab12acde3c43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "600bb283-01c3-4c5e-9b51-f256337be86f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c96555f2-8f57-463d-abc9-6d37401fa55e"
            }
          }
        ]
      },
      {
        "id": "e0f95dfe-53ca-4704-9d5c-406211046cf5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8b06872e-aaac-4322-89b3-f753736fca8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e4d7ed3-21e9-4cf0-8e36-afa6490d3926",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca70e3ba-a186-4276-bae7-7ffdcd88329c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a6201f-b715-49d1-ac45-83c81cdaa977",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "332173fa-8073-4f06-b7ca-d3ed07a88d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4a4361-fdef-4d42-a513-ec9d517cd685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33add00e-9375-4e82-b636-fa301d4c0cca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c88201d6-8bce-4ebb-b80f-45134c5c76f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10cb775f-4735-4209-80cc-95324ae9a39f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34c7b8e2-468c-48c0-8b50-4d96616011c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7140e26-e5a6-4779-8394-58a9eefb4674"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61939ad1-0666-43d7-8b4a-a673dcb1044a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2ac923e3-d103-4e35-a5a4-65ec91abb485"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bb460e3-9ce5-4215-81c8-4b1daaf9e473",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56f31cb9-3f0b-4a06-becd-21d33072df73"
            }
          }
        ]
      },
      {
        "id": "e8440c7b-ad56-41d5-9cba-a0ce94976923",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dbba90df-5fca-427b-90c8-12b97df3461e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fcb32a3-8ea5-49dc-a0e0-9c39cde53a41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6633e0b5-3ad1-4fb9-a6cc-c7e150bbc555",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7730f4ee-fe41-423a-a9b4-5d72f1bc828e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17657d4a-c6aa-406b-8e66-292913219246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fdab69-12e2-496d-aac6-0e82bec5599d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8ea018f-a32b-4624-837e-54ec86716329"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b6141ba-869a-49f7-a1bb-10b44738b465",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79fbb842-c78d-4308-bf44-6a821d5bac64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b73d8cf-db2d-47e3-9e4c-3af5d968b712",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b2c21df-5422-46a4-aabe-95093a371706"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b787a03-930c-4883-b38f-9e2efc35a388",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba8693b7-dd90-4c48-9a0d-0d7f6ea996b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fec90ac1-385b-4080-8be4-190c99eb81c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b72911a-5e4f-4b53-b385-35726f0e4287"
            }
          }
        ]
      },
      {
        "id": "3a642f35-695a-4171-b127-5c8cf9b6671e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ed528fa6-8e63-4e78-81a3-2a3daa831b3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cf80e0d-e84a-4e7c-9004-3d380fedf43c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cee9b73a-c200-448c-a4b5-326c7fc55a05",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eff3ca3-57c6-4f9b-b9c4-f8701e9ea50c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e863643-5665-490c-b4cd-a82ca322ae91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c1c99d-d7fd-44aa-9ebd-619326cca17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35ceb3cf-bdb6-421a-b657-f9ca33005bfc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8cf3f02-d98b-43fe-8d58-3fab071c84f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9b2226f-3a5f-4a0d-999f-27ab5ce27030"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b18e12f8-87cc-4396-9c6a-977a4186516e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9c88746-7b1b-43cb-9f20-294bd75af284"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f11a3745-20c8-4c21-9d0c-f53864ab4225",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7c6f993-feea-4ecb-88f2-278499f0d79f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8570d54-6123-44a2-9bab-9366111c3258",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e39d6553-0db8-495e-9470-19df9fe2eb98"
            }
          }
        ]
      },
      {
        "id": "f152ed4f-2228-43be-8e63-5b9eedbeb6b8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81c92f70-4d4c-48cc-80c3-f5de2806e7f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4dd70e5-ad60-44cb-9514-b53d74715e3e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5ea23996-a347-4aa2-a3ed-90f213c920af",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5619f4b-5e72-4756-a327-ea9ebea3d031",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1788d86-0f1c-4db2-9e8e-7aae62e6f262",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 132.20000000000005,
      "responseMin": 6,
      "responseMax": 9381,
      "responseSd": 619.4379047933186,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708734732946,
      "completed": 1708734779817
    },
    "executions": [
      {
        "id": "df1a1236-4c50-407c-8969-2d2a4b13b42e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "940eabf7-2fdb-4b97-a684-b39e2faf4cde",
          "httpRequestId": "c8fe46e8-095a-462f-b3a2-cae0a3d0aa61"
        },
        "item": {
          "id": "df1a1236-4c50-407c-8969-2d2a4b13b42e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cf994333-7e9c-4dc3-8a22-56ba8cc420c4",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "d97e589c-6d4b-489b-9fc3-c49c904df569",
        "cursor": {
          "ref": "2c71d1cd-6f70-49c4-b073-32162d249884",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b623d515-7c1c-4709-9e0e-f59aef33b918"
        },
        "item": {
          "id": "d97e589c-6d4b-489b-9fc3-c49c904df569",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d97a7723-4527-4a53-9f63-300058c26568",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "cf5272be-5da7-45d0-b1f5-0a4f8cd5f530",
        "cursor": {
          "ref": "cb753163-8e48-4407-bb11-72bb1a35bcf5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4ad8a0b0-8181-4910-86b1-c98526f399b3"
        },
        "item": {
          "id": "cf5272be-5da7-45d0-b1f5-0a4f8cd5f530",
          "name": "did_json"
        },
        "response": {
          "id": "d1114ee5-d43e-464f-a0e6-5d410e91c088",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0876074-9221-47d0-aaa5-5b807c6b32e7",
        "cursor": {
          "ref": "17475bd2-2f14-4e9c-8fbb-ce7a7a95b786",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c2bbad47-6f0e-4502-961d-98ac48212c6f"
        },
        "item": {
          "id": "b0876074-9221-47d0-aaa5-5b807c6b32e7",
          "name": "did:invalid"
        },
        "response": {
          "id": "defff417-36ff-44b4-b47b-5dabd2edd77c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 730,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0876074-9221-47d0-aaa5-5b807c6b32e7",
        "cursor": {
          "ref": "17475bd2-2f14-4e9c-8fbb-ce7a7a95b786",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c2bbad47-6f0e-4502-961d-98ac48212c6f"
        },
        "item": {
          "id": "b0876074-9221-47d0-aaa5-5b807c6b32e7",
          "name": "did:invalid"
        },
        "response": {
          "id": "defff417-36ff-44b4-b47b-5dabd2edd77c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 730,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec08f94-aaf6-465c-bcb3-8ff0e439dacb",
        "cursor": {
          "ref": "bb3bd001-eeb0-44cf-aa98-9a66404ff94b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "625b4b22-be1c-460c-8387-755a0dbe25ea"
        },
        "item": {
          "id": "1ec08f94-aaf6-465c-bcb3-8ff0e439dacb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "70bace24-c60d-4d08-a5f6-6267eaae5fac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded1b861-f68f-4d21-bc64-5ac27155e9ba",
        "cursor": {
          "ref": "bdcb846a-e9a3-48a9-a235-367a1951a8e4",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0d2d1061-37c3-4447-9997-6160ee0f511e"
        },
        "item": {
          "id": "ded1b861-f68f-4d21-bc64-5ac27155e9ba",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "90ae0101-ca3b-41bb-8ba4-3c5b7ab4f1ea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8502a81e-60f2-4a9b-9848-3523eba6777b",
        "cursor": {
          "ref": "ecaa2663-5e6a-41d4-871b-89148602c950",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5f2a52da-9597-4dbe-87ca-a81b0ad9d716"
        },
        "item": {
          "id": "8502a81e-60f2-4a9b-9848-3523eba6777b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8f660bc0-81f6-422d-a25d-109663d215e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c4ddcb-bd16-47b6-bd05-2f79860cfee7",
        "cursor": {
          "ref": "ebcdb5aa-fdd8-4ac5-9a3b-f740ff675198",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e7d03bfa-d51d-417f-b961-5257eeb3a16d"
        },
        "item": {
          "id": "50c4ddcb-bd16-47b6-bd05-2f79860cfee7",
          "name": "identifiers"
        },
        "response": {
          "id": "f05ceb09-9efb-4e3d-888f-cc3e73426682",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac98516-a281-4233-993a-b37694d52b59",
        "cursor": {
          "ref": "1ecd5c43-9efc-4f92-8fac-09b3d97c6647",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9bc6eaff-8864-4946-a792-377ea6c8b340"
        },
        "item": {
          "id": "bac98516-a281-4233-993a-b37694d52b59",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e8f89c78-2ada-4e94-99b5-56ca540c6841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3707cbf2-7d9d-4d81-b651-741970c85709",
        "cursor": {
          "ref": "38d91e34-c95b-476e-831f-60b2c9b32172",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cf6d2c3b-c7c1-4a53-97fa-4e0519076610"
        },
        "item": {
          "id": "3707cbf2-7d9d-4d81-b651-741970c85709",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8bab1f98-8560-4c49-9eeb-49c2af976d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f674870-08ea-4b58-979c-feae35fc575d",
        "cursor": {
          "ref": "e6a5e122-911d-4dd1-8699-96052dbd0e5c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b7defeb3-ee10-4bbe-90eb-1c8e710586fb"
        },
        "item": {
          "id": "6f674870-08ea-4b58-979c-feae35fc575d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d5ba53ec-e543-4f91-9e02-c78589417574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bcede3-d1c5-4dc2-b7f5-13fe5786c398",
        "cursor": {
          "ref": "b9a90c65-589e-4d9b-ae9c-6099e4630359",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "89614bbf-f1b9-46dd-9c0f-ae79a71de567"
        },
        "item": {
          "id": "24bcede3-d1c5-4dc2-b7f5-13fe5786c398",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "edcbc44c-b4b8-494a-a005-cc3c5835df9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1287455-e912-4c62-8e4b-8a31a97e152c",
        "cursor": {
          "ref": "67d8b422-7620-4eb7-a2e8-ade5143d85a5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "300fccae-d1d2-4e85-bef3-cc84567c0323"
        },
        "item": {
          "id": "b1287455-e912-4c62-8e4b-8a31a97e152c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "01a6d87c-4239-4537-acd2-13eab69be0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4e18d6-801b-4e52-98a2-1ece6b287db9",
        "cursor": {
          "ref": "54d5f096-1341-4d5e-8c80-d25993097849",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "46da13d3-bc82-4cdd-846b-125f5618c03a"
        },
        "item": {
          "id": "1e4e18d6-801b-4e52-98a2-1ece6b287db9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c7460916-8a4f-4ce6-96b6-34b3ac38f2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0f1f19-3475-4296-b548-7e2a656d4e8b",
        "cursor": {
          "ref": "37c08893-0a6e-454a-9a06-77350cb132bd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1402c093-dc5d-456b-ba67-050c2ae2ed9e"
        },
        "item": {
          "id": "db0f1f19-3475-4296-b548-7e2a656d4e8b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d04e0ef3-ea25-4a15-b57b-287d5cb3d48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531eea31-d0c2-4508-a8bd-21182637ee22",
        "cursor": {
          "ref": "50a63ff4-0db4-48aa-a575-c75773c941f2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3c87c183-2c8a-437a-af82-c013874897ca"
        },
        "item": {
          "id": "531eea31-d0c2-4508-a8bd-21182637ee22",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1768b3fb-20c9-48ba-95d0-4477c9d0e960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea023dec-ed72-46bf-84bd-fd1378eff196",
        "cursor": {
          "ref": "65486955-9a8b-4586-8fef-366947a63533",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "95b7f511-115f-462f-a450-6f54f290c0b3"
        },
        "item": {
          "id": "ea023dec-ed72-46bf-84bd-fd1378eff196",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "493a62f5-5cc0-47b9-b19f-ae207a4c511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4f4197-ab2f-4171-8141-b6ecb4a199bb",
        "cursor": {
          "ref": "6a0137c1-e203-474e-937b-e0c23bf278ba",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc0037f0-14d4-4d6b-bf10-b77d644ffb1b"
        },
        "item": {
          "id": "9a4f4197-ab2f-4171-8141-b6ecb4a199bb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a580aee5-10b4-4ba9-9133-653a4a593ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c06dca-2f06-4c4d-8c62-d49ea0ea75ca",
        "cursor": {
          "ref": "9aa2690b-ca59-477d-8326-40d28323dc54",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d86832a-4fc1-4491-b7b8-3e5154c0bc52"
        },
        "item": {
          "id": "b3c06dca-2f06-4c4d-8c62-d49ea0ea75ca",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4bbd42ae-3a17-4909-a801-7c4bb793a07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68af3892-fc3a-4e1d-b540-f4a578e008e2",
        "cursor": {
          "ref": "3acf1420-7fc0-40f7-8ee8-c8e97d530480",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "40dddec8-195b-4b3e-8b95-433cce78d0f1"
        },
        "item": {
          "id": "68af3892-fc3a-4e1d-b540-f4a578e008e2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "68240ea4-4273-4ca3-ab77-83ba9ea0a2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba05c5f4-d83e-485d-bf2e-75b3e9cbf15a",
        "cursor": {
          "ref": "cecad374-1b29-4240-9b5f-ac69a528a37a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "15b5b22b-36f4-42f3-b7ab-cfab26d05b3a"
        },
        "item": {
          "id": "ba05c5f4-d83e-485d-bf2e-75b3e9cbf15a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a212a5d9-ff21-4aa6-b820-f0fbb579cf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131d3346-6b89-4a1a-a5c3-0331df22f6e8",
        "cursor": {
          "ref": "f5f7cb03-e42d-48fc-ad2a-8cb30928e448",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ef8241bb-2041-467d-93d5-8d7522035d45"
        },
        "item": {
          "id": "131d3346-6b89-4a1a-a5c3-0331df22f6e8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6c883983-a5d4-4bbf-917c-ead17da4a09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e1d31a-456d-441e-9136-5a395abcdb18",
        "cursor": {
          "ref": "4a01f332-0283-4c21-b2c2-855f29022c80",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "34b247de-9cfe-4c6b-918f-ec1f72139346"
        },
        "item": {
          "id": "46e1d31a-456d-441e-9136-5a395abcdb18",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c383a38f-0206-47fc-bbea-d9496deb6c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2738816f-b267-4c76-9927-345a86e160bb",
        "cursor": {
          "ref": "e6c611c0-4fb0-4135-b33b-265632bcb00c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3040934a-b229-4e19-9915-77a0f9fc1179"
        },
        "item": {
          "id": "2738816f-b267-4c76-9927-345a86e160bb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f5f3bbc6-589f-46b0-8c7d-f945f11f39d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccae1c9-31fb-47b4-81bb-00ee9d4cfc87",
        "cursor": {
          "ref": "b1975ae3-0b49-42f8-9a78-a6cd6004af33",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "137300d7-07d7-44e7-85c2-6ad6c5fcc3e5"
        },
        "item": {
          "id": "0ccae1c9-31fb-47b4-81bb-00ee9d4cfc87",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f7214fa5-a55a-4228-9023-e9038c6bbd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7961c7-363b-4b68-8e15-f250879827d3",
        "cursor": {
          "ref": "06d1fe8d-334e-41b3-921e-c22aff093b2d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2c27de8f-a4e0-4214-b768-7c83fec90e7b"
        },
        "item": {
          "id": "1e7961c7-363b-4b68-8e15-f250879827d3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0d328553-957d-4801-ba03-590ace3ee72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b20e647-1cca-4904-8f4f-d7228a5dbe0b",
        "cursor": {
          "ref": "ae19775e-c385-4727-8cc1-e08e1cccb089",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "35cb1e55-ea9f-4c9e-8b13-5eb7664273fc"
        },
        "item": {
          "id": "2b20e647-1cca-4904-8f4f-d7228a5dbe0b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3fd850e5-d141-42df-8b2b-9780f10706be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600d2f35-9b38-4b9b-bf60-15203c4c99a5",
        "cursor": {
          "ref": "041761fc-ad31-4b51-b78c-c98bc04f3c0a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1eb226b8-7f0b-445f-aff6-a0caf7f94a20"
        },
        "item": {
          "id": "600d2f35-9b38-4b9b-bf60-15203c4c99a5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2857c0ff-bd0b-4754-a790-2b0bb5129037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5288c12-42ce-49ab-8da4-26137b11d30e",
        "cursor": {
          "ref": "1ba1a7ba-c3a6-4417-954d-c092041274f0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c8475184-edf0-4e97-8164-9581510d4e41"
        },
        "item": {
          "id": "e5288c12-42ce-49ab-8da4-26137b11d30e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "41fb66b5-57f8-42ae-8b7b-d267735fa08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ecb76c-d3b2-4aec-a911-2b8909f367b6",
        "cursor": {
          "ref": "053166cb-8329-4b1a-a1f4-30b67ba562a5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "15b387a0-10e1-496c-88c1-efcc517ebe29"
        },
        "item": {
          "id": "58ecb76c-d3b2-4aec-a911-2b8909f367b6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "12e497e9-213b-4e4e-a40b-1333eba48472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ab2235-0f78-4e7a-b490-3101e5817bbe",
        "cursor": {
          "ref": "9e4c3d9a-67fd-492f-8dfe-f874ea54beeb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8fcb00af-f10b-4e9b-8081-7bc340921a03"
        },
        "item": {
          "id": "d0ab2235-0f78-4e7a-b490-3101e5817bbe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "af00bc31-5a61-4376-ba06-7e09a3ec064b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cf476b-4fc4-4167-9146-201b869b05f6",
        "cursor": {
          "ref": "d40c846c-f435-4d6d-84a8-76bb932aaab2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "540e573a-9e04-4451-b5a8-8b7f4a23e115"
        },
        "item": {
          "id": "52cf476b-4fc4-4167-9146-201b869b05f6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1a74dbe9-3152-430e-8e2c-31ecb096c1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfef805-8f16-42df-8ea8-3dbf3c45ad57",
        "cursor": {
          "ref": "63c7b2cc-c5ad-4af2-add3-52ce0b0f54f9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2f16316b-6ec9-46f1-acde-e8d870484ab1"
        },
        "item": {
          "id": "8dfef805-8f16-42df-8ea8-3dbf3c45ad57",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cbba9f78-566d-45c8-9d7f-13b7a2bf0dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f72a72-c242-4324-834b-610a07bf0aa9",
        "cursor": {
          "ref": "cb74ad99-9071-4cde-8343-bdb1925f2973",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "318e727d-b3b2-481c-845d-ff6bd92126bf"
        },
        "item": {
          "id": "91f72a72-c242-4324-834b-610a07bf0aa9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "18a77d73-ae31-4b00-9385-464d2bd7926b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe4d0a7-c9e4-4db6-9a15-4837c91d164d",
        "cursor": {
          "ref": "5b1cba20-a143-41a5-b5a4-7d1dce592f8d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ceb3f61d-6b82-4d46-8fb1-3f16a7273964"
        },
        "item": {
          "id": "afe4d0a7-c9e4-4db6-9a15-4837c91d164d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a07d43c6-0952-4b54-aacf-95ee59a95995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035b0464-2be8-47fa-b835-c184a0e59dc5",
        "cursor": {
          "ref": "37c41bcc-6b58-421c-8cb9-2f2c784f7eb0",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2a538c50-67a3-4d2a-a82e-d25ff027b173"
        },
        "item": {
          "id": "035b0464-2be8-47fa-b835-c184a0e59dc5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c66eb8c9-0bae-4b93-813c-442fd717efd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe7953c-3eff-41d8-a37a-ade94164d156",
        "cursor": {
          "ref": "cd0a17d6-6dac-4889-bdfb-98978626405e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3d6ec1b9-1f64-4e5d-96bd-85cd3403467c"
        },
        "item": {
          "id": "ffe7953c-3eff-41d8-a37a-ade94164d156",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ff377dd8-e51a-44ac-8271-b255655946db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b16ed25-a06d-4000-95f7-2886f2a39bb7",
        "cursor": {
          "ref": "551a042f-bb63-439b-8482-e40f5efdc27b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e600c425-1b42-4ecc-aef5-e655beb95c61"
        },
        "item": {
          "id": "5b16ed25-a06d-4000-95f7-2886f2a39bb7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f4fcb0c2-3eb4-445a-96b2-3ddb6c2be912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f85be7-7a14-42cf-8f41-7c21dfecb072",
        "cursor": {
          "ref": "4ae6d6ba-c1bb-4019-a13c-5a7acbbccfd6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5d7f3c7c-6331-44c9-a6d2-8942a4f385c6"
        },
        "item": {
          "id": "05f85be7-7a14-42cf-8f41-7c21dfecb072",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "170392ff-cf8c-43a5-b735-9ec219fc397e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a95d966-bc38-473e-9d77-fde64f922a99",
        "cursor": {
          "ref": "6810a78d-31ab-4ca9-b98f-b80d5122461e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a78ec752-d2bc-4ae4-85a3-2f20b814fe70"
        },
        "item": {
          "id": "0a95d966-bc38-473e-9d77-fde64f922a99",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5a3938b8-ecbc-4ee6-9dfc-b8b5c8e7190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12a29d1-7353-4281-9cb4-f26c1788f32b",
        "cursor": {
          "ref": "93a562e9-b484-4578-bf83-5bcde21af15d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d3d2ea5b-e8bb-436b-8807-f6d5fa562ffa"
        },
        "item": {
          "id": "b12a29d1-7353-4281-9cb4-f26c1788f32b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d8d710f-2219-4641-952d-501398c51ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a8262-3b7c-43e6-a291-1a387224ee61",
        "cursor": {
          "ref": "298125f5-24e2-4546-9d67-fe2eae81e9a7",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6b393414-c30c-4213-b3a7-d9c08c9f3959"
        },
        "item": {
          "id": "fc9a8262-3b7c-43e6-a291-1a387224ee61",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a36e1469-0300-43bd-b921-8a690a068346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dcf843-bb29-47ef-b5f0-31a8f8650909",
        "cursor": {
          "ref": "1261a84b-a3a7-4fe7-8245-81cff946b4d6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "12b92d2c-196b-4eaa-bd06-9dc2b0518d1a"
        },
        "item": {
          "id": "43dcf843-bb29-47ef-b5f0-31a8f8650909",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "52310694-6d11-45cf-ba71-e2557841d02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f333c7-5837-4949-853f-dee21eed2a8e",
        "cursor": {
          "ref": "8243b9c1-4c37-451b-a935-9bb281b2e1eb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "39e35abf-2a92-411d-bd49-aa6c5b22568a"
        },
        "item": {
          "id": "a7f333c7-5837-4949-853f-dee21eed2a8e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1c570733-9183-484f-bfad-11983fa60b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94328a02-0231-44be-9094-b446aeb05965",
        "cursor": {
          "ref": "24bdbd00-5547-4152-99a0-7e437557a7d8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "312739f1-2a06-4c1b-922c-7bdd60ca60fb"
        },
        "item": {
          "id": "94328a02-0231-44be-9094-b446aeb05965",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "418490a4-9373-475c-821e-bd5a3c6f7e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7158ab-18dc-4bef-bb49-d794411344e2",
        "cursor": {
          "ref": "8ae4f85d-4073-4d9c-888d-019df789827b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ff6283cf-d5c4-4c58-a168-64ce2cc84300"
        },
        "item": {
          "id": "dc7158ab-18dc-4bef-bb49-d794411344e2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3b5d9952-9ba6-4931-984e-89ceb5144bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b77a456-2a80-456f-8e7a-e777f4598c0e",
        "cursor": {
          "ref": "f2a946d5-b75c-4505-8173-547c57e55675",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "40ea4725-6318-4193-8de1-c474fd3c74a3"
        },
        "item": {
          "id": "6b77a456-2a80-456f-8e7a-e777f4598c0e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4453bd3d-53bb-4ad9-a4db-da49f385fc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa62f9ed-2e62-47c8-bdcb-3f669cc63c45",
        "cursor": {
          "ref": "8969edd5-d6ce-40c5-9110-a0af45627a6c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "898876bc-da61-4528-8172-13029dbf874b"
        },
        "item": {
          "id": "aa62f9ed-2e62-47c8-bdcb-3f669cc63c45",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "536262dd-91af-4cee-a918-02c547d716d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9efaa04-2d17-41ea-93fd-044fc9cb3162",
        "cursor": {
          "ref": "8e44311e-40c7-4879-a4ab-b9c325f591b3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "796a46a3-54bf-4602-b23e-ea2563fee511"
        },
        "item": {
          "id": "e9efaa04-2d17-41ea-93fd-044fc9cb3162",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f4331a83-bd34-44d5-94ee-620e80668ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05588dd7-c607-49da-a0e7-d4df7c11e519",
        "cursor": {
          "ref": "25d408c0-9ac6-4200-a641-b70a5ba56b33",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3508e254-4bae-4cc7-a522-6eb7881e3f6a"
        },
        "item": {
          "id": "05588dd7-c607-49da-a0e7-d4df7c11e519",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1db6cf36-354a-4817-b988-fab2e241878d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65642940-81e1-4b14-9c09-19a66aa66fde",
        "cursor": {
          "ref": "d8df501d-72fa-4fa4-922e-ab1156f3bf88",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d8fb3445-39db-417d-bd7d-4b03e098aeda"
        },
        "item": {
          "id": "65642940-81e1-4b14-9c09-19a66aa66fde",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f4b991a0-6caa-493e-b205-46b00b9d1163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71aac3b3-0396-4721-abbc-3acbed75f382",
        "cursor": {
          "ref": "eaa63bcb-7cc1-4c77-927c-649da56abba3",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "491e0bb3-a4bd-42b3-9f17-88ab47b9ee94"
        },
        "item": {
          "id": "71aac3b3-0396-4721-abbc-3acbed75f382",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "017b69dc-a2b2-45ee-bc69-7aa0e7c48a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6789ae5-b8f0-4243-8a0e-c769f85c3224",
        "cursor": {
          "ref": "f1c25680-d98f-4001-bba0-8844dd543142",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "46f5179d-d404-4200-80da-5cf0e48996fc"
        },
        "item": {
          "id": "c6789ae5-b8f0-4243-8a0e-c769f85c3224",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f82ddd2b-bb16-43f6-a9e1-5e9cb99bbb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b4b114-f74b-49dc-9b6a-b9a7b3e9e1bf",
        "cursor": {
          "ref": "bd9f20f3-1e76-463f-abbf-e4e8ceb76ce9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "335b1c7c-c4fd-4d31-8965-f5514ecc3baa"
        },
        "item": {
          "id": "94b4b114-f74b-49dc-9b6a-b9a7b3e9e1bf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c3f671fa-ede9-428c-a9a0-63d355ce6acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67516b34-57aa-43e4-9fcb-32d6538b1ccb",
        "cursor": {
          "ref": "1c674c85-7b11-4078-b937-af8a38dcf8f2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "857aa372-495d-4036-a108-43bace8f135e"
        },
        "item": {
          "id": "67516b34-57aa-43e4-9fcb-32d6538b1ccb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "24367477-7869-4f50-8d89-799cd95e2555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edb218b-0a42-47a5-9812-047c47ed52ce",
        "cursor": {
          "ref": "4f58657c-add4-4847-b80f-65214fd49d08",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e05d8c65-332d-4dc0-bc85-11c0ca2f58d5"
        },
        "item": {
          "id": "6edb218b-0a42-47a5-9812-047c47ed52ce",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b53c0b74-c6c2-4ca3-9df0-794f8d87705d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bf2af5-1efb-4cff-84bb-44d04d777a39",
        "cursor": {
          "ref": "5c221409-c251-42c2-85f8-23140b856730",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e6270da8-dd70-465a-a3ef-bf285586596c"
        },
        "item": {
          "id": "63bf2af5-1efb-4cff-84bb-44d04d777a39",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "683f63b0-5168-47fb-8fee-315ed997c850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd017eb-a923-4bda-810e-5b49b8fc1437",
        "cursor": {
          "ref": "55d8b956-f25b-4fd5-9301-cc10e761405d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3e80b933-0baf-4de9-9252-8e16138b75c8"
        },
        "item": {
          "id": "6cd017eb-a923-4bda-810e-5b49b8fc1437",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3bbb6eff-8bdc-43ca-8328-d40c647aa8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286b27ee-f7f5-4418-9d47-052c03afc67a",
        "cursor": {
          "ref": "2b2a045a-e30d-4490-a28c-d402105b39a2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f90da208-ae34-46ec-a24b-e3263b10828f"
        },
        "item": {
          "id": "286b27ee-f7f5-4418-9d47-052c03afc67a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "14d61caa-ec3f-459c-943c-353b0f16c374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98624a2e-898e-46d4-a6e5-3503ec01091c",
        "cursor": {
          "ref": "4fc9a78c-0141-4511-9dbe-2239cafec47b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "131d0083-35a4-4ab5-a13c-762a754ba485"
        },
        "item": {
          "id": "98624a2e-898e-46d4-a6e5-3503ec01091c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5e6e4c43-27dd-4ec2-b0a1-57e99c051a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2ac501-5b43-42a4-b42b-5b9cff25200c",
        "cursor": {
          "ref": "d6b94c19-c35c-41f6-bd4f-bd719bfc1a0b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "71fc3127-f089-475b-ae87-d45e34a458b8"
        },
        "item": {
          "id": "5d2ac501-5b43-42a4-b42b-5b9cff25200c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5e265ad9-a2d6-46bb-8203-c87791c94ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b95442-cb57-404c-8a09-c97b4e25d3ee",
        "cursor": {
          "ref": "dfdb29b8-faf7-42bf-b6d4-c18e2f77d289",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e0d37fd2-6c0e-4c13-9b26-1368485fbce7"
        },
        "item": {
          "id": "e7b95442-cb57-404c-8a09-c97b4e25d3ee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "209f05ba-d9fb-4970-9a0e-9bb7f0a97744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf10cf5-76c9-4352-a48a-b8dded5eef0f",
        "cursor": {
          "ref": "af38509d-1740-4114-b496-8d8601562d72",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2ab28d71-c088-4c36-9a2b-e086327fe274"
        },
        "item": {
          "id": "ddf10cf5-76c9-4352-a48a-b8dded5eef0f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b6920261-6f1e-401b-9262-5f1e9eecc574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7767a0-2125-49b8-a3b8-b7c0e014bdec",
        "cursor": {
          "ref": "c6375d5b-121a-4838-8f78-9d0771d90636",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9ec81a34-37f7-4964-aaeb-3ba64ca4431e"
        },
        "item": {
          "id": "ea7767a0-2125-49b8-a3b8-b7c0e014bdec",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "586d6926-db64-4fa1-b2d9-5ebfffa1babb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7339f6a6-0461-46d3-9b4e-d272ccdeb494",
        "cursor": {
          "ref": "d5dc5110-6b5a-4865-ba20-aa4c1a1406a4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "072e1686-d8ec-4afa-9fdf-1a136b2eb116"
        },
        "item": {
          "id": "7339f6a6-0461-46d3-9b4e-d272ccdeb494",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0e46b3ab-1f93-4f2e-90ed-c0bbc5154d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a43a572-d4a7-432d-8efe-c7578698de34",
        "cursor": {
          "ref": "82543e08-baf8-490b-ba50-97aad68eecd9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7b2a9bb5-e73d-4b38-a523-ccfc9895e1e5"
        },
        "item": {
          "id": "9a43a572-d4a7-432d-8efe-c7578698de34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b6080492-cb71-47e3-9dc6-8cf0242a7619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3c6773-73bf-4c4a-afd7-6c86388ab465",
        "cursor": {
          "ref": "6137bbe9-952b-4910-8df3-23c002531b19",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1a4d7e86-f7dc-421e-9d7f-241b61011336"
        },
        "item": {
          "id": "ae3c6773-73bf-4c4a-afd7-6c86388ab465",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bdff173f-b64d-4188-8411-52cd60327490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240cdbc6-544d-4789-b54e-635cd06e9e59",
        "cursor": {
          "ref": "84e8dfa9-ebd8-4bb7-a641-9452e11186da",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "97f0d2c5-0198-49ff-82e8-c2de2fa0e30d"
        },
        "item": {
          "id": "240cdbc6-544d-4789-b54e-635cd06e9e59",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c11f65a5-8da6-41dd-98a7-f22049b1f15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227a17db-a4e5-420c-913b-b71566f376b5",
        "cursor": {
          "ref": "7409f780-1643-41a3-9eaa-b83ccb6e78f5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "58c73cba-7def-4dca-879a-4ecd770d75e0"
        },
        "item": {
          "id": "227a17db-a4e5-420c-913b-b71566f376b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "21b90d76-aaea-49d3-a884-9433f0cf70bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ee601b-4c3d-4366-9d79-4e06ec57f5cb",
        "cursor": {
          "ref": "477dbe61-e4f3-47ae-be6b-145b8a047e0a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d9686eb6-75bd-4d3e-b0f5-b0e105b8f6bc"
        },
        "item": {
          "id": "54ee601b-4c3d-4366-9d79-4e06ec57f5cb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "68fe3821-2805-41a9-84ca-27c6e070987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3c8060-3c12-48de-9fb0-68937251f49d",
        "cursor": {
          "ref": "2c02ee8b-b8fe-4212-9c62-d18d2475592b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "00d58b73-0374-4cf0-89be-d1428a1dc308"
        },
        "item": {
          "id": "dc3c8060-3c12-48de-9fb0-68937251f49d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c3f9369e-a4b4-4158-a4e5-338e278aae5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4463df-96ad-4a47-a6de-aadebabb60b5",
        "cursor": {
          "ref": "29ac4176-7b27-42a8-ba0e-61b5e8f4cbc0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "999dd674-b63e-4b5b-a86d-c89a3c7a77ef"
        },
        "item": {
          "id": "4e4463df-96ad-4a47-a6de-aadebabb60b5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2abf68fa-ad5c-497a-ae84-1430d9cc7758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4223054e-381a-4eda-a973-27c70ca8f76d",
        "cursor": {
          "ref": "0475a061-d7a1-41e6-9a9b-239df04b6164",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "118d9be4-d94a-4285-a6fc-16e77e7b76d9"
        },
        "item": {
          "id": "4223054e-381a-4eda-a973-27c70ca8f76d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "535954be-9448-456f-a0d3-b9b9f3ae1925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbb78aa-8383-4ace-9c74-c5fac1c59915",
        "cursor": {
          "ref": "55c46c2e-55fa-479f-b482-7ab33e12050b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5016f355-a6bf-4df9-a8ff-fd00a1f2563d"
        },
        "item": {
          "id": "9fbb78aa-8383-4ace-9c74-c5fac1c59915",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d25614d5-6133-4f04-b016-d9eeb0dd2e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85c2c14-8f89-4482-943a-ff26d85d9806",
        "cursor": {
          "ref": "bdb80e07-7927-4146-8905-ec2c795089d1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0611d60b-7ddd-4985-9811-8a5f55df3b40"
        },
        "item": {
          "id": "d85c2c14-8f89-4482-943a-ff26d85d9806",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "65982ae6-44eb-4ea0-93a7-dd6bc33b6640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb45eab-5080-4fd2-b975-55df06b10fbc",
        "cursor": {
          "ref": "ea1d7de9-0c72-4cf2-bf38-39c914b75ba5",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f23256c1-5fb2-4405-825e-f9f3407f8ba8"
        },
        "item": {
          "id": "fdb45eab-5080-4fd2-b975-55df06b10fbc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15e32d6f-8bd4-4e86-b098-b6b14ef9efe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422b67fe-6763-4222-bb0b-2fc7bf5a4ab3",
        "cursor": {
          "ref": "e24ba39c-6c0f-472a-9d02-57fb5b15b1af",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3ccf0fb4-7634-4ad4-aedd-d87bbcef6154"
        },
        "item": {
          "id": "422b67fe-6763-4222-bb0b-2fc7bf5a4ab3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d5c6db99-a6b6-4184-8a23-668cbb8a66f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eda7ece-612e-4b5f-b54c-bc1eb683275f",
        "cursor": {
          "ref": "46d6bf27-d35a-40d1-80ec-8fd06b12ac2a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6eedf5bf-a23b-4480-8a73-08a317f128b5"
        },
        "item": {
          "id": "6eda7ece-612e-4b5f-b54c-bc1eb683275f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "33a1095f-8477-46ad-9ee3-c03f6a051de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c173188-da7e-4edb-a627-d1edbc99b080",
        "cursor": {
          "ref": "bf6159e5-cce5-4c93-a3ed-abbffe47223e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eb1c57af-304a-4e88-88d5-7d6840741a2a"
        },
        "item": {
          "id": "4c173188-da7e-4edb-a627-d1edbc99b080",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d4ff97ab-3dc9-4903-9e90-ea8805cfb2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70eace4-b178-4331-93f9-7a0f2ce33ad9",
        "cursor": {
          "ref": "c8af9adc-2f9b-4c13-96f4-e889e5ce9857",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2b1f5784-8345-4610-8e96-f774990ebfdc"
        },
        "item": {
          "id": "f70eace4-b178-4331-93f9-7a0f2ce33ad9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ad06b485-b7af-4500-998f-def42ceda6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7f9cd0-627a-48f7-949b-324361f0c1b2",
        "cursor": {
          "ref": "63120f24-568c-49e1-b965-9db8431cc7fe",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "342c3e37-557c-420c-8e74-d4a4fb19dc4e"
        },
        "item": {
          "id": "bd7f9cd0-627a-48f7-949b-324361f0c1b2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a3ecf1c0-f8f8-43ce-a366-89893a2fae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56f133b-de33-483a-adb7-08af2e783799",
        "cursor": {
          "ref": "14762406-fe9c-4c20-9ecb-62661307c586",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "68b784dd-bdac-40f5-acf4-f088c8da19b3"
        },
        "item": {
          "id": "d56f133b-de33-483a-adb7-08af2e783799",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "60dff020-96d4-4097-ab36-b885b82c8ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1613b21c-d759-4ecb-960b-17609b720768",
        "cursor": {
          "ref": "9eb77715-4582-4a04-8b18-2b1d3edfc419",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e6194ef7-42e4-402f-86ba-33d2c40f501d"
        },
        "item": {
          "id": "1613b21c-d759-4ecb-960b-17609b720768",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0c9bc927-94e8-4dcb-aeb6-e255e31dd2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409c696c-7f09-4c37-9de6-ec848b1e70f9",
        "cursor": {
          "ref": "9de2e1e7-433e-4972-9001-fdc62d5598a0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dff7ec0b-967c-4423-9d1b-75fd04efda1d"
        },
        "item": {
          "id": "409c696c-7f09-4c37-9de6-ec848b1e70f9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "740d7d0f-e581-4cc1-a4d7-e27c7fbe1084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f56e3b-4586-41f6-97fa-f7fdddd0eadc",
        "cursor": {
          "ref": "3a86f00a-5c3b-4703-9e30-9824f02f99c6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "93f05462-43ce-469c-87f4-f1c5d84a80fa"
        },
        "item": {
          "id": "f2f56e3b-4586-41f6-97fa-f7fdddd0eadc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6e13293f-1e18-4eb9-b5e4-c6d0912ced45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac1e1ed-3b34-4385-856a-e65e359d32fe",
        "cursor": {
          "ref": "0e85325b-11d0-4203-9061-578fae2104cd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54dc05ca-6618-433c-8928-9e3543407873"
        },
        "item": {
          "id": "fac1e1ed-3b34-4385-856a-e65e359d32fe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a16d8923-ce3d-448a-9e8e-2efe527754c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891ea23d-07c6-4b78-9583-bc1506831c8f",
        "cursor": {
          "ref": "22ca282e-b456-4c13-8487-218ade500b28",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "76c39c8a-d759-4816-a303-ca53ddbe2984"
        },
        "item": {
          "id": "891ea23d-07c6-4b78-9583-bc1506831c8f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "44d99570-0bcb-4fe5-a730-13f0a02c3c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0219eef3-0d5b-4459-9e68-a0d849c1bdf8",
        "cursor": {
          "ref": "c1daeaca-a18d-460a-9966-a58ecef78506",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f41bb92e-cf9c-4d15-a8ea-6cbaa3048eec"
        },
        "item": {
          "id": "0219eef3-0d5b-4459-9e68-a0d849c1bdf8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "de1cb167-9aaa-492c-bb39-e572363abccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484bd107-6b61-4805-925a-c53b5bfe150b",
        "cursor": {
          "ref": "aa3c282c-8244-4140-9830-5e58014a67a1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9b52f59a-46f8-498c-bc5b-e0bc6d3bd315"
        },
        "item": {
          "id": "484bd107-6b61-4805-925a-c53b5bfe150b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5f2d5277-73df-4922-8e25-16f359357d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cd4faa-ed4e-49a1-a316-4031f1850856",
        "cursor": {
          "ref": "30b33eab-3adb-4d3d-8807-9363abcc404b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9d92cc7b-4d51-4394-8bff-4a9927e99f9b"
        },
        "item": {
          "id": "42cd4faa-ed4e-49a1-a316-4031f1850856",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0e7842a0-4029-4a84-9de1-1b9458909cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913c1db9-d03c-4a3c-a862-254591389503",
        "cursor": {
          "ref": "9e51b792-ee22-4533-bfc3-7e4237af340e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ca8acb6a-fa6d-43b5-b174-18ef7f1b4e3b"
        },
        "item": {
          "id": "913c1db9-d03c-4a3c-a862-254591389503",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "29cd5e46-592b-416b-92b5-2e95a00fb42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc33e57-1560-4d96-aa52-769384281aa1",
        "cursor": {
          "ref": "054b4333-d5d9-40da-a2c2-928131f6934a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "17eb0e71-f7c7-448b-915f-a837135e237a"
        },
        "item": {
          "id": "cdc33e57-1560-4d96-aa52-769384281aa1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5718ba9b-248c-42db-9df4-a1ee95181e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19868fad-341f-4444-b1b4-38ec57e1216b",
        "cursor": {
          "ref": "15a20b94-caa6-46a3-a1c0-e6e7c15aa1e6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23e068fc-0300-4d35-bc37-710188536d6c"
        },
        "item": {
          "id": "19868fad-341f-4444-b1b4-38ec57e1216b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "79f95586-265e-4bb9-8f7d-b03046e6d368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0483a908-1f5f-494e-8070-ea4e8d3410b2",
        "cursor": {
          "ref": "48851956-ade0-44fc-8776-459784aa6e58",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "174b13e4-c5d3-4712-911b-69e11786ca2e"
        },
        "item": {
          "id": "0483a908-1f5f-494e-8070-ea4e8d3410b2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dce2b251-c27e-4ac6-ba46-80e7d60f3ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1159c79-8ff6-48c9-9ff8-58b96d4e7b21",
        "cursor": {
          "ref": "b7e64a38-bd81-4110-a17a-b1f03a057614",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4e5a7f49-a3bf-44b8-b4b9-a8d59d910aca"
        },
        "item": {
          "id": "d1159c79-8ff6-48c9-9ff8-58b96d4e7b21",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dc51016e-dea2-4a6a-8dff-f132be3decb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a766270-d736-4a9c-a283-60b934b298b1",
        "cursor": {
          "ref": "75b731d3-62e9-4c46-bab9-f2604c27c9b1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fd2dc51b-4e63-40ed-a03e-d14cda17dbe5"
        },
        "item": {
          "id": "6a766270-d736-4a9c-a283-60b934b298b1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d2b592ce-e24d-4b0c-bb58-858d9b9d6255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c1afba-626c-48e6-bd0d-2f5fd562c75f",
        "cursor": {
          "ref": "8d3c528b-0def-46f5-be9f-99fa3fa78c62",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "66f99fd1-6fd7-497f-b2ee-e94e4f2aadb7"
        },
        "item": {
          "id": "23c1afba-626c-48e6-bd0d-2f5fd562c75f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c6c15fa5-8aee-47db-b9e2-2dc2d2a4945c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc5adb5-c2c7-453d-a85e-2b70ea19eeed",
        "cursor": {
          "ref": "76384b28-2917-4f41-b874-5530bf053ba9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "137c6628-f0e3-4e44-ad1d-47d73d3ca74e"
        },
        "item": {
          "id": "ddc5adb5-c2c7-453d-a85e-2b70ea19eeed",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9a506908-5ff7-4e91-8e25-bb958f116824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243fe907-67c5-4d29-b4cd-96f807c81c42",
        "cursor": {
          "ref": "e79350a4-e64d-4304-ba2b-5b4df4cbb6d1",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1a3e0672-63b7-4991-bbb5-72be59646854"
        },
        "item": {
          "id": "243fe907-67c5-4d29-b4cd-96f807c81c42",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "de39a2aa-51b2-4add-8a5d-3ca211350aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16a400f-b816-4665-9bf1-2a22d10fa2bd",
        "cursor": {
          "ref": "14948954-6881-4572-9821-5d95633bd86a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "01949c40-b6c2-4c54-a020-37687a59d0fb"
        },
        "item": {
          "id": "f16a400f-b816-4665-9bf1-2a22d10fa2bd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7a66efa9-2224-4b0b-bee4-9efbcdfe1532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70070f2-bba2-4429-8600-aa24c5e50737",
        "cursor": {
          "ref": "4fff147a-1a08-4860-9163-c312f9b56e8f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "253c556d-209b-4e28-926e-a59f7c2e39e6"
        },
        "item": {
          "id": "d70070f2-bba2-4429-8600-aa24c5e50737",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c6c17307-0029-4831-9ea2-94b87ed1fce2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ea2453-8172-4d78-8c65-675e45f37237",
        "cursor": {
          "ref": "d5df296d-25e3-4f18-a4b9-4057a0118b2d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bedf1d42-6460-4e46-a938-f124d8f9792c"
        },
        "item": {
          "id": "76ea2453-8172-4d78-8c65-675e45f37237",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "18f65566-4914-47b9-90d2-e5ca160f0149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "175f9294-6571-4d08-b2da-0c8a62b6f52f",
        "cursor": {
          "ref": "74edaec7-da75-45f8-8a17-5a2a82c04bc8",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f37d62c3-f178-456d-ae17-dba76f83b14d"
        },
        "item": {
          "id": "175f9294-6571-4d08-b2da-0c8a62b6f52f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3c2db556-44e6-4df9-8296-a8c2d8fa6a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4a0aed1f-bd4c-475e-b8a7-1027955e1533",
        "cursor": {
          "ref": "482a26f3-00c1-422a-971c-401513d7f944",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ff1cdf26-bb8e-4839-ae0b-237d33e68990"
        },
        "item": {
          "id": "4a0aed1f-bd4c-475e-b8a7-1027955e1533",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "06760e76-7bfe-4b2d-8668-0fdf78412f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a4ded223-9457-43f4-8d2b-a6f0f53837b2",
        "cursor": {
          "ref": "cb702952-c7bb-462f-8f63-4933635e81f2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d1cef136-0bf2-4b2e-bd76-36d0cda18093"
        },
        "item": {
          "id": "a4ded223-9457-43f4-8d2b-a6f0f53837b2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "31769da8-a658-4dbf-91f2-9ffea6295ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "74a3984f-5e51-4098-acde-ee2f71676996",
        "cursor": {
          "ref": "fdd210be-cadb-4f7f-95ad-8fe486c91cda",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a035f9a3-8c07-4b31-8d53-84f7ce6fb7d5"
        },
        "item": {
          "id": "74a3984f-5e51-4098-acde-ee2f71676996",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3606c69d-6849-4b29-8694-73841b6b6d46",
          "status": "Created",
          "code": 201,
          "responseTime": 9381,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aca1d19-fbe7-4e02-8ec9-18ce6b5601e6",
        "cursor": {
          "ref": "d4555701-7d69-44ac-832f-25d423e0b6d9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "48e46b17-d74b-482e-b944-64849ffd1122"
        },
        "item": {
          "id": "0aca1d19-fbe7-4e02-8ec9-18ce6b5601e6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1ddf0772-824f-4a16-b8b9-1d594dac2490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b9b66380-c93f-4fd6-a776-d7b1f721dec5",
        "cursor": {
          "ref": "a653bf2d-2dc6-467c-a258-ab30ec175cb5",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3a89c5a3-7e95-4ffb-a182-fe9335db3c5c"
        },
        "item": {
          "id": "b9b66380-c93f-4fd6-a776-d7b1f721dec5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b7010aab-3956-466b-b2e6-e41d7c84ab21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2ee31cbd-df5e-45e6-9692-93703c4063d4",
        "cursor": {
          "ref": "f57de7ae-b69d-40c4-be1f-690bdf2daeaa",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "839e691d-9c14-47c4-9193-7a8b25c62780"
        },
        "item": {
          "id": "2ee31cbd-df5e-45e6-9692-93703c4063d4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c7aa4a6d-331f-49f7-9803-7168bc0b848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097e2e5b-3f54-4bc5-b12c-a7fe23a698b8",
        "cursor": {
          "ref": "d0587f23-65c8-491a-b6fb-e712b0bd8591",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f3441802-8845-4294-80ef-9d7062b16864"
        },
        "item": {
          "id": "097e2e5b-3f54-4bc5-b12c-a7fe23a698b8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dba455a3-12d7-44ac-9330-9202e7d8b94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86731cab-6c8b-4b8b-b86a-bff573ee83fe",
        "cursor": {
          "ref": "a6767ecb-bd34-4744-ac43-49703015396c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "74a23514-4961-4aa0-b180-29d5c8602641"
        },
        "item": {
          "id": "86731cab-6c8b-4b8b-b86a-bff573ee83fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9d772e4f-3b82-49d7-bfd0-bb0f4321336f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1689d425-3304-43f7-b888-d5fe150f33d8",
        "cursor": {
          "ref": "37cbc1e0-328c-40f6-a31b-0b5e7dfb73a0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bfe10fc7-99a3-4e4b-a890-497086d93278"
        },
        "item": {
          "id": "1689d425-3304-43f7-b888-d5fe150f33d8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "daadd904-684a-4776-a6da-d5922e1b984a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc6c7e2-131a-4aac-88a3-33433e7dbc54",
        "cursor": {
          "ref": "2b8204dd-1733-46cb-83fb-1e820325627a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "92cbe110-0747-40aa-8f56-c9141ff740bd"
        },
        "item": {
          "id": "9dc6c7e2-131a-4aac-88a3-33433e7dbc54",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c7c4848b-7caf-4e0e-8d26-07813cec348c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497c5fcf-0b74-4f42-9e65-ca7f13066d3d",
        "cursor": {
          "ref": "625e93a0-365b-4794-a0d1-68812b368591",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b712f414-43e5-4614-8633-15997d316eaa"
        },
        "item": {
          "id": "497c5fcf-0b74-4f42-9e65-ca7f13066d3d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1de86487-a6f1-4f58-b818-6828f9137700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744424d8-c930-40f7-9a6c-065d9310b706",
        "cursor": {
          "ref": "c06db6ae-c260-4949-8572-2efcf4c05b09",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "19c30436-cf67-47e1-958c-763b5f8e06e9"
        },
        "item": {
          "id": "744424d8-c930-40f7-9a6c-065d9310b706",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e498fbd2-1581-46ff-ac7d-a206d9b18ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c48969-09ed-4b2f-aa39-d346cf85d5a5",
        "cursor": {
          "ref": "8476908f-939b-445f-a783-7c25b321afb2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "19424d5f-a2f6-410a-aba9-c876b8e189f6"
        },
        "item": {
          "id": "00c48969-09ed-4b2f-aa39-d346cf85d5a5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f1d8feee-dcfe-462c-8da7-b38e0c62410d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1d1a14-bba5-4fb1-ace3-0f75f1e61079",
        "cursor": {
          "ref": "4003983e-02e3-4f16-b4a3-84d27bca05fd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "50963b8c-571f-44c9-acfb-dfbfe9b7f55f"
        },
        "item": {
          "id": "cf1d1a14-bba5-4fb1-ace3-0f75f1e61079",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0ebfdad4-35b1-4d52-b01a-417e803b0e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec959aea-7834-4b94-8f80-fa982c806977",
        "cursor": {
          "ref": "d3373846-eb9f-45c0-9c56-a29d44d4e3cb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "37a17b55-9069-4b8c-8b1c-2f686e75daaf"
        },
        "item": {
          "id": "ec959aea-7834-4b94-8f80-fa982c806977",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d6fcac5a-6667-464a-be24-9e7fe8bbe218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f57b32-169c-43b1-95b7-e38d1c9da18b",
        "cursor": {
          "ref": "33a12f64-91ca-4ad4-b930-949c48326abf",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a4415781-0d8d-4537-aafb-e55681493369"
        },
        "item": {
          "id": "c8f57b32-169c-43b1-95b7-e38d1c9da18b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "992ed3c7-38bc-4a98-9980-9aa5d1c3eec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea11f6ff-173c-4d03-ab9d-ed6e43962e20",
        "cursor": {
          "ref": "45b1255b-92e2-41b2-8d0f-09ad59b8d2e6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d0561c41-7310-4489-96d7-2a6a4248c35d"
        },
        "item": {
          "id": "ea11f6ff-173c-4d03-ab9d-ed6e43962e20",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d48cc230-8928-460f-bdfc-a802be4bf5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9cc6ba-c9d9-4c60-a87d-03ca7bfa9b75",
        "cursor": {
          "ref": "6d4b23bf-6080-4297-b79f-178864c6ecae",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "97d8f378-e341-4fde-bbef-594d0ab6615b"
        },
        "item": {
          "id": "6e9cc6ba-c9d9-4c60-a87d-03ca7bfa9b75",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b7b4e9c9-684f-4d51-812f-8507ade77c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d7865b-0dc2-41d4-88ba-75870fb86c9b",
        "cursor": {
          "ref": "6b2da6e4-ac25-44f0-856e-9c9ba8a7bf87",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ea2591b1-98ba-4b35-85ca-e5effaea1c90"
        },
        "item": {
          "id": "a3d7865b-0dc2-41d4-88ba-75870fb86c9b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "23819ad9-7abb-4e54-889a-ed47b20eb8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5d0532-2a68-4a61-acf6-ac7b418aba7a",
        "cursor": {
          "ref": "787b420f-4648-4b30-a292-f64155d9a180",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d22d8590-8596-4d24-84ff-6a74a46b9235"
        },
        "item": {
          "id": "bc5d0532-2a68-4a61-acf6-ac7b418aba7a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a9166fae-a11c-4a3f-ad75-eaae01b3567c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aaa9fb-3e3d-49d6-a37a-b7a360924861",
        "cursor": {
          "ref": "f9cb1928-128b-477e-8f5e-39c1de40e0d4",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "499893cf-533e-4bbb-a8bc-950b9980fd23"
        },
        "item": {
          "id": "29aaa9fb-3e3d-49d6-a37a-b7a360924861",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c0d80ca5-9e22-41f3-a497-4e98e82ede0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797fe16e-550a-4f60-9500-7cc438e8ac68",
        "cursor": {
          "ref": "4ee19547-637b-48d4-b787-db0772d40a20",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0245471d-81e9-449e-b2b4-1eced0999d87"
        },
        "item": {
          "id": "797fe16e-550a-4f60-9500-7cc438e8ac68",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "92b1c404-d040-4db9-8fd1-31c103037763",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d5275d64-5b5d-42e2-a9b1-909670daf0a6",
        "cursor": {
          "ref": "0b49821b-8621-4cfb-af93-6cd3b813fbcf",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ec327660-a195-4338-ae43-8c4511817a6f"
        },
        "item": {
          "id": "d5275d64-5b5d-42e2-a9b1-909670daf0a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "71b0f6ed-ca7b-45e9-bf01-679ad4e8a033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c80eae-88b1-4d15-92a2-4aa693e40ff4",
        "cursor": {
          "ref": "e6ab9adf-8854-4f8a-9dca-fd930e72907a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "38124a2a-c60c-484d-bd33-44f23d103727"
        },
        "item": {
          "id": "62c80eae-88b1-4d15-92a2-4aa693e40ff4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dd2ef6a1-4971-4422-a60c-bb95ef5b77b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edd6163-d193-4ed2-bee2-3940ebaabc70",
        "cursor": {
          "ref": "898cd6f4-2abb-4111-b52c-783a5a720ccb",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cfea2cad-493a-4452-9807-8c57f1615c92"
        },
        "item": {
          "id": "6edd6163-d193-4ed2-bee2-3940ebaabc70",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "680ecddd-8d80-49d6-a852-0285c8a88c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07721b65-0cd9-4015-b9e7-eff2d0321d23",
        "cursor": {
          "ref": "71162ddb-3752-40c4-865f-7329a189bddb",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7c54313a-4a06-45af-8b30-894f954da7d3"
        },
        "item": {
          "id": "07721b65-0cd9-4015-b9e7-eff2d0321d23",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e532065a-7105-4598-9d17-8764c26eca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dfb344-9134-45e6-96dd-f596550db137",
        "cursor": {
          "ref": "9c6f08bb-757e-4f5d-87ac-f0d856153703",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0dd43705-202a-462d-a262-eb7dccb9b389"
        },
        "item": {
          "id": "b1dfb344-9134-45e6-96dd-f596550db137",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eb1208e1-9505-4e17-a975-5287a0236b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e649b759-8a69-48b1-8560-64a26e204657",
        "cursor": {
          "ref": "4cc8d171-1fd0-4e58-8a3e-3a0fa82193ea",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "35da2c20-9901-438f-8009-bc463c8e9355"
        },
        "item": {
          "id": "e649b759-8a69-48b1-8560-64a26e204657",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ba537cbc-c30e-4afc-8a64-db15c69485a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a5e357-3a99-457c-afd4-b743d89e5bf0",
        "cursor": {
          "ref": "59ff1a25-535b-4aaa-a523-2e49cbe92787",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cc46c3b5-0913-4d5b-87e9-015ec7d8a68a"
        },
        "item": {
          "id": "69a5e357-3a99-457c-afd4-b743d89e5bf0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "19d458ba-002d-4491-b6a6-80c14d8ab22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7131182-2173-4a4b-a631-55f5cd0bb8eb",
        "cursor": {
          "ref": "c4022558-f450-4cdb-994a-5f79f6fc81eb",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "20ca67e3-af0e-4f2b-aade-266959c7ad54"
        },
        "item": {
          "id": "d7131182-2173-4a4b-a631-55f5cd0bb8eb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "83c2a5a9-a8be-40b0-8c41-197796d60d8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "f85332c6-80c1-4017-8c82-533d95937f53",
        "cursor": {
          "ref": "9d3435ed-4614-4762-bb17-a1ae3a0e6c0b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c3d47073-6c82-4106-b05c-2149b0da4a45"
        },
        "item": {
          "id": "f85332c6-80c1-4017-8c82-533d95937f53",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "157ab97e-2646-4ad9-ad81-6b876cc79826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e19bdbe-c151-4d89-ac44-672ed477e00c",
        "cursor": {
          "ref": "9e9262dd-691e-428c-8fdf-30ee5c423eca",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6e149893-f55c-4d85-a5a1-0e2f58eb6e01"
        },
        "item": {
          "id": "8e19bdbe-c151-4d89-ac44-672ed477e00c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "34de1771-77e3-45c5-9620-0e150c07a18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7995e3-73fc-40a2-bac4-a55d4298d253",
        "cursor": {
          "ref": "077a582f-f10d-4e88-9631-ae13e3145209",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6780ab60-ebb0-45b7-8e2d-78a46ca1deab"
        },
        "item": {
          "id": "9b7995e3-73fc-40a2-bac4-a55d4298d253",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a710a4bc-5a68-4d12-aaf3-a912071b4c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2792089-1316-41e4-8066-4faff0b49b00",
        "cursor": {
          "ref": "a05be3b3-a52b-4d27-ac0c-e57dd4c60392",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7923b65b-cdd2-45d1-8e99-a8d159960643"
        },
        "item": {
          "id": "d2792089-1316-41e4-8066-4faff0b49b00",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0c0271e3-0ce2-4341-9d0a-91abd6876926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0550ff32-acc5-4130-b233-2aa17ec3188d",
        "cursor": {
          "ref": "7d456cf0-23ab-4c23-a84f-318d6252ad45",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "53511597-e8a9-412f-a283-2488d8902448"
        },
        "item": {
          "id": "0550ff32-acc5-4130-b233-2aa17ec3188d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "21786951-582b-4b72-afae-32fa82420689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98782a4a-d211-4967-9c04-e8464f3611f9",
        "cursor": {
          "ref": "87da3a74-a987-4917-9d83-a0b5ef43abb3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f7cb8bb0-c174-472e-b19f-3c24b272006d"
        },
        "item": {
          "id": "98782a4a-d211-4967-9c04-e8464f3611f9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4be0a270-56b9-4b48-866a-d14a0aef59bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c97280-1f50-4194-8103-03e0ff191283",
        "cursor": {
          "ref": "366629d6-5dea-4623-9ec0-1b1241d7af68",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "223a48f2-7de6-4fea-9a14-3f464723feb3"
        },
        "item": {
          "id": "10c97280-1f50-4194-8103-03e0ff191283",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7a0c9959-59ec-4976-84cf-ec71a3767430",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 112,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "fa09a550-6afc-4acc-b773-a4ff4acf41ee",
        "cursor": {
          "ref": "8d0d9136-9462-4e46-b557-c613b7ce659c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4aff4cda-79b4-4dda-8165-dfcf3d433a9a"
        },
        "item": {
          "id": "fa09a550-6afc-4acc-b773-a4ff4acf41ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f05c28f-a67f-4145-9672-5bff109fa81d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03083d71-d6e6-436b-a6e1-0761862deef0",
        "cursor": {
          "ref": "84ae3c51-d056-4275-ac02-3871eada6ea0",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a2eeeb44-3f60-447c-b684-6c39b4715577"
        },
        "item": {
          "id": "03083d71-d6e6-436b-a6e1-0761862deef0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a633cb08-ec05-4992-8c63-e8832f1e193a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950999ac-5013-4c3b-9bad-8cbaaeb3df9f",
        "cursor": {
          "ref": "f7bbb66a-ac43-44d9-b242-c80d71556a55",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0faad6fe-0060-488f-9a1f-ac37eff4105b"
        },
        "item": {
          "id": "950999ac-5013-4c3b-9bad-8cbaaeb3df9f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "024125b6-7c8c-41f6-8e6a-73656a0dd57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ed66dc-2d28-4adc-81ec-8fab23bd367b",
        "cursor": {
          "ref": "4ae58e03-ae2f-47a5-8c5e-4d03f5ee6c4b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5048578f-35e0-4e37-a027-0602bfa7746f"
        },
        "item": {
          "id": "08ed66dc-2d28-4adc-81ec-8fab23bd367b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "61c6a8f7-996c-42cd-90c5-0202b4b0f9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5f8842-e589-4f30-a8cb-071537c4f693",
        "cursor": {
          "ref": "a7406666-bbec-4d9e-bc07-94ba3a189a6d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7bbe7aa9-4e25-4c92-a0d4-5da3f3a3fc03"
        },
        "item": {
          "id": "7c5f8842-e589-4f30-a8cb-071537c4f693",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f9dac1ac-79c9-4579-8187-7bc683a8c381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b9baa3-6dc6-42c6-b405-fd62f73f67d3",
        "cursor": {
          "ref": "5445a8d4-ab3b-4acf-8225-ab11f2972e5b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "667eaa34-2f31-423f-8b70-1d3a03c84701"
        },
        "item": {
          "id": "31b9baa3-6dc6-42c6-b405-fd62f73f67d3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5031b1c0-4ca0-4567-bf9f-a5f608354dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730aeeb5-04ac-4a64-a6f8-25788169964e",
        "cursor": {
          "ref": "9e00f084-ba9d-4336-9d47-3897d78e8962",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0cf09ba5-5542-4bef-a65c-345a1f3bb5f4"
        },
        "item": {
          "id": "730aeeb5-04ac-4a64-a6f8-25788169964e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ff29634-2f09-410f-b9ac-905b0ed9a8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6771c685-65e4-44c3-b793-9efcdf7ff56c",
        "cursor": {
          "ref": "ed6b4d67-e26c-4845-8e89-e43d11c52b39",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4207e271-66d1-42ae-b7fa-72bac8b7575c"
        },
        "item": {
          "id": "6771c685-65e4-44c3-b793-9efcdf7ff56c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "793806a6-b23b-4fcd-b825-d67b1771b6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb66e458-e1d4-48ac-94f8-67590cab41fb",
        "cursor": {
          "ref": "7a276763-ba6a-4411-892e-dd6bcd5a4a1f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fef32fda-3caf-42db-8c78-0a5a6da9f4ea"
        },
        "item": {
          "id": "bb66e458-e1d4-48ac-94f8-67590cab41fb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3e99db79-e0d0-4dff-83c6-fbf14d25abee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd01769-0fe4-4ac9-b2b7-e8a00a9f2121",
        "cursor": {
          "ref": "755816ae-96ca-444d-b25c-1a714113dc3b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e73a8f34-e54f-435a-9b80-673af3e0f411"
        },
        "item": {
          "id": "8bd01769-0fe4-4ac9-b2b7-e8a00a9f2121",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "44c661e1-e7c8-4e8e-9c25-560b6d8ca767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bc85da-e7b0-48b7-94b4-ebfc9ef29582",
        "cursor": {
          "ref": "1d37aed0-4977-4d2e-87fe-7f610d8616b4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bc723824-5d4b-4842-b048-0b6c89430f29"
        },
        "item": {
          "id": "65bc85da-e7b0-48b7-94b4-ebfc9ef29582",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d552e0a2-8bb7-4447-af63-b7108c79ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b4b64d-13d6-498e-9279-0bbc24a9b9b6",
        "cursor": {
          "ref": "1f38234b-5967-4c71-8ee4-f5bdadceaa82",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "70573a57-6d5d-4a83-846e-c633362c12c4"
        },
        "item": {
          "id": "60b4b64d-13d6-498e-9279-0bbc24a9b9b6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4ceb9031-cff1-4b67-bc2b-af139b370503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ff3659-b95e-4dc1-8123-1c71f5fe4633",
        "cursor": {
          "ref": "ac0f6733-f375-4f3b-9483-dbe0e3b98b9a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "accb4b3b-7aeb-494d-be36-e31cd2488bbc"
        },
        "item": {
          "id": "37ff3659-b95e-4dc1-8123-1c71f5fe4633",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d7fe87f4-bbb6-4cbf-9546-49d2cd6d424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92393f1e-63c8-4d3c-b8a5-edad4606d906",
        "cursor": {
          "ref": "d81b9a1e-d900-43e5-ae21-73bc950ddf81",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3cb082c5-bf71-430a-8658-311b33536d13"
        },
        "item": {
          "id": "92393f1e-63c8-4d3c-b8a5-edad4606d906",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "493d67ca-8238-4d4f-ae51-ef34577da216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec13c104-04e2-4de1-b1db-78c49c965e3e",
        "cursor": {
          "ref": "8aae7cd6-3f64-4648-8c0d-3716d4939912",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d953b838-5453-48f4-aa84-875854b0ab5a"
        },
        "item": {
          "id": "ec13c104-04e2-4de1-b1db-78c49c965e3e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d9332614-d1bd-4ce1-a16d-2e8d78734ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35321595-da52-4eb3-9f29-ecefd27872f6",
        "cursor": {
          "ref": "0a59149a-89af-423d-aa3f-01f8b0eface4",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "24e71f5c-8d0b-4692-b214-4fc63b281648"
        },
        "item": {
          "id": "35321595-da52-4eb3-9f29-ecefd27872f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6695ce4d-aa3c-4717-a878-988857824c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e279dcb-9ba4-49a2-818b-503731ffe006",
        "cursor": {
          "ref": "881e33f7-1da8-4d2f-9f8d-e4553b89f849",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f29970db-d2ae-467d-8b3c-f971df65b19a"
        },
        "item": {
          "id": "8e279dcb-9ba4-49a2-818b-503731ffe006",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2beda968-0734-478e-a215-627d2c8d3e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98abecc2-6908-4c8b-bfb4-c9de3d00d98f",
        "cursor": {
          "ref": "dbf7db74-77f0-43b2-84b6-fc63fd1a5ead",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "af29d331-b080-4cf0-8586-25fd1e2aa21b"
        },
        "item": {
          "id": "98abecc2-6908-4c8b-bfb4-c9de3d00d98f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ddefba03-7ae8-4f6b-91cf-2f336c21a2cd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 90,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "1d432733-44e1-4216-86c4-5fd90090a353",
        "cursor": {
          "ref": "34a382f8-f257-44e3-8d75-8c5e0a97f16d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "95a5492c-0b46-4ee2-9d74-355754ae2064"
        },
        "item": {
          "id": "1d432733-44e1-4216-86c4-5fd90090a353",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "519df639-01c9-4833-b1c3-e6b4c5bdf71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dcc32e-3c79-4e0b-8bb4-6e1155476cc1",
        "cursor": {
          "ref": "3d9f98bf-0bec-40b2-ae97-ca5336cc86d7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0ca74727-fd36-4957-b413-7520bf36d022"
        },
        "item": {
          "id": "72dcc32e-3c79-4e0b-8bb4-6e1155476cc1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8490d7f6-5620-4947-9e91-ab2259c73805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83549cbf-a4fe-47a4-bf80-91cc6f1ba50c",
        "cursor": {
          "ref": "9366d692-e6fd-48b3-bdd9-756eeb26b47a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fe9a33a9-858f-42a5-947c-f6db545085c6"
        },
        "item": {
          "id": "83549cbf-a4fe-47a4-bf80-91cc6f1ba50c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3307cdeb-6dc2-4977-8dc9-dd1be76c160c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f2bd55-740e-4d43-8d7d-7ba05570808c",
        "cursor": {
          "ref": "b70b2c99-07d1-494b-a291-2031e158f663",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "876d6966-f9aa-46a5-93ae-637aae765e56"
        },
        "item": {
          "id": "01f2bd55-740e-4d43-8d7d-7ba05570808c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "93c9eb63-b010-4b9c-8abf-b719075698d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ad893d-4867-4bc7-a2fa-1535b66dda8e",
        "cursor": {
          "ref": "cc6ebbb8-24b7-4e0b-a9da-0535e6c80012",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1d10f296-2253-418f-b690-933807a4ea21"
        },
        "item": {
          "id": "01ad893d-4867-4bc7-a2fa-1535b66dda8e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e5bae5f5-d778-4f8f-a4c3-59090f1ced9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab9532d-f498-4500-a24e-83a6a090b25c",
        "cursor": {
          "ref": "01767116-1d72-4987-a1ba-279d50a9586f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8c99c094-769c-480d-8109-bb58ca79aa78"
        },
        "item": {
          "id": "5ab9532d-f498-4500-a24e-83a6a090b25c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "370bef50-1bb6-4862-9106-9168b0481e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85fbb85-97e0-44d8-94a0-0a6f0365437e",
        "cursor": {
          "ref": "15fc16d6-b00f-4210-bcdc-6da16cc6592e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9d901630-4d30-4822-b691-56e245a281cf"
        },
        "item": {
          "id": "b85fbb85-97e0-44d8-94a0-0a6f0365437e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cd08dc58-f7f1-47ba-9ab4-2536744cf043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f8fada-ce9d-43f4-8c0c-149047f635ad",
        "cursor": {
          "ref": "35fd3ed4-9711-4d97-ae64-90851b726b64",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6df44688-68d8-4376-b434-be019a5842bd"
        },
        "item": {
          "id": "98f8fada-ce9d-43f4-8c0c-149047f635ad",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27acb6b5-7eeb-4fb7-b39b-50b4df470986",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "bcea4876-4883-4746-a1b8-236d7f319447",
        "cursor": {
          "ref": "82052cf0-2dfa-427e-8f55-1e0dc0aa19ba",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "355452a0-ffe8-42ce-add3-40aac4fa80da"
        },
        "item": {
          "id": "bcea4876-4883-4746-a1b8-236d7f319447",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "494e6a8d-1c24-4da1-a423-e1899f9e02ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe8941a-22b2-4935-893e-cf3b488eb131",
        "cursor": {
          "ref": "6d45b206-4ed1-432a-86e7-b3d0e3b56fa0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1206deb9-4429-437b-9cf2-30df66eebb4d"
        },
        "item": {
          "id": "5fe8941a-22b2-4935-893e-cf3b488eb131",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d38ced45-38a0-47af-9ddc-6569b5cf7f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b8ce6d-84f7-40ed-9cf5-f850cdc7faa7",
        "cursor": {
          "ref": "0c7d6412-3eae-4f53-b31c-2c90fb52a878",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c24e24fc-9892-48ae-bb3f-d91536ba1d50"
        },
        "item": {
          "id": "98b8ce6d-84f7-40ed-9cf5-f850cdc7faa7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d6e425c4-9755-472f-b526-b4ec8ab52565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dd7dbb-e1b2-42d2-b151-4a87f9a59cf0",
        "cursor": {
          "ref": "f9d35e1f-b5be-4e4d-aaf5-4b135ff9757d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d6ddeefa-c680-402e-ab8f-f44346bbaf96"
        },
        "item": {
          "id": "70dd7dbb-e1b2-42d2-b151-4a87f9a59cf0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d0fc0ab0-fb6d-44e2-bc5d-ed1d09e3085b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2d1082-7da2-4899-9470-1a3cb865fd7b",
        "cursor": {
          "ref": "29939ba7-0070-4945-a1d9-4c3d2d73e2db",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d4b36daa-6f82-44f0-bd2c-033b8a813c74"
        },
        "item": {
          "id": "8e2d1082-7da2-4899-9470-1a3cb865fd7b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fc507b77-abb0-4fd0-b5cd-6110043b46a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27513fac-004c-496a-9bb3-4aa13072b1a4",
        "cursor": {
          "ref": "e463d100-5c2f-453f-b12f-5d3b388e6aff",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "008dd55b-ea74-43d8-a8a2-c87c01dfb07b"
        },
        "item": {
          "id": "27513fac-004c-496a-9bb3-4aa13072b1a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3bbda1c4-1d44-49e4-901d-4ddc6d49b3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c58c213-df1a-4964-8cd3-f2a288013702",
        "cursor": {
          "ref": "68023c63-711a-450b-8d57-b1d3605bea9e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6a9c21bb-eec9-4fc8-9967-41161f5198e4"
        },
        "item": {
          "id": "3c58c213-df1a-4964-8cd3-f2a288013702",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4d7c1762-9ec2-4dce-8899-b2a08886b304",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "49cb4630-954e-4642-928e-e194dd2d0906",
        "cursor": {
          "ref": "354421a0-fe61-406b-a6b7-f1953119d86e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "924bc7c2-0d5a-4738-8450-ccb20e46de0c"
        },
        "item": {
          "id": "49cb4630-954e-4642-928e-e194dd2d0906",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56f36a8a-7655-4762-ab55-b59849ab9124",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "4ac96e28-59e5-49ae-b222-0708c222a584",
        "cursor": {
          "ref": "cf2a8812-4767-46cd-bee5-28876ef8f7ed",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ce2ccb47-7d03-4556-a8cd-ee351b6a3b2d"
        },
        "item": {
          "id": "4ac96e28-59e5-49ae-b222-0708c222a584",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b28dbab2-513f-4644-9f3c-ae78dbef6587",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "7bd6d8ac-66a8-4d16-8de7-2e6d0be465d3",
        "cursor": {
          "ref": "dbe1339a-bc7a-48a2-9271-9561e76ac77a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0c786cc8-280b-4e7e-bc80-2bee6b0695b7"
        },
        "item": {
          "id": "7bd6d8ac-66a8-4d16-8de7-2e6d0be465d3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "16d2ffcd-e7d3-4b2a-a7a4-7a5a90a68c05",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "c0fc6d9e-267b-49f1-84e8-25c39298f70b",
        "cursor": {
          "ref": "ac4d3d04-57a7-4d82-a954-3a83a460682d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4866c00b-1178-4432-96a3-0f3d4f34dcb2"
        },
        "item": {
          "id": "c0fc6d9e-267b-49f1-84e8-25c39298f70b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f528e5c2-b6dc-46d2-987e-670b436469df",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "227e97e8-0231-4014-866e-e594764b3e4f",
        "cursor": {
          "ref": "9377517c-0ca1-4b74-b11d-b56157438a7d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "531f19fb-969f-4e65-9ce2-2d78d90015ec"
        },
        "item": {
          "id": "227e97e8-0231-4014-866e-e594764b3e4f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "403facd9-b1cd-4664-8eb6-a427eb3742bd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "d94e8368-d510-4554-98f1-b976010c15a6",
        "cursor": {
          "ref": "9a894164-d7bd-45a7-b04f-4462ff388c6b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3c965b24-c8e6-41b6-a137-e50e08d54799"
        },
        "item": {
          "id": "d94e8368-d510-4554-98f1-b976010c15a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7277be76-2ab9-4349-bfd4-da067bd22826",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15923ff2-abfc-4844-ad96-3d9c5fabb913",
        "cursor": {
          "ref": "4135a919-548e-4ac4-bea9-aaef4e133a61",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7720215d-c294-43bc-961f-4693f8b5a3e9"
        },
        "item": {
          "id": "15923ff2-abfc-4844-ad96-3d9c5fabb913",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cd4bcf54-6553-4cfb-845c-9150a729d8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b9c8d8-7544-404d-a7db-16903f827873",
        "cursor": {
          "ref": "e4814a9d-a186-4013-a2eb-6679eebdd69b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0bd3aa5e-c443-4a86-8e84-a932d9a6febc"
        },
        "item": {
          "id": "a6b9c8d8-7544-404d-a7db-16903f827873",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f8f2732c-2f6c-4106-9cf2-8ffd315acb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605b19c0-d65a-4831-b29f-2c141eafbdca",
        "cursor": {
          "ref": "8867f273-794b-4886-b007-7c5425f57688",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "31568de6-eb48-4c42-9b25-79bee44478e3"
        },
        "item": {
          "id": "605b19c0-d65a-4831-b29f-2c141eafbdca",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1937616d-84be-4337-8ac7-0f55c881d9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9523ad7-b17f-4130-bd0b-0c495ef3b0bc",
        "cursor": {
          "ref": "134bf2f2-c111-409b-ad19-310f8efde147",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "44780f15-ce13-4a8e-b2a2-cc4a1b04d7e2"
        },
        "item": {
          "id": "b9523ad7-b17f-4130-bd0b-0c495ef3b0bc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "86d26c8e-c458-4e8f-a659-857c5306bf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7de36b-dad0-42aa-aac2-a704347e2dec",
        "cursor": {
          "ref": "1a27bf88-b806-44cd-84e7-6a9880e64f3a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fa288258-fa4c-4112-b649-212bbfe184ed"
        },
        "item": {
          "id": "2c7de36b-dad0-42aa-aac2-a704347e2dec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b120d809-2d7c-41c5-8489-2530f0bd805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2afa6b-9d00-42b5-af3c-f83f96be9b67",
        "cursor": {
          "ref": "b9eaf732-0f0f-4364-9021-d1b3d4d96a8e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8061c730-def3-46d9-95a2-7870ffe49397"
        },
        "item": {
          "id": "2b2afa6b-9d00-42b5-af3c-f83f96be9b67",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6f1be795-5db2-4e71-8556-03a8d5af2e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365c6fcb-1f76-443e-aa68-2e9d899b8c0b",
        "cursor": {
          "ref": "0986d1ba-15ed-4859-b2f1-83635e49a1c7",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ad463042-6262-428f-82ff-af4460007748"
        },
        "item": {
          "id": "365c6fcb-1f76-443e-aa68-2e9d899b8c0b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7962c77b-bb41-4610-bfa1-12a4a97e06bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93ba401-3f32-4301-a481-4c709c03347f",
        "cursor": {
          "ref": "27a8f57f-eaa3-4494-8368-60725ad7db3d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8afed8aa-ec49-4fa9-bca9-91d2e1345d20"
        },
        "item": {
          "id": "c93ba401-3f32-4301-a481-4c709c03347f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f5c50edc-5228-4e34-ba09-e68923070c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef270316-d133-4a51-92dc-1ef4bcbbfc22",
        "cursor": {
          "ref": "2f4b5538-2c94-42d6-ac76-afdc49605d95",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fdd3cd18-116a-4bdf-9caf-560a401ecd7c"
        },
        "item": {
          "id": "ef270316-d133-4a51-92dc-1ef4bcbbfc22",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d9c7ab83-d947-49e9-8800-378dfaea18ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c91143-0563-451a-ad52-127eaeee0d0e",
        "cursor": {
          "ref": "b9445b8b-dcac-45c1-b1c5-d3e27196da36",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "04d23250-c3e2-4ff4-a708-7b42308080bc"
        },
        "item": {
          "id": "08c91143-0563-451a-ad52-127eaeee0d0e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d3409351-f88b-47b4-9fe2-f90ddaabf2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b48cc0d-e1c3-45d4-b228-e38f019f09d8",
        "cursor": {
          "ref": "66eea40d-f177-412f-add7-a27685dcc33e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fa1e6f68-adf5-4508-b784-87114a6b6bc0"
        },
        "item": {
          "id": "1b48cc0d-e1c3-45d4-b228-e38f019f09d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8fb8aac8-27e3-445c-88f1-bdd4caaaff52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b823ca8f-4f84-4b83-967f-78d3ca870a0f",
        "cursor": {
          "ref": "d25772b3-29cc-46ee-a349-c657792088ac",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6a6f2e84-fb6e-452a-ab9a-96971948ecf7"
        },
        "item": {
          "id": "b823ca8f-4f84-4b83-967f-78d3ca870a0f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3956b337-8e10-4ccd-9a17-a3748e411747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f19d479-bf19-47da-87cf-0b870bdf1745",
        "cursor": {
          "ref": "fd685fbe-c3c2-4ab9-a6db-c572f437e27e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bd9646b0-534e-45ff-95e1-3218a595184f"
        },
        "item": {
          "id": "2f19d479-bf19-47da-87cf-0b870bdf1745",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b57a55be-b755-4a70-8b0a-ae7c620c0121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b8a897-1570-42c8-859c-5416fcf9cd39",
        "cursor": {
          "ref": "75c52381-c470-46ac-bf8f-777b10850432",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "610758fe-ae00-4b92-b57e-cd3191694510"
        },
        "item": {
          "id": "03b8a897-1570-42c8-859c-5416fcf9cd39",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "00b99b79-45a1-4aa3-b486-ed2117fc6d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606fb5ac-db5e-40f6-8c4e-f7c7ed3cc7f2",
        "cursor": {
          "ref": "26daa0bf-e97e-4f10-8ea6-1a81ad2a6abe",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2adbcbe2-339a-4825-ac7b-23918ed3073e"
        },
        "item": {
          "id": "606fb5ac-db5e-40f6-8c4e-f7c7ed3cc7f2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "489e7da5-75c6-4ad6-9694-d43f492a0d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86781d53-114d-4656-8d08-529dc9dfd0de",
        "cursor": {
          "ref": "fe040284-d3eb-426d-9c61-f9b40142a6c0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f8287a64-3781-4109-9d85-bd24db3e0463"
        },
        "item": {
          "id": "86781d53-114d-4656-8d08-529dc9dfd0de",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1efef50a-b934-4172-b506-19aef746ba62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e396ba-2317-4ef9-a4b3-27118ca26353",
        "cursor": {
          "ref": "f0263172-5135-4651-a8bb-32c155e8f1e3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e275a82d-d9ef-478b-919d-a0cdd92f59e9"
        },
        "item": {
          "id": "19e396ba-2317-4ef9-a4b3-27118ca26353",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e3b0fd58-22d5-4d29-847e-e8aa37fb6c1e",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "7b0120fc-907f-4a7f-bc0b-f1c6fb5714e3",
        "cursor": {
          "ref": "1f7ecee8-a201-4cfc-a18e-48d55cb09def",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c12de1e4-b007-419b-86d0-26cd262b3471"
        },
        "item": {
          "id": "7b0120fc-907f-4a7f-bc0b-f1c6fb5714e3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b5f12288-f927-428d-a5e0-06ca39a5f12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc43f950-2969-4985-a3e6-7ee91878b4a0",
        "cursor": {
          "ref": "b3092956-91ef-4529-9efc-29720e85803c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "326e1702-5835-4e06-bd7d-3d6598d18c31"
        },
        "item": {
          "id": "dc43f950-2969-4985-a3e6-7ee91878b4a0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bfc08b80-c365-4c50-8227-4601ccd3005d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7e961b-0e96-478d-b458-41b9c97a71c4",
        "cursor": {
          "ref": "1e601a52-7120-4e20-92a3-a2086074fb3c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "714b6f4b-f847-4c69-84e5-5ca9609c8a10"
        },
        "item": {
          "id": "0f7e961b-0e96-478d-b458-41b9c97a71c4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "beea1a79-eb57-4c7c-89b9-1e5546e8c420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa83c710-0645-4ac1-942d-f53e453c28ab",
        "cursor": {
          "ref": "6f3493cd-15ed-4a8a-aba8-6ee6ac4c370c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "60567cf9-ab19-4437-a6d5-3b6cb451950d"
        },
        "item": {
          "id": "fa83c710-0645-4ac1-942d-f53e453c28ab",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b45ef641-2025-40c8-80a3-2359e5751f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94eec7b-b349-48db-9ba1-fa2ed9b4d142",
        "cursor": {
          "ref": "e6476eaf-0e79-4123-98e7-699d5d17c2ad",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5454a317-9671-40a6-8bb2-effeb6b7415f"
        },
        "item": {
          "id": "f94eec7b-b349-48db-9ba1-fa2ed9b4d142",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "68494e6b-68d7-4579-b653-01dec40c9bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b84ada-6483-4cb0-a0b4-b9a517d0b3f2",
        "cursor": {
          "ref": "d98bd8b8-4dad-4405-87d5-c3e5a7f30f7f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "23b1f30d-d4ec-4698-8924-6b52c682892d"
        },
        "item": {
          "id": "47b84ada-6483-4cb0-a0b4-b9a517d0b3f2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "416f2d5a-8869-4b66-b572-0d7c574bc182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97a9bd8-a2e7-454a-a74d-e979930b3989",
        "cursor": {
          "ref": "c19247ff-bf6f-4f5b-a6fb-95220b020f7e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a7570b4e-36e0-4c7e-ae1d-eac941b045dc"
        },
        "item": {
          "id": "c97a9bd8-a2e7-454a-a74d-e979930b3989",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f235b199-1d7c-4525-af8b-a654aa308110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d4c5ae-ec2b-440a-9569-16445f86cc9b",
        "cursor": {
          "ref": "9042a9eb-921f-4580-a213-858e65f2c949",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "98893a56-3386-45e9-b575-f36c88196d4a"
        },
        "item": {
          "id": "64d4c5ae-ec2b-440a-9569-16445f86cc9b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9542003d-3d34-4d88-a1d7-854522021cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7f87c5-3da4-4d43-8fcb-9ea763600a88",
        "cursor": {
          "ref": "bba08d10-3c90-48e5-99ef-824430807920",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2c07ffa1-c16d-48e2-9d21-f57e192656ea"
        },
        "item": {
          "id": "2b7f87c5-3da4-4d43-8fcb-9ea763600a88",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bae046c9-5ab7-43a5-b263-5e8e03a4b5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7070dc69-fb5b-423c-8171-87723298c015",
        "cursor": {
          "ref": "b36b7382-a125-4af0-a576-ba9a9df9a857",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cca80486-aeb6-46c7-bb2e-24db34a56a73"
        },
        "item": {
          "id": "7070dc69-fb5b-423c-8171-87723298c015",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5981a608-9176-4a5f-82c8-955f34d4e6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6624fe-6175-487d-8124-a3a4dcd2e5b2",
        "cursor": {
          "ref": "91fad804-9602-4ad1-95fc-5735d58877d0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e3fb331c-1f23-4758-8d18-8aa49a5c4365"
        },
        "item": {
          "id": "fb6624fe-6175-487d-8124-a3a4dcd2e5b2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c6ac9d48-b844-4b09-887b-c15f2c06596b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b401bf0-9851-44d8-9136-d38329b2f808",
        "cursor": {
          "ref": "7dbe9d9b-9ccf-4e3d-a16b-332d9e7d8e78",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8c022f10-04cc-4ac9-b0c0-bec97ca1df56"
        },
        "item": {
          "id": "2b401bf0-9851-44d8-9136-d38329b2f808",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "42899596-4970-4a75-bfb5-0ef0674db419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8543ab85-39d5-43ca-b1f6-16823eb678d1",
        "cursor": {
          "ref": "acf5f4f6-5527-4b17-999b-76c8ae648dc7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4b558a80-eda9-4bb4-924d-9e16305c53b4"
        },
        "item": {
          "id": "8543ab85-39d5-43ca-b1f6-16823eb678d1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fae3421d-77e4-44f8-ae86-941cfb855591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba32947-d19f-4b8a-b709-17955ed65533",
        "cursor": {
          "ref": "cb95509a-2c1b-4969-b515-292ba489617e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4a1c4656-b768-4f79-8a16-f2281d3ca794"
        },
        "item": {
          "id": "2ba32947-d19f-4b8a-b709-17955ed65533",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "73c36aee-9866-4e5f-8739-7bac6daa73a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d1b391-5937-4ff1-ad4f-bebb6474d01c",
        "cursor": {
          "ref": "33eadc94-234b-4810-bdb6-28bdec3a83a9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6aacf957-d0af-4e53-95fa-0a2fa469afc3"
        },
        "item": {
          "id": "79d1b391-5937-4ff1-ad4f-bebb6474d01c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8cdb88d5-1346-47e6-af77-326852a3cff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e19b8f-0aec-4a5a-a24b-ea1703766be3",
        "cursor": {
          "ref": "5eb4c72b-e333-459a-a2bf-3c91d754dc84",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bf4afabe-e8c8-46b1-9b27-2d390ed0aff6"
        },
        "item": {
          "id": "98e19b8f-0aec-4a5a-a24b-ea1703766be3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "db259d76-fce6-42e6-9d34-ece98398c4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53d7af7-9528-4845-beed-85f374481018",
        "cursor": {
          "ref": "10b233ea-2fdb-433a-983f-7bf38f3603ab",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1777c927-511a-40f7-a68e-5e97ff863df1"
        },
        "item": {
          "id": "b53d7af7-9528-4845-beed-85f374481018",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fd21a717-f16e-4e95-841e-c7fccaed5955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d93e03-f241-410e-873b-1e1ddbc6045c",
        "cursor": {
          "ref": "521184f5-1bb8-4f78-998f-4b7a7d26d640",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "91226c5e-5cc4-4f87-93ca-791cae6a4995"
        },
        "item": {
          "id": "18d93e03-f241-410e-873b-1e1ddbc6045c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f07fe0aa-608d-43ff-afed-cb6db28d5252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd7e74b-4a8f-4c9a-be80-748cddf0c17a",
        "cursor": {
          "ref": "a0b9546c-367e-44e8-922b-18504395ef66",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1c777dbc-e0cf-4bc3-8fd9-539e32b80bab"
        },
        "item": {
          "id": "dbd7e74b-4a8f-4c9a-be80-748cddf0c17a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ded034fb-8e7d-4451-bc08-4f29ce45df25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9eabd0-0b04-4dc3-80c7-789e8cf62034",
        "cursor": {
          "ref": "639cfeb0-1270-4f20-901c-c7e30ac990dd",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c4dc1fa9-38c8-4d67-856a-19d5b73d1288"
        },
        "item": {
          "id": "ae9eabd0-0b04-4dc3-80c7-789e8cf62034",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "809d6e11-d601-4093-94fa-79dfcaab9022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b92261-0916-4724-a874-e5f8473cd901",
        "cursor": {
          "ref": "f5ef2f33-c0fc-4804-bf16-22c40c3c565c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "111ba142-6164-4fdf-8548-9f64ca35f668"
        },
        "item": {
          "id": "75b92261-0916-4724-a874-e5f8473cd901",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c7165b5d-26f6-463a-a680-f79c86cfecee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8b1d4e-50e8-4ca4-a3ff-934ba2f0e303",
        "cursor": {
          "ref": "6849dd24-5408-4f9c-b20e-be7154db66af",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3571deb4-558b-4b2b-9572-bbbd016bffa0"
        },
        "item": {
          "id": "1b8b1d4e-50e8-4ca4-a3ff-934ba2f0e303",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c0cd05a4-4fed-4de5-9e1d-f3f055ad44ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbf4f48-1d0e-4b6f-8a1d-75819530f91d",
        "cursor": {
          "ref": "289f67df-5ed4-4959-849e-a78de219783c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "57d1ed9d-6d28-4d1e-86da-f9fc328c0393"
        },
        "item": {
          "id": "fbbf4f48-1d0e-4b6f-8a1d-75819530f91d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "54188533-54c0-4a24-ab0c-153e994c4833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76432a0e-bffc-4cc2-9f77-3c1346b06ab4",
        "cursor": {
          "ref": "038b1906-22dd-4d6f-a258-153799b8dfd6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c716b146-b6c2-42b6-adef-5cdf5c4ce982"
        },
        "item": {
          "id": "76432a0e-bffc-4cc2-9f77-3c1346b06ab4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b0845623-b30c-4da7-9c39-d570c9521ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d268b6a9-f437-4464-8799-1c8b105f39e5",
        "cursor": {
          "ref": "e18b2d8c-4634-4eba-b252-3f9def2c7238",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "41d3892e-f740-47a6-9f5c-70e2a65756e4"
        },
        "item": {
          "id": "d268b6a9-f437-4464-8799-1c8b105f39e5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e298e5ba-49e5-4fa9-9d3d-0566c4a9a788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3205b880-bba3-4932-b25a-664be1caa81f",
        "cursor": {
          "ref": "18b088b2-8308-4ef1-a606-7362818498c7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b956c53e-c6f1-4069-9771-14d2620b2e02"
        },
        "item": {
          "id": "3205b880-bba3-4932-b25a-664be1caa81f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3960bfd7-c242-4d7f-a51d-48f13d4f6937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a648fc87-bb52-4e68-92b5-dbeac86c5001",
        "cursor": {
          "ref": "d9e78e3c-2145-4206-ba68-6bc9317f85aa",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "190a26aa-f650-4121-95fb-5f4d657e00d9"
        },
        "item": {
          "id": "a648fc87-bb52-4e68-92b5-dbeac86c5001",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fad8f5cc-9d77-4751-a430-6bcf05d93495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e132d2-998b-476b-8674-f3e60c6d5630",
        "cursor": {
          "ref": "b7d585a3-7190-48d4-bf29-e98339aa3132",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ba6371cf-5dda-4758-a636-0b59f00ad2d8"
        },
        "item": {
          "id": "95e132d2-998b-476b-8674-f3e60c6d5630",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b9c62a99-fd35-45ca-a7dc-7559023819de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87abfd97-d495-4ab1-9649-276b5279d434",
        "cursor": {
          "ref": "d1a837f3-b1ac-4194-a7e6-0c407eafa3c7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c561f390-ef1c-47d6-9eda-049581af40d2"
        },
        "item": {
          "id": "87abfd97-d495-4ab1-9649-276b5279d434",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3e61bd94-583b-4d42-af6e-420d10fbf54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba33d29-2afd-4e0b-bed6-c984841df62e",
        "cursor": {
          "ref": "07ba4e1c-ad90-4939-989d-9f4a13cfba32",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5aeb69f1-513c-435e-a50c-2825a70fe673"
        },
        "item": {
          "id": "fba33d29-2afd-4e0b-bed6-c984841df62e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "026ee716-f5fc-485b-8d0d-6dc9eaee0cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8033c090-9e84-4811-9962-8168facc33d0",
        "cursor": {
          "ref": "89d18e93-2a9c-4f9e-b255-ae77cf40a350",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e318f13e-ea7a-4e22-90ed-e7d1920539de"
        },
        "item": {
          "id": "8033c090-9e84-4811-9962-8168facc33d0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6580d12a-322e-4876-8052-04fc188c1aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6513ed74-1899-4b21-8221-c957eb181fc7",
        "cursor": {
          "ref": "c7404f46-ee57-413a-8ed7-da9201984be0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9618094e-28e8-48d5-94ac-80219c16534b"
        },
        "item": {
          "id": "6513ed74-1899-4b21-8221-c957eb181fc7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fd73567f-d686-490c-8f0d-bf705c3fcfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb5b100-33f2-4ceb-9ada-9b9db5ada645",
        "cursor": {
          "ref": "b383502f-9b49-4174-a7b3-f9593d7cb938",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "67fd69e2-f9ad-4dcf-89c2-4c404976e379"
        },
        "item": {
          "id": "bfb5b100-33f2-4ceb-9ada-9b9db5ada645",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e6f590dc-24a7-46c9-9abf-c0262a4f7adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea19f0d6-5d3c-46d4-a98b-487db5bc74df",
        "cursor": {
          "ref": "ca6e1e1d-b055-44b5-b324-72dd1f305cc7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "423ab8c3-2648-4846-bd42-d620b7e8e2e8"
        },
        "item": {
          "id": "ea19f0d6-5d3c-46d4-a98b-487db5bc74df",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d66685ef-40ba-4bdf-b488-e0a3c75990ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73058d54-f5ba-43f5-b545-d4b75fa577fe",
        "cursor": {
          "ref": "e62bc74b-1ca6-424e-9dc7-2d4071894ce8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9831b8d0-c7f2-430f-81ce-d4b0fd7781ce"
        },
        "item": {
          "id": "73058d54-f5ba-43f5-b545-d4b75fa577fe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f6d6d7d8-4d3e-49fb-8c11-6cdcf7486d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4484c8-ada7-499f-8afa-e54cde3d5176",
        "cursor": {
          "ref": "91f7bd4c-3155-45f1-a21d-5329c0343b15",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "963c2e24-1eef-473f-a38a-8faf9f1dd461"
        },
        "item": {
          "id": "2e4484c8-ada7-499f-8afa-e54cde3d5176",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "94c566be-5d75-4599-ad44-7756d7eb8237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383e485f-cbbb-441d-8e25-127f6134b336",
        "cursor": {
          "ref": "dd80c0ff-645d-4259-b135-a834256e8152",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1e0178e8-2975-44de-9c43-f37e5bb9c96c"
        },
        "item": {
          "id": "383e485f-cbbb-441d-8e25-127f6134b336",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2e7e0125-b4dc-4e9f-b500-19c508d31e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329a62c9-3900-4bca-b22c-cb9194a30fd0",
        "cursor": {
          "ref": "21404df4-255b-4efe-bf38-1a09024a2a29",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d21719bf-847d-4403-8ad5-63a489fb73a5"
        },
        "item": {
          "id": "329a62c9-3900-4bca-b22c-cb9194a30fd0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a4bffcd8-a402-40bb-8f9a-4efece250f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a660445-0c0f-412d-9af3-11c1c168a24d",
        "cursor": {
          "ref": "3a1ad9a4-815f-47d2-a498-bf321baf656b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ce611557-c09c-4230-aaa1-18e905c25bdb"
        },
        "item": {
          "id": "4a660445-0c0f-412d-9af3-11c1c168a24d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ad76844d-c74f-42e5-a15a-7064fba9f691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e0cbf5-781f-4bd1-b32f-75ba31971610",
        "cursor": {
          "ref": "d1bdd993-fec3-4184-b36e-3f6193a684e6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bd264fb1-deb6-4b7b-ab58-ddcdce2ea71f"
        },
        "item": {
          "id": "10e0cbf5-781f-4bd1-b32f-75ba31971610",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6e3989bb-7781-42c6-bce4-c96581145abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d387c822-eaeb-4158-a91c-b4bb99f7d3ff",
        "cursor": {
          "ref": "09fba344-97d7-4624-a708-082e6a823582",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c20afae5-a128-43ea-91d4-b1553d156fae"
        },
        "item": {
          "id": "d387c822-eaeb-4158-a91c-b4bb99f7d3ff",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bbf8c27f-07cd-4b0e-a44b-54e47acf09f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6890e656-b918-406b-8eb2-1767d0514025",
        "cursor": {
          "ref": "9f34fa16-7fc1-4a59-b766-5c40081e96e2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "15f34e35-005d-4f2e-911c-bc2c30954ef8"
        },
        "item": {
          "id": "6890e656-b918-406b-8eb2-1767d0514025",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d5484540-0160-43f3-ab5d-b7ec18816664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913292b4-8a50-4d34-ae8e-5afe6c67014d",
        "cursor": {
          "ref": "dc0a0b05-6094-4aef-a99b-142279ef849a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7f6ecd11-29b6-4a5a-b4d5-c7d10d7a9fd4"
        },
        "item": {
          "id": "913292b4-8a50-4d34-ae8e-5afe6c67014d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "41bbf43d-d1c3-4fde-94d2-266662d8dcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506f5219-12a6-46a6-84a9-3c22be0973dd",
        "cursor": {
          "ref": "95859c42-9a8a-4cf7-bc63-847d0c2107bc",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5778942b-6a6d-4b77-9599-5c2da04caae1"
        },
        "item": {
          "id": "506f5219-12a6-46a6-84a9-3c22be0973dd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8e296f0e-47e4-4986-a840-39baef25397e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980fc314-14b3-494f-a15e-2f4e0b0df48d",
        "cursor": {
          "ref": "1e619e9c-7f5c-4ca3-862a-123ca6cd5117",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ccaaacf9-e4ea-4cc5-a24e-356c0485f24f"
        },
        "item": {
          "id": "980fc314-14b3-494f-a15e-2f4e0b0df48d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "79c81ea5-ed33-4e22-a494-bef6f2837a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d1c74b-eff0-4e49-bb36-6a5c377fc3d2",
        "cursor": {
          "ref": "81d1a3fa-18b2-4e64-8542-9d83bd6dc6f0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3a60f3e1-cf0c-4cb5-9655-a4c81cbaeb41"
        },
        "item": {
          "id": "88d1c74b-eff0-4e49-bb36-6a5c377fc3d2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4046b6a5-12fc-496c-b31c-361cf63aec72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51422c82-fbf6-438b-bc3e-86fe57d06a4b",
        "cursor": {
          "ref": "3d05b51b-53c2-41fd-80ee-2f6b146efc10",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "acb0871f-9e12-403d-9fba-c17ebe1bddcd"
        },
        "item": {
          "id": "51422c82-fbf6-438b-bc3e-86fe57d06a4b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2d41f06b-48cd-48ae-a62e-fc98854d1d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba3d2fa-e93e-4769-aafb-e066b494448b",
        "cursor": {
          "ref": "469e52ae-f305-444e-adb5-c520fc6e6c8b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "54f86ad7-0a30-4458-8c3a-e29fbf06faf8"
        },
        "item": {
          "id": "1ba3d2fa-e93e-4769-aafb-e066b494448b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bc5bf3c6-9e0e-49e3-9b3c-c8270ff6e68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc747c8-fef5-4545-9f0f-dc98aaf76871",
        "cursor": {
          "ref": "9a89bd8b-ff1e-4492-b588-b5d3d92b7a82",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "34020152-3dd1-4767-99d8-fed4b096cb9a"
        },
        "item": {
          "id": "dfc747c8-fef5-4545-9f0f-dc98aaf76871",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9c43c445-9e4b-449d-b484-707afc55f0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb9ffb0-248c-4689-a0ea-f3f30f302288",
        "cursor": {
          "ref": "86d8206f-c2e3-4a4d-a088-ca5360e5386b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f37ae6ad-a3a7-4517-89b0-d49b59c8ebb7"
        },
        "item": {
          "id": "8cb9ffb0-248c-4689-a0ea-f3f30f302288",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "86e6435b-5155-4739-aa45-d4dbf3875a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f7afa2-98b7-4d8a-9d7a-6f34d5984891",
        "cursor": {
          "ref": "37428b12-da11-4748-b566-8902ee467c56",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "688b25de-d2fa-4d9f-b460-7c088667d9d9"
        },
        "item": {
          "id": "f6f7afa2-98b7-4d8a-9d7a-6f34d5984891",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "17558546-bc1e-4cd5-9016-7c359d80e27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce85489-7b04-4962-9b5a-531a7365d965",
        "cursor": {
          "ref": "86c2e141-7d89-47cc-92bb-4d791b33eea1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "985b32c8-154b-4749-b415-12ba9a9a08d2"
        },
        "item": {
          "id": "5ce85489-7b04-4962-9b5a-531a7365d965",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cc3ae878-c389-47eb-baf2-446cc45a3af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b183da-c005-4fe6-a14d-7320ae6364dd",
        "cursor": {
          "ref": "dd353589-12c5-4a95-bb4d-b096b703aad0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5a6b76b2-6523-4ee1-9551-f4841970eb6a"
        },
        "item": {
          "id": "33b183da-c005-4fe6-a14d-7320ae6364dd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6e7785a7-2ce5-4b2e-9322-617fdfed67e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9be3b0-426e-465e-8412-3f7bb2710d6e",
        "cursor": {
          "ref": "731f412b-df63-4442-aa09-2c6cf806445a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8e97718a-aaa3-43c6-8d17-1735db92d2d4"
        },
        "item": {
          "id": "fc9be3b0-426e-465e-8412-3f7bb2710d6e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a9b43413-0c37-4300-843e-cd67193cbfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbdf7c6-b987-4daf-ba87-5349a5466c84",
        "cursor": {
          "ref": "c5f1784f-8e7d-4e58-a5d5-0910031d15f1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2a7a8057-65cc-4617-8d0b-0b43732765b9"
        },
        "item": {
          "id": "bbbdf7c6-b987-4daf-ba87-5349a5466c84",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "75b0b564-2415-4b77-b65f-9955d16e3e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852b8bac-640f-4cce-8ca1-c30e90ca381a",
        "cursor": {
          "ref": "a3110301-0893-4c92-9919-72d49ce4c788",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c14bad51-b29b-4cd1-a585-9a8c5b39d5d5"
        },
        "item": {
          "id": "852b8bac-640f-4cce-8ca1-c30e90ca381a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7e189be0-29f0-4397-a30e-b0fdd21195e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a276c6f7-0720-4650-a0f0-7c5c07c73c01",
        "cursor": {
          "ref": "3de51188-676c-43f6-9975-30d0ee507959",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "637467f6-f372-4074-96a6-8b34dcbcdbd7"
        },
        "item": {
          "id": "a276c6f7-0720-4650-a0f0-7c5c07c73c01",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f1379054-b57b-4114-ad66-bff377c2e4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6be35d-8d0f-40c0-b060-cddbf534b71c",
        "cursor": {
          "ref": "b3a32aad-10f2-4063-8370-5a58e27398e2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "daa19441-16e2-46d5-84bb-9c08c4942320"
        },
        "item": {
          "id": "fa6be35d-8d0f-40c0-b060-cddbf534b71c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b64a3558-7267-4bd5-a992-815bece9b02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11505336-a0b3-49b7-8b38-b67a47685730",
        "cursor": {
          "ref": "69cc5479-853f-4510-bf3b-0b672ffe62e9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "89af3327-c649-46d6-bd05-8fef2d8f0c34"
        },
        "item": {
          "id": "11505336-a0b3-49b7-8b38-b67a47685730",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3e4e0738-dd93-4922-9af6-945dc616477f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561cbed9-a433-40a1-a056-0f0c74ac1f71",
        "cursor": {
          "ref": "c6e25327-b0b0-41c5-9acf-097530c0e52b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "90ff9182-e379-43a1-a216-41dca0b71010"
        },
        "item": {
          "id": "561cbed9-a433-40a1-a056-0f0c74ac1f71",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "82a90445-2fca-44bd-83ce-5bf4a8babc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc82c26c-aa2f-44d4-bcdd-42cedc25dd79",
        "cursor": {
          "ref": "ab086b3a-0b8e-4aa6-8cf2-e15daf1665ac",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "52976a37-686e-4f31-8288-6ee5ca9467f0"
        },
        "item": {
          "id": "dc82c26c-aa2f-44d4-bcdd-42cedc25dd79",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d59e5d2a-c1a5-4b70-bc1e-d6f22c456869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e370bc39-809c-461d-b066-a66f55216b7c",
        "cursor": {
          "ref": "cf0512c5-2054-483d-9ba7-5b787238604b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e221e9a2-fc10-4b17-9b9d-978e135c3cfa"
        },
        "item": {
          "id": "e370bc39-809c-461d-b066-a66f55216b7c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d1728498-6091-4c90-beb5-fa940cc23c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195611e5-ebdc-4a39-a25e-5564ad7d3cdb",
        "cursor": {
          "ref": "c4fff25c-686e-422f-82f7-4cd3705e208a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "99096a6c-b2bc-4192-a388-c7d1660ddaf2"
        },
        "item": {
          "id": "195611e5-ebdc-4a39-a25e-5564ad7d3cdb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "651e6a0a-ccee-4cc8-bb0c-ed8a2d1b7cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210481b2-a504-4926-8933-15a695fb9479",
        "cursor": {
          "ref": "632b7783-ae73-4cd4-a38b-f5896167e200",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "09f12a95-0156-4772-8b6c-dab9ab07d055"
        },
        "item": {
          "id": "210481b2-a504-4926-8933-15a695fb9479",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "18798450-d775-4fd7-87d2-ba3efdfe5b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0bb792-fda0-4dcb-a4ec-8cc396cd9c3e",
        "cursor": {
          "ref": "d3336587-5939-4e45-b007-24004b521cfa",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "05ab4c54-ca45-4915-a14d-6a2a8f890459"
        },
        "item": {
          "id": "2c0bb792-fda0-4dcb-a4ec-8cc396cd9c3e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9cd6d89a-a899-4b1b-9aab-f5f9e07209f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5263c3a6-0c80-421e-9e11-35e2cfb40c4f",
        "cursor": {
          "ref": "0a4f2c1f-931c-4909-b450-78d5d60a84da",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7228a4d9-d667-4df7-8324-761dfcd3de11"
        },
        "item": {
          "id": "5263c3a6-0c80-421e-9e11-35e2cfb40c4f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ffe830ff-13be-4149-9067-bee7ac4aa663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2290d3e2-15ff-4e15-b607-b6f627d03fee",
        "cursor": {
          "ref": "3b9bd09a-2d09-40ad-a69f-bcccc5dcc66b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b8b45650-7172-4e4d-b531-6b15d0cff672"
        },
        "item": {
          "id": "2290d3e2-15ff-4e15-b607-b6f627d03fee",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c9d25d69-3fa1-4287-9124-42c523ce19f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ccc8c7-2289-461e-8945-351a1e23d72c",
        "cursor": {
          "ref": "2a0d0797-84b9-446e-9490-a5e4b256c11c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "be47d0da-1e43-4168-8c92-e8a2b7d9e1e7"
        },
        "item": {
          "id": "c4ccc8c7-2289-461e-8945-351a1e23d72c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "37e0276e-e492-4f5e-b8d1-6d3bca9296d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc77287-e0a2-49e4-ba3b-1a94e2321e80",
        "cursor": {
          "ref": "c002a68e-7483-40aa-8c2b-27ad3dad448d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ab5abb04-6500-4cba-bf60-3de93c310563"
        },
        "item": {
          "id": "bfc77287-e0a2-49e4-ba3b-1a94e2321e80",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "76c29373-566a-4ade-88ca-10d3d74dd713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b440644f-f2e6-4752-8fb3-a843d429ecfa",
        "cursor": {
          "ref": "3187888a-6cf4-4882-9aaf-b7246fe4c376",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e956e3bb-2dfc-45eb-a81b-8de28f748d25"
        },
        "item": {
          "id": "b440644f-f2e6-4752-8fb3-a843d429ecfa",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a6d12d84-d49a-419a-a678-ed079a8f8a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d591de-828a-4b14-916e-98a8bdebb862",
        "cursor": {
          "ref": "3f95e030-76e3-4ca5-a12e-268da288b564",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7aca75a0-0a57-42cc-8d21-46bc31588186"
        },
        "item": {
          "id": "c9d591de-828a-4b14-916e-98a8bdebb862",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "af3ce2a8-282a-4675-822a-684b73789b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36703965-fede-4295-aab7-e7902803aec1",
        "cursor": {
          "ref": "19ac860e-0552-4af6-89f8-e212f693224a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cd0021aa-a1a1-41f7-952b-98f7ea5dcb8b"
        },
        "item": {
          "id": "36703965-fede-4295-aab7-e7902803aec1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1f63ce5b-620e-4ae2-8862-3d4052e5ac0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f331bb14-5c81-450d-850a-fc617c6c1875",
        "cursor": {
          "ref": "134006b6-a71b-4763-95c6-e3f8ffffcf7b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1207c848-0a96-45a1-9627-20f8b0c0d220"
        },
        "item": {
          "id": "f331bb14-5c81-450d-850a-fc617c6c1875",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4bb5beb2-abdb-44ea-882e-a68904dda560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa28292-38d7-4e41-b056-591db869e979",
        "cursor": {
          "ref": "55acb422-d0ec-40e6-b535-758a9edd0f12",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "58a7e507-32a7-40d1-ab2f-2230fa8b4b1d"
        },
        "item": {
          "id": "faa28292-38d7-4e41-b056-591db869e979",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "950189c5-0196-4f61-b8eb-5bb2dae2e39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65d9db4-21eb-4897-bf3b-7f60c8299653",
        "cursor": {
          "ref": "7f2c4297-8226-4a67-8cb8-505bdf75f5d1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "139fd6b0-c7e5-4907-b4eb-418c8b4cfcb4"
        },
        "item": {
          "id": "b65d9db4-21eb-4897-bf3b-7f60c8299653",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8e774fd2-5a19-4381-a5aa-3eeb99e9c94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f357f2cf-c77b-4aa2-a3a0-def5a9628d4b",
        "cursor": {
          "ref": "14699c7e-29cd-4d71-ad12-9a9d52091db7",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "cb56b905-1e87-43db-9c44-d758736c98f1"
        },
        "item": {
          "id": "f357f2cf-c77b-4aa2-a3a0-def5a9628d4b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c36750be-0fbb-4747-929f-106fec3630bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ebf7d6-29ae-420b-8857-e314f5ae79e3",
        "cursor": {
          "ref": "f4b5131e-e654-4337-befd-a41634a3fe13",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ae103cd2-f678-43e2-9844-e199ccbee88f"
        },
        "item": {
          "id": "a5ebf7d6-29ae-420b-8857-e314f5ae79e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "117246a5-9875-4cdc-b121-dfa2682f1473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52f5cf7-9d65-4c5b-bb82-766b2daeb5b1",
        "cursor": {
          "ref": "4ca3a7a5-0491-430c-bbab-88bfb2f734ff",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b1b351d0-4c15-468a-8e52-9eadebfe58d4"
        },
        "item": {
          "id": "d52f5cf7-9d65-4c5b-bb82-766b2daeb5b1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fc121e14-a2eb-4f90-80de-9dc8a9c3c682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9ec0c0-5ecd-4def-af18-60e65109af70",
        "cursor": {
          "ref": "e743f60e-0532-4f42-8e0d-a5d7939c367b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b9b714da-a4b2-45b6-8980-e85b52f25bb0"
        },
        "item": {
          "id": "5a9ec0c0-5ecd-4def-af18-60e65109af70",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "56be9183-d511-42fa-ab35-810fd30a28fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bebb511-cd2c-4f9b-8570-bbfe3eca77b5",
        "cursor": {
          "ref": "8307d8da-8af5-49cd-bc19-87d3975376a9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fceeab05-a97b-453b-aa6e-c9f061bcafe9"
        },
        "item": {
          "id": "9bebb511-cd2c-4f9b-8570-bbfe3eca77b5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5a91ee4e-5cb3-4812-8bc8-5edabf88a6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896eb3f1-dbde-498f-ae16-aa28ebe9b25f",
        "cursor": {
          "ref": "5e0e3c4a-380a-4aaa-9cd8-98ad4be67b97",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "aeee93bf-5016-43e7-b7a4-08a9a5c29d14"
        },
        "item": {
          "id": "896eb3f1-dbde-498f-ae16-aa28ebe9b25f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7d86c2d2-f777-496b-bd58-ea21daddd2c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500f4b81-0485-4204-b01f-5e5920d515d5",
        "cursor": {
          "ref": "e4fedb17-b076-4e94-9cd1-e63958e90578",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b355afe5-0763-4bfb-a06a-43fcf7a2c624"
        },
        "item": {
          "id": "500f4b81-0485-4204-b01f-5e5920d515d5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "62b87f0f-8ed5-425b-991e-eed4e21585f5",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b4c6af-f18f-482d-8b29-0124b2eed10a",
        "cursor": {
          "ref": "7bc42e5d-5a24-44c6-aca0-c8bd0ecbdb8b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "851cac97-1a98-4153-ae28-c45a745fe8c2"
        },
        "item": {
          "id": "d3b4c6af-f18f-482d-8b29-0124b2eed10a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f595eaa0-c509-4f7f-9dad-e375f7630b1e",
          "status": "OK",
          "code": 200,
          "responseTime": 3359,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d315f87-2897-4c58-bd34-058cbb18011c",
        "cursor": {
          "ref": "1c053d07-a9c4-464c-94f7-711fb19f5055",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7399a887-cf84-4a16-a2f3-4365b9ca2b0a"
        },
        "item": {
          "id": "3d315f87-2897-4c58-bd34-058cbb18011c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bf2e4bf0-8d86-4db6-b127-52e0859103f1",
          "status": "OK",
          "code": 200,
          "responseTime": 2112,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca70e3ba-a186-4276-bae7-7ffdcd88329c",
        "cursor": {
          "ref": "0aa495a5-8ce1-4e02-a99d-36394479b721",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5bf9169a-02ff-4ff9-ad95-4e004ca2402a"
        },
        "item": {
          "id": "ca70e3ba-a186-4276-bae7-7ffdcd88329c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b73dee6b-f704-42e8-842c-87f3394d6d68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca70e3ba-a186-4276-bae7-7ffdcd88329c",
        "cursor": {
          "ref": "0aa495a5-8ce1-4e02-a99d-36394479b721",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5bf9169a-02ff-4ff9-ad95-4e004ca2402a"
        },
        "item": {
          "id": "ca70e3ba-a186-4276-bae7-7ffdcd88329c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b73dee6b-f704-42e8-842c-87f3394d6d68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6633e0b5-3ad1-4fb9-a6cc-c7e150bbc555",
        "cursor": {
          "ref": "0333952d-195e-4b92-a263-49b9ab26088c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9eb7a5b6-d53e-4b97-b752-e88ea0483a94"
        },
        "item": {
          "id": "6633e0b5-3ad1-4fb9-a6cc-c7e150bbc555",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9a7dae62-7d0d-4f8a-9486-051770af5dcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee9b73a-c200-448c-a4b5-326c7fc55a05",
        "cursor": {
          "ref": "ac75e2ef-c453-47d8-843e-b664b0e94ecd",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ae81bcb0-7e2f-4abc-8178-eacb79d26b84"
        },
        "item": {
          "id": "cee9b73a-c200-448c-a4b5-326c7fc55a05",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "da52cd0b-289a-400e-8121-fde281ee61f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}