{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0faf8f47-1103-4ad8-b1fe-03aa7c072692",
        "name": "Clear Cache",
        "item": [
          {
            "id": "02f81a91-38ef-40fc-9363-457fbb6b1082",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fed1453a-df22-4b39-9ee0-0abb93caefee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "de0bde4f-e182-4f04-9864-0c4a6f07b7d9"
                }
              }
            ]
          },
          {
            "id": "642e89fa-5355-40e1-9507-33cb37a3ca49",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5b103e8-e2b5-460c-9526-47c129997094",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "043e7204-ac24-4ff3-a6a1-fba4fbfdd979"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "270c3888-fadf-43f8-96da-b38216802a78",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "26f2a91c-a11c-4751-88cf-0fcd55d9cb24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18169457-3785-45f1-9dc4-50e8f3dafaa7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa450ec6-6f6f-481e-a328-844cb51b7746",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7d57ff8-3fc6-4829-aa44-951b95656304"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d5ad69e-15b8-4df6-a961-d7dba6e96f4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4bfb24c-1b44-4fe7-9756-c042af54c863"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddf82950-8c99-4486-9a33-8acb1c76377b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77f1af9a-6d00-4e68-bd48-b6a6b280ee82"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "855f2020-696d-4cfb-82d9-a90998df6dab",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a9936ec4-976a-4698-bc28-9357a3d12181"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68a66229-96bb-4893-8799-9ebe4c491de7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cf84f6e-8510-4009-b15a-e09d0440f19b"
            }
          }
        ]
      },
      {
        "id": "600a8031-30ed-47a1-b6a1-4cf54c3c27a8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "edab2d57-a43f-4300-9073-31a39b652f38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b3ee52d-f024-4f2e-af21-79ce4a0bd2ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82a7d9ef-74f2-474a-8645-50af647964b0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad95b4ff-0115-49f6-bc6a-19c193840eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4b081e9-31dd-48d7-88da-a36d9851033f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e60592-7d62-4c01-ab92-da5092c22079",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b30bf6b-da7b-4e91-8ddb-52ce1e4547c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac3d9c6c-84a4-4607-994f-d68c4d781e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56096d49-9bfc-4b9e-9052-008f9a1e1278",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582db805-0b67-4f38-baf2-1426d1b1d571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "115d17a4-fb41-403c-9592-cf3d9baf0dd5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a23d5c30-9b12-4cb0-98f6-02863c12497a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21237a62-9f1a-4abf-898f-ddcbd11ddb36",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d812d23-7430-4886-b051-aed630cb6537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c96cf845-b4ea-4aa2-842f-92210e878a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6a98e8-130b-4ed1-a175-112236f057e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289e8227-372b-4069-8806-72c0bfe7a530"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a91491aa-c765-4caf-b76e-b2c83431878f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b085985d-6691-41f8-ad85-2ac422d04f99",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5001a677-1586-4401-b492-9a69fe26eedb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fdcdc22c-0385-4e8b-8d5c-66f6f80e3e50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2709a6cb-5864-484b-a0a5-d68c47df5d39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8fd58698-dc68-46eb-bdb5-bc86ec8cebcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6a81f5a-aaba-4653-9c2e-714da07aa4d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44c64eda-7b94-4589-9d5c-eebda57cf6ed"
            }
          }
        ]
      },
      {
        "id": "7c5f0689-138e-4f0b-b5b3-c0887b1c7967",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "83ccf0bc-9a53-4442-b74f-67578f0b4c97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53b209d1-6c06-4c92-b4d2-3b900f9bbf64",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2597d05a-bf6e-4f49-a0bb-513467d4a1db",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4619a1c-b7f5-497b-bb52-5719f783e64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f0b0d1-d58b-47da-9d26-dcf6c9d0696f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47879cd9-a4a8-46f1-b52e-84b6f8978a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "058636ce-61ba-4b7e-a6dc-a2aa00edbc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b3ac11-4da8-4b86-beed-8579c9be0783",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb01b2ca-90f5-4fa5-97cc-4bcd0234c2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1eb36a2-84bd-4136-a299-6883e289371a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9ee1be-2751-41ce-b8be-7dee9490dfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca4ac30c-47b3-4cee-921b-78b53f5daff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec1358b-06f1-41df-b2a3-8fc0edf73599",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc0a3f3-b709-4176-9c46-968ff70cd7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bef6fd-eb4c-4bd9-9399-5db925a121f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a638dd-1bc8-4527-a9d0-ae6a7d5ea147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85e3c939-ee9c-4cc4-a7de-cc14ac887875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edb42ef-c528-4716-bcf1-935aefd958dd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc80bb6-5dfe-4c4f-9084-d71367e4b818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30145ed-5cb2-49bb-93bf-b55c70ccb6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8fdf98-928a-4b07-bc12-4a373a07d1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f1c639f-078d-4d6c-84fc-fb4e60187b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704e9d49-7454-4d8b-bd79-f265b85b296b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda5cda-a810-44c9-8069-66e66eacf7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dab113-6000-4fb8-9dfb-2f0b81f19561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b568de68-d972-4453-a393-2f74ab7d3d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9394c143-af9b-4242-8e9e-7ce2820206e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d023c688-2010-46ac-afec-bf40fa5a968d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ee6846-37e1-4891-9cf3-e99ebacd5524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d54052-95ad-4bc7-8164-e0ccc5ba7e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1909909d-2c17-4153-acc6-1bb59e6d9994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49a95a52-970f-4d02-98f0-de8c7c53b15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eb82a0-4b41-4ed6-94dc-7880a800054c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bdec05-894d-4a75-813b-a64626631d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13de9fc2-0ba9-4017-a33e-47b2fa5f00c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a197762c-553a-47c9-9efe-f27c8490de3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c015d9cc-0c2b-485e-9d8d-855c37bf647f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45921d1c-9e8e-4be2-8f01-24a611aa6942",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd3336b-6dc8-40a8-81b9-6b7facbe8414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902ce33f-5863-4246-bc1c-bbee18da1450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a699fc75-43aa-4ff5-b25a-9978f5da6b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7f59f5e-f0cc-44e6-a0d9-7a3a846471bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d50e47-ee06-4da6-85c4-22e1c647ea7a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75eddab-f4a1-4d78-9c75-6774a683fcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f04b298-d992-42fd-b5dd-4ff66d70275b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d031e1-f290-41f4-a5f7-f09fcbdf2bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49dd8811-64e6-4f99-9f2b-e0fb1931e990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f72d489-24f7-4f61-adfa-c67ff0609e37",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc93ff5-3f17-481b-8b25-6ef15c08a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f710b9-0cb9-40c7-8aa2-dd8243074b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed63d27f-d95a-47a8-9534-26b6956b1525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7349f01-a146-413b-bfd7-d34529753c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f4ce23-689e-45a7-a09f-5ee6576eaa81",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ac1a9d-262d-4f16-b430-b5926b5f674e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211d15ec-e63f-49f8-ba8e-5791a508a513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c56ed8-f703-42c9-9198-2e95c17cf1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92c14529-f8aa-42a0-8d31-09b3c63271e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0995217a-ab33-4188-b021-3c7a62b3c016",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3502ed-d0c7-4497-8764-d4e9a57a17a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb83912-1f45-4a20-98d3-cae6443565b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5702fd9-2958-41f8-9c2d-571995f78966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1e91dbb-a1a7-49e5-a944-3d6850d143ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a49616-f219-4f00-b5c1-eea40f965e61",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e06e2b3-59e3-4611-875b-3a3dc5f4e216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edacc61-1c9e-4cb8-b2a5-d619e1f51188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecb73b1-741e-40cc-a003-86df27621302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a31837dc-5fe9-4130-8d43-57dbdb155bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b920cc1-6a31-40f9-a0f1-b7271db79063",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9044495-37d1-4f2e-9ad6-aad866049159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65a8021-8d99-402c-b271-b5aa261e8e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc22b547-ef30-4733-8744-6065281b276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a3c3fd5-6ff4-4630-a5a7-e454cc754cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d297df4-a7fc-484d-81ad-83c353342d68",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2866a07b-af8a-4259-8742-240f5e8ccd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f99a64-4725-49b7-b1c9-6562e899cd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9302a0fe-b223-4744-8d32-680a7a7aaa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fed0b031-d9e9-46ea-b156-4096295d5b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75875697-5a8c-489a-952a-a769cb673024",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef12c07-8510-4ae5-b83f-2604f04740b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079f555b-ab5a-4d7b-bce7-6fc92c3366f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f68929-4b3d-4245-b294-036f0b6bb8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9afa40c1-a1b3-4c32-8c0e-6945b6ca005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f980fc7-9e0d-4ab9-b7e2-8c0b945f2157",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc167e29-3ddd-48c8-8aa1-ed800c426d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dad9a6-9cba-4f8b-827d-70078fbd22c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8aa5bf-489d-4f99-b1ad-39b2277994b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c493dce-2ba7-4c21-ae94-b6c8299a35c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf5dafe-43e2-4223-8637-8e8bff36a183",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89283886-89c2-436a-a0b9-564295032b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf1b734-9b02-49a5-a37a-eb286f9e8887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7540961-245e-44e1-830d-e449815a61f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "244ce45f-0e4d-4391-a6f7-3861ea6cbc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39fc323-b89b-461f-872e-9df0f644971f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5993d6-4805-4fe2-8e09-61670b8de9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe936b4-158a-4b2b-a29a-a1ab5951e094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ad74ec-c66f-414c-949a-bc266b2bf35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a348855-c99c-49dc-839b-0e3f47925734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9d733c-3e2f-4984-bf7e-feb2c8c21590",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db17abee-6f68-48f7-84a0-ba706ae4fa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c232747-7473-4126-b03e-28fdf864b0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca93dd8-ea14-4a56-98d4-e6126eeeced4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd00696e-b5aa-43ea-9f0a-3e6b6663df56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ac2bc4-967e-4575-9f06-43f0b8e69cfb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97161747-a7e1-44ba-8a27-abff30d58225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60068880-c7e0-4d00-a4df-2d016b32e572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f17eaf-e352-489a-bc7a-71e317a5849d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7b8c21-e508-48f1-a602-d1887f6aa70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1ff4d8-9164-49a8-960d-eba86667884f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d072e0-7f9a-4523-8b1f-ced137db0662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6e0a21-8ca7-40cd-86a6-412aa5566fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e51c95-a5c8-4fb5-8eac-4e80d14592a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13697076-25b1-471d-89ea-417f88c42b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38616d16-b164-421b-a452-9e156c72bc29",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4e1488-f41d-4235-889b-03771761fee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785b6dce-385f-4f38-9a88-12eb2d59b34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0b95ae-62fc-4f9a-abe4-c5286fad4974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b80b962-875b-41a8-932c-15843bf18c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b311a0ad-14dc-49e4-ace5-db0f3c3d24d4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35b9198-35b9-48cd-82a4-ae5c820149af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8917ba-2576-4dc8-8d97-a6ce90de5c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb8a661-d96f-4c0c-9847-8021098385fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "542af772-facb-47f4-866c-a9920efc2223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475fbff3-a39d-41ae-8c32-4990024b2fc0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac73045-1bbf-41a9-8dbe-d1121f293241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58be6077-3e6e-4b53-ad6a-9bf00d5f19c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d819586f-d0ae-4df1-87c6-da66ed167d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec86127-ace4-4ac3-9fbb-b259e59951af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0155ba89-9d46-4566-b456-debbf083ed67",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e026d85-019b-4202-99d2-a958921da64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbcaa00-82af-401b-abb5-4ca8a65fa70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19711006-87c2-402c-9c8e-a5c1025624a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb159a5-2322-4b58-b090-c6bf19517e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e238290a-3af2-449a-ab89-8eed49827e77",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c8db5b-e973-4e58-8f84-06d491b5f73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92f8ee3-b83b-4cf0-94ec-637d6ba31b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31ee5ba-871b-45ac-abd4-9785084c3a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb103b7-b2b0-464e-bfa9-c3e9f60b70a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682674a9-fa31-49f2-87ae-81f2f7790eab",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd12f10-17e6-43e9-b680-e01e2e43b8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451d59af-6c78-45a3-948c-3b3b517b51de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bc2096-0708-4027-bfc9-61830bfbb284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cd8a0b-11eb-480b-985c-3c77ccdc083e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441defe3-d708-4a9c-8116-e449c536b1c8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2f11da-67b7-4a65-b4bd-794846c3fdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217325d1-3c64-4b01-9953-dec996a1287b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99405629-9ff5-4443-9062-da40532ab1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcfef44-8a4b-4e6f-ade1-d8528053e093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6026eaed-5778-41f0-a99f-fa443c478492",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef4a5c2-2a9d-4f04-a169-221e52f9ea25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c519a933-591e-480a-a0e8-c2f7ebdd9448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4520cb5-836b-4733-b905-783ff19b5b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "785749c9-ef7f-43fd-bdec-001ea62c5301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72941058-01e1-471f-ab1a-8dabde10faec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0017450d-37a8-4553-a26d-1fae8bf3243f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca6a9f0-a32a-4f3a-907b-92ede2f2ef0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6daf8d-9f3d-4573-9d45-2a1828a38117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc51dec-7a74-449c-96d1-0b51b420a55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c0f9d2-d5a4-4677-81cb-e656c31bdb30",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135ce177-79c2-4fe4-8519-d735e3b00179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52041ee2-86f5-4d9e-ab8f-da2150cdc4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd966680-86a5-4604-a673-f0a4c680bfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f67165b4-c744-4e42-bf80-41bffc8f63aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9694b6e7-7bff-4c6e-8f63-9992319b55fa",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8d2ae7-c7f2-49b4-b083-476c00254a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533bc747-5849-48db-80f6-85cce200a120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9d3773-1cee-447a-bafb-f74b341492b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01fdcd02-f5e2-4201-9e39-eb72c409dba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551aa800-e292-4898-a5df-39d9f239d3e0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c5513d-16f5-4a13-91bd-0598ad7dd999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd61932-55fb-4e06-b4cc-0d1cc8168b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61887dcb-d119-444b-a91b-6e8e58a0d0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d45097-918c-411d-8812-61c8483bbd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82e14ee-6e6e-4b91-b4d1-78ee62349673",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2886bad0-766a-46ff-8f5b-e767de64fea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8d7f9c-f0f7-4965-80b3-e83e06b35e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb490436-24ea-46fb-9f14-0556708417af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "30f3dcd0-7b9e-4d31-86e7-043da454b44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11660e22-69ad-46b4-a9aa-b13d328d61b3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48679d41-ed4e-42bd-a899-7d829421d8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce24d28a-e3c3-4367-a5d8-edb56704b94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28fdf37-6b2b-4411-a8ef-ab316f277005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd08f4f1-4368-45e1-a81b-29f7167be67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2015deba-4b94-4366-85b7-cab5aa4a3f7e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb9cfd5-b5ba-4dbe-9317-a1020584bd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc81c644-4154-463e-bba8-71d7669b82f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e06101-768d-4ea3-83a5-f0e8df6a69ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0352076-b227-4a03-bc62-28f438dd96c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edbdd0a-81f7-42cf-af09-32a630330a1d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2ebcff-201d-4d9d-8ad2-7cd5de64cfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9e7f29-e080-4d85-a5a8-d01042739bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ae8ab6-18cd-437a-862e-0532daebb304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfd7883-bb89-4bdf-b293-7d014edd5074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d23d400-1aad-4d7f-9956-b708692ec5fb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9b852e-d8f0-4ac1-a656-520a468eafb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386e9bba-34d2-474b-bcee-f8f336e89acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d9b4e0-2313-4ef9-948c-8b8fa8cdf900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff603161-db79-46d0-96ee-36a3ade66ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52366c4-9ab6-4490-b502-def07a0370a2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7670cdca-1954-4b9b-86c3-d09165ca639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcfd1e9-eef9-4092-a1c4-8a3e4c823bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d847e513-efaf-4b21-85f2-8025e8817f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6461419a-7705-48f8-9c76-945ac5a2a766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11ed867-c91c-43b7-8f60-85cefb1d7090",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b387a544-0c2c-44ab-89ca-c3f7d044b732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18abd5ac-61c2-4e8a-913b-66689125baac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1d3367-f18d-4b64-9037-6987aa6dade5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc66ad08-2fae-4095-a8ba-b25a85bc7d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf185fd-33e5-49d5-ac17-a45dbb079e12",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f29adaf-0606-48d8-b5f9-4ff512b94ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfb1d52-177d-4f10-a2fc-26246d594e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece57e0a-00cb-46fa-a846-9f60f495594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "931565f1-ba0b-4fce-83a9-f4c06a819e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c922822-4824-4b08-982e-07ed9cc400b0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c85dd13-39de-4fa6-9bfc-ce2b60c6db50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c35c55c-ba5a-4c21-b631-6a061672cef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4fb46b-00d2-48ff-9ae2-5cdf85898f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "032963e3-7859-4525-a5d9-6f9813212cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f46aa57-a74b-45a2-bdf4-d2b99f1a0585",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6cb4e6-cbea-48b3-a6dc-d89ee07a4239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7fef24-ba58-4cef-a3ba-46d8abc4a9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bbf1cb-dde0-42f2-bdb0-8c8f21d89532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc53062-37df-4804-8e6d-9937238b989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4d7add-b306-4847-b2de-24bc04a9ea21",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483fb992-9342-475f-a6cb-0ce30be0d66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a56cecb-cd16-456e-8b61-98b3170a2255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ce8b77-c846-4011-a1dd-c0c41d17510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67674d45-cf28-4319-b6ee-2e03450d7235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b492601-7aee-4c6c-a9e1-8367a865980d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32a194b-46ab-46fc-bd2d-b2d4e9eac640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cdfd9e-05da-4dad-a3ed-ab03e69f3205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca44742-3977-4562-99b9-8977513a3679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1835db53-47a5-4128-8ce2-7a234baddc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c6a3fa-9cdc-49e3-919e-bd9335a49ce1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9c7bd1-5951-415e-9ba6-5a34c7989351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473db4f0-d79b-4fb1-a732-b0955a807559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471a2e3b-a1ac-4c34-beb0-8f3dba79f628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a23d89e-412f-4291-ae0a-3329c9797cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af01e41-8571-4dc4-8191-f4a8cbfd9bfb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f74943e-4eea-4402-bace-46cccab50653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ceffe6e-ac2f-471b-820b-4dc3daa8467e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa0b7e2-80ba-41a4-942c-4f18c3ad923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e980753d-4a10-4ffd-9026-3d619e28daf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60c403c-6416-4f42-9cd4-006e3ca91cde",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fc446a-84ac-4d53-99c9-b123c4b6cc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb53cbc-83db-4404-a51f-d25cd5487948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81232519-4c45-4048-a559-e9c7a17a7e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d45a60d-eea2-4295-bf2a-5a776857a79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd0ad58-7df6-4446-9469-a53671382f4b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8009b8a-38a1-4d89-a0ed-3dbe35be57bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01c78bc-6ec5-4a28-aec6-612800308a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e8b6a0-4df0-4237-9313-75a477d4f593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73ac0f71-0561-4987-b76f-44759b1bf244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd5ec18-ecb6-4397-9eff-88845f4a5163",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef48b07d-f304-4d0c-b793-48a28da4dbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03625b3c-b705-411e-b60f-37aa69762e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5039eeb8-ef34-4efe-88b5-35424aef2278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "34e2159c-01d2-45fc-a1c8-b37be8a3038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ace50d-d96e-46bb-b83b-3ec988f68570",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e683597-bc91-451b-9f9f-b765e020fa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ab5b84-c52d-4a02-9b17-e65e17760dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84496f60-d937-4cd2-b383-8d30ef269953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be626eee-bf95-414e-b4db-bff867f66cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc4e20d-1585-488c-8850-e65ef45fa7a7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383e6ed7-50c4-414f-88a8-e01922854f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e19d6d-2825-4cab-992b-d93beb739bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7902271-65bf-42d6-9b1d-8f155f51c2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "564e19dc-de24-4173-86ba-d68626b30936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9af3630-44f7-4b5c-b651-7d8d5e6160ce",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ec0676-09d2-4e64-94dc-d16f59d2ab2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bed4e18-e4e5-494e-aa8e-2e480fc417dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b638802e-3283-40d7-99b7-abccf5c0eb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "059d882f-4074-4d1a-a75c-407fe8393c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a516e14-980a-4fc3-8fce-d79586efbf64",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3302601d-9b83-462a-9450-9b701e6b07e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb967391-a73d-4204-8920-d89e33e8a48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f0f1ff-2f5d-4f2c-9e16-d044717ef9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf85444-3b47-46ab-8687-06b14d62c9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bd4f7e-48d7-4d77-95a3-33e9b6b25196",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b830e753-a819-4677-840a-256376f0aba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e525342-00fa-4498-8a85-95deff3bc4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11091406-a3f0-40d0-81ca-2815d359f908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9d840907-8b34-4296-81e3-fe9b73d83de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495dd73f-c3ed-4a24-b9cd-52b66c34bf3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba427a2-c50b-42a3-84ba-c197d15c421c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84435c4-eeab-4a6a-abd2-cea609e7550b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18540830-f78e-4296-9e01-51c639a9993c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d50931-06eb-4913-9d82-7afbfadb0667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4016ad87-1b92-4a1e-84ca-a6e43ac795a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6141cf9-2fc5-4917-b740-59cfee8e1a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538d8159-4ab9-47c1-a0b1-42de9da1fa4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca647e26-4ff1-42c3-93b3-766e6bcb85a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dad9cce8-d7fa-4178-aac6-3927523a613b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc342908-3eed-4d8b-ab9d-aac768890df2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345165b6-57c0-4ad7-a086-61fb228fe754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c72ba4-7d55-4f1f-8576-dbddb69d16cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456e2d8e-cd6e-4116-8742-59d8f2080e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d73a08f-d960-4d75-9748-6b727614b6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59c4fb6-9478-4382-99a8-dcd46b6fa3e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866747c8-c065-495c-8504-09f089f28a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce822856-4676-41a0-aceb-2d8ddef733ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba49d127-2f1d-40d3-8b78-05eaf58ba7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b34e5a27-3445-4c09-b38a-bae4ae205da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c87d88-12a9-4f61-aaf8-accade8cd2ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea6dc2a-a1bc-49bc-bbee-8702d3001e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69296a64-5ada-4eae-9484-2b439fffe1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258db354-630b-4af6-b70d-aa7f210a3ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a51325-8218-4dcb-926e-8ce365f65679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ebe701-d6ea-49f5-abf8-8c642493b961",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae79e83-5fee-437f-a971-fe645cfded8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c00491e-a9a5-483a-ac24-13fda6e1e27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf497e3-5b71-491e-b71b-06fd4c1b5909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff2b89f-38ac-4fe1-905d-dbf76d91f902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ec15cb-eb9e-4a45-af57-186e120f0506",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851c6488-3e99-4d34-a980-cb9391b2c963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d76f31-41c0-4eef-ae8e-67c8fc2296e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4256a28e-bc60-4a3d-9972-fc2c9344c7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a63f98a-56cd-4da4-ace3-29688c10869c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5615ef55-9c55-4e0f-b2f3-fffaa05f39a9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827cf7a8-bfc8-447e-a4de-07ee69417034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19e59fa-a53d-462a-866f-5aa608bef4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9825c1-040d-49cc-a86a-8c885c577d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "deb91f30-6dba-4e1b-abb3-9c5df932d19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3582374a-6c38-4753-947a-6b5575fddc4c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477b183f-4e82-4ae5-9cfc-f2746e2b6c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8735d423-f9eb-4c25-ac3e-d96e71b811bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c768325-e8df-4a0a-8cf7-3f94f3602c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e05107d-0b42-4937-89fa-3640389116ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01609e7-20d8-4749-aa41-2f1997be36fd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c988945c-afae-4794-a27b-a3ac732c63de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9047b4e1-8a1c-49fb-8cfd-b4cb07fcebc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bfd975-53c9-46c7-ae7e-0f8bbf97bda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb0e36e-a497-42e6-80c4-e06b1721be87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0dcc6d-6a55-4a54-a077-97fabd9ad333",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f5d27d-9658-4af3-b875-8813fc062c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c641f7a-d825-4ea9-a023-96fdf0f16a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf76207-1225-4dbf-90eb-34e8e97ae345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0db6ff6-3e7a-4f83-ba95-b7734144f3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09da4f86-e78a-4e6b-a170-c4557454a314",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b743ad75-e5d2-4c76-90f1-f9df7fc13a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57483373-acdd-4589-b960-f98bf4ce83cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9bcbb1-9b77-431f-b1c1-da90ba4d3fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc258a3f-d135-4944-bc04-13aba3e48fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f57b7db-5334-4c22-a8fb-a9a60faf49af",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd194a6f-2a4c-4f7f-b746-0ee95d616d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810076cc-6471-4933-8b22-7143a53b0312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677d6c2d-296d-4c4f-85a6-43e4096f2cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c1abac-bd2e-4c94-9bd9-578271c644c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0ae8e0-28a2-4a32-89e3-26242cedfe62",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1642a8-e8c8-4637-895b-2daf5b853e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef840cc8-b9fc-440a-83ca-b388f302c839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c27dd3-e0b0-485a-acf2-ed93ca53c71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbcc6e6-2af3-4956-90a9-65861d748c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646f2d71-870f-4597-99cc-e73f303c518a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ace938-5184-449d-8658-237c073cc4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8fbeff-a7d1-4402-a6d2-c8216648596d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e245c5f2-1587-4d2f-bb84-7e6c3f6d2f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcaf8f03-b3fe-458a-b4b5-f1f92adc02de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a056ab-7a2f-4f71-a635-f74fa5174b8c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917770a1-8260-47a4-af39-ddd2bbfe8e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bfed2e-3a29-4afd-b086-3d355a483298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76a5942-cf05-4bd2-8e52-112522c1663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e479ec-5d72-44dd-af10-13ae165ce9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f0ed22-c8f9-4f07-8eb4-5a33b27780f5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acab32d-c793-4163-848d-13f363467987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4be00b2-fc05-4554-87dc-23f8097f2cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06d1c87-6e23-486a-992f-7242decef940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61af1b64-00ff-43fa-9352-9229dc7d5500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee43f101-3367-4e3e-b3de-0bec1c29b5b2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9aa27f-0c85-47ba-b76f-86bf3b755d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83acb051-c60e-44d7-9f17-db7344b9d4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acfc199-109b-45ab-ba83-d00f8379e5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d03117c-25de-46c6-82d9-40093ace0b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2b3d20-3f71-4085-9939-cf57747d8356",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78d0b0d-d2bf-4363-a013-612ec82519fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486b9fa2-d523-443e-accd-f7b5006a7cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12db8873-b87b-4cfd-95a0-9d00c96f01c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed06ede-2873-44aa-b638-738631b6cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a44115-931a-4293-a155-fa983bc77608",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136ebced-0fbe-4d89-8509-02a24465136a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e40f554-9eb3-4286-89bf-172fc724c702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63beea80-0f74-4740-a831-719d0775e948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08683fe9-9790-42ad-898a-883cf109c049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f970854-6293-49c6-983d-a732544a3e75",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2feea2f-1f7e-424c-999a-d37df86d285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27bb573-af00-4a81-a153-a418a78acd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbaad0f-efe2-49bc-a4d3-3ef8880f372d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c41faea-5b19-4fb1-a21c-4ccf348820be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3795f5c-a0e8-493f-b9e4-f7838f455a74",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3449f2f-9e94-4502-bb91-e5a8c1dc4f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27555e1-5d90-4890-8947-39378939cdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5afd59-146b-486f-8a9b-151c603a55a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd75b2af-14f6-453c-9b78-34927f306ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e483050-8636-414d-81e7-bbfa80ab6cd2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e386b539-8d87-460e-9a7e-8f915cfad08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33a3941-21b0-4120-98da-a96846f36e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f0371d-408d-4459-a140-125705940f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7d92ff-e2c0-47e6-bb78-2a8f9cf6b5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d928e9c0-665f-4e27-b9b0-d340b93f3a06",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421f6109-f607-4c34-acfc-9709cf72e2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9c56f3-38e5-468b-92f5-cf7b76ecb038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e7ef7d-90ef-4abe-b988-6006e399a267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31cb6ee9-c0f3-4773-8e84-a3a8dc0fefe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ab2747-621b-4411-a081-41e2a5eea3d2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878eed5c-6c77-4855-a5db-8f5d75740e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a0401d-9e29-4760-935c-05e883be8b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dc9686-a13b-4212-b917-f3daa1133079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d884bbf9-447a-47d6-acfe-121b3a0ab034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19e188e-94bb-4fb6-9445-61966ca5309f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a8f0e6-10b3-4d32-9221-0984ddaea93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5402e3f1-98fe-48b3-9b3e-cc549700fb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c124b044-a034-4fda-b23c-3c36fd5dbba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "121d525d-3fb5-481a-9957-c0832c731a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1361e31-6ea6-4753-a4a2-4bd86797aa04",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d2c01d-d83f-496f-898a-e666cbd1fe42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5567378-3ae9-41e8-986e-e4dbf575d6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73781941-f140-4752-863a-6dad61f38b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7008d718-d589-431e-9ac6-e34b31147ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dad418-99e7-4e84-861a-f01385634ddc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809acacd-58e1-47a2-bae9-044839abc87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec6f6eb-57d9-4a92-ab5f-1a5261610056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854ca724-1294-4ae4-8c61-1a300a23da12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00da349-b643-4024-b93b-006f28671766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b38d25-bd94-474a-80dd-a507039b0697",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5160e613-5d2f-4e28-8f2e-074e975cea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1a77a1-cd79-4009-b785-b3e31e9beed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2719a9ec-4653-4589-a00b-aa512b88ad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1eb818-638d-4dbe-aa9d-203df08ea1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c5d38e-b017-4622-9f69-afc84689d0a3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a8a6c5-42aa-474b-a96f-ed6974a37402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c563682-b3da-4aae-be70-61f467b03e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777b3fe3-bf59-45ea-b3f2-8cc54df2d60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b4f4c9-d741-4e43-a27b-6e7b1ab2a259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3b8719-f9eb-4e9e-bcae-3fd7b4eb1f30",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4beacc14-86a0-49bd-8ca8-f705fca0473d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cfd750-df30-40bc-bf17-fe59319b55a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f2941b-0d60-4f16-8254-69465a7b8ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7233279-6d36-4a82-89e0-1b8ad28c55bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847afbc3-62f4-4630-a9cd-a982c0f77c6d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3a4610-48be-4bf0-9ce0-3c1b88ce7479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d065b47-f4bc-43b6-9a98-c5fd597ef7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d0e9bc-c366-467f-ad5d-a0dfd07b9b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c323027-da16-4059-9eb0-1ae490d6e710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c09cd13-ea8e-4872-bc20-cbc5a1023de7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5ad0c1-ec36-45fe-a485-b374ab08315f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0b6092-17f1-4a5b-a0f9-09a58f90ad27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8ed374-c62d-46c9-9826-9dea80eed615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59d1dc96-69f7-4566-9301-2f0d36fd2aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5750d5-ce97-4891-98c9-a58869577630",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4d83eb-5d60-41ae-baa5-33077496881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f30d6fd-f127-4310-b7e9-4acddcc99c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49c1f06-e1bc-4bef-8121-3e9bd6e4578d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa8cdd9-2ce6-4355-b4e1-c3a72f4b3dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1640705d-0309-421b-9434-fc144cb2b80b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809218c3-24fa-4cb8-b222-cdcc6952799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a99ff37-1f15-4ea4-b946-52df79fda65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc058f99-1c3c-4864-b366-58416267e75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4680ccd-e87a-48b6-8383-3fd0d08279af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618cb920-8ae6-40b0-98de-414d0ebf390e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b126b09-23c9-443e-af04-89ebc5c3ce23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "29f5f5aa-4600-4d4b-b911-2840d09188bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629a036e-977a-4a2a-a16f-72e606cec005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "20abed01-b75e-407d-a755-ea947c98ef6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45f1e147-dd02-4cd2-adb3-fad718cd99b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2e01e4e-269a-427a-835b-59a4f7a0b549",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4912a1-e7e1-4658-b244-fd0edcb7e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d37c122-ef1b-4dfc-bc67-24a74b662aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f3569a-9612-4209-9011-7174badc2ac6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dd42738-0e59-4bbb-addb-de9a8426483e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c0edddd-5565-4d3a-8b42-f12bab8bbb46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8eaf77e9-6540-4599-8306-dc1e38aaa9e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6f085cb-fd14-40b7-8dd1-2b642ff09bbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "508bbd50-4024-435b-8300-2474559ed889"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0545f822-94b4-47e0-bbf8-3763b29fe527",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40d16ef7-4070-495a-aa37-627f26f29b3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f388f32b-7a18-4216-a6f9-d49bd3b94ff6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e84d0b27-ac52-44b7-8279-ceeea759aca6"
                }
              }
            ]
          },
          {
            "id": "1254e636-a8d9-46e9-a262-e669c338f0af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6e14f94-1872-49b1-84f4-86b9fb3af192",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "110f6434-d47f-4071-b8b0-80970dc12c54",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f09f92f-5f5d-49fd-b8ef-b20a4dcfe702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a8e2460c-d298-49ee-9b4b-4e42b150bc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c91985-6f4c-441a-b65f-21155c037df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44f00f7-4734-43c6-895f-8cec014521e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87656e49-765d-4997-b5dd-b00afc989631",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b0b3d9d-4bf5-4315-a9bb-de80bea06904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ecefea4-0c4f-4dd4-a834-e024d40cdf8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65a28b6e-3979-4069-804d-a48806780c5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff8ff218-e0c2-48d8-97bc-72245b064806"
                    }
                  }
                ]
              },
              {
                "id": "f9ffd230-2f66-49b8-92d8-407caf303d82",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44cec8d6-4534-46ca-80c4-d6d2a1763009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bb6bfc9-57d9-48d4-a699-22e05b08694c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eebe62a0-9306-4765-b7b9-01983ffa1ccf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85d7ae15-0d73-48a6-b873-f99540d3a01d"
                    }
                  }
                ]
              },
              {
                "id": "e4976f09-d874-4b4d-a7e4-a93635de02d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7be022e-b712-42c3-902c-1badf74c0e95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "326a7ff5-d30c-4187-98e1-93ffb3a7f035"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdbbc32b-7d53-49f6-89cd-6a5372833144",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df8fe527-1227-4c5f-b70d-e47472fb90ef"
                    }
                  }
                ]
              },
              {
                "id": "5eb45fe8-1bdb-4e5c-a1a0-91ed0eff2c75",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d70c5e4-9328-4972-8fc9-2585e30291b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f1ba310-fdfb-4b0e-8b39-e904d7b2eb26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "970aa5ac-7848-4d57-8a9a-ac487576adac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dec98f4a-094d-4fc3-8cd6-e673a06bb3ba"
                    }
                  }
                ]
              },
              {
                "id": "87b36016-28cc-441f-aa82-d56c235127f4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6eef4ef-5ef6-44af-9c10-6af390a7bb6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de79dcea-a158-4a63-b607-3de1199270e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57a95312-075d-41ec-ac99-078fb61f57c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "46b66eda-adbb-4125-8dbd-510391b4f5ad"
                    }
                  }
                ]
              },
              {
                "id": "c76c67d2-9888-44a9-9ad9-00e38183c9f3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9165fd62-7f75-4805-87e4-1cb676132270",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96f3338a-d24c-452e-9492-35ee995092af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35204267-decb-4237-a964-56aafdd15e67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31a55c36-1422-4e3e-aaa7-99e5790e1d20"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21d9651a-0eca-4bd2-bcb3-ea3997f24680",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57d6465a-9696-44ee-853a-e7a805f76296"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "90bd226b-4bc0-4387-a7f9-d0984e401e8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "165bada4-d09b-4de8-a012-7d8a39d4d9f4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7538795-dcf5-4258-96bc-6ff582ff36fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e1c0a8e0-74ac-4189-ab63-376c711a537d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "371039e1-1b5f-410e-aa88-c200ba4c1639",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7107fc6b-0512-4a27-ace2-ca713b353a16"
            }
          }
        ]
      },
      {
        "id": "db4bb459-e58b-402a-8797-163342c6f3cd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2025bb61-24ca-46d0-8beb-42e1f31e2f4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "415d2a92-d050-47d3-99f5-ecb2476b7492",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f4597e4b-96fc-484b-96c3-4221f8bce8fa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e30100e-c827-49f1-b756-f7f375b90212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983c98e8-0ebd-459a-ab07-cf0962f6a2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfc031f-9e0e-43f5-909a-418c0500a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcc4196-a460-4b9c-bea3-f73b08fe6f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1606387f-bff7-4a5f-8b64-dc53f062ce9b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f5b2ee-1a74-4e12-b9a6-a44a2fe1ad92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de60f12-845e-4ce8-bc67-9ae586382557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89f8688-d780-446b-bdfe-b410a55fdb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec98745-5e70-426a-bcdb-98f2e5ee9c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4759b7aa-1ba5-4fca-b1f5-73fec7b3a055",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4336dbf9-092d-4a37-8ea5-17b1c803d3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7454db-5bdd-4a1a-ad7d-2077c5ac0a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17f11d6-f2b9-4889-bec3-234d081e562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebfdb5b-b548-4f75-9e54-699b9bcc976a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581a6840-f1d2-4986-ac59-57aa4f575656",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70269b2c-dc14-4d83-8807-cf694156755f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55ec55d-faca-40f6-a1d7-5b354d6eb21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64f8e0f-61fd-4030-9238-2ea4ecfed040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7c4aea-0247-4427-b2ab-f367ecd09b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57c86fc-5669-4cdf-84f1-2f0862f27efe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4e2718-0f54-4833-b6a8-c685f23f7745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3689a9-a89d-4a5f-abc4-d816ffe8e618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6893d9-04e5-4257-9e81-1a1854133340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c250cf8-9f61-4808-9b43-28cbd1a63b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b094ff13-f8f1-4392-96be-cddc76bf4020",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a456aa63-21f2-44df-afd7-83e73b10f8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38163828-6c2e-42ff-8aac-51fefd59f195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0546098a-9b46-4cf3-ae67-f2a7457b22f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77db04b5-5dbd-4a35-84c0-d6f2dcbfb753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13704433-1315-4e88-afb2-4af51b2caf33",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb57d115-6b02-401f-9cdc-8d68539f40fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee378de5-4019-41b5-8c80-f7a8959ccafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8161bb-13c6-420e-9044-c5e4caf213d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe6de23-d4de-46de-b85f-9313103120a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12806e5f-3d28-4a20-a1ca-84ed5077c10c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139df802-397e-4b61-b334-9b8a22480981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48de11ee-a52d-468f-ae27-bcc633276ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10f4412-e840-4ae7-8f32-e04668406949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a530a9b-7bda-40cd-85d4-8169559630c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e3489c-0e4f-47e9-b7be-4774a658c841",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730e2580-d129-49cc-a07f-3f06623d687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a915908-3b06-4199-8259-c3efa94cfead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7516ee-54c1-4cbf-b04b-9cc4b8571e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acad8557-5f69-45ba-95db-c8d58150d11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af40aa21-511a-4830-8de9-123cfaa64051",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab97b99c-4c18-4e3b-91dd-421859c30f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf8f024-dbef-423e-9071-3c79b7477e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeae08c1-0091-4e8f-bf85-d55b0347df65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc02469-431f-4a25-a670-4d14a5cb44fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffbc38c-b562-4ae5-8bd0-c62c8b7ee243",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6670b6aa-7952-4563-b831-f74c83fa4448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb27870-1aff-4804-b637-5390a9e0f350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67344645-e3e1-49ba-a777-aabb7a7a7275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfee53a-8f6f-43aa-84b0-14cea9deac7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f47e182-e09b-46e0-a2b3-774de2bab257",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914aa0e0-cad1-4d84-877b-f9783279ed3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a983d34-1c8f-469d-89d2-cd0e09b6f55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc73ddad-99cd-483f-b231-8b347b715cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2724dc8b-1bee-4f51-bd5f-83d7ed74c7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d806f188-5a76-425e-a1ad-693076822229",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5b75df-f4cb-4244-8d2d-f7c3a6c7ee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f13683f-da42-4636-ada2-9172e3b6313a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911a243d-295e-4857-b9b7-787c19380406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfa626a-e32c-41b2-97c1-ca0b9015f398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e1975d-ff1f-4bc1-8702-f99cfa8d573e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5855d59a-17d7-4707-9a36-f8e3bd9591f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c774f8-c63f-4356-896c-8a7a676910c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e046319-23d1-4fee-bd11-af982e9517c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "116aa0a9-add6-4d15-a731-dde3446de38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8bcf03-0875-4cee-82c7-7edacf184690",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522822e9-f8f9-4040-a061-f49f1f0cc070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d46cbc-3001-4dad-a85b-cf42be865aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c522468-a39b-4cd1-b982-386304a8f07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a6675d-ae74-4166-b811-55d90be82459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bccbee-7510-48bd-93e6-4b7b678e8f8f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409f4583-c34c-4409-8e3b-8c3b74ec2205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a13397-0d18-4947-a720-d77a2f3d8f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b3749f-6c28-4233-9e6d-8e76840c7bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9ec2df-416d-4d9f-abc0-9a0b3001a6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6c94da-cbd9-4e7a-9bce-79cb17208252",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f2fc20-342a-423e-80f7-452733048e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d498ec-d392-4ce0-ab09-3f8ad2c0b913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddc7a86-84d8-43b3-af86-01d3bc314db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6fbfdf-f222-4960-8422-eeedb5157674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d30c2da-f110-4093-9fd7-6dbcac552719",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918ae4e6-807b-46ed-8399-eaa52aa84661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf500c6b-1cf1-4ac8-8353-087cf6c5d198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41410e80-3239-46bb-b75d-a25ef80132ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3339944d-5855-4761-99c0-701ca604d59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dddf5b7-36f1-43c1-9beb-37aa6696eca4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ccc7b1-8927-43b8-894c-ebe7a1173ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ced5345-6439-4073-bc6c-b2992937f3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7957d61-7f36-4a59-b7be-de2549fc270a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3eea52-1346-4ba1-ae01-dc3ba93c2214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af25b24-8305-49e0-85d3-cd55d02dd536",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141644c5-8a0f-46f3-9791-6191dfb0e5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df70827-114f-4ee9-803a-81d6d6946a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2ba794-4d2c-4463-8bc6-e1452880c919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7179c716-d0fe-47d8-9f8a-1b504ab71255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226ddaf6-bcf8-4f9c-8dc8-5d72104c16a6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9ae1ae-0aa8-4be7-b75a-9be1711dce2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c285adc-81cb-4876-acc8-31cd79ff58c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb7b5f7-afe5-4bb3-b47c-7ca3c179925b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "221a6bbe-43a6-4af6-9713-f1a290e8686d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b8fb04-8766-4b70-87ef-80d1d727506b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdf680a-9368-4b39-ae7c-e4b9fce555eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746c488e-2104-4f36-840e-4ff96845293e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c42407-ebc3-42df-a12b-73ae2d4cef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2c7f4c-929d-4ea2-9b90-dcb1c99d51fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93405b2d-e6ec-43a6-82b0-59dcc8d0070d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3587ae-8ab3-4dcf-be0b-e6d44fe514e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16932994-e782-4ef6-bf9e-db15bf87e8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8302f199-7201-4c79-b52e-181d01593ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa19b22-1452-4f7c-8c61-4a0a89c7054f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4213e6df-642b-48ca-b07b-d5dcc3d17377",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0b8817-675d-4fac-8771-43bdba6b0f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77397a82-f6d8-409f-ad3f-bcc880d06b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cdc96e-caf0-4734-8b3b-84ff29356eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79855761-8108-44a0-913e-b26f149a16b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b719a890-1609-4090-861b-190ebb5b663f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232dc857-c3ed-4bc9-97b0-2e69a9f3fbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655362c9-322b-4cc2-8db3-e761c3336404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dae776-af31-4f25-9605-b526f62bbba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b86a37a-c247-41b5-a9e1-b288f57717c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddb9200-3db7-4aaa-97d5-d2f114ddae23",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d59aba-5c4b-4001-8259-c5f038871516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49102868-4ee0-4891-af6a-05ab763e3213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc69592-c19a-4fa9-b82c-8719a945f597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a890c997-5108-4f29-aa1c-3531787087c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83697ea6-30c2-4be4-89db-e5e450621551",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6ff773-e443-45d0-bc64-4ff9b6851d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52948bde-f4f6-4258-a6ec-89f504e48dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea3c872-35bf-4995-bcda-e2c69ca95f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea276330-cb73-4042-b7eb-8e7b5dc3f870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3fdd25-6daa-4317-88f4-b37c7108ad1c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727a8762-cbed-4e79-8fb5-64c595658b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a992b6-51a1-4bdc-8781-831af81b0312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878ae32d-390f-43be-9532-59f55e350282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1703060b-fd1c-45ff-a0d8-eac350443946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeebc03-1df7-4e45-8dbe-98ed55b372d5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084304ff-8380-4530-bd84-bd0b20700ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d191d799-160f-4bd0-9287-0f53c5213ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab38b80f-c716-4237-a35a-00c399613736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01eacbf7-3bba-4724-850a-c31d4756a8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d56d73c-b858-4f12-8e92-36f992217730",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8af497b-5cef-416b-bd3d-1f503a797568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ad84d7-f2ee-4095-9173-a5635e5e7689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9daeda-2235-4cf4-965d-c4b60e02dc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10905b12-9f17-47c7-9ff2-145da256da47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eaae80-7d25-483b-af98-4a6df73f4fec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aea17a8-8bc9-4c01-9909-9be1bad074fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86902f1-2885-4e77-b8b2-42a7661003d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0d5f48-00d6-4146-a4f7-fd4aa9886bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74ccbeb2-ead8-4209-85f9-8f3fb7dda2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52dc573-51f0-489b-bdcf-1b67eacf9108",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea09f015-d452-43ca-a215-02ed6198dccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb9d555-59f0-4bc9-a9f3-9511d8b5fc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fb174f-719e-4193-9116-155be2278c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "686c0606-5e2a-4665-9fb3-02c59d800fe3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb1857d4-311e-4d62-a42b-319cf3833ba8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbaa1f7d-de98-4833-ae62-ebe042a5bc7b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c04e742-1b6c-483b-b044-1e6d24e604ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f422afe2-d203-4be9-85f6-9a294da197ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f7aefd-052c-4956-91aa-e5638641cd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c1099a0-d1af-47cf-b650-757394ba1cdc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21196b9a-d6ec-4ceb-9500-4a7f40c8bed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fdcc00b-e198-41f7-82eb-d6fb5087749d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e6c6262-06b6-4de4-b05c-3799367d7a2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad31ec24-8ce9-450e-84e5-bc3737c12d62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a63326b2-4203-403d-a249-967323b7a90d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30888b32-fddf-43d3-97ff-63d48867b74d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27a87ebe-1dc6-40aa-a869-e6064b833eac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abb48472-c24c-40db-9afc-6edf37b884b9"
            }
          }
        ]
      },
      {
        "id": "c16adb25-f869-4592-8c7d-4d949a0000b2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5cc6c99f-e420-44f6-a492-1de563b818cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0391c154-f236-4ce8-a95a-c5a2ebe5e0c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78ba38b4-656b-49e1-8b5b-02a3036eba15",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec5d92e-3943-4916-b3e5-08a11429d5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417e9e5b-026d-407d-9340-73f3a06f8823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e5f1b7-e8fb-4be7-a498-9acbd79f879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe861e0-f9bd-4cf6-baef-830d9c6019fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e7ccd9-27b8-4898-9a01-bbbb0c59f4f0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1a1dd7-5b41-47a9-9590-1f64e1d09c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519431ad-bf72-4f5e-a54c-c50e945ce5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4218dfc6-4ac1-4ffa-afef-3608d26882fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7ba713-4b0e-4d23-96e2-6b9b40d4f30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3641b416-2131-4aa7-9186-726dc7ef2362",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8967c8bb-3bbc-4d08-b47b-d37c1c5a1282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02a15ea-2323-4c29-908a-ac578621913d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d21129f-35ac-4971-951b-d0395770fb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f4f104-0294-4e16-b14f-fbd3e1a35ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf22f1c-6c62-4e9a-9ace-0163d74542a6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0096722b-ef02-418d-b22a-6433bce16a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfdbc22-4282-486b-a934-b53e6a2b0cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e995b3-8ea0-4ab4-9ead-f10b42e853a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0566ead-d70c-4b31-a5e2-d8dbb66048c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425ec10a-3292-4758-8cfa-794b15dca117",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e706cd3-1dec-4184-93a8-b00ebdf5f67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9b30a0-eee9-4ae4-bfbe-03f85817a9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964c9d30-9bb1-47f2-9b09-b3841632a25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d19a732-e2b3-4520-8356-66a5301fdb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58d8306-fe96-4bda-9747-7eed92d91ea4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb2bf80-a95c-4844-a09a-d127a548aab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f5e432-488b-4b66-8f14-ae5a3ab781fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f91370e-cd24-4c95-aa6d-c3bf802f3947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f65c8132-8bab-4b4b-babe-94db998273b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0994756c-6d23-4a32-aefd-b6fa1a0e2059",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d97d034-a09b-4bd2-81a6-e15c9c37f331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d57b7f-446c-4b07-810b-bda4815ceb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bbc635-5030-45b3-9358-473b1e8efb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "29fc8f13-3fa6-4ad6-897f-2a2d97be3097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1af8e72-be60-44e8-a457-ffa882d2de5c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fddd52e-f453-4fa0-b265-5908d58b7459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8149bd42-2d4c-4480-a0f9-9a4ff1f44595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44efa013-3348-43c6-a6a4-81fb166b65b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77359f6a-a4b3-4815-9561-8ddb131c6b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bb12e6-88b3-4148-9d6e-9fbe999f8b08",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee93c1-7dac-4cfc-ac4d-4f3c5da3dc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cf5b5d-d7a8-4283-9bef-b27c9ffd89ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7059d555-6317-49fa-b64f-dcd8fc9e203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e076ad93-c740-4c2c-94e5-3f568cb8c11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f793ffb3-c134-499e-aa55-b0d95f358594",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f74dd0-ccc2-49ba-9add-9196a1980b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07454f37-f544-4346-9296-34ba36c9fa03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4120816-2136-4edb-a630-3dba41ebf4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24ca4a9e-a55b-49d1-8e82-96d095bf27e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c277f9a5-c3d6-4e3a-b8c6-f8808cca6ccc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217f4d03-e8b2-4d76-a331-9ad275cd1060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43d72d1-679f-4450-a099-0d7fdd729363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32c769e-6229-48c0-8643-92688153e46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f67a99d9-fad2-4588-a172-40a18c1c9956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f07f3a8-e426-417e-b633-057dc35166c8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5f99e7-75ab-41f0-acbe-c63658fa7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4319205b-db45-4cbe-82a9-202b7b670c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d614356-dde7-428a-adb1-98b204a82bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adc94927-3041-4a97-8e80-e22895a6a0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0138af1f-5e22-4a2f-9113-5ff0088f55dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2480447c-f5f0-47a0-ae10-0f4988ccac60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c90b22-8385-4c80-913b-71f3b2ad9629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f802a03f-01f2-40ca-a80d-4bbc7c7959ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f069dc-47f6-4ed1-aedc-a16fb8ee68a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d85eaf2-e7c2-4ba8-a2bb-892937f22a1e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640ab698-7438-47a5-aa57-9f11d432f5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9c8e68-edde-42e0-89f3-ae353426e308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb044f6-8043-49a7-859b-ed95f9f00b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df9d28f-cfc5-4a14-9730-fce75ab5f5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631e4189-f500-4c15-a30d-e22e96820d64",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047c0821-bbb5-4314-895b-04295945ca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7788237b-3003-4792-9fed-6cc5638621bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7a7cc4-43a4-4dcf-940c-6a09959483f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c77e4c5e-cee8-48d2-9509-ee1fb0c4fa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb9d505-054a-445f-a4fa-81f7d3e54ef9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59285af3-bd81-4387-af32-2fd7613f232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8134ecab-f875-401c-9c56-0a5b6c013b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32cc19a-7a89-404d-844e-1aa7ad6d00f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d594ae63-bfff-4881-9587-0fdfa07bfb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4470bf1-472c-4b99-9329-2c1b11f77e41",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4498291a-5878-45a5-98c0-084b929b92fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1512be-ac69-4336-b436-1c34697b1b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc72560-a404-48cf-893e-d48423831dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d771e26-ffc5-41fc-a2c4-5c1f16c0a6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b840a6be-d5ab-4d2a-a248-7156a0bce23a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b23289f-d93f-4177-b15b-49ffee0f2ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d88f00-6182-4002-96ce-36a297a159a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52e97c3-f1ec-48f2-923e-7f6736aeab66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba664ab-8809-4d89-99e5-dd2e8654310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8042160c-11a5-4521-b43d-46c2031eb2ed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe4ac81-b0d9-451e-a30d-af0b3f515196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b4041e-3783-4627-940f-e059d94f6fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c362e2-f47f-4d86-b75c-9bd5a00ae88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc589ee-daa8-4fad-bac0-138237b58bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e0bf69-5859-406f-8646-039baecb73b1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0017d71-ffc2-4e4d-9f8d-ed298d5b61a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c294247-aa0f-4f26-b582-fb6167629cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c21eca3-067b-4709-b889-ee748f12ef2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9efd46-d633-4a95-81e6-3faa2e6534ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca83eba7-45fe-442c-982b-f1e3a4df22c3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38cacd4-1aab-429a-a762-93c7a95bd77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070e5dc3-4d4f-4f83-9233-e59af729d91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b387bfa1-47b7-4420-ac68-d16925be5d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9b2d90-c86f-40d9-9a7d-14254dc8c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5fc524-0833-4593-9ac9-e0f4d209e9fa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53065c32-6d75-4441-bcd8-669224dda23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c94943e-c8da-4e84-93e0-fe009e612634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84bfbe9-5a12-4df8-8c00-2af291a45d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f37275-3017-4872-80de-f88b6694b3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c2d013-15fd-4874-be8c-c943e6d94435",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d8a7da-c905-4aad-a056-16684648b00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da5d1e3-52e8-4006-8ba0-9394d4e847a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca96650-de59-4e45-864a-3862a4f7591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09aac171-c50b-4a1c-a178-3c482b030bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81446ed-e29d-43ca-8274-aa3bc1f089e7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac72b253-7775-4b82-b08b-fcd286b1ad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1c2635-4716-427b-b4f7-8be72bf93580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f8d014-f65f-41ab-b58e-2c84e13bda7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d936ae4-7c13-41f8-9bcc-40214d6e09ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc93df1b-576e-4485-843b-3b3c420f1056",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a062ccd-0056-48f0-b4c8-950f2cd795b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8afd4c-2962-472b-b817-05b55e2b3b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43e30d2-851a-4065-9b6a-fea37b8f18bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef210ddd-15b6-4aa9-807f-625a0b705fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12c406-6137-4fdf-b92e-44381e8160f4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ad8e8d-aa2e-45f3-bbaf-9f71c547474a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49004f5-b707-4ed2-88f9-74dd758cd51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b69f66c-c7d0-41e1-a065-1c696f79f00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3927e85-1ba0-4539-9202-0993982b0b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98363647-1bde-4a79-b246-f0661d83f24d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6912706e-3ebf-4fb8-9f2d-650c5eba294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7467a05-6ed9-4042-b3fd-58c596a611a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78899356-a6b5-45f0-b2c6-896ccce02c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5494a7d-c165-41fc-bac7-e28dec043433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0d0566-a58e-4cbf-8320-9b24d6afa391",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d429cd8-7c2a-4036-82ce-80d11921de7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8410ddf0-af8b-4749-bbe6-e86255834521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b94f35-5b9d-4549-9a39-91a4d69f215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9757ddee-4292-421d-8eb4-24e6ca3beb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ee5cbd-794d-4f46-ba5e-7c7dbf166702",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc10e1f-dd12-41de-a39e-733643f9cf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cea1063-e025-40db-958a-107cfa3a54e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36aa4e1-a9d9-4e03-a67f-a2c960894a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7497c48c-1767-4fa2-8290-d2a6b237e580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27066e8-1e57-4348-b734-d1e5ec128c0d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f819742-e2e5-41a1-9fa1-b59f03056e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5de038-b257-4f27-86fd-ca5d184235f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67118f38-a475-486a-8854-88764250114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb88f7e-82fb-457d-a0e5-82f2ec2b47b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a152c0c-3055-4f64-ac80-0ec5045b6d69",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c51a23-d25e-4104-b56c-912b9a27ef38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed43eb47-bae0-4dbc-b5e2-dd0762774682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b586b94-2ff6-4c3e-89fb-1174e1f4efd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de91203b-12bc-4266-b983-1ba18e7ece55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d12a9d-651f-4615-a471-9b9f9ae4bc37",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9621d8eb-18a9-4736-be09-b05307db74fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c84236-cf9d-434f-8382-d39c4fdbf139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeafa545-7d58-4e47-a360-8fa8613f8f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "133fdcb8-478f-481d-922d-f79dd9a67cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8817aa-95d2-41dc-a535-3f4ffadf4955",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1630eda9-67fe-4b2c-9313-289829374395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4f56fd-a3da-48fe-bb43-8063daecb44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe3e262-ce60-4b01-b75a-282264b4532f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7373ef12-2292-47df-bfc3-60cd1ef54019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f163ba71-0eed-4b7d-aa85-f1d00bd58c55",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf4f2b8-5bc9-412a-b51e-fc4ccca30cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d309483e-2580-4867-b715-8fd58aa2c7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bf7310-40a7-4b0c-98ba-d25aa1007ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52608da6-4996-4cc6-a136-85b416c9c82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929ef204-5f1c-45a8-83be-230cabf23a01",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44635802-cbe3-4e34-ba91-98eec90a6e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef4e1b3-369a-44e7-b4e0-9acae987ca1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52889383-c63e-425c-9733-8d142afd8ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12010350-0946-40f9-ac46-bfaa5a3f5b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508f1c40-578d-46d1-90bb-71f34930b797",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cff300-2b43-452b-9ee3-3dcaa1af1f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e636ff8b-3c65-4b4f-b33f-dfab1b2168bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec653f4-3bb1-4782-9c69-291dc23c04b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6168fe4b-79f9-47c1-ba6a-fd54ac982715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d8f62-cecd-4211-bd3f-04542af4c3c1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8fd1a-c2a2-4f4e-9219-643c2e6fc771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177058ce-48df-482f-a41b-03d1bd909a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e263164-b4ac-4957-aeab-0b4aca554918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f89d31c-e7b3-47fe-b23f-8a96c3e352ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a3dbcff-1788-4d55-a089-2311534d78a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fb86c02-4ce3-459d-af30-57681a0e0f0f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c687aa37-6288-47b6-93ab-b11ac5f38386",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8700e1d2-61f2-420d-80cd-db17437ddce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24fbaac-5d63-417c-9e43-1adbd0b27dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfb5d44b-5e1e-48d7-b67f-9371bfe95f07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19eb5dc2-6674-41c3-8329-bc80219811a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e481b3bc-f54d-4173-aec1-9b307967d0b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e51108b-8e72-492d-be00-ef2642f72475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad2a33d7-c0ac-4f2b-8570-b2dc7fa70f40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "008fffeb-d704-4541-8c88-60241568e12b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dcd11e26-7e25-4711-8969-761a7b3ac373"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ef47569-0408-4404-9f35-526bb4988e83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cc58e44-feb6-42b3-9af1-c52268f1f716"
            }
          }
        ]
      },
      {
        "id": "4d1fb5db-b882-4e7a-8c38-b9a8c994ff26",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f1a66306-1003-417b-8962-e728a4b775c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "408cd4c0-ee7e-49ec-be58-393a5a3567d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3aa3125c-8d72-4bfd-83d2-35ed7725820e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fde2ec9-60fc-4cfb-9103-d46430503464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2695bf-d7e3-413d-83d9-43bedadca7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ce3658-7660-405a-acb6-5834731e9ace",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99ae9c3-9651-4ec8-ae23-9459c392d4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3277859e-ca01-4ba8-8237-1e6406ff4398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b6c388-3ab4-4f89-9b2a-acf8db9ee7e3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf231519-0979-411c-bd46-8161d3c90800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b57bc68-3400-49d2-859d-c8f583066fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc8bc6f-0f8d-4068-92ba-9f68a68b2e40",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f0993b-6fe6-456a-aad2-36c94f3307b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bc71cf-5cb6-4ee1-9d66-e7f4eb022a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbad1115-2719-4dee-ab9a-fa7297d5b0c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa8031a-a423-4fca-9557-6809830696ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b76ecb-e09e-45d2-8bbd-4006186d2ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fde012-5b1d-438b-a0e2-ea707422398b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226c6b0d-36fc-4b2c-a05d-db798c50e271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe679a63-76be-4a34-abcb-23b132031523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310f68e2-8cfe-48b8-91ef-580c4b98af6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78cad6a-7ff1-4519-bd18-c52cadf043aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f5eb76-465c-41a0-bea9-2fba771831f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f7c89b-af28-4254-b876-15e6ef739c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f38614-a946-4653-afa5-9baf96db6eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f39ce9-feb2-4513-8d0d-6ea6909d8e86",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1160b10-0e16-4fd6-a272-4641869441a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b70eb7-c641-4a33-8b08-4aacb83920f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815aa160-eff0-444d-8311-a231facdb2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e8ad26-446f-442d-a204-f4af18eaa0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bbd9dc-8639-474d-b31c-9ce606a43c07",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32e430c-9e77-4853-a1ce-bfbef2ea6f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0291fc13-153a-48a1-bfbd-ff8bd08f5dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd13f289-97a8-4b65-8446-c0b3be5b6623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15eae69-db49-4bb8-86c0-63be46c19cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f814f5-9ab4-4874-9e10-141878bb3787",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18336c67-f27f-4e97-b461-97ef6639e7c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168052b9-a122-4dab-b4df-37609483bbed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1832f4db-9ba1-4d08-935a-979ffa4dd366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb934cd-542a-4f4e-b889-48b586a43943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33327f2c-3ce5-4923-bd0e-da4c0acb70ae",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0e2aa6-3702-4e2f-9179-1b6afc0609f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e34fc2-7a0d-4768-934e-3859e0da5c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7139fa3a-0a8c-4a2b-a79c-9add4cbd7697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ea2db6-ee4e-4eb2-87d6-3b712f36f4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0c202c-e4ac-4354-a502-11a08173643d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78fe47a-ce7a-409e-8180-65509be87923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689ab32f-2419-42e0-99d5-616306c9c2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ea65f5-95de-4a77-8467-1c9208091454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39711cc5-ff8c-4629-9fcd-d03fb08ea8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436dfdc2-8964-43a9-ad4e-03f88ea7f50f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b06d17c-6fb6-4205-952c-bf2c30c79b70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8448aa10-f978-4b5a-8e8a-9680ce901ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552a86b5-80ed-49a2-adc5-f7c82f4dc095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102167fa-23a6-49f7-92c6-d727b5faacde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe56b0b-316c-4f9b-b0e0-d07d754eaf22",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91e7105-fc79-4d8d-aa65-3cd2628c2da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e321887b-e99c-48c2-845a-3b32a2827fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d72413-99c3-4657-a75f-e10c0f0a49ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fecffa-2734-4d7b-8471-cedf858e8da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e208e3e-4ef8-44cf-bdc5-c43563dafa42",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bed4b4-bd1d-467d-9b1d-bbb89acd33c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3488283-ac53-46ef-b907-0d5dc673af97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e52a6d-2aea-403b-b2f0-a95103dcb799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ea2b8b-cbc6-420b-a6c8-cdcd47d6d997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04b1739-fb10-43f7-967c-0fff13775c43",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f24ffe-3c09-49b0-b36b-a951042b943d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec51e85-3a85-4b8f-86ea-f3d18544064d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f836c8e2-8e2b-4a5f-ba7f-1dc2f81b57df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880c1051-cc68-49c7-9ac4-cab4ceb68f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b72d3d4-b8f7-4461-82c0-837ec965e1e9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4be5853-af63-4d19-89c6-2a9ce35c9f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd93eba3-c4c1-4396-ab2f-40e0608df1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb15ac2-178f-49ab-bcb6-4e6bb9f6b853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a83050-fb2b-42ba-81e8-ea0649ca89b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2850dd-f303-4b1c-b329-9c8e5f7833cd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feb4cd4-dc8c-46be-8fce-18147ad9ebfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0950a213-874e-44e6-aa8f-ab0e38553c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc65e2-eeca-40ae-a6e4-5baba5a3049d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa6b3e9-4ffd-4252-acad-432b636a52ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856c88e2-beb8-43d2-bd8f-e25636b8e06b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879b5baa-acae-4c38-b88d-6dd6f97beec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2331b9cc-0643-4b57-86f5-a2075ffa054a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49b2932-289f-470b-8d5f-2df5fbea6943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa9757e-b413-4684-be57-e5021836e793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39e63ff-94d4-469b-9718-78617ff0b527",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc813110-4485-4977-85b8-af28da995d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63753b4d-7b98-437d-a75e-5fad3ff02107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615dd952-6fad-4bc1-a7e8-537e18c95b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbef602-54a3-4d6d-aafb-d1e0c59e635c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c013be95-d589-43eb-aeba-6079af53b5f2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55abb947-3c3a-4d35-afbf-940396dcf079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1a6ea5-7101-4ed2-9932-7732e484af38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fd493a-ee9d-4218-ac79-f2756b48e86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f794c2f1-1672-4340-9a9c-338edd9c8e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcde5c74-f89f-4aac-812a-97ec48bc5aa4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630ed01c-d6cf-48e0-a7f2-008d246cf63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43fbf9c-9a18-48b4-afaa-64920c64f4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b70012-dd72-455a-aede-a73614ac14ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace68a78-fe9b-4e08-8dbe-88cdde156cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13e6e81-cb90-496a-ba4c-e9f0a5798b52",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33779e3-8ef0-4c2d-92f2-7fe999780c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f8cd70-dd4b-464c-a264-dc52b4eb245f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0329d031-c2cc-4cfb-9c24-f02660925dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dc2409-d505-44dc-a3be-06f628083633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11416bc-d539-434d-b89d-4b54b2ea1d56",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e29abdd-3ef4-4a72-8055-58ff6eb2c85a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86659912-4ec3-4017-b923-4ce32fb9c224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a24ccb-5d64-4e9a-aa0d-363f02f248ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d334baab-18a4-4f04-8aa8-a7851fea6a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3badacbe-5b99-4f77-995e-f51fa1b6e77d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a8ccd-fa0c-47b6-914c-bee11a74bf50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855827a5-3bb0-454b-bfcb-5cc1d2e571b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187b35b9-b58b-4cdc-a054-aee092220be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa39715f-61da-480f-8ae4-e9a80414acb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07caa779-b101-4cbe-8ada-a396e316f87e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ee8af7-a1d5-4c19-a672-6528e9085a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88dac669-dfc7-4b01-b6e5-98c167507572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899bc808-7672-49c2-9181-9e7afe9e27b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3963fbae-549f-4e76-a5fb-021a8db3d93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e44f521-5e9f-41dd-bb65-a4153b30f70d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5eefebc-460c-41ed-ba45-15ef5f4b8e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca79742-e755-4bb7-9535-3c8a25cebc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceac5eaf-ffd5-4e6f-ac84-aa6cdd09f825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171f4ca4-9740-449f-961b-9544260ab993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500f1ea7-913c-4920-9077-0edf1c70d38a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07589827-5770-49f8-a795-5acac2aa8840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d7ff53-49a5-45ee-be63-1132f047c5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cef5d5-fb2f-435e-8e3b-b6b0e07f9197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f17dd4-9c5e-49b3-991c-e8e924cabe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40edcbab-ce95-4209-84b3-96f4d4c924c4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31365186-d485-48ed-88d3-afbe324ae784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd55a299-b23c-4450-aafa-66ac395e0f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821cdaa6-b179-45c4-8494-39176467dedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc8a944-722d-4f5a-8351-b4503dfc9fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aaaca8-2b5c-47fc-85de-33ed5d7b0154",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964a6392-dda6-426c-b7cb-9cecb66d0422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532117bf-73ac-4fee-97b1-07cd011e952f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef636272-ff94-4d2e-8a6a-5e83c2c1460c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b657d7-8582-4b9a-96a5-d5383a6f2aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb9b50f-6a8f-48b3-a6f4-6d35e8c6019a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd72bf7-a43e-4cd4-b7a0-17501943ea1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a056d31-be08-42d0-8163-c6399f166ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a7bc8d-4388-4b98-885a-89912af11124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9479442b-40f9-41e8-95d2-cbaa0ee8aebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecac9e9-e2d3-4b85-be2e-af4aff8f17bb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9a42c6-ffb5-4b62-b78b-465d04c1f253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a3f4bd-5a3e-4df8-a148-97b8b5bee41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f027ae7d-cf29-4d1a-9efd-1fb32b6ed509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf05df1-b5b8-4370-a02e-5772e130d2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86445ec-49b3-447e-a393-943a5301330d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c396ff3-d7aa-4922-9381-08599c5e855c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e928ead-d403-4d59-9f16-970d7926082c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886be849-6477-4b1e-961c-35295471b153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a9c9ca-eeab-4e2f-b536-0e4c77b76ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06a5bea-4295-438d-b262-7279db2b7bde",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e05cc0-d88b-41a1-8d11-4dc10bd2de9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04500ba8-d4ce-49e5-829c-adbfe938baee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711fa807-f696-4102-b897-d6c83829cdea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21032dfd-3417-4c82-ba56-2fa7c76b5974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94e67c8-4a47-41db-8b31-23486ba9996d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86794f6-4d36-49b3-a860-0b824f3657e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9b4fd0-bc5a-4346-948a-4b896f7b41dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a251b40a-b2cd-48a7-a3e1-9fd07dfa0e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df15d7c-31f3-44ec-8b56-b6a462d209ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92552dad-bb77-4e80-8c04-05c016b58315",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e00c7f-174f-4f79-94cb-4fc79ca83a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3745148-44c9-42fd-8cf0-d9bb79a3336a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1e898b-7799-44eb-9a46-b507d23f7e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a536a395-5e95-4242-93b4-4566051f2b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d90b80-c07d-4fa5-8933-f1356490d50a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dc0a97-f0a9-4c06-95cf-e76f2221a3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d70674-b3c2-4bf4-8072-f6b2373bad1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff111e5a-fccd-4acd-b7ad-550620c5171b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83a94ad-184d-4f5a-8dce-f9278ef8b232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6c9c5c-0dd1-40c9-9242-1dae7c06f568",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1045c9-7cd3-494a-9ced-03d91660c55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e32fd30-89b4-4579-a258-c6f17c672379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3d9222-f1d2-4623-86b7-ad6a4aaffd09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f740fee-5034-44ac-a8ce-527f7b53b4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41955891-88ac-4738-b181-1fee8e28ada7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6311bd22-9c98-4838-b706-cf88cc070b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d18859e-f67a-4fe8-b8b3-84fe17b22340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d748e99b-03bd-46ab-af5d-3ca21e9ad5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fb0f0f-61b4-4de8-b522-36250e87ed43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d57d59e-d1a0-44d8-a54d-c8031f71e6bd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dbe78a-b99d-4834-bce7-db4a79a56912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6e1563-e7f0-4a27-84f4-a2c0fe5afdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5692daf8-d712-4861-a825-7e4d885978c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca00eb53-25ac-42f6-a346-ec6c71097808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8e86ab-b65f-4ce4-a571-ba3bd115e974",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f8dbc4-6706-46d0-91dc-20ac6a6eef96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53679116-41d7-40c7-8c82-4366e7e93315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab36de4f-cfa0-44f0-aa45-1af7bfdcf74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f767185-ee43-4ec6-b024-3f3eaff4cd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dba0bb7-415b-4b8b-83df-8124847c333a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cadba6-5c93-420a-b812-7307d90ad4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98fa7f9-03f4-4cbf-9a7a-dcc3f3d3af04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8437ce9-7000-4e37-82fc-0e744dda8357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d02ecd-b507-44ee-ad33-183275edbc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b660380-e00f-4fca-83b7-2e6b69693128",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6692d456-c232-49af-be8e-39e4fdf24dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71afa01-d49a-4dcc-95a2-0e0704ee2da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c649ce-0dcd-46c2-afb6-852d3b4cde3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f859d6d-4528-4f0c-8cfb-bce6382625a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3ddc42-4324-44b1-8c3f-12de43e4f923",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaf2079-e279-4b00-804d-0641587a24df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e5a732-925f-4e30-b15a-e227ea4e0e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710a5fe5-613d-4aab-84ee-f38cdb672314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb7f4c8-7ef7-4a49-b471-f874e685f47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da548c0e-6eba-450d-a872-785714a01054",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df233cf6-eb02-41bc-b557-ddee20d23e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da906ab0-e329-442c-8d0e-2254c6e081a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b640f183-0a54-4766-98e6-c4fc2909cc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e0597c-f906-4fec-82e8-b019b8450016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bc700e-345a-4c59-9063-6c890fb5e324",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d952836-19fa-4c16-bc1a-ad3aa333ac5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a974cfc-75fe-4c02-813a-f129daabb0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e68ca-862a-4e51-bbcc-7302d8b86ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa09a3e-5a0c-4878-815c-f813cd0f8fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2562e15b-6d77-469c-8e6b-a66a6b5c5a24",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1011fb79-6146-46bf-870b-f8686be1eabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31a5752-5460-4ebd-81ee-7660df5bcd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f67dd53-fcb6-4b3c-8f74-72ff7cb793cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a416b317-5332-4366-a0a7-383c4b2352e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d19c52-634f-44d0-b871-8836cb31d50c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9f179d-8fe0-4437-b1ed-f16470b17cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bea1b8-78a3-4cd5-9db2-a138a3d432f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ef2ef4-c478-462d-a8d5-6ab10a5f203c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa7836a-95d8-4c0e-8bb0-491608e535a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe1b19d-ea61-42f4-ad8e-99ce474ee0f6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14baada2-f322-4c5d-9ebc-eb1d778db9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c42513a-4bb6-4502-ad2d-1ac0ad7b1f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611ee9b9-1c9e-405f-a672-0db2a1538484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6928412-c88c-456a-82c6-5fb5617ee978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78c50bc-becd-4cbf-90af-f66f6afb7df3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b425f83-e869-46f5-9d01-ba940154d52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82da536b-1322-4634-ac09-050e659c8490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023f40a9-698a-46bc-95a3-a5fb1ff0dbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb94369-f9a2-4196-8a05-621b11083e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b1fed2-bc60-4625-af32-adaf638c6a06",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce60496b-3fb8-4b10-ba15-ba97bf7f8873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d03f62-be72-492e-9b57-6b9733f9a05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa605dd-54f4-49ae-894a-c916114848c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cc9db8-08ce-4010-9dc3-2bbe679b6654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ef7b20-a1e7-4b2b-84a3-7e0f848f8e0a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229d2491-5b22-4591-ba65-12305375cfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3efebd-0b53-4c72-a532-095d0a3f0213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ceba5d4-5298-4154-8d82-97078a9c8344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044131f9-7ef2-4003-9f2a-4f76fb9a4cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb32755-6465-45da-b7cd-ba89d70cde06",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dd745d-c48d-4976-bfba-2ddf60757af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97a36c2-b848-4a27-a776-f1667ee70697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f683c57-424f-4343-ae4d-cf8fad4ea2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c9c9ea-fc36-4475-a349-602c79c441b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd45ca3-0400-4a21-b1bf-d061005a2ecf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a191a0-6cd2-44c2-8f07-40bfe1b0907c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd913163-f00c-4623-af70-9456a33623dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57e31e7-a61f-4210-963b-95e32170739e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b934853-7266-45fa-915f-4940a5ac7c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5ff31e-c0de-4738-9bda-af120f569f49",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94c0ab3-4cc4-4496-8447-1ffe4f50fcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f260cf57-fc26-4be0-9b4d-4bec4c059e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fc8a50-e63d-49e3-9ad3-1fad17275df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7930283c-b4f3-4936-92ed-ef4a2b63c24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925c3474-975d-406f-94e4-da6cfad7fb67",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab123533-b6a2-4600-bd04-09f4fe3b9eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d030b3-89b1-4e0f-a80e-b18fd5c9bfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4d3368-92ba-4ec7-8e5e-721b76829c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c633c1-2a94-4661-a492-035be55f9780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a7465d-7521-401e-beaf-01f708b65ffc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd9a509-5b26-4132-ac86-be1c0c2ad78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5b1023-05c0-420c-bd2f-1da145ed46b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f2ccc0-a7ed-41ca-9f27-57cb7b35090f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1695ac3f-5529-48fa-bcfe-9181ecb4e671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab86bfe6-d986-47fd-aa61-799652e3dae6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a004a8b-9f92-464b-8725-86943f28b74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ba5451-335e-480e-bd57-747599f70f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8df302d-8158-4051-8d75-36a5c7715125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7c14e0-3250-48bb-b8ea-61be8d3d83af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2953bf-f78c-4532-9388-11f8cb09a3f3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852ee446-e6f3-49b7-a12f-526552e28549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53fe50c-c706-4834-bbf4-6a9bb7e6dec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffe59a6-1d19-4f5a-9625-a0b60a68395c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2a2d4d-83d2-4222-8654-4ac70d4fbecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bc5f1e-dc04-452d-8159-2e032b40b80d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708c6b6d-d8b7-4023-b37d-868569e35af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cbd781-63e9-4301-8400-0ca35c653cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8bf522-9915-4e1a-ad65-9a343ffdba8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa95b4a3-9091-440c-843a-ec529827c389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723e0e46-afd9-47bb-8d91-479fcf42a086",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6780e2c-4378-4c41-9965-910264a7140d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c043b71-65a3-48fb-888d-c9f8e45343c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb09634-22c2-4363-aba4-ec4695dfac14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cacbb5-5d12-4351-9a9d-086318ff3616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94acbd62-1a34-4f3b-9bdc-39f881b4c2ba",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceb8b67-3940-4ebe-b4ae-dc434c677bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e99f3d5-eaa0-4c03-b9ac-71cc01e90f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ddd4d0-dfb9-4d8e-ba76-7f04f7a9013f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6282b8e9-6ba1-4905-8c79-c4735870033b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0961824a-ebdb-4586-ad68-dc9188143113",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de75e976-ab0d-4515-8abe-138ee86b7aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d65471-0201-44b7-840a-427a94c3637d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29540a54-0f93-4c61-bcac-badcfd8b3d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a83212-dd65-4674-8026-0b1c3f9bb3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f694fae1-7b1a-446d-b317-6354bfb8cfa0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb81c3d-00ec-45fa-848b-030cb3866b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed943ac7-dfb7-41c8-b56f-bcf6e81e2ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ab059a-ccba-49eb-892c-621cc40a1f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0378f6f-3dca-40c7-a076-7fe378f791d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaa2fe7-4a6c-4970-8a09-f906f4a1e3e4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91d8015-2d2e-4d80-8323-20a9ab638c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ed8a6d-2b8b-4374-aae2-e581dcf7336a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef2f366-a877-4f52-975b-099348e094f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c58d9b4-e5f4-487f-8481-3449232e0fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1a0956-4a74-42b1-934b-11a0b3ffa64c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c3cd1b-9aa3-42a8-ae70-c606c62b31c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4103c766-be3e-4f70-bf28-771c02bd72b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798477d0-29f2-4c5f-9599-034f530b1bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354b6b88-2be1-409a-8c0b-312757cafdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32cadc2-4672-498d-93e5-bbf222792f18",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e71d1d7-2244-4259-aa61-79d84b4438c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152a43d9-b869-4fba-b421-086e491130eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7a0daf-a83f-40f0-89d2-dd4ce42c5720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66fe9e4-9b90-499c-88d4-3b255aa62f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efe7e8b-5ba5-48e4-8e9d-c06a7849ed94",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aff37a1-0126-4eab-b709-bcf654a9de81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71954460-23a7-46f1-a7e0-537069ee9f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81a50f5-95eb-4e4e-83c1-fe7d9d96cf59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c74197-c1e5-4146-a734-9a024d043bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51999e50-9d03-47b9-b3cd-95a52383636a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd11bf49-c2ef-4bcc-b0be-9610ec82519f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b67102bf-6705-4914-928d-8f5728ab2ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47202430-1a9d-4972-8c4b-590daafbbf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d01ae4e-c990-41f0-b4e7-c5397191f451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8394031a-36f3-48f1-b31c-149d28afa8cc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34642e7a-07a8-403f-a6d4-95aa31766668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df03f98-7d1d-4165-8f74-5d03d10812f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b2c6d4-24b5-422d-bb71-1b3c35a40a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ada22e-d1c7-4e6d-a7aa-f4dd588d826e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f2ce7b-7932-4580-9e74-12d1a7bb5876",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f028bc7-3cac-4824-a37c-c86f6df2b2bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad93639-6b61-47fd-ab18-7f21ae986472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e3bc3f-76a9-4fee-b9c4-9e67f89f154e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74624e71-99c8-47df-84de-b37c1eebe17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a74faaa-0c2d-4e80-9131-283643a6272d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd69cc52-0fe5-4ea2-9381-9a638921b6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ecd0cc-0c4d-4cf0-970b-2504b1c702d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1a1bfe-4635-4a50-9bcc-d82f0c1dac7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0d16e5-c3e5-4703-abdd-faf340a1db0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f1560-34f6-45c7-adc2-8f7e03697fc5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a086304-6d69-4c03-97e1-e52c2b38e027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15fa58d9-d698-4b78-bdd6-36446e8c52a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea5034d-e698-45f1-be86-ef43ff4e1586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a469f5-84d8-4b74-95b9-cb85d56d9c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e4d861-91d4-429a-814f-5413cd3af8d3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3964413-509c-44fe-a9bc-ae434b1f6996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55753a38-87dc-47df-86ef-48b1e0afe070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b200e-d1ee-432e-8de5-665260f5f9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a64a2c4-10a9-4aac-ac82-553d73270d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec69d158-88f0-4052-87f8-af0eb013b4a1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75c3d30-7b1b-4f56-924a-c552b07f4202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9498a25-757d-4348-bbdd-90d904ebe000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da134b75-a6da-42f5-af90-c282a2ca5de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71c4436-550a-4e56-8553-2d3a2582150e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5c048f-e1b2-45d8-bc76-7f54a1f134ac",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b2dc31-bc78-4253-874a-14d5fc7a4082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cddc2574-43e4-4a07-878e-2154c9d03cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc76e97-8805-4b26-8c05-a45c8957f853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d7f3be-b21f-44ab-b4bf-b8122d07e827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b1dc0e-5609-46e0-8d50-b111b202b576",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9118ad-cd23-4438-92b3-3a0796aadeb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "538150d9-a411-4ef7-b33d-74b20a92862b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f7fb87-4dd2-4b2a-b659-7f2be974f794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db0d7a0-b702-43cc-b2c7-70ef78e647ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cee0a1f-c6d2-4614-a6ee-29c9a33d9a55",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705b64a6-4a38-41ae-a7f8-b52495c15186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a77e96f3-dd19-4b57-8b92-7117e4d99b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7078fd-4664-4ae7-b8e8-4b6c93acac6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba71422e-d865-4320-81ff-5c5929070ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ba2833-29db-4c3c-8540-c2cec3374f49",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8482622f-5e11-4851-866f-88d170b9421b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6670492d-aadd-485f-a0f7-5c737e04f34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2558fd-aa94-4623-afe9-544330d2ac33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a83fef-85eb-4a4a-b062-f843a7f50edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dfe221-d769-4ec0-b9d2-a021960ae000",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb837b0-fc35-49cf-9a5b-bc499ecacdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee7170a2-6bcd-4bbb-87e1-b6272beaba71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e32d8e7-3b67-4a00-9eab-2dc669f7106b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8917f96-e51a-40be-b29e-297a4479d283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f23c17-003c-4f03-b6ec-983a62ea893c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8603c15d-06e6-4d90-91cc-260c9fc6cba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbab163-dcfd-481c-8936-c4e22ad09c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3b9bc1-dff8-438c-b282-bc21e2188aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a982e13-d0d5-4658-b90c-5976c6481987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c46f78-1487-4593-a562-3488eb1aecaa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4889ce96-a3cf-4dcf-a18b-8e56916d6ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea550213-4ce9-4d16-b163-9393ac362163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6b2950-cea1-4899-83c6-5d5a45f8ba75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7f7bf1-eebd-4c01-b089-a8b6c895ce62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb67792c-f7bd-45e0-92e8-30722fb975f1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d503543-36fe-46ef-aae4-0a9b99ef846c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41a0845-8703-4db6-a8b5-8947d1fc49a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8b59df-cfd0-418f-8e91-3dec4255e9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60247ee2-4880-414b-be98-1e959c84e5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91a23ee-f5ee-4e79-a599-b30c637f7833",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efd1fe2-a7f7-4037-a199-73460b5431fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a89cd58-1739-4f0a-9a3e-4aa80656bb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fedb2a-f8e1-4a9f-bc10-ecf7e96350ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b1f17d-a632-4532-b41a-3f793b652ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7932821e-9678-4e16-8a65-dfd23e252f26",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcb6f23-88a7-4df2-99a9-ae94a7d5c32e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b5214c-6f20-40cd-a8e7-d8a1d9d7b919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e228ac6-cd17-4794-8d7a-07fd575bb7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618286df-d7e7-459b-a784-eebcc12d377d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df1bda4-8267-4542-86f6-8a1756962829",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e41151b-b741-4d4f-afe8-00f79f07067b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377f5f8d-d49c-4b57-8670-a80621eb0abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee251cc-01aa-49a6-ad9a-5597c777d086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da00de73-2268-4227-b699-aba65bbf0099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef17d86-23d5-44ea-a90c-e52467908fd7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d033f089-9b38-4d79-b5fe-15fdd5843d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "763de74c-e4b2-4626-aa37-deb4018de9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1012949-836b-4e55-81df-01046894705f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8476d7ae-0889-4f8e-999a-cf1dcdcad557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6bb551-fe91-4517-b06b-b88c95f11b3a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd38e086-63a1-436a-bf26-c7a245bb7293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff217ec0-cf99-4137-830c-152c57d2ae74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3572aac3-538e-4955-8fce-d389fbd46a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9e3726-7318-4e92-bc00-2120bdfe6672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be20b8ac-7b2c-4f26-9263-604bf4e16136",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfbd3b8-2401-4bf8-8586-68f4b7b9a8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee82ed1d-5ab0-4b92-b7b5-bc03c1b0876e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5017ce9-400f-4ebf-9cd3-f0d463816c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8f6142-cae8-4f90-8128-e70cbfc3d98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e416e81-15bb-4ac9-9e14-9e7d786313e5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c9b6fa-c566-4cf3-91a9-b3f773fd5203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba39cd19-361e-4758-8d29-26071320422d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab474fb7-935d-477b-888d-fcfa224c92f6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d7036f-54f3-4515-91d3-9bac7bbeb767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a8d887-3534-4936-93d0-eb9cf4dfe067",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097cc3df-87bc-4e43-8f5b-abc1eefb962e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d088b7-e811-4ced-9a9e-e5bf73ed1b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2736b682-bce0-4743-8aee-41dd7e47f78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d802792-00a1-4f4b-99bb-4632caefb27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5c40f5-fe82-4625-9105-31569a7467a5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e422562d-7ee5-4e7a-a452-3728f07d126d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a1ee15-574c-49f4-a5e8-59e1da8e32b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45b301d-72d4-4f9d-b196-38eac46474b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e44d89-8edd-453a-a257-d0e4d130bda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc25251-de44-496a-a5ad-376fafacdf99",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaae204-59cd-4a6c-8f7c-d9df7857e3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdfbb88f-5534-4bc5-93f2-7c2f67284ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a65f55c-6645-415d-82a1-188ba32792d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e74f8de-d308-4416-b2b6-c788a2b33491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2e3894-c29d-4bbd-adeb-e9778e0746c7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84f4413-3e43-475f-8c48-7a69efb7381b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11d20da-005f-47a8-9837-3f97a3a3e697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1aeca8a-3757-4e87-bab2-91a00c5edbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197844c9-aad4-426c-851d-f4bb44da5bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4beb22-fbe9-4158-9856-c13a5faac1e7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41bf6d7-d54b-4616-b1a2-55ec383d8d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8df166f-8668-4c29-ade0-ee6c7087495e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b7ef5e-6f97-4cd3-964f-58ef361d5b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2b7b6e-4d6f-48f8-9316-cc66ee32e39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f8d395-0f5e-4829-a355-127d324cd998",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38467a2c-fb58-44f1-9647-2bfbc16e7faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69aed089-671b-412c-8f8a-8c6c226d70a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f792b5-f965-438c-8647-73629be081e9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c567ea7-8835-4bb7-ae35-4bd506944e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b061b2fe-98bb-4ea7-8418-11932f15be3d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1479bb23-4738-4ea4-9281-48e44e1da351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b671a452-496e-4cea-904b-7586736f628c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f10597f-ab11-4f29-9e45-4a2c4be2ae38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90092db3-4139-40c8-9f7e-112435efe45e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6373209-c7ae-478a-8524-bf4b112ef8da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fcc0f80-9a48-40b6-b69e-2bb9517de1ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6f9f8c6-b409-4cf8-84b9-7b9781582360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd60e5f5-a01a-4c50-9b97-29be6ee44fbc"
                    }
                  }
                ]
              },
              {
                "id": "63e76c5d-d9bf-4a4b-a732-2974c04be3f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0dcfbea8-2be8-430a-a36f-928f338a88e7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3125879c-0fd2-4cb3-8c92-1997806cb3f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "79c34c80-1e53-4ca6-b231-b77aea7faf91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc507dc9-be81-4781-ba2d-a10d2328ceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "995896a5-50b1-4995-90e0-61b4d1f85ba5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe8affa8-fc30-43fa-b5d4-40ad275cd082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5c9865e-17b5-4e37-9716-15d314fb320b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf1ec770-e7ca-4a0e-9c20-893996889ed0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2953421-729b-4761-a718-bcb70a101587"
                    }
                  }
                ]
              },
              {
                "id": "ba430ed1-9cda-4d70-9ad9-6818be269236",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9cbdf917-ffe9-49c8-b004-a17fb717cb01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aad974-999b-4ae6-b961-f91160319221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c88ab6ba-51b1-4b25-8302-3bdbb6ff62c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8b1c8e-55d6-4c01-9eab-9d56dded36ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2e6e26-5cc6-4fa9-a0ea-916121fe3116"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8df8bd09-d9fc-4c58-827d-f8d3e36fd0dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d069f2d0-232c-4ace-ae35-b4416b4d744d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca350780-d903-4e94-a35c-f419ef562dfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3185cedf-6a96-4613-abaa-8fc5a0230bfc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65ba5b2e-8600-4580-a8eb-49d1c5ffbeb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bbe5421-ed78-4bf2-aaac-d9272d2cabbb"
                    }
                  }
                ]
              },
              {
                "id": "7df8ddce-a00f-4743-b618-3de3357e6872",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7975d6a0-8184-4f99-89ca-4031183e2005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "962df289-519a-42ef-bc7e-c9cc3f0cee8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a73bde0-5f57-47ef-880d-c40367792470",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "082e8836-9201-42cb-8e76-b3818b4f3ff9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "559e2b5c-c760-4c93-93cf-ff0eaed74b12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cb42014c-8875-482c-b724-a182b2445c9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81355ec9-eeed-4f1c-9682-cd47873b4513",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "476bf324-85a6-4120-865a-6a27aebfec3f"
            }
          }
        ]
      },
      {
        "id": "ed18e246-2a8c-4307-9216-3a44d4afa477",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6353d882-a5b2-4b96-96f6-9ad48ebcb76a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb7e42a5-f847-41cc-8d50-44e3fa72e7f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "581109f2-f89b-49b9-b621-7a97b2ca43a6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cc8366-1e53-4d75-b90c-8815212614c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5a1d8814-9017-40d3-95d8-cb1e344f36bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60638008-5603-41a3-8c23-032b6f5f063f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90c99980-610f-48af-8995-46216315f53e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6a81bd7-1764-47a0-a0fe-d3ae5cb3174d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6d1494c-4b27-41e8-9b18-70125d99e7ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a560ad72-36e8-4bbc-972a-26f57f718709",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9397c86-d1f7-4190-933c-bb86d6ee680d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21087fbf-f8a0-46e2-b4bd-6335c456a2ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7db78eec-1bfa-43cf-9fb4-4e1bf0421d71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47a080ed-2c8f-473a-a156-038e986f57c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17dd1d19-98f2-4b20-b9d9-90ef7a30635a"
            }
          }
        ]
      },
      {
        "id": "26ff5d1c-503c-42ef-9064-ea7566da6d50",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cafb3218-a1e9-4864-aa5f-1028bcb07582",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d31f3a38-e689-4c9a-b27b-8934e0b92c9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fe18ac7-3751-484b-9b16-3ebe1af21dc8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548ac9c5-52f9-489e-82b3-0dd5dccffbc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b4aca36-417d-444e-81cb-34de37b74a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0bd851-fe2f-4a33-ba29-445cf4d51327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3066e042-af72-4b4c-be55-2726c6282844"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e804a38c-c154-4ad4-b35e-a287f99e6ab4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "728e2192-4c2e-4aad-8c53-9c8a211880e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "771ea09e-0d17-4c87-80a9-42d4045e7de5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e90e036-1b7e-47d5-9275-cd544d6c2093"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "618af44f-6bac-414d-8770-8485f232081f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d10d3fe1-9c33-41f1-b36f-59e842d8833b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d25c5a61-88b4-4245-8c21-9e6d9b2ff675",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "436a9b9a-ba28-4d57-8e6c-96b79b03ecc5"
            }
          }
        ]
      },
      {
        "id": "2e888b82-b68a-4daf-8bda-5e8e854ca92a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "230b8dcc-7e4d-4ffe-ba6e-6d905de60ac9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a91c7434-c8ee-46ac-b4ff-4b691c91428f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db96b092-f38e-4078-8eb8-05877d5708ed",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01d7f9e-0bf1-401b-afcb-e69e585a6278",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fd51fd7-4b90-4531-809e-af061be9cbbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa0321c-8d73-4404-8150-44df73c829e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81fdbd1d-5622-4dbd-bed8-be3379bc4d29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdcc090c-8ce8-471a-ac26-1c6b050abd7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e98e8a7e-1b5a-48f2-ba1d-db51ac2c51ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fc66e59-adef-4a93-8c01-007f6fb80407",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "426ad8ad-1621-4719-8959-f3d2e997946b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e46dc93-e5b9-42d7-b14e-b88b309ca585",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "895ef765-d55e-4841-a9d5-a7ceddfd2c44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55ab7c0e-1559-46e3-bcbb-21fa374f0f0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "086f92d3-bf42-4137-95da-f18f95914495"
            }
          }
        ]
      },
      {
        "id": "379e3d9c-a6ee-410e-aa8d-bc2e5b238a77",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8900ceda-793d-4fe4-9ee6-08e43cb05d43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49c29c83-4223-40cc-b903-9631c3e8a5fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b1d85d26-e2fa-4500-88f7-b23c980c31e4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "912b6b56-35ae-4026-845d-2836be5da3ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e89d941a-a70a-47e2-832c-c9be2230f065",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.78947368421058,
      "responseMin": 5,
      "responseMax": 2942,
      "responseSd": 358.3761885516049,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702514129406,
      "completed": 1702514171853
    },
    "executions": [
      {
        "id": "02f81a91-38ef-40fc-9363-457fbb6b1082",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7b0301c6-e68e-40f4-8322-c760e5442848",
          "httpRequestId": "c4084f1f-8050-45d4-b9af-fbe63691d3ea"
        },
        "item": {
          "id": "02f81a91-38ef-40fc-9363-457fbb6b1082",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "246c6217-020a-4162-ba1b-ea4c015e1902",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "642e89fa-5355-40e1-9507-33cb37a3ca49",
        "cursor": {
          "ref": "ff37d777-1f22-4534-849e-55a1ee3c2f6d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0cfd9d3e-aea5-4a70-bf1c-4c0808f7d720"
        },
        "item": {
          "id": "642e89fa-5355-40e1-9507-33cb37a3ca49",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e1352d0-8ce5-43ab-abbf-ebcf1d4f7157",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "18169457-3785-45f1-9dc4-50e8f3dafaa7",
        "cursor": {
          "ref": "fbc5bdcc-1a68-452f-a83a-6e5e3226027d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4d31d603-d1c7-4bd0-a5c4-1eb040952ce7"
        },
        "item": {
          "id": "18169457-3785-45f1-9dc4-50e8f3dafaa7",
          "name": "did_json"
        },
        "response": {
          "id": "25a9edd7-bd40-4c63-b8a2-d1cb26a5a953",
          "status": "OK",
          "code": 200,
          "responseTime": 552,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a7d9ef-74f2-474a-8645-50af647964b0",
        "cursor": {
          "ref": "329d5159-000d-48f1-95b7-1035e3da3f53",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e0b13c21-8529-4ca7-ab21-ca188c68ade4"
        },
        "item": {
          "id": "82a7d9ef-74f2-474a-8645-50af647964b0",
          "name": "did:invalid"
        },
        "response": {
          "id": "8ac09c3d-3d88-4525-80f9-ffc75b488edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a7d9ef-74f2-474a-8645-50af647964b0",
        "cursor": {
          "ref": "329d5159-000d-48f1-95b7-1035e3da3f53",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e0b13c21-8529-4ca7-ab21-ca188c68ade4"
        },
        "item": {
          "id": "82a7d9ef-74f2-474a-8645-50af647964b0",
          "name": "did:invalid"
        },
        "response": {
          "id": "8ac09c3d-3d88-4525-80f9-ffc75b488edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e60592-7d62-4c01-ab92-da5092c22079",
        "cursor": {
          "ref": "73325001-79ec-4b96-b1a8-965f05171d40",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3e7189da-ad4f-4dbc-a2a3-4a1a69b47ff1"
        },
        "item": {
          "id": "67e60592-7d62-4c01-ab92-da5092c22079",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "acc8dc4b-3e4d-4d93-80b6-c15712df6208",
          "status": "Not Found",
          "code": 404,
          "responseTime": 151,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56096d49-9bfc-4b9e-9052-008f9a1e1278",
        "cursor": {
          "ref": "f3574b95-9029-4ebe-86cf-f115b809398f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1885d20e-8a90-47fe-b9d5-4a72cfb0e2a2"
        },
        "item": {
          "id": "56096d49-9bfc-4b9e-9052-008f9a1e1278",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eff05ff0-04e5-489f-bed5-882c85d0c7d2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21237a62-9f1a-4abf-898f-ddcbd11ddb36",
        "cursor": {
          "ref": "0c17db70-6556-4048-9afe-0b19f3e794fa",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5674abe1-37c1-4afc-9951-2f1eb78beed2"
        },
        "item": {
          "id": "21237a62-9f1a-4abf-898f-ddcbd11ddb36",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "95195101-07f0-42fb-9e07-574de1013cd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b085985d-6691-41f8-ad85-2ac422d04f99",
        "cursor": {
          "ref": "c2257f2d-a790-496f-8609-e8132b9618cb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9edb8bb7-b7d6-4c63-a53b-d20cdecd20db"
        },
        "item": {
          "id": "b085985d-6691-41f8-ad85-2ac422d04f99",
          "name": "identifiers"
        },
        "response": {
          "id": "e9395cf3-0a3b-46a6-b569-205c0bf2f57d",
          "status": "OK",
          "code": 200,
          "responseTime": 296,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2597d05a-bf6e-4f49-a0bb-513467d4a1db",
        "cursor": {
          "ref": "7b99eb6f-3f9a-4c1f-abd5-ca69524bd9e8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aceade1f-8dc1-4f73-82d2-7fd94ba6e9b3"
        },
        "item": {
          "id": "2597d05a-bf6e-4f49-a0bb-513467d4a1db",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "19b1082f-551c-4a45-9f43-fc16c3acfc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b3ac11-4da8-4b86-beed-8579c9be0783",
        "cursor": {
          "ref": "bba6b96c-b944-4224-9f23-7e4de6e910d2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "69dd14c0-e5db-4226-a657-02e9a2bafd35"
        },
        "item": {
          "id": "a2b3ac11-4da8-4b86-beed-8579c9be0783",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bf20c463-b2b0-4f38-8f55-374d2e2cc4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec1358b-06f1-41df-b2a3-8fc0edf73599",
        "cursor": {
          "ref": "e347f3b1-be44-477b-b9b1-097c8b700d36",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4d0dc752-08db-4c45-829f-a3d876772c1e"
        },
        "item": {
          "id": "7ec1358b-06f1-41df-b2a3-8fc0edf73599",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "195a22f7-8547-41f6-974e-714b85aa2797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edb42ef-c528-4716-bcf1-935aefd958dd",
        "cursor": {
          "ref": "43c154f9-19a6-4704-bcb0-5a5b8194e369",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d2c47c1f-35fd-499c-ac73-004a67eead59"
        },
        "item": {
          "id": "5edb42ef-c528-4716-bcf1-935aefd958dd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ec113990-8b19-4afa-a170-3e97391bcb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704e9d49-7454-4d8b-bd79-f265b85b296b",
        "cursor": {
          "ref": "24a66a2f-6ec7-4486-b218-4fa362080adf",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "16367d66-204b-4506-953a-6f4057002dd4"
        },
        "item": {
          "id": "704e9d49-7454-4d8b-bd79-f265b85b296b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f08a2f1a-bf27-4d76-9242-169bbe1fee39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d023c688-2010-46ac-afec-bf40fa5a968d",
        "cursor": {
          "ref": "b494e230-967f-4726-9f60-00ea548a2a09",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b3e54c22-0082-4cf0-80b2-2990c2a265df"
        },
        "item": {
          "id": "d023c688-2010-46ac-afec-bf40fa5a968d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9181d816-0586-459b-8f09-28147e1ccbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eb82a0-4b41-4ed6-94dc-7880a800054c",
        "cursor": {
          "ref": "0339b64c-37a6-4a0b-9f2b-8d5aee47c514",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9de3a64e-278d-45c8-a08f-83f7404a9b9f"
        },
        "item": {
          "id": "54eb82a0-4b41-4ed6-94dc-7880a800054c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "44ab4aaf-ce23-4858-b7c8-75dc39c450fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45921d1c-9e8e-4be2-8f01-24a611aa6942",
        "cursor": {
          "ref": "4c348dc6-df59-4d8d-b949-f1c30aaf98dd",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "005f080d-6391-464b-8c70-19b03734a149"
        },
        "item": {
          "id": "45921d1c-9e8e-4be2-8f01-24a611aa6942",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "42cd3be5-5695-41e9-a007-d61765a10186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d50e47-ee06-4da6-85c4-22e1c647ea7a",
        "cursor": {
          "ref": "a4e083be-190a-4c75-bf61-cb98cdc4162a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ee92521b-60f9-4919-9e62-30e32fcc6b17"
        },
        "item": {
          "id": "f6d50e47-ee06-4da6-85c4-22e1c647ea7a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1a708c55-8b25-4532-b44a-82cb6630bc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f72d489-24f7-4f61-adfa-c67ff0609e37",
        "cursor": {
          "ref": "7e02b651-b0d7-476c-80d5-e7ce78bd43e8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "821c2c26-b55c-4d9c-9d74-f054abd7bd25"
        },
        "item": {
          "id": "1f72d489-24f7-4f61-adfa-c67ff0609e37",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d7e94e7a-7855-4658-907d-8658df57cddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f4ce23-689e-45a7-a09f-5ee6576eaa81",
        "cursor": {
          "ref": "ecb6985f-da0a-4f6e-ae7d-20d0c0da2512",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d193b365-ae6d-4dd0-86ff-b6ac885d0b26"
        },
        "item": {
          "id": "81f4ce23-689e-45a7-a09f-5ee6576eaa81",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7246e690-5094-402c-86f5-45a641b5611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0995217a-ab33-4188-b021-3c7a62b3c016",
        "cursor": {
          "ref": "79b82dcd-c814-4caf-8aad-a10ad9250cc8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cda82174-ef32-47f7-85ca-97ed8b2f98bf"
        },
        "item": {
          "id": "0995217a-ab33-4188-b021-3c7a62b3c016",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c31f648e-803f-4c34-a3fe-a5b5e48e8a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a49616-f219-4f00-b5c1-eea40f965e61",
        "cursor": {
          "ref": "c2f72d04-9ac9-4003-9f26-b416303c5df5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a4e9ae2a-37c9-44b9-b7b5-f34ec9c1ce7f"
        },
        "item": {
          "id": "95a49616-f219-4f00-b5c1-eea40f965e61",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0c574eea-f202-40bc-817b-27a62cb997ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b920cc1-6a31-40f9-a0f1-b7271db79063",
        "cursor": {
          "ref": "9c62ada6-9eab-4658-8142-d152098940cc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "174d6546-ddf2-4f9c-96cf-483d2798807d"
        },
        "item": {
          "id": "8b920cc1-6a31-40f9-a0f1-b7271db79063",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0fff7273-d891-402a-bc3b-c12102f98888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d297df4-a7fc-484d-81ad-83c353342d68",
        "cursor": {
          "ref": "c25124b1-5065-408d-bf9f-818c56d26ace",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "59ab6020-6c6c-46c1-bab6-3926456c78f5"
        },
        "item": {
          "id": "0d297df4-a7fc-484d-81ad-83c353342d68",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7ccf9ae8-af2a-46cd-b59d-cc7fe8821ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75875697-5a8c-489a-952a-a769cb673024",
        "cursor": {
          "ref": "1c5c056d-ed5b-4949-bb3e-d80fd7efcc33",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8d407c43-bd1e-4b92-a926-62c5204214d2"
        },
        "item": {
          "id": "75875697-5a8c-489a-952a-a769cb673024",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "12b9b0d0-5896-40ef-8a7c-222b9c1cdab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f980fc7-9e0d-4ab9-b7e2-8c0b945f2157",
        "cursor": {
          "ref": "b2ca4b65-89ac-494f-93c1-a85d8671d0db",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c0866a98-a95a-4f26-93ca-1f03045db0c8"
        },
        "item": {
          "id": "4f980fc7-9e0d-4ab9-b7e2-8c0b945f2157",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b2288bdd-af51-4986-be67-46d09b9ede5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf5dafe-43e2-4223-8637-8e8bff36a183",
        "cursor": {
          "ref": "3c6fe6d6-22dc-445b-8c0f-128904807067",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9c3483cb-ca31-477d-8ca2-721f45a2b262"
        },
        "item": {
          "id": "ccf5dafe-43e2-4223-8637-8e8bff36a183",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1207c725-c00b-44ac-b37c-64b6f363e99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39fc323-b89b-461f-872e-9df0f644971f",
        "cursor": {
          "ref": "ffe2213f-e7e2-42f8-9b9b-04bb550f8e75",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "23afc1b2-908a-4960-896c-195b3fe606ca"
        },
        "item": {
          "id": "f39fc323-b89b-461f-872e-9df0f644971f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d2a1c9ec-41a3-462a-af98-6130ae70008f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9d733c-3e2f-4984-bf7e-feb2c8c21590",
        "cursor": {
          "ref": "76f142ed-d954-4147-934b-5a652801115e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9fbac955-9f23-486e-af18-5b7c21b55a03"
        },
        "item": {
          "id": "2d9d733c-3e2f-4984-bf7e-feb2c8c21590",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7845fe3c-3298-4b89-bedd-94292ae6ed0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ac2bc4-967e-4575-9f06-43f0b8e69cfb",
        "cursor": {
          "ref": "49cce2d5-491b-4be3-94e9-4c551c98dbc3",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7dcf394a-1ffa-4d84-bc6d-b3405bcf9209"
        },
        "item": {
          "id": "d4ac2bc4-967e-4575-9f06-43f0b8e69cfb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fb667614-1037-4f8f-b9ff-1a8532f3c44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1ff4d8-9164-49a8-960d-eba86667884f",
        "cursor": {
          "ref": "8c1c3f79-bd2d-4696-a0c9-14f45c7568b9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e50bc12a-42c5-464e-9d49-ede87bda56d9"
        },
        "item": {
          "id": "9a1ff4d8-9164-49a8-960d-eba86667884f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "899db8db-e04a-41ca-b2f7-6e1fb5919443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38616d16-b164-421b-a452-9e156c72bc29",
        "cursor": {
          "ref": "253bf7ad-7d21-4336-b9dc-47e1891d007e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0d2b1db6-d72d-4dd4-81e9-ea72a08be5f8"
        },
        "item": {
          "id": "38616d16-b164-421b-a452-9e156c72bc29",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3b135e11-1aad-40a6-828c-a93038f46179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b311a0ad-14dc-49e4-ace5-db0f3c3d24d4",
        "cursor": {
          "ref": "cf2b13c7-ac87-4f68-9d34-1b63a6ef9c1b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "10f7f4bf-39c2-4d3a-ba46-34473778234f"
        },
        "item": {
          "id": "b311a0ad-14dc-49e4-ace5-db0f3c3d24d4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "728eafca-c4d1-4221-9e35-03930ec614ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475fbff3-a39d-41ae-8c32-4990024b2fc0",
        "cursor": {
          "ref": "3f122550-bd30-4673-8f88-66c88693ad43",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "01c8f786-b2ba-478a-95f4-a624db1eaea6"
        },
        "item": {
          "id": "475fbff3-a39d-41ae-8c32-4990024b2fc0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bf4162d7-758c-44bb-a28c-4bdc0120a7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0155ba89-9d46-4566-b456-debbf083ed67",
        "cursor": {
          "ref": "098bd396-f7b2-47bf-a6a2-4a8fc70ad7c2",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "376708a2-d995-4f7f-96c0-a8a2559b064c"
        },
        "item": {
          "id": "0155ba89-9d46-4566-b456-debbf083ed67",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d15195d8-e827-44f3-9971-4f76eee5acf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e238290a-3af2-449a-ab89-8eed49827e77",
        "cursor": {
          "ref": "8029292c-7a61-45f9-aed4-67f7f315ca16",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a41a3dd7-7920-42ce-9a86-f08acbb16202"
        },
        "item": {
          "id": "e238290a-3af2-449a-ab89-8eed49827e77",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a749d26e-452c-4b19-bfa8-fc9fa8f8aac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682674a9-fa31-49f2-87ae-81f2f7790eab",
        "cursor": {
          "ref": "abc65cb5-28df-4c23-a531-5db380d675e5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "91287698-ed7f-4b54-9178-dfc0117a864d"
        },
        "item": {
          "id": "682674a9-fa31-49f2-87ae-81f2f7790eab",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c338b96c-9873-4886-99c1-c5b51ee3bdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441defe3-d708-4a9c-8116-e449c536b1c8",
        "cursor": {
          "ref": "ed31e397-b244-4ff3-a9db-c9a3acd7b471",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "00c1744f-6e76-4e46-83ce-ff9560f61027"
        },
        "item": {
          "id": "441defe3-d708-4a9c-8116-e449c536b1c8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4332764e-2bf4-4b04-bf19-81d1154b0718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6026eaed-5778-41f0-a99f-fa443c478492",
        "cursor": {
          "ref": "55669675-c8cf-4452-985b-be9b7ca52453",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "08645f40-b281-4ea1-b147-a5c267ccbebf"
        },
        "item": {
          "id": "6026eaed-5778-41f0-a99f-fa443c478492",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7fbd503a-1d03-4eeb-a929-6994bb06a8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72941058-01e1-471f-ab1a-8dabde10faec",
        "cursor": {
          "ref": "6a8329c4-783e-449a-8dd7-d012ab46a373",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "669e4c3b-a06e-44ca-ba96-364f2b113440"
        },
        "item": {
          "id": "72941058-01e1-471f-ab1a-8dabde10faec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "89184865-b089-4415-8560-6c3260506a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c0f9d2-d5a4-4677-81cb-e656c31bdb30",
        "cursor": {
          "ref": "882aba41-e48f-4331-b5cd-718f49470861",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "06d08b70-93c0-4ac1-ab86-42a9c7d11121"
        },
        "item": {
          "id": "45c0f9d2-d5a4-4677-81cb-e656c31bdb30",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "97a16b7e-614c-4144-ab23-fdb4af0ccc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9694b6e7-7bff-4c6e-8f63-9992319b55fa",
        "cursor": {
          "ref": "f2dc380a-806c-408c-98ea-da89b2b10558",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f1d1e107-5b97-45af-8903-a527f524b65f"
        },
        "item": {
          "id": "9694b6e7-7bff-4c6e-8f63-9992319b55fa",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "102db554-31c5-4178-b9fd-e909c597ef0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551aa800-e292-4898-a5df-39d9f239d3e0",
        "cursor": {
          "ref": "eb63c075-3223-4510-b4ba-bb90278eec02",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9eb3f971-5f8b-4ff0-896c-d9e6eac7aefd"
        },
        "item": {
          "id": "551aa800-e292-4898-a5df-39d9f239d3e0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6c68d723-6b22-4152-95b5-59f9cc6a445a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82e14ee-6e6e-4b91-b4d1-78ee62349673",
        "cursor": {
          "ref": "e00d249f-0e55-442c-866d-c9111edb7611",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "141e8a2c-d8a0-499a-951a-18e8f6005c38"
        },
        "item": {
          "id": "f82e14ee-6e6e-4b91-b4d1-78ee62349673",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d1ea0815-fd4c-4830-87bd-52a6fef584af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11660e22-69ad-46b4-a9aa-b13d328d61b3",
        "cursor": {
          "ref": "fd9c1501-e99a-46a5-ae15-7c29a367b78a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "badf2125-6306-4555-b56a-0ffb857ed311"
        },
        "item": {
          "id": "11660e22-69ad-46b4-a9aa-b13d328d61b3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5c53b458-c483-4580-b974-5e6885f27080",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 323,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2015deba-4b94-4366-85b7-cab5aa4a3f7e",
        "cursor": {
          "ref": "20e66d04-0b5c-4db1-ba31-64e3f43248da",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "23aa4b57-9d20-4ec1-af0c-45984ad82d82"
        },
        "item": {
          "id": "2015deba-4b94-4366-85b7-cab5aa4a3f7e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "80ecdbdf-712f-42d4-a16d-1837ce847dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edbdd0a-81f7-42cf-af09-32a630330a1d",
        "cursor": {
          "ref": "4f39a25b-7c8b-4798-8c49-d5f1d76203f7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bb297c7a-d859-492f-ac4a-88880f62c596"
        },
        "item": {
          "id": "0edbdd0a-81f7-42cf-af09-32a630330a1d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6710bdc8-a960-40c5-b4bf-f672a73bcf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d23d400-1aad-4d7f-9956-b708692ec5fb",
        "cursor": {
          "ref": "4bb18aad-f59f-4a00-b609-e639c9e9793f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b71415de-f9d5-46fc-b6df-ffa0ab7e9ddc"
        },
        "item": {
          "id": "7d23d400-1aad-4d7f-9956-b708692ec5fb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7bee9354-0f0d-4681-977e-267a0d8c9fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52366c4-9ab6-4490-b502-def07a0370a2",
        "cursor": {
          "ref": "5ef15575-69e4-4520-94f7-61f3b64ae55b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c317b24c-4b52-4922-8327-d178867cd1dd"
        },
        "item": {
          "id": "d52366c4-9ab6-4490-b502-def07a0370a2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d3efbbde-978f-49d9-a030-e42d4cdd6cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11ed867-c91c-43b7-8f60-85cefb1d7090",
        "cursor": {
          "ref": "24c9efe1-9793-4929-b3b8-70ac97f7d889",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "92af2bd1-88ea-49db-aba4-16fc32f03f57"
        },
        "item": {
          "id": "e11ed867-c91c-43b7-8f60-85cefb1d7090",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b77970b7-2ba3-43d7-bf52-76db198e0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf185fd-33e5-49d5-ac17-a45dbb079e12",
        "cursor": {
          "ref": "9465bcf4-77e1-4549-a1cb-36f48ccbccb7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ad1ce9db-c4e0-4ce1-9be9-50bc5464fe2a"
        },
        "item": {
          "id": "daf185fd-33e5-49d5-ac17-a45dbb079e12",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3faee9af-b449-47b5-a3c3-996626bde1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c922822-4824-4b08-982e-07ed9cc400b0",
        "cursor": {
          "ref": "0bb2b650-a525-461c-a06e-5da8eae0e6c9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0b1ff6c3-2552-4ae8-9a7b-6cd4729fc75e"
        },
        "item": {
          "id": "0c922822-4824-4b08-982e-07ed9cc400b0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e5556380-7a7e-49ea-832f-5898897332db",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f46aa57-a74b-45a2-bdf4-d2b99f1a0585",
        "cursor": {
          "ref": "62ea63f9-724b-4ba2-b359-e36f389ebea8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3b93bfc5-13f4-473f-96d8-24577fc808dd"
        },
        "item": {
          "id": "5f46aa57-a74b-45a2-bdf4-d2b99f1a0585",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6c7ad4d7-4560-44ea-a822-e22df6240065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4d7add-b306-4847-b2de-24bc04a9ea21",
        "cursor": {
          "ref": "4ab652ef-1dfe-441e-8110-6102c9edf524",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d4e134c2-663d-477f-ac60-c1dbf036783e"
        },
        "item": {
          "id": "aa4d7add-b306-4847-b2de-24bc04a9ea21",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ecc22710-a34c-4793-ae22-2c75a7cf1f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b492601-7aee-4c6c-a9e1-8367a865980d",
        "cursor": {
          "ref": "5c7526c6-7148-4010-bdb1-eda78e63e572",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b0cfa52b-830e-4a8a-b1cd-0c76ce17b7ab"
        },
        "item": {
          "id": "7b492601-7aee-4c6c-a9e1-8367a865980d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b0f84b1b-0ff5-4415-94e0-5c929e3e5088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c6a3fa-9cdc-49e3-919e-bd9335a49ce1",
        "cursor": {
          "ref": "d61fc905-cec7-4e17-a309-923a89d048f5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a8f605b3-496c-48fa-9a79-4026bad8f263"
        },
        "item": {
          "id": "d1c6a3fa-9cdc-49e3-919e-bd9335a49ce1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8bd9dd0c-fd2e-4352-9d23-05197a6a43f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af01e41-8571-4dc4-8191-f4a8cbfd9bfb",
        "cursor": {
          "ref": "655ef661-1852-4745-ba61-282d9273bca8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7fa367e8-3c4a-4fee-9893-7dfc18bc3bd7"
        },
        "item": {
          "id": "6af01e41-8571-4dc4-8191-f4a8cbfd9bfb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "884e74eb-f2c4-4f07-b4b8-f83843665bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60c403c-6416-4f42-9cd4-006e3ca91cde",
        "cursor": {
          "ref": "386451b8-2e56-4fb2-a71a-3fe4ed4ed6b8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9eb3a2a8-88d1-4e8b-8c19-c397a0c79003"
        },
        "item": {
          "id": "e60c403c-6416-4f42-9cd4-006e3ca91cde",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "04c68cd5-b1c8-4544-bb14-796708b36832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd0ad58-7df6-4446-9469-a53671382f4b",
        "cursor": {
          "ref": "f1392f89-6200-4b3f-a7d4-bb1389a740f6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9f4d2ec2-a412-4ce8-9c32-75b3f66d3094"
        },
        "item": {
          "id": "dfd0ad58-7df6-4446-9469-a53671382f4b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1a12cb34-5f69-4cd2-9b1c-83d950dc04a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd5ec18-ecb6-4397-9eff-88845f4a5163",
        "cursor": {
          "ref": "1d03fa80-0e4e-479b-a938-1ac35c76e31c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "679bfb63-f3cb-438c-a35c-611fd964f901"
        },
        "item": {
          "id": "1bd5ec18-ecb6-4397-9eff-88845f4a5163",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d6425f43-9286-4955-98ac-c55eccc28248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ace50d-d96e-46bb-b83b-3ec988f68570",
        "cursor": {
          "ref": "c0afffdf-8bef-4de9-ae9e-7f23ae3a2b73",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e0dbf848-8ba3-4700-900d-e925a9d3a270"
        },
        "item": {
          "id": "58ace50d-d96e-46bb-b83b-3ec988f68570",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c5483218-36cd-460e-bf64-5fd6249349e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc4e20d-1585-488c-8850-e65ef45fa7a7",
        "cursor": {
          "ref": "44bb74f3-8fa4-471e-a7a1-f2ae93423994",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e0e7bfc0-950f-4dc9-9369-a83aa28a1136"
        },
        "item": {
          "id": "ccc4e20d-1585-488c-8850-e65ef45fa7a7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a1097ddf-e1b4-4c67-9fb7-ce22f9816aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9af3630-44f7-4b5c-b651-7d8d5e6160ce",
        "cursor": {
          "ref": "7dd8c1e4-5c42-4319-84d1-fda309fcd422",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2bc4eb3c-f25c-421b-a02b-f6aef0378f4e"
        },
        "item": {
          "id": "d9af3630-44f7-4b5c-b651-7d8d5e6160ce",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2d692533-be19-48bb-bd35-37926b10858e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a516e14-980a-4fc3-8fce-d79586efbf64",
        "cursor": {
          "ref": "d26709f0-bd6d-42e7-a824-c7a8ccc17e54",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ba804657-3a46-4695-b36a-612ec08ef6d9"
        },
        "item": {
          "id": "1a516e14-980a-4fc3-8fce-d79586efbf64",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "284f3f10-c233-46a9-8c1b-270ab6f62ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bd4f7e-48d7-4d77-95a3-33e9b6b25196",
        "cursor": {
          "ref": "ae2ae272-e81c-4c9f-9d6d-0ecfcd84758d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bf91c6db-f244-4648-9059-be41e9c44dc9"
        },
        "item": {
          "id": "c7bd4f7e-48d7-4d77-95a3-33e9b6b25196",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "de10e686-92c1-4c13-8012-5aa3120f5036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495dd73f-c3ed-4a24-b9cd-52b66c34bf3f",
        "cursor": {
          "ref": "db89cd13-c9c7-4655-978b-58d4b2a13d7a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a8e2425d-b413-4c6f-a6d1-99307847aa3b"
        },
        "item": {
          "id": "495dd73f-c3ed-4a24-b9cd-52b66c34bf3f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "abfff7b9-9784-46e8-b002-8bb404a5940a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4016ad87-1b92-4a1e-84ca-a6e43ac795a4",
        "cursor": {
          "ref": "6a168a78-4cf1-4e69-9191-b9259760d621",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "837905e4-6fdf-4f76-af34-39407b06c7ad"
        },
        "item": {
          "id": "4016ad87-1b92-4a1e-84ca-a6e43ac795a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4d750f34-16cc-4715-b4a4-e9ff57cda82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc342908-3eed-4d8b-ab9d-aac768890df2",
        "cursor": {
          "ref": "7d125972-0df1-4d20-9aed-2975bbd53eba",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3ca282f0-a4f2-44d5-b236-7cfd1dbbbf75"
        },
        "item": {
          "id": "cc342908-3eed-4d8b-ab9d-aac768890df2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b6c134cf-cdbe-454a-9471-4b0ad556941e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59c4fb6-9478-4382-99a8-dcd46b6fa3e2",
        "cursor": {
          "ref": "1bb39d83-c280-44f9-b8ea-13feb85f8fa2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10d2ca8c-364e-43df-898f-3a9a68c41e34"
        },
        "item": {
          "id": "e59c4fb6-9478-4382-99a8-dcd46b6fa3e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e586a284-ac98-4d0f-b211-bd1769765c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c87d88-12a9-4f61-aaf8-accade8cd2ab",
        "cursor": {
          "ref": "fbc3f601-0bbd-4342-afcb-87523ab099e8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "24f6e2e6-4f6d-4664-bc76-e501c3c6aa6e"
        },
        "item": {
          "id": "a5c87d88-12a9-4f61-aaf8-accade8cd2ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27ac61ae-4f0c-4810-92fe-b23d971ccee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ebe701-d6ea-49f5-abf8-8c642493b961",
        "cursor": {
          "ref": "f50687bf-0e3e-4df3-9375-d0a144a64328",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e4756689-0e98-4fea-bcdb-e9ff08746aaa"
        },
        "item": {
          "id": "59ebe701-d6ea-49f5-abf8-8c642493b961",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "095c5bc9-43bc-4a80-bcd4-7809c3638796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec15cb-eb9e-4a45-af57-186e120f0506",
        "cursor": {
          "ref": "405378d3-3904-441e-8198-3ea26e85b314",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "40bcd0a9-050b-4c8f-b14d-9b4148944d22"
        },
        "item": {
          "id": "f0ec15cb-eb9e-4a45-af57-186e120f0506",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a4c08fa6-6815-4db0-be4d-da210fc92ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5615ef55-9c55-4e0f-b2f3-fffaa05f39a9",
        "cursor": {
          "ref": "974589cc-5337-42d1-9edb-a4e1ec0b3dfc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "85c29dd4-7982-418c-b886-0e6b5d65b967"
        },
        "item": {
          "id": "5615ef55-9c55-4e0f-b2f3-fffaa05f39a9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ad6b5776-1260-45fc-82bc-f5126cbff1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3582374a-6c38-4753-947a-6b5575fddc4c",
        "cursor": {
          "ref": "cabc43eb-85d7-4dcd-96f8-4c0d1aaa2dea",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cab408f0-f273-4d54-aa48-b7e8e108b7ae"
        },
        "item": {
          "id": "3582374a-6c38-4753-947a-6b5575fddc4c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "62fcbe95-9651-49c7-8dda-6979ca56205e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01609e7-20d8-4749-aa41-2f1997be36fd",
        "cursor": {
          "ref": "eaa13637-5450-4b84-8d16-22f69af5d4dc",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5b996994-bd47-4a56-b984-474a79e3ef11"
        },
        "item": {
          "id": "f01609e7-20d8-4749-aa41-2f1997be36fd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "982ea4be-1860-4a86-92a5-16b99ef9f7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0dcc6d-6a55-4a54-a077-97fabd9ad333",
        "cursor": {
          "ref": "7e32656f-ef90-458f-b9f9-b80928d4bd9c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "79dd75be-2444-4e91-bcfd-b31d405c756f"
        },
        "item": {
          "id": "ee0dcc6d-6a55-4a54-a077-97fabd9ad333",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d4cd6a70-4381-4f20-a185-67e929efafff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09da4f86-e78a-4e6b-a170-c4557454a314",
        "cursor": {
          "ref": "81242997-088b-4c92-acd9-8ef770739f5b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dde72d4b-3058-4588-870b-e131a15622d1"
        },
        "item": {
          "id": "09da4f86-e78a-4e6b-a170-c4557454a314",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4c90f697-ac8d-413b-8edc-5cc85afdf503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f57b7db-5334-4c22-a8fb-a9a60faf49af",
        "cursor": {
          "ref": "9e44f65f-ae02-4f6b-8363-209d26f8ecbb",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9155c7d9-7460-4b3a-9c2d-93c8576b283a"
        },
        "item": {
          "id": "2f57b7db-5334-4c22-a8fb-a9a60faf49af",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2b25381c-52e7-4c90-a63a-fb7b9e592df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ae8e0-28a2-4a32-89e3-26242cedfe62",
        "cursor": {
          "ref": "093a22c6-4283-4ed9-b2f5-38f953e1b5f6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "05322495-2337-4244-9a76-a1ef3b386ad5"
        },
        "item": {
          "id": "3d0ae8e0-28a2-4a32-89e3-26242cedfe62",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "56758fee-3535-4abc-90aa-8bc8e7decbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646f2d71-870f-4597-99cc-e73f303c518a",
        "cursor": {
          "ref": "74304b64-e905-49b6-8773-7c39c11b71e1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f8b79386-fbed-49d9-b70f-b3dc447db4e5"
        },
        "item": {
          "id": "646f2d71-870f-4597-99cc-e73f303c518a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "743c0b44-fa22-45c4-8fc3-649b362b056b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a056ab-7a2f-4f71-a635-f74fa5174b8c",
        "cursor": {
          "ref": "d8736bae-fbc6-4701-8fe8-d0e0cae43cd8",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99a8d09f-19d1-4c41-841e-d943b8e08cb6"
        },
        "item": {
          "id": "45a056ab-7a2f-4f71-a635-f74fa5174b8c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ec911f8c-6e19-4095-9315-99b4ce4177b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f0ed22-c8f9-4f07-8eb4-5a33b27780f5",
        "cursor": {
          "ref": "c098aebf-c7ee-4143-8d11-17428e92e2fb",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f299eab0-d850-49ca-8209-60f07d6e7b6e"
        },
        "item": {
          "id": "e6f0ed22-c8f9-4f07-8eb4-5a33b27780f5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "574d280f-14af-4fa3-b36a-e623688bd288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee43f101-3367-4e3e-b3de-0bec1c29b5b2",
        "cursor": {
          "ref": "5fe303d7-79e1-4f5c-84b2-8ffd748c85de",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "395d01c9-9d6d-4ff6-9a9f-697943acec12"
        },
        "item": {
          "id": "ee43f101-3367-4e3e-b3de-0bec1c29b5b2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "20d3eec3-7106-489a-8a22-16288b74363f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2b3d20-3f71-4085-9939-cf57747d8356",
        "cursor": {
          "ref": "eb0658bc-7100-4bb5-82f6-06c6e0c9001e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5b6ddff5-ad80-4abb-9f4b-46af6204ef5e"
        },
        "item": {
          "id": "1c2b3d20-3f71-4085-9939-cf57747d8356",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c96bc6bc-5643-4046-8e4e-fe02f0365bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a44115-931a-4293-a155-fa983bc77608",
        "cursor": {
          "ref": "232ae262-64ab-41cf-b854-7bf6a0043471",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ab00317b-bbdc-4f6e-bdaf-d95da1c75e5c"
        },
        "item": {
          "id": "06a44115-931a-4293-a155-fa983bc77608",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1de59748-1efd-4de4-843c-cf554ae95145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f970854-6293-49c6-983d-a732544a3e75",
        "cursor": {
          "ref": "77bb6da3-3da7-43e5-9193-70ee3dce2263",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc1c7feb-c1a9-496f-bfe5-c90c38cee170"
        },
        "item": {
          "id": "2f970854-6293-49c6-983d-a732544a3e75",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2535db3e-5a61-4181-b8b9-523f25c9b002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3795f5c-a0e8-493f-b9e4-f7838f455a74",
        "cursor": {
          "ref": "ec83b3e7-da2d-4c35-a76a-36427e881c3a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f285b5f0-0a7a-41b5-a5a1-0acd0348855e"
        },
        "item": {
          "id": "e3795f5c-a0e8-493f-b9e4-f7838f455a74",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0d51d157-c86d-4521-91eb-3daa16845326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e483050-8636-414d-81e7-bbfa80ab6cd2",
        "cursor": {
          "ref": "924c3b3f-5abe-4c91-aa76-9081ec26a273",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b5463f63-9ae4-4f48-8f0a-68941b839ec0"
        },
        "item": {
          "id": "4e483050-8636-414d-81e7-bbfa80ab6cd2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f8476042-29c7-415f-86f0-327b6ab27186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d928e9c0-665f-4e27-b9b0-d340b93f3a06",
        "cursor": {
          "ref": "f56150da-1fe6-4ad0-8660-1b749de0dc46",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "180e5207-b1da-444e-9fa4-d20860a64b55"
        },
        "item": {
          "id": "d928e9c0-665f-4e27-b9b0-d340b93f3a06",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d7095647-fe41-4d83-a6dd-b73505d1fd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ab2747-621b-4411-a081-41e2a5eea3d2",
        "cursor": {
          "ref": "c6048ea6-6844-4b01-b0a4-c824f232c36a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "98762f3b-5ff3-4b5f-85bb-4cde7ce4e0d3"
        },
        "item": {
          "id": "d8ab2747-621b-4411-a081-41e2a5eea3d2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "735ed75a-ffa1-47ed-8518-7304381ee280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19e188e-94bb-4fb6-9445-61966ca5309f",
        "cursor": {
          "ref": "cc0408ef-01e5-486e-9a72-2acd2c50cff9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a2daa961-b015-4b49-9150-8103e2bd73f1"
        },
        "item": {
          "id": "f19e188e-94bb-4fb6-9445-61966ca5309f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "431504ef-338b-4af2-8184-e022c7b46839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1361e31-6ea6-4753-a4a2-4bd86797aa04",
        "cursor": {
          "ref": "b2ece8ad-ca0e-4090-80ee-5d3fe6ed3c74",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e6c732b9-0194-409f-a3a9-bc6b7744fa94"
        },
        "item": {
          "id": "b1361e31-6ea6-4753-a4a2-4bd86797aa04",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5db4b4d8-6582-469d-96dd-62036673834a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dad418-99e7-4e84-861a-f01385634ddc",
        "cursor": {
          "ref": "9fe889b1-f86b-4ddb-8743-210dd3a967e4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7dfad071-0a69-4175-9194-238699a96f92"
        },
        "item": {
          "id": "94dad418-99e7-4e84-861a-f01385634ddc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bc7d3dd8-8ed6-46db-9dc3-3a42aa25c398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b38d25-bd94-474a-80dd-a507039b0697",
        "cursor": {
          "ref": "450275bb-9b4d-4f2f-906f-9afe06059c15",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "79ece82c-d374-4a17-8865-68eb79f63848"
        },
        "item": {
          "id": "29b38d25-bd94-474a-80dd-a507039b0697",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "90e7332f-02dd-43db-a0ec-4adde86588c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5d38e-b017-4622-9f69-afc84689d0a3",
        "cursor": {
          "ref": "cde77288-b6cc-4f02-82e7-f80e984c6d58",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8974ad80-8cdd-4501-9033-65e9c9775142"
        },
        "item": {
          "id": "48c5d38e-b017-4622-9f69-afc84689d0a3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e5573aa7-bb1e-498e-b6be-9198518ffdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3b8719-f9eb-4e9e-bcae-3fd7b4eb1f30",
        "cursor": {
          "ref": "6c5b252d-7c5c-40a3-a07b-3c12ff54dea7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f5fcd549-91d2-4217-b42b-e377a578e2e1"
        },
        "item": {
          "id": "4e3b8719-f9eb-4e9e-bcae-3fd7b4eb1f30",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "76f60fb3-13d7-4cb8-a93d-66d08eb0fbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847afbc3-62f4-4630-a9cd-a982c0f77c6d",
        "cursor": {
          "ref": "ab9b6302-c139-4f28-88a9-ec0896f2b377",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "48bafb60-a622-4ab6-9623-c12cda7c3d4c"
        },
        "item": {
          "id": "847afbc3-62f4-4630-a9cd-a982c0f77c6d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "71c31262-8191-4b4a-badf-06ce5a2ffc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c09cd13-ea8e-4872-bc20-cbc5a1023de7",
        "cursor": {
          "ref": "9bbe1faf-ee0a-403d-ab0a-c0498bef8d1b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1c8b955d-3ae3-4dba-8225-d10d54b3df3c"
        },
        "item": {
          "id": "5c09cd13-ea8e-4872-bc20-cbc5a1023de7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7f667513-87a5-4d12-8e43-fd3514745d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5750d5-ce97-4891-98c9-a58869577630",
        "cursor": {
          "ref": "7dd5d936-308a-4d89-b02a-bde9fe6d1d6e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "36aa929a-15fc-4cde-8dea-b7295025b25d"
        },
        "item": {
          "id": "3d5750d5-ce97-4891-98c9-a58869577630",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5c2c25e9-b45a-4205-8aa4-feb64c45b678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1640705d-0309-421b-9434-fc144cb2b80b",
        "cursor": {
          "ref": "20f648b0-55ce-4b00-a54c-1cf8c198e33b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "64686fea-854a-456c-87c4-732145976b5e"
        },
        "item": {
          "id": "1640705d-0309-421b-9434-fc144cb2b80b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4bd6d3d1-e70c-4a93-8d19-bd3c468fad71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618cb920-8ae6-40b0-98de-414d0ebf390e",
        "cursor": {
          "ref": "caffa0a9-4ad5-49ca-aa4b-cbeec4b1e83d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ebeb00a8-2890-48c6-af1c-cbb1b081afde"
        },
        "item": {
          "id": "618cb920-8ae6-40b0-98de-414d0ebf390e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "29d383c0-6ab4-4ea4-b16c-72ddc621476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e01e4e-269a-427a-835b-59a4f7a0b549",
        "cursor": {
          "ref": "5b36199a-12de-4968-a680-a8f7cb18e789",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e3fb145a-581f-4e11-a860-26141d521701"
        },
        "item": {
          "id": "f2e01e4e-269a-427a-835b-59a4f7a0b549",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d8fc728b-4c72-4ec5-ad23-efeb53b82f75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110f6434-d47f-4071-b8b0-80970dc12c54",
        "cursor": {
          "ref": "cff928fd-d417-4bbf-94ba-6f5c682db9ff",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e51a4bc5-d493-4123-b639-38c3da77a440"
        },
        "item": {
          "id": "110f6434-d47f-4071-b8b0-80970dc12c54",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4afc1ebf-2964-44ac-ba03-c9150824c3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "87656e49-765d-4997-b5dd-b00afc989631",
        "cursor": {
          "ref": "9306b77e-1aca-4543-a24c-150f204977a4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "93506c29-b0b7-4f3c-9a1f-39b7f1deb944"
        },
        "item": {
          "id": "87656e49-765d-4997-b5dd-b00afc989631",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c85703c7-78b7-4fa1-a354-1fa4e6dbe71a",
          "status": "Created",
          "code": 201,
          "responseTime": 2942,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ffd230-2f66-49b8-92d8-407caf303d82",
        "cursor": {
          "ref": "7b7fa1ba-a30c-4218-9d5e-110ca9f911c9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "44983d6b-12c0-45ff-b876-f5b2a0417b95"
        },
        "item": {
          "id": "f9ffd230-2f66-49b8-92d8-407caf303d82",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "170926d2-c3d3-4584-b15c-a0faa5d06c8d",
          "status": "Created",
          "code": 201,
          "responseTime": 2369,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4976f09-d874-4b4d-a7e4-a93635de02d9",
        "cursor": {
          "ref": "c35d3d37-fb91-4258-a2da-a5ca04e9837c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ffc35e99-dc31-47a1-89cc-c640cb0c0f66"
        },
        "item": {
          "id": "e4976f09-d874-4b4d-a7e4-a93635de02d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "51aebdd7-fd2a-4de2-a89d-59488bd1808a",
          "status": "Created",
          "code": 201,
          "responseTime": 2920,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb45fe8-1bdb-4e5c-a1a0-91ed0eff2c75",
        "cursor": {
          "ref": "7411eae5-b681-4f25-bc46-c25f2fedf5c3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0dc1a650-cafa-4aad-b79d-0e89db7952ac"
        },
        "item": {
          "id": "5eb45fe8-1bdb-4e5c-a1a0-91ed0eff2c75",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b09074e9-24c3-4887-9573-5151635d39d6",
          "status": "Created",
          "code": 201,
          "responseTime": 2268,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b36016-28cc-441f-aa82-d56c235127f4",
        "cursor": {
          "ref": "3452f785-d929-4908-9096-b6241b48e1fe",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a1977b0e-f664-4a12-9357-b6d43cff836b"
        },
        "item": {
          "id": "87b36016-28cc-441f-aa82-d56c235127f4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b66ce8bb-32ca-4041-9ecf-7c9dbf26e559",
          "status": "Created",
          "code": 201,
          "responseTime": 2493,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76c67d2-9888-44a9-9ad9-00e38183c9f3",
        "cursor": {
          "ref": "0b4c20d4-34c4-4f95-8553-4f33ca8b8d77",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7f6138fb-72fa-4916-8798-398a7edd70b6"
        },
        "item": {
          "id": "c76c67d2-9888-44a9-9ad9-00e38183c9f3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a3a1908b-1551-4a85-8222-576305f5f056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f4597e4b-96fc-484b-96c3-4221f8bce8fa",
        "cursor": {
          "ref": "c8ec6421-0ac2-44e6-926a-0475d519a434",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9cecf92e-e4dc-45cc-94fd-dc8645cc7507"
        },
        "item": {
          "id": "f4597e4b-96fc-484b-96c3-4221f8bce8fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c278df38-f60a-4296-868c-3f88cfecffdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1606387f-bff7-4a5f-8b64-dc53f062ce9b",
        "cursor": {
          "ref": "2ae19ada-4b74-4f59-8861-795fbecb0f6c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "90447a97-e609-4514-9661-b9524fbd011d"
        },
        "item": {
          "id": "1606387f-bff7-4a5f-8b64-dc53f062ce9b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e7f288f4-9166-4506-b443-1548c67c3c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4759b7aa-1ba5-4fca-b1f5-73fec7b3a055",
        "cursor": {
          "ref": "c91f213e-e2a5-46d5-9f11-933471cf1b80",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b31a1858-a8e5-4159-918d-ad5a94f71bc2"
        },
        "item": {
          "id": "4759b7aa-1ba5-4fca-b1f5-73fec7b3a055",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f3f09169-ca5e-4d29-aec2-48bb0a81126c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581a6840-f1d2-4986-ac59-57aa4f575656",
        "cursor": {
          "ref": "604ffbf9-4315-423d-a3c7-ce347552d087",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6dff17b3-d9f1-4e62-b582-d685a435d062"
        },
        "item": {
          "id": "581a6840-f1d2-4986-ac59-57aa4f575656",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4129fb8c-1f93-40b9-a7e1-f9e8ab58c937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57c86fc-5669-4cdf-84f1-2f0862f27efe",
        "cursor": {
          "ref": "5498e29e-73d2-4d6b-9474-f3e76b424c43",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cc7e3c73-62d5-4fc6-bfa1-ef8a1baa527a"
        },
        "item": {
          "id": "c57c86fc-5669-4cdf-84f1-2f0862f27efe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b2c6182e-5481-42ec-98ec-f64715eb7669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b094ff13-f8f1-4392-96be-cddc76bf4020",
        "cursor": {
          "ref": "8cc643f8-e2e4-4c32-9cea-506ddc22baa6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b8fac082-5ae9-429c-86ee-f71b2af35510"
        },
        "item": {
          "id": "b094ff13-f8f1-4392-96be-cddc76bf4020",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4ac714a6-4c15-48b8-ad3e-e8239fadcd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13704433-1315-4e88-afb2-4af51b2caf33",
        "cursor": {
          "ref": "15b70e9f-117c-4c40-8328-ee007dbfe50a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "15491f00-c6ce-4117-b5da-040d69863a3f"
        },
        "item": {
          "id": "13704433-1315-4e88-afb2-4af51b2caf33",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8c347bee-390c-44d1-beb7-8ca3eda50fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12806e5f-3d28-4a20-a1ca-84ed5077c10c",
        "cursor": {
          "ref": "fad74c6e-25a9-45b0-ac1b-64ed5ed0a0ea",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f97912aa-a44f-43d2-89e0-bf8d4904ae84"
        },
        "item": {
          "id": "12806e5f-3d28-4a20-a1ca-84ed5077c10c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3623c8e5-ad82-4b00-a86d-1ead8546b7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e3489c-0e4f-47e9-b7be-4774a658c841",
        "cursor": {
          "ref": "6763e495-d8ab-41c7-8b0c-8eed6507dd74",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "537c7ed9-d58b-4a91-9751-690be62c5123"
        },
        "item": {
          "id": "b3e3489c-0e4f-47e9-b7be-4774a658c841",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "244fa93b-6aa1-439b-94d7-487b56906548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af40aa21-511a-4830-8de9-123cfaa64051",
        "cursor": {
          "ref": "c1e4b88d-f358-43ec-abe8-04e4f097d9eb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fc14df15-27fc-45bb-a7b3-fd13d1cf950f"
        },
        "item": {
          "id": "af40aa21-511a-4830-8de9-123cfaa64051",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "336ee303-215f-4302-876c-577cb7070ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffbc38c-b562-4ae5-8bd0-c62c8b7ee243",
        "cursor": {
          "ref": "20df37da-38b2-40f8-aced-b55f5b865ee7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f7e7bf04-22ea-467e-9b85-fa98477a9a4f"
        },
        "item": {
          "id": "bffbc38c-b562-4ae5-8bd0-c62c8b7ee243",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dd1d398b-b9d4-4af9-a758-c25568d3c32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f47e182-e09b-46e0-a2b3-774de2bab257",
        "cursor": {
          "ref": "98a8d9df-6a6a-4aca-89a7-11998d544608",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "82fd318f-0e55-4b72-b375-38ead68e325f"
        },
        "item": {
          "id": "3f47e182-e09b-46e0-a2b3-774de2bab257",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cc94b377-3edb-407d-be3f-a1708a3827a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d806f188-5a76-425e-a1ad-693076822229",
        "cursor": {
          "ref": "b862316e-8222-4ae3-b3b7-4bcd3d23e0f5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c48693cb-b106-4a4a-8253-48c2db7b177c"
        },
        "item": {
          "id": "d806f188-5a76-425e-a1ad-693076822229",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "13f1bf1c-093c-4231-bbe3-eb465c9a1910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e1975d-ff1f-4bc1-8702-f99cfa8d573e",
        "cursor": {
          "ref": "28270d09-409a-47c6-b0f3-0bb6b13f66b1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0694365a-6173-4df0-8c5e-caac7710269b"
        },
        "item": {
          "id": "90e1975d-ff1f-4bc1-8702-f99cfa8d573e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c040527d-d4ea-477f-a8e8-9ff6fef2405e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8bcf03-0875-4cee-82c7-7edacf184690",
        "cursor": {
          "ref": "4ad306e0-f066-4ecd-910b-c38c10d9a396",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f149768c-c7b9-4ac5-b642-439c1fe19de3"
        },
        "item": {
          "id": "cf8bcf03-0875-4cee-82c7-7edacf184690",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7f0d2570-3012-4b36-8994-be8360abed7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bccbee-7510-48bd-93e6-4b7b678e8f8f",
        "cursor": {
          "ref": "4a5a3e0f-b2d7-4358-b599-e3eaa4327fe0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7b0944ee-99a7-453e-82db-dfee924b7fc5"
        },
        "item": {
          "id": "48bccbee-7510-48bd-93e6-4b7b678e8f8f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aa095aa9-0f37-497f-aa08-6e3c4a473e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6c94da-cbd9-4e7a-9bce-79cb17208252",
        "cursor": {
          "ref": "c35a2de2-dc08-4942-b605-0bbd08d81e08",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c51f7666-4f68-4af4-854b-7f3fdd2389e1"
        },
        "item": {
          "id": "6c6c94da-cbd9-4e7a-9bce-79cb17208252",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ce0e05e5-7e64-4d45-9294-1066e870997b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d30c2da-f110-4093-9fd7-6dbcac552719",
        "cursor": {
          "ref": "dfccfafb-bba1-43d7-9c6d-78852ab1edf8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a2ea245e-ae11-4f84-b29c-b6678a4a433b"
        },
        "item": {
          "id": "7d30c2da-f110-4093-9fd7-6dbcac552719",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "215c69fe-c5c3-45c0-bfb8-f11505e109a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dddf5b7-36f1-43c1-9beb-37aa6696eca4",
        "cursor": {
          "ref": "38282608-d660-4b40-8822-1ef182fecdc2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1316faa5-9f91-4af9-8e0a-e343c7291f24"
        },
        "item": {
          "id": "2dddf5b7-36f1-43c1-9beb-37aa6696eca4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c462a2fb-fcbd-4bd2-acb1-210d0bdf1f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af25b24-8305-49e0-85d3-cd55d02dd536",
        "cursor": {
          "ref": "a9aa5f17-bf34-4bd3-9be1-011b8beb17ae",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "041098f2-03ca-4dd9-9f2c-c42e85104a00"
        },
        "item": {
          "id": "2af25b24-8305-49e0-85d3-cd55d02dd536",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d158404b-dfa2-4f5f-ad2a-0627a0af75a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226ddaf6-bcf8-4f9c-8dc8-5d72104c16a6",
        "cursor": {
          "ref": "2fe1deb3-a801-42fc-a8d9-f75e35ab1948",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ec8e79f0-a224-4dd0-a73e-4be5bc846102"
        },
        "item": {
          "id": "226ddaf6-bcf8-4f9c-8dc8-5d72104c16a6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "99154cce-4b95-4d66-948e-77e2545bd4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b8fb04-8766-4b70-87ef-80d1d727506b",
        "cursor": {
          "ref": "8311292c-b3fa-4c5e-998b-1e1822925535",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6d504ba6-d422-4cac-89cf-1a6e02b396f8"
        },
        "item": {
          "id": "42b8fb04-8766-4b70-87ef-80d1d727506b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "03c7c213-490b-4320-9a58-0d67c68f06fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93405b2d-e6ec-43a6-82b0-59dcc8d0070d",
        "cursor": {
          "ref": "d421fd87-0d61-4014-a4f3-7cdfcde28cd9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2d785bf7-1e0c-47c9-9a94-d86a86fc383d"
        },
        "item": {
          "id": "93405b2d-e6ec-43a6-82b0-59dcc8d0070d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a2c9593-2911-4fad-8765-7aa65dd87f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4213e6df-642b-48ca-b07b-d5dcc3d17377",
        "cursor": {
          "ref": "af407657-0666-4b65-bc36-490374e78650",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ba37f859-0966-4935-8cd8-299684b272b4"
        },
        "item": {
          "id": "4213e6df-642b-48ca-b07b-d5dcc3d17377",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d355ef70-084d-4308-b571-bc77251801af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b719a890-1609-4090-861b-190ebb5b663f",
        "cursor": {
          "ref": "8aa43791-1ab0-4415-a371-1c5ef560e750",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "06d22f36-c746-44a5-915f-dd61b5ec1230"
        },
        "item": {
          "id": "b719a890-1609-4090-861b-190ebb5b663f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d0294197-a8bd-4c0c-a01b-fbd3aace49df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddb9200-3db7-4aaa-97d5-d2f114ddae23",
        "cursor": {
          "ref": "48e882ef-1f15-42f4-a792-2a70c9abab26",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d6f21c57-2cb5-4017-98c1-805b4bbfde08"
        },
        "item": {
          "id": "bddb9200-3db7-4aaa-97d5-d2f114ddae23",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4296d85e-fa17-486e-bc94-c612c4843ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83697ea6-30c2-4be4-89db-e5e450621551",
        "cursor": {
          "ref": "4d3bded9-9280-4172-a1d8-c6967ef03034",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4e1c7288-00aa-44de-8521-304f4b33b1a6"
        },
        "item": {
          "id": "83697ea6-30c2-4be4-89db-e5e450621551",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "efbd454f-5fbe-4d10-b363-abc3905e564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3fdd25-6daa-4317-88f4-b37c7108ad1c",
        "cursor": {
          "ref": "7f944769-a2e1-429f-8aae-322910ebe222",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9dac0fb2-923f-4a39-9b34-b49e41aa37bd"
        },
        "item": {
          "id": "ff3fdd25-6daa-4317-88f4-b37c7108ad1c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a6b93b1f-2aca-4cec-b09e-55642fc8c8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeebc03-1df7-4e45-8dbe-98ed55b372d5",
        "cursor": {
          "ref": "d3d1f88c-2a83-403f-aa1f-07396854f2ad",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7e71bfce-130b-40c1-8e34-397863bba0d3"
        },
        "item": {
          "id": "aeeebc03-1df7-4e45-8dbe-98ed55b372d5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eac2b7a4-e75b-40f1-803e-b1eac9561daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d56d73c-b858-4f12-8e92-36f992217730",
        "cursor": {
          "ref": "c6f55bd4-5852-4c7c-b526-17cc18811248",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c378b1f8-831f-4f83-ac17-e922ac39d923"
        },
        "item": {
          "id": "0d56d73c-b858-4f12-8e92-36f992217730",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3e3e1519-50a1-4e0a-8df1-0c174ab30d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eaae80-7d25-483b-af98-4a6df73f4fec",
        "cursor": {
          "ref": "67fecbb4-3c68-42ae-8d33-b36da680628e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a35511c9-275d-4047-80f2-ade768c090be"
        },
        "item": {
          "id": "81eaae80-7d25-483b-af98-4a6df73f4fec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9ea33f2f-0043-4650-a413-8603a00140e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52dc573-51f0-489b-bdcf-1b67eacf9108",
        "cursor": {
          "ref": "0f4a92e2-fead-4f40-abd9-24698964a0b3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f7eb26e0-f3e1-432d-a613-e586c5fe663f"
        },
        "item": {
          "id": "e52dc573-51f0-489b-bdcf-1b67eacf9108",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "14d0aac3-2163-41bd-83f5-655abb7d2c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaa1f7d-de98-4833-ae62-ebe042a5bc7b",
        "cursor": {
          "ref": "9b34d7d4-7882-4525-83ef-f91413915af3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e33458dd-3f85-4f54-826d-96a9a1f4f987"
        },
        "item": {
          "id": "fbaa1f7d-de98-4833-ae62-ebe042a5bc7b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fd664b26-75d1-43d9-b6e9-4bd716983dd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ba38b4-656b-49e1-8b5b-02a3036eba15",
        "cursor": {
          "ref": "3d7a986b-f438-474f-a1a9-3e50eeabc391",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "85758f09-b014-49ee-a064-8ab8b64c76d7"
        },
        "item": {
          "id": "78ba38b4-656b-49e1-8b5b-02a3036eba15",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4002f464-196d-4ff9-b30f-863792062070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e7ccd9-27b8-4898-9a01-bbbb0c59f4f0",
        "cursor": {
          "ref": "bfb1192d-1b58-4977-932a-3dd92e2974b3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "02299f79-aecd-4a98-b92d-6d76a685dc1f"
        },
        "item": {
          "id": "d0e7ccd9-27b8-4898-9a01-bbbb0c59f4f0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d23ee2a0-b362-4123-90ba-8099e0a90fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3641b416-2131-4aa7-9186-726dc7ef2362",
        "cursor": {
          "ref": "751ca489-a054-498a-ad4c-6b8dfb596648",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a742994f-cd71-4225-ba63-6460e70bef2c"
        },
        "item": {
          "id": "3641b416-2131-4aa7-9186-726dc7ef2362",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6efbbf55-ded5-4688-b2fe-68c251eba990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf22f1c-6c62-4e9a-9ace-0163d74542a6",
        "cursor": {
          "ref": "af7e8411-26b2-46f5-978d-f0cec5fb3e41",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "be593040-d9f6-43fd-9ea9-88168ceae94b"
        },
        "item": {
          "id": "dbf22f1c-6c62-4e9a-9ace-0163d74542a6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "03d839d5-9e2c-41fa-9092-04d9ea409937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425ec10a-3292-4758-8cfa-794b15dca117",
        "cursor": {
          "ref": "d4d35e13-c20f-4f53-9fa9-252c9b3093de",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "332b9785-9e93-44ac-9ce7-82533cff3602"
        },
        "item": {
          "id": "425ec10a-3292-4758-8cfa-794b15dca117",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e8571db6-b5bc-430a-8d9e-ad2502316851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58d8306-fe96-4bda-9747-7eed92d91ea4",
        "cursor": {
          "ref": "c520a34b-c93d-4220-98df-d390b758d842",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8bf791b3-5829-4278-98cf-41b9122028a4"
        },
        "item": {
          "id": "b58d8306-fe96-4bda-9747-7eed92d91ea4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4cb57b54-2c41-4398-97a1-14133ade1213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0994756c-6d23-4a32-aefd-b6fa1a0e2059",
        "cursor": {
          "ref": "addf7851-4bbf-4356-8de9-7de555555366",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7259be22-dc80-4df6-beec-02010ab4dddb"
        },
        "item": {
          "id": "0994756c-6d23-4a32-aefd-b6fa1a0e2059",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9f4126b2-fa63-4c39-b8d4-40aab1fd2b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1af8e72-be60-44e8-a457-ffa882d2de5c",
        "cursor": {
          "ref": "220d95fb-0e59-4eab-8d90-68992d8e2d23",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7f4d4e36-7095-42ae-a5da-891ed0f58126"
        },
        "item": {
          "id": "a1af8e72-be60-44e8-a457-ffa882d2de5c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "29a13f4d-792f-4e62-885c-e6c500dfb776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bb12e6-88b3-4148-9d6e-9fbe999f8b08",
        "cursor": {
          "ref": "f2036353-7f42-4fdf-997d-f34be741d352",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5c33ec57-b77e-4260-99db-22a83ddb9bd8"
        },
        "item": {
          "id": "68bb12e6-88b3-4148-9d6e-9fbe999f8b08",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5bed0d32-fd86-4b22-a4a4-7c98e9e6e6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f793ffb3-c134-499e-aa55-b0d95f358594",
        "cursor": {
          "ref": "e49def21-14aa-4f8e-b92f-77421b11e3ca",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7dd04e89-f008-4b8a-ab92-0dbedc7b1bad"
        },
        "item": {
          "id": "f793ffb3-c134-499e-aa55-b0d95f358594",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22ca14a5-8c1b-44a1-96ca-274323d05da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c277f9a5-c3d6-4e3a-b8c6-f8808cca6ccc",
        "cursor": {
          "ref": "b5346359-a173-4c4f-9261-f7d77fc2875d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2d09de70-2230-4bc0-b5a1-4572923b82e8"
        },
        "item": {
          "id": "c277f9a5-c3d6-4e3a-b8c6-f8808cca6ccc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa063ac1-3ae2-41eb-b44f-a731484b5bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f07f3a8-e426-417e-b633-057dc35166c8",
        "cursor": {
          "ref": "f4a33310-1ff0-48ff-b772-dac1638acf0f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ac5574d-78a4-4ae2-a145-edc32cb49294"
        },
        "item": {
          "id": "6f07f3a8-e426-417e-b633-057dc35166c8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dfc73875-8c3d-410f-af0c-3286a517bfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0138af1f-5e22-4a2f-9113-5ff0088f55dc",
        "cursor": {
          "ref": "f45ac305-dd2c-467c-a068-ab884de914f6",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "efa819fe-974c-43bc-9b6d-6841c179efcd"
        },
        "item": {
          "id": "0138af1f-5e22-4a2f-9113-5ff0088f55dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bfe97855-a38b-4881-aec7-4f6091e6edbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d85eaf2-e7c2-4ba8-a2bb-892937f22a1e",
        "cursor": {
          "ref": "60845ee8-18ca-4f6f-82a7-f3a6f0626b57",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1b3fbbb0-99be-4143-b922-9221d79e6f45"
        },
        "item": {
          "id": "8d85eaf2-e7c2-4ba8-a2bb-892937f22a1e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "38ab5999-a6f0-4319-9423-d1cfec84ef1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631e4189-f500-4c15-a30d-e22e96820d64",
        "cursor": {
          "ref": "8c61c25b-b003-43c5-9042-12774aa9d003",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "53b89e10-3c83-4890-b71f-e8dcc7581a50"
        },
        "item": {
          "id": "631e4189-f500-4c15-a30d-e22e96820d64",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dd60199b-1734-48ce-851b-b4dbc9bf47e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb9d505-054a-445f-a4fa-81f7d3e54ef9",
        "cursor": {
          "ref": "44336e00-3ce1-458e-a07d-551f496e4fea",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2bad9a15-2f10-4db4-9ec1-5ea138eadf03"
        },
        "item": {
          "id": "3cb9d505-054a-445f-a4fa-81f7d3e54ef9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e6a9f94-6088-44ee-906f-5a62523e9424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4470bf1-472c-4b99-9329-2c1b11f77e41",
        "cursor": {
          "ref": "037554c4-33a5-4460-84aa-ad3691f5848b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3484c76d-fbd3-477b-bbcb-a77c0839719d"
        },
        "item": {
          "id": "d4470bf1-472c-4b99-9329-2c1b11f77e41",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f792dbae-2eab-4129-ad72-775c3a2e49aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b840a6be-d5ab-4d2a-a248-7156a0bce23a",
        "cursor": {
          "ref": "11550816-18af-4a00-ad54-060f76f6f92d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6778dbf1-f527-4fcb-9cb0-e44cd9a19ecf"
        },
        "item": {
          "id": "b840a6be-d5ab-4d2a-a248-7156a0bce23a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6775fb8-690d-4542-aef3-54796010d32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8042160c-11a5-4521-b43d-46c2031eb2ed",
        "cursor": {
          "ref": "68ccbfe0-220d-4439-b704-768838d24e26",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a0ab133a-77f3-4c43-a5ab-81615d26235e"
        },
        "item": {
          "id": "8042160c-11a5-4521-b43d-46c2031eb2ed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "36c4e646-b3d1-4c4a-a87f-5905ef613026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e0bf69-5859-406f-8646-039baecb73b1",
        "cursor": {
          "ref": "449c6791-fccc-442f-af2e-2082c8d8629f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "79b6016f-b9fe-4e7b-a6a5-807bdc03d80d"
        },
        "item": {
          "id": "98e0bf69-5859-406f-8646-039baecb73b1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c6b8a6e7-272f-4e1b-93a8-ec7f22a69f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca83eba7-45fe-442c-982b-f1e3a4df22c3",
        "cursor": {
          "ref": "a4e431ea-d42f-4ca0-8f52-8f1612da886c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "637c8571-99d6-4d28-8d62-3ac3f50f23d6"
        },
        "item": {
          "id": "ca83eba7-45fe-442c-982b-f1e3a4df22c3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6f994cae-e379-4887-8db2-c34b55066ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5fc524-0833-4593-9ac9-e0f4d209e9fa",
        "cursor": {
          "ref": "52925249-f7a9-462b-b23e-935784ff6ebb",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d8508c58-ce94-4790-873d-5a8ffa4b218a"
        },
        "item": {
          "id": "8b5fc524-0833-4593-9ac9-e0f4d209e9fa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "067a8f3a-147e-4ac8-bd3d-6e8452b219dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c2d013-15fd-4874-be8c-c943e6d94435",
        "cursor": {
          "ref": "a5251fb7-1993-4f8f-aaff-5a26c720b7cf",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ba2b9814-be0c-4bae-a122-2c8eb2770698"
        },
        "item": {
          "id": "d7c2d013-15fd-4874-be8c-c943e6d94435",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2c705cc3-a135-4f79-9397-c08a6f5fa52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81446ed-e29d-43ca-8274-aa3bc1f089e7",
        "cursor": {
          "ref": "062ee869-9db9-4ceb-b71b-c11a09d0af27",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6e6c741a-de0c-4d77-b113-e5bf951782aa"
        },
        "item": {
          "id": "a81446ed-e29d-43ca-8274-aa3bc1f089e7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c874f99c-6ef1-445b-8add-e056f5e5c577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc93df1b-576e-4485-843b-3b3c420f1056",
        "cursor": {
          "ref": "ff2a3bef-7a3b-4b50-939e-fd971d21d731",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "de05b1de-4dc6-4f88-9bbe-a7c8e1d97abe"
        },
        "item": {
          "id": "dc93df1b-576e-4485-843b-3b3c420f1056",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2e0b98f3-0f82-41cf-b52f-f25ad4ecc2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12c406-6137-4fdf-b92e-44381e8160f4",
        "cursor": {
          "ref": "f2dca59d-a124-454e-9396-f69f891c5e2b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6aedf043-2112-48f8-9a48-f4b70cda6de2"
        },
        "item": {
          "id": "6e12c406-6137-4fdf-b92e-44381e8160f4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bde9d1a9-59fd-4262-9302-6c3bb5d189ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98363647-1bde-4a79-b246-f0661d83f24d",
        "cursor": {
          "ref": "0c08737a-ba59-4441-acde-ce435b21cba8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2b20f6f3-dec3-4434-b4be-9904b06256be"
        },
        "item": {
          "id": "98363647-1bde-4a79-b246-f0661d83f24d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0d878704-3222-41eb-b9d3-fe0fe3bd5090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0d0566-a58e-4cbf-8320-9b24d6afa391",
        "cursor": {
          "ref": "39f15a70-6850-44ae-b091-d48082b37633",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f2726dc6-27bc-4b40-b2f7-8203fac5d038"
        },
        "item": {
          "id": "3f0d0566-a58e-4cbf-8320-9b24d6afa391",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f25bbdf2-28a5-4272-8c4c-915af70e4c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ee5cbd-794d-4f46-ba5e-7c7dbf166702",
        "cursor": {
          "ref": "65b0267e-14a9-49ce-9194-5404fb6928ac",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d0b1a1d2-8d47-40c1-9d96-86eb4d1a0db4"
        },
        "item": {
          "id": "c2ee5cbd-794d-4f46-ba5e-7c7dbf166702",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1c9be9c6-8729-4fc2-931b-8b6af37d1958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27066e8-1e57-4348-b734-d1e5ec128c0d",
        "cursor": {
          "ref": "28118d5b-19ef-4ee1-82ea-1b0ff924594f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "af8b3966-80ad-47fd-9e24-5f8167db72d8"
        },
        "item": {
          "id": "a27066e8-1e57-4348-b734-d1e5ec128c0d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "065845d5-3c1f-459f-9d98-bfd943112a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a152c0c-3055-4f64-ac80-0ec5045b6d69",
        "cursor": {
          "ref": "9b66939a-02dd-46ca-af7b-4c11b91c0174",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7da05652-a5d8-4abe-8ffd-da5648818534"
        },
        "item": {
          "id": "6a152c0c-3055-4f64-ac80-0ec5045b6d69",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "763157ca-7f4d-4495-a9e3-10cbed10b128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d12a9d-651f-4615-a471-9b9f9ae4bc37",
        "cursor": {
          "ref": "4dd250e8-f40b-4f4d-ac85-4d3638f724db",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "021520a2-c657-4e54-9923-1bb3e9746137"
        },
        "item": {
          "id": "06d12a9d-651f-4615-a471-9b9f9ae4bc37",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9f7a74e4-37e0-4c80-8fa7-c42c26bd0adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8817aa-95d2-41dc-a535-3f4ffadf4955",
        "cursor": {
          "ref": "250d2f1a-e8c7-4887-bc61-2077d0f0e2d6",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "447e751e-6d42-4ab6-9c90-ec376d8c4057"
        },
        "item": {
          "id": "eb8817aa-95d2-41dc-a535-3f4ffadf4955",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0235f43c-6d9e-4e8a-a2a1-e3b0f2ba087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f163ba71-0eed-4b7d-aa85-f1d00bd58c55",
        "cursor": {
          "ref": "d2954e7c-3f48-484d-a321-e29324904e83",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dd8f890a-d805-429c-8853-7965be4c6b1d"
        },
        "item": {
          "id": "f163ba71-0eed-4b7d-aa85-f1d00bd58c55",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "075b3997-87eb-4d1d-9999-b087ee8fc11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929ef204-5f1c-45a8-83be-230cabf23a01",
        "cursor": {
          "ref": "56f2ae54-b985-4e50-bd12-0f9d042af288",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ed15a714-a070-473e-a1e5-e26ddd395faf"
        },
        "item": {
          "id": "929ef204-5f1c-45a8-83be-230cabf23a01",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0b7bae04-055b-4172-a026-9ba9a697ed25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508f1c40-578d-46d1-90bb-71f34930b797",
        "cursor": {
          "ref": "3a64fe7a-9e06-4da8-8be0-2fc4a0402934",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2d298c3f-8cea-4e61-a2e8-aaaaddda15d8"
        },
        "item": {
          "id": "508f1c40-578d-46d1-90bb-71f34930b797",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3a990728-3163-44df-8618-ee58cf8bc1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d8f62-cecd-4211-bd3f-04542af4c3c1",
        "cursor": {
          "ref": "1042bebe-7ba4-448d-8cb7-ba10dbc4b21e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6c4f67ef-2b9c-4358-8cce-c5f1bc9cffb8"
        },
        "item": {
          "id": "eb3d8f62-cecd-4211-bd3f-04542af4c3c1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d9760c65-5831-4687-81fe-3ab011fa5115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb86c02-4ce3-459d-af30-57681a0e0f0f",
        "cursor": {
          "ref": "aa3bd22e-46b0-4d83-885c-b17f5ff0254b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a2481c6f-ab05-4914-acfe-2845ec3ffadf"
        },
        "item": {
          "id": "8fb86c02-4ce3-459d-af30-57681a0e0f0f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1b36b3cf-41ce-469d-ac0b-dee0075e3b80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa3125c-8d72-4bfd-83d2-35ed7725820e",
        "cursor": {
          "ref": "add085a3-d2af-4b1e-ab39-12845433c7fa",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8a852504-d274-4a73-bda3-f931087f4d41"
        },
        "item": {
          "id": "3aa3125c-8d72-4bfd-83d2-35ed7725820e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ac2614da-855b-44cd-a4dd-ea485c1776ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ce3658-7660-405a-acb6-5834731e9ace",
        "cursor": {
          "ref": "5dfed237-d4f1-477f-b467-bf1c92238fd0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e407a3e4-b67e-4cab-aee8-d88d4d35cd70"
        },
        "item": {
          "id": "13ce3658-7660-405a-acb6-5834731e9ace",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "caa10903-3518-41d3-aba0-a0f866e1c008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b6c388-3ab4-4f89-9b2a-acf8db9ee7e3",
        "cursor": {
          "ref": "630841be-d870-486e-a72f-54c714e1a504",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8767dd68-60b4-41ac-9a8c-76848f40dabb"
        },
        "item": {
          "id": "b3b6c388-3ab4-4f89-9b2a-acf8db9ee7e3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "16d7f873-54f5-4c20-8593-e3d939ffe0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc8bc6f-0f8d-4068-92ba-9f68a68b2e40",
        "cursor": {
          "ref": "1cbafcaa-b37d-4075-8025-2a6277398f75",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "932044de-0ba4-4f90-9880-b21f55d7df78"
        },
        "item": {
          "id": "fdc8bc6f-0f8d-4068-92ba-9f68a68b2e40",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e91d580-ea41-4386-b715-a9988b8831a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbad1115-2719-4dee-ab9a-fa7297d5b0c3",
        "cursor": {
          "ref": "6f0d0161-46b1-4025-9aff-be4f459878f1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "be6d4187-34d9-4ecf-b055-5d50c5fca9b5"
        },
        "item": {
          "id": "fbad1115-2719-4dee-ab9a-fa7297d5b0c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4b3b4bb5-5797-46d6-a58b-5d5b8bea032e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fde012-5b1d-438b-a0e2-ea707422398b",
        "cursor": {
          "ref": "ed0d528d-2d29-40e7-b028-dc10d31d9a6f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f0abd245-06e2-4d78-a035-972dcd8fc455"
        },
        "item": {
          "id": "99fde012-5b1d-438b-a0e2-ea707422398b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ff39b9c9-988e-4be8-8fee-2995f049edbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310f68e2-8cfe-48b8-91ef-580c4b98af6b",
        "cursor": {
          "ref": "2e347dc8-1114-43ef-a3c1-77d95798621e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a8ce72a1-32cf-4b1a-90c5-4dee29e252c2"
        },
        "item": {
          "id": "310f68e2-8cfe-48b8-91ef-580c4b98af6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ed5622a7-2c30-45b1-90be-ad5e2160e08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f39ce9-feb2-4513-8d0d-6ea6909d8e86",
        "cursor": {
          "ref": "35d37df8-4549-447c-9ed4-604b174beec6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1d2f94db-be6b-4908-993f-36af6f325ea7"
        },
        "item": {
          "id": "56f39ce9-feb2-4513-8d0d-6ea6909d8e86",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6c4d5e15-37b0-49bb-a873-87efab08293f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bbd9dc-8639-474d-b31c-9ce606a43c07",
        "cursor": {
          "ref": "da9407d6-0140-4c8b-ad43-7223372a7490",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "11aa2673-a4d6-461b-8d09-50d0009da9c5"
        },
        "item": {
          "id": "a2bbd9dc-8639-474d-b31c-9ce606a43c07",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e70cd34c-dbe4-46c5-8468-4038e50ff997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f814f5-9ab4-4874-9e10-141878bb3787",
        "cursor": {
          "ref": "96c03c5b-d189-4f4d-b407-fcee2557c948",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2e6542df-96cc-4573-a52b-39b1bbde08cd"
        },
        "item": {
          "id": "e1f814f5-9ab4-4874-9e10-141878bb3787",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5ee49796-b75f-429f-805b-8d09cf6423cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33327f2c-3ce5-4923-bd0e-da4c0acb70ae",
        "cursor": {
          "ref": "59acc87e-33b5-43d5-a949-00379bcb197e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1b3a4075-8343-4e68-86b3-d5cb364690dd"
        },
        "item": {
          "id": "33327f2c-3ce5-4923-bd0e-da4c0acb70ae",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8a8049a4-1bbf-4a93-a910-e65b8d5f8c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0c202c-e4ac-4354-a502-11a08173643d",
        "cursor": {
          "ref": "5856e0e4-f776-4d9b-94ec-222df28284eb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d16a3cda-53c9-49cd-9bf2-068c5afcb5b7"
        },
        "item": {
          "id": "eb0c202c-e4ac-4354-a502-11a08173643d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c2245766-b546-4b95-8c52-ad8865152b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436dfdc2-8964-43a9-ad4e-03f88ea7f50f",
        "cursor": {
          "ref": "9582f90b-07de-45c6-923d-e8a5018f673b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "af3ca79a-e43e-46dc-ac61-e7b369bfd640"
        },
        "item": {
          "id": "436dfdc2-8964-43a9-ad4e-03f88ea7f50f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "482f21b6-d2f1-4355-a6b2-b5d17cabe957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe56b0b-316c-4f9b-b0e0-d07d754eaf22",
        "cursor": {
          "ref": "2f9885ef-a3ea-4ed8-bf2c-6b7c8e8333fe",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e70cc8ee-6936-4c86-8547-819441b81b92"
        },
        "item": {
          "id": "afe56b0b-316c-4f9b-b0e0-d07d754eaf22",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "23ce4bfd-edc8-4f2a-90f2-460034055f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e208e3e-4ef8-44cf-bdc5-c43563dafa42",
        "cursor": {
          "ref": "99292ba7-068c-47db-ab3b-1f1393469b0a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4a4b27f1-0815-4d0e-aaf4-412d1de23840"
        },
        "item": {
          "id": "4e208e3e-4ef8-44cf-bdc5-c43563dafa42",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8e54485b-bb74-4fc8-9c47-508b8f3af150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04b1739-fb10-43f7-967c-0fff13775c43",
        "cursor": {
          "ref": "0ddbcf9a-602d-4092-b362-8e5c3522943e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "78959ea9-b597-44c7-b82f-e49eaa17666e"
        },
        "item": {
          "id": "e04b1739-fb10-43f7-967c-0fff13775c43",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7d5bb00c-1575-42f1-9abe-08fb66eb24dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b72d3d4-b8f7-4461-82c0-837ec965e1e9",
        "cursor": {
          "ref": "7c24f9de-2c9e-46ef-9a47-868c05cd9b84",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a7d9b9d2-e68f-497a-bf3a-877a704881d9"
        },
        "item": {
          "id": "3b72d3d4-b8f7-4461-82c0-837ec965e1e9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0a7d7940-6e52-492f-8241-a17961c536ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2850dd-f303-4b1c-b329-9c8e5f7833cd",
        "cursor": {
          "ref": "39252e35-296f-4542-8df9-4291c86818cf",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cda46050-feac-45da-a53a-05134432ce6a"
        },
        "item": {
          "id": "7c2850dd-f303-4b1c-b329-9c8e5f7833cd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a2b2f055-4f99-4699-970b-b15c1cab6c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856c88e2-beb8-43d2-bd8f-e25636b8e06b",
        "cursor": {
          "ref": "840130be-84c5-4e97-98a1-672d81fe519d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6c4c1fdf-a433-42c3-9654-2ee761bd1b1d"
        },
        "item": {
          "id": "856c88e2-beb8-43d2-bd8f-e25636b8e06b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c5775b5b-01ce-412f-9b40-c511526bef63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39e63ff-94d4-469b-9718-78617ff0b527",
        "cursor": {
          "ref": "c89cffee-4634-4e85-b799-955de7dc97fa",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "debdb0d9-da3e-4b09-9c08-47b45cb1db39"
        },
        "item": {
          "id": "d39e63ff-94d4-469b-9718-78617ff0b527",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "38679de0-5067-4486-8615-1b84bb30d56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c013be95-d589-43eb-aeba-6079af53b5f2",
        "cursor": {
          "ref": "65a69a86-e37e-4be4-9bab-3f4964ed14db",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "49ae0e05-ebb4-463d-85b6-fb019a2cdb9d"
        },
        "item": {
          "id": "c013be95-d589-43eb-aeba-6079af53b5f2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "050ffb46-f108-4e6b-af6a-b719a439aff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcde5c74-f89f-4aac-812a-97ec48bc5aa4",
        "cursor": {
          "ref": "ed2dcb15-5a48-4fd1-a716-840e41699de2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "baf09c4b-92b8-4e7b-bcdf-ff12fc98de86"
        },
        "item": {
          "id": "dcde5c74-f89f-4aac-812a-97ec48bc5aa4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "41c75e85-94a1-4335-9b75-fa6ab1be44fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13e6e81-cb90-496a-ba4c-e9f0a5798b52",
        "cursor": {
          "ref": "ab097b66-bf4b-4914-b035-78b84c645996",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "414977dd-4088-41f4-b577-4c9e8b8208bb"
        },
        "item": {
          "id": "b13e6e81-cb90-496a-ba4c-e9f0a5798b52",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "19f90f06-1b9f-4c4f-ab14-c0c1aef012cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11416bc-d539-434d-b89d-4b54b2ea1d56",
        "cursor": {
          "ref": "d9bb0a4d-add1-4466-afa1-9da2ac124583",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "19d2954a-3d6c-4cb8-a9f7-7be93834e884"
        },
        "item": {
          "id": "b11416bc-d539-434d-b89d-4b54b2ea1d56",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c3815888-82b7-4273-b893-78ca2312614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3badacbe-5b99-4f77-995e-f51fa1b6e77d",
        "cursor": {
          "ref": "9d5f8476-9024-4dd7-bf98-870ca027fd55",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "814c2c10-0151-4bc9-b449-4fd3f7c48b04"
        },
        "item": {
          "id": "3badacbe-5b99-4f77-995e-f51fa1b6e77d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "da69d749-242d-4ecd-a828-c059f0498ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07caa779-b101-4cbe-8ada-a396e316f87e",
        "cursor": {
          "ref": "d1ea9fb6-47c5-454c-bf43-1e25926e89c2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b4038faf-a77f-4aca-af83-e47e539e0ede"
        },
        "item": {
          "id": "07caa779-b101-4cbe-8ada-a396e316f87e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9ce6d994-9865-49d7-88b0-e0b98aa4559c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e44f521-5e9f-41dd-bb65-a4153b30f70d",
        "cursor": {
          "ref": "13d6c2f6-86cf-4350-b05b-db114312ecc0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dd919631-5dd3-4486-b15e-388407fffb44"
        },
        "item": {
          "id": "7e44f521-5e9f-41dd-bb65-a4153b30f70d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e062978b-b059-47ec-b64b-24ad24853e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500f1ea7-913c-4920-9077-0edf1c70d38a",
        "cursor": {
          "ref": "d5eb68a8-fb3c-486f-80e5-4eaf451b7ce0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0e944a99-ba51-46f4-96d7-cfbf9cec0693"
        },
        "item": {
          "id": "500f1ea7-913c-4920-9077-0edf1c70d38a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7aa7ab78-8dd0-42ed-8264-712ac49ba8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40edcbab-ce95-4209-84b3-96f4d4c924c4",
        "cursor": {
          "ref": "39a293c1-246f-4ab6-8b7b-89e53aebc9c2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d222c4dd-13dc-4433-8629-83421ca1563a"
        },
        "item": {
          "id": "40edcbab-ce95-4209-84b3-96f4d4c924c4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d00bae7d-aaf0-4d34-832d-39dd23e2671e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aaaca8-2b5c-47fc-85de-33ed5d7b0154",
        "cursor": {
          "ref": "a1139e5a-4ca1-4182-9ce0-1db948570391",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ccdf78eb-7009-4814-aa3b-6c39dbf5e56a"
        },
        "item": {
          "id": "f5aaaca8-2b5c-47fc-85de-33ed5d7b0154",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b1d7deee-6621-46e2-9d87-c780560d79e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb9b50f-6a8f-48b3-a6f4-6d35e8c6019a",
        "cursor": {
          "ref": "8e902c33-08c5-41af-b037-9bff988eb35f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "15f8bcb2-3276-42c8-aab2-0350d324693d"
        },
        "item": {
          "id": "abb9b50f-6a8f-48b3-a6f4-6d35e8c6019a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ad193bc3-b1f6-46ed-ad36-a16fe162960b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecac9e9-e2d3-4b85-be2e-af4aff8f17bb",
        "cursor": {
          "ref": "ad985959-22a6-4fbf-88d1-40600cacc51f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0d8529b4-8bdf-459a-9c15-42b1b9b95f8e"
        },
        "item": {
          "id": "8ecac9e9-e2d3-4b85-be2e-af4aff8f17bb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "66a43e7a-ba29-4fd4-8277-f1b07fbd8ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86445ec-49b3-447e-a393-943a5301330d",
        "cursor": {
          "ref": "f16be761-fe1b-46dc-901b-4a7b857ed114",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6701f180-a37e-447d-9602-5f877a9a33c1"
        },
        "item": {
          "id": "a86445ec-49b3-447e-a393-943a5301330d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5d9c7625-7468-4fbe-a556-d1bbd24c3cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06a5bea-4295-438d-b262-7279db2b7bde",
        "cursor": {
          "ref": "4d5990b7-4a62-4343-8902-e0cf02f55af1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ef0a32ce-3a13-4773-b67b-36b804abb3dd"
        },
        "item": {
          "id": "a06a5bea-4295-438d-b262-7279db2b7bde",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1e23ef58-798c-4f1b-a25c-74bab5d0f556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94e67c8-4a47-41db-8b31-23486ba9996d",
        "cursor": {
          "ref": "0272334b-328b-4e81-ab79-66d1b24dc460",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fd933dd9-78c4-4f03-bf34-a199a039be88"
        },
        "item": {
          "id": "c94e67c8-4a47-41db-8b31-23486ba9996d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "00ce3ee4-ab6a-485c-aa55-527073da2307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92552dad-bb77-4e80-8c04-05c016b58315",
        "cursor": {
          "ref": "23759e80-e84a-4812-b7e8-0f88a1d0ce4d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "68d106c7-7ec7-40e4-85ce-76019698ec1a"
        },
        "item": {
          "id": "92552dad-bb77-4e80-8c04-05c016b58315",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3a9131b0-8669-43e6-91d6-3a0319146509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d90b80-c07d-4fa5-8933-f1356490d50a",
        "cursor": {
          "ref": "d9490403-0fb0-44d5-aafa-82709ddea284",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a55944ad-53b4-4bcc-a765-f0b635975e57"
        },
        "item": {
          "id": "b9d90b80-c07d-4fa5-8933-f1356490d50a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e1d8c6d1-fa3e-445a-96c8-87a577c6b09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6c9c5c-0dd1-40c9-9242-1dae7c06f568",
        "cursor": {
          "ref": "6b95a211-a632-4a80-9db8-4d2dbab44859",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4c086d2b-8178-4da8-8109-30d17c6027c1"
        },
        "item": {
          "id": "6c6c9c5c-0dd1-40c9-9242-1dae7c06f568",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2cd35bab-9199-443c-9505-4c161fe4ffb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41955891-88ac-4738-b181-1fee8e28ada7",
        "cursor": {
          "ref": "6189fe83-5a61-489a-9f2d-fee6be729bba",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6ccab830-120a-41ef-91b4-756f7415e6cc"
        },
        "item": {
          "id": "41955891-88ac-4738-b181-1fee8e28ada7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "02c38bdb-9f8f-4b76-9b09-68e27752b971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d57d59e-d1a0-44d8-a54d-c8031f71e6bd",
        "cursor": {
          "ref": "28aca17d-c9fa-40a8-8ce5-d2712ca9685d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9f4827c0-f35f-43ae-a155-1fe066901f93"
        },
        "item": {
          "id": "2d57d59e-d1a0-44d8-a54d-c8031f71e6bd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7e13cf9a-c178-454b-a6b4-499efecb133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8e86ab-b65f-4ce4-a571-ba3bd115e974",
        "cursor": {
          "ref": "74d07e9e-9e8e-4c12-a9b2-440ccaf8d10d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f20e4687-89c5-4664-8d78-382b53f8f42e"
        },
        "item": {
          "id": "1c8e86ab-b65f-4ce4-a571-ba3bd115e974",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "651846b3-2c90-4e13-803e-c00e7621d57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dba0bb7-415b-4b8b-83df-8124847c333a",
        "cursor": {
          "ref": "7b0da803-04df-4da9-8c01-b499fb097d2c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2cc0f305-6033-42d0-9543-fd82a3a84b7b"
        },
        "item": {
          "id": "5dba0bb7-415b-4b8b-83df-8124847c333a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2773ebe0-d78c-40d0-a98e-96848eed5c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b660380-e00f-4fca-83b7-2e6b69693128",
        "cursor": {
          "ref": "a119fb8c-382a-4f8b-9132-fbfb6a068d2b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7d6c9070-dd8e-46f4-bf53-f6caea9ab057"
        },
        "item": {
          "id": "7b660380-e00f-4fca-83b7-2e6b69693128",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8833eac7-0578-4447-8fc0-b1b719bc61ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3ddc42-4324-44b1-8c3f-12de43e4f923",
        "cursor": {
          "ref": "7a0b8122-994c-45a2-982e-87218a911798",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e12bec32-a282-475f-98df-c49b19cc2880"
        },
        "item": {
          "id": "2b3ddc42-4324-44b1-8c3f-12de43e4f923",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9dd40893-a7d5-45b1-be8b-ad87af344e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da548c0e-6eba-450d-a872-785714a01054",
        "cursor": {
          "ref": "380fa9e6-16d9-4bba-b92a-689cabddb235",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "01ca5c1c-03df-4e1f-8ea3-78623a525933"
        },
        "item": {
          "id": "da548c0e-6eba-450d-a872-785714a01054",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6c272c6e-cd10-4773-9a60-c3979a11a419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bc700e-345a-4c59-9063-6c890fb5e324",
        "cursor": {
          "ref": "ce5163d3-d390-4c23-8e0c-885df6c38900",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "674793e3-3091-483a-994f-afc7196bb356"
        },
        "item": {
          "id": "f0bc700e-345a-4c59-9063-6c890fb5e324",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "00209582-65e7-45f5-b3d6-92e366660f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2562e15b-6d77-469c-8e6b-a66a6b5c5a24",
        "cursor": {
          "ref": "43b980f5-09b8-41d9-8586-e5dd7b4fe9b8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f9ac9c25-5ab9-4551-97f8-7fd689ced99b"
        },
        "item": {
          "id": "2562e15b-6d77-469c-8e6b-a66a6b5c5a24",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b0d138f7-a881-4a4d-ab8f-7f2bdfb44edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d19c52-634f-44d0-b871-8836cb31d50c",
        "cursor": {
          "ref": "8e27c8cc-cbea-49b3-9458-b3ec9312af86",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ea2e9ae1-6a47-4eb2-9062-b382cf7bdac0"
        },
        "item": {
          "id": "d9d19c52-634f-44d0-b871-8836cb31d50c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d913326d-1b55-4f73-a465-6c012999ce24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe1b19d-ea61-42f4-ad8e-99ce474ee0f6",
        "cursor": {
          "ref": "fdbf89c2-696e-45de-9dd4-6de4364dcab7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "341cf85c-64a7-4c8a-ab2b-0a40bf4e5919"
        },
        "item": {
          "id": "afe1b19d-ea61-42f4-ad8e-99ce474ee0f6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b62be087-23d8-4dd6-bcfa-9290878b9d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78c50bc-becd-4cbf-90af-f66f6afb7df3",
        "cursor": {
          "ref": "77f3b0d2-729a-4870-84be-52f2e1674ce3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "17553ae5-e4f6-4fc7-bc81-650e817adb79"
        },
        "item": {
          "id": "c78c50bc-becd-4cbf-90af-f66f6afb7df3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "079574b5-201e-47fa-b2c2-14aac4410b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b1fed2-bc60-4625-af32-adaf638c6a06",
        "cursor": {
          "ref": "64e333d5-9865-498e-9f1c-b8f5baf96800",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "53130e00-e595-49e1-a954-a9e8bc4ba7da"
        },
        "item": {
          "id": "87b1fed2-bc60-4625-af32-adaf638c6a06",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6c4aa781-9390-4622-a54b-937cdc0751e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ef7b20-a1e7-4b2b-84a3-7e0f848f8e0a",
        "cursor": {
          "ref": "5008a098-c0fa-4b02-b244-0a3808899aa0",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "86d79294-4d10-4a70-959d-fdda9ae96d37"
        },
        "item": {
          "id": "e9ef7b20-a1e7-4b2b-84a3-7e0f848f8e0a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c36f66ab-ea04-492f-aa79-065a75c33979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb32755-6465-45da-b7cd-ba89d70cde06",
        "cursor": {
          "ref": "81f2a801-0cd7-4841-9626-a95ba37b6502",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "54c513ab-ceba-4f9b-b466-9e76007d8566"
        },
        "item": {
          "id": "abb32755-6465-45da-b7cd-ba89d70cde06",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "596cee41-56c0-4b7a-b380-75a226598dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd45ca3-0400-4a21-b1bf-d061005a2ecf",
        "cursor": {
          "ref": "6e9255a2-d38a-47a6-969c-db3e04249cd9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9d861984-dd38-476f-8f65-263ae6010b63"
        },
        "item": {
          "id": "7dd45ca3-0400-4a21-b1bf-d061005a2ecf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f90b3452-639a-42d4-8ec0-dd233b1851b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5ff31e-c0de-4738-9bda-af120f569f49",
        "cursor": {
          "ref": "4851e37c-bddb-432a-8265-5e4177669a35",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "25e9b15c-f5d0-4f36-a917-8a92ffe2957a"
        },
        "item": {
          "id": "8a5ff31e-c0de-4738-9bda-af120f569f49",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "57e328ec-17a2-498e-ad52-2cf7fcad6d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925c3474-975d-406f-94e4-da6cfad7fb67",
        "cursor": {
          "ref": "04ca25a5-bcbb-42fb-8ba8-bd3e7cc9085f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "06a5b824-61c4-43e5-97cf-2f1e7c7df1ec"
        },
        "item": {
          "id": "925c3474-975d-406f-94e4-da6cfad7fb67",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f097025e-2484-44a6-bfb7-af5f26934c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a7465d-7521-401e-beaf-01f708b65ffc",
        "cursor": {
          "ref": "77e6784c-5315-4429-bc8a-5d9872af1f7b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "acde017c-f3d0-4549-88e7-d4f65da40ab8"
        },
        "item": {
          "id": "95a7465d-7521-401e-beaf-01f708b65ffc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4db4697c-157e-4f1c-999b-8a8f727fe5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab86bfe6-d986-47fd-aa61-799652e3dae6",
        "cursor": {
          "ref": "d2be1fa6-df83-4283-bfa1-1736b5eba254",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8516540f-5a46-4168-856b-79a2161d58ee"
        },
        "item": {
          "id": "ab86bfe6-d986-47fd-aa61-799652e3dae6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ce5745cf-f3b0-474f-86d7-045568aa09f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2953bf-f78c-4532-9388-11f8cb09a3f3",
        "cursor": {
          "ref": "4bc4659f-410c-4520-97b4-9b8357b77175",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3330a826-529c-407a-bd4d-7a8c8d9a4fb9"
        },
        "item": {
          "id": "8c2953bf-f78c-4532-9388-11f8cb09a3f3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5b342eae-a0a0-4990-a5ac-d658b98e6bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bc5f1e-dc04-452d-8159-2e032b40b80d",
        "cursor": {
          "ref": "a231b336-aab5-4320-a60f-6522a8471278",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "babb53e7-d269-4e13-84b2-18f2e02c98d3"
        },
        "item": {
          "id": "16bc5f1e-dc04-452d-8159-2e032b40b80d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8f6bd384-6be5-40b1-956a-59e15b0062cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723e0e46-afd9-47bb-8d91-479fcf42a086",
        "cursor": {
          "ref": "8ad91d56-8da0-4673-bbf7-7854821947b6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4b1e04fa-33e6-47d1-b7c8-53841e6f551d"
        },
        "item": {
          "id": "723e0e46-afd9-47bb-8d91-479fcf42a086",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "82efaff7-6c75-4332-923b-1dadf936b0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94acbd62-1a34-4f3b-9bdc-39f881b4c2ba",
        "cursor": {
          "ref": "dd339c72-181a-44b2-937c-f3cc0fc6887a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1e0b7e0a-e3fb-46d3-90e0-e3489a4417e0"
        },
        "item": {
          "id": "94acbd62-1a34-4f3b-9bdc-39f881b4c2ba",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5836d2c4-9130-4c31-8687-c5398c12d499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0961824a-ebdb-4586-ad68-dc9188143113",
        "cursor": {
          "ref": "58b9ab61-af03-4f10-9fb1-e1e01c3412cd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b835df2f-3102-453a-b2e0-d7624b57ddc4"
        },
        "item": {
          "id": "0961824a-ebdb-4586-ad68-dc9188143113",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "16f0cdc4-7941-405d-a15a-ba63e7d72df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f694fae1-7b1a-446d-b317-6354bfb8cfa0",
        "cursor": {
          "ref": "6114f658-22b4-4205-9bb7-51775deccde7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9e884244-815c-4535-af47-a60beac6845f"
        },
        "item": {
          "id": "f694fae1-7b1a-446d-b317-6354bfb8cfa0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "99a9ca20-3727-4d6b-aade-091f62ef45b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaa2fe7-4a6c-4970-8a09-f906f4a1e3e4",
        "cursor": {
          "ref": "9d845703-452f-4df0-9019-74cd29d6ebae",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f1645d87-8cb5-4abe-8424-8adfe545d310"
        },
        "item": {
          "id": "9eaa2fe7-4a6c-4970-8a09-f906f4a1e3e4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dfd7dc0c-9873-4b9c-b920-a994d1438e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1a0956-4a74-42b1-934b-11a0b3ffa64c",
        "cursor": {
          "ref": "4e49cfd7-f5b5-4486-a8a3-8214a9ca073e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "036561b0-2017-40f8-9a92-23eb72878141"
        },
        "item": {
          "id": "9b1a0956-4a74-42b1-934b-11a0b3ffa64c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1f588bc3-0c5a-42fe-a5e9-410be6de1fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32cadc2-4672-498d-93e5-bbf222792f18",
        "cursor": {
          "ref": "31e78c27-bd0c-45f3-9de7-6ab8e90c953e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "45da260b-138d-4129-bc2a-d2e723a73096"
        },
        "item": {
          "id": "f32cadc2-4672-498d-93e5-bbf222792f18",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8c9fe35f-0c8c-4340-a0a0-2ba6a9bb7b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efe7e8b-5ba5-48e4-8e9d-c06a7849ed94",
        "cursor": {
          "ref": "bf63d76c-f08b-4ed6-b033-83085d9530ca",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0a3921c9-1abe-4bfb-bf9b-9da6f5264615"
        },
        "item": {
          "id": "1efe7e8b-5ba5-48e4-8e9d-c06a7849ed94",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "398ecce6-51fa-4c43-bac6-6f1b4852597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51999e50-9d03-47b9-b3cd-95a52383636a",
        "cursor": {
          "ref": "ab47fea7-7bde-4c06-bcbd-02cf826f6b7d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33d1e468-9e26-4e17-a38b-11f5a101e3db"
        },
        "item": {
          "id": "51999e50-9d03-47b9-b3cd-95a52383636a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "55620b65-cb0c-4204-be24-032ee44ece90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8394031a-36f3-48f1-b31c-149d28afa8cc",
        "cursor": {
          "ref": "55bf7dcb-71a3-4e57-a625-a896245042d9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f5ccde9c-5402-47af-af6c-57b9c543d457"
        },
        "item": {
          "id": "8394031a-36f3-48f1-b31c-149d28afa8cc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7510c68b-c185-4dbf-b9d8-33da861d1046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f2ce7b-7932-4580-9e74-12d1a7bb5876",
        "cursor": {
          "ref": "1b62e2ed-f304-4e88-b9cb-bc3793581034",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ae63e41-6c5d-4af4-bb4a-84bda68648c7"
        },
        "item": {
          "id": "b5f2ce7b-7932-4580-9e74-12d1a7bb5876",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "be8ae516-7de9-440b-b6aa-a819c883e99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a74faaa-0c2d-4e80-9131-283643a6272d",
        "cursor": {
          "ref": "893c302f-e2fc-4519-be07-602d4f830de8",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "738e27c8-c6ed-4c37-b641-5c8e713b5801"
        },
        "item": {
          "id": "6a74faaa-0c2d-4e80-9131-283643a6272d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f52f82ad-6a03-486a-a6db-d5da7fde4fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f1560-34f6-45c7-adc2-8f7e03697fc5",
        "cursor": {
          "ref": "cbfa4a47-ffff-4fdc-81f5-8859e0e41ecd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5ee58796-2a9d-4d74-abc8-b58b505270ca"
        },
        "item": {
          "id": "eb5f1560-34f6-45c7-adc2-8f7e03697fc5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cffabc08-906b-4283-81ea-9d3574cb2467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e4d861-91d4-429a-814f-5413cd3af8d3",
        "cursor": {
          "ref": "46b653e8-9c24-4d7d-85f2-36855050bb4e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c31592b2-2127-42b7-b8a8-acdc18607ecc"
        },
        "item": {
          "id": "58e4d861-91d4-429a-814f-5413cd3af8d3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cf8a7f43-2dbe-4fa3-a901-a51c0a84f26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec69d158-88f0-4052-87f8-af0eb013b4a1",
        "cursor": {
          "ref": "91bd1873-c344-4fad-af5c-94e530ffa594",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6ee3228a-5cd2-4150-988c-ef8f585924ca"
        },
        "item": {
          "id": "ec69d158-88f0-4052-87f8-af0eb013b4a1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a916b30a-7221-4b04-844b-b4c1c8ba4a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5c048f-e1b2-45d8-bc76-7f54a1f134ac",
        "cursor": {
          "ref": "abdc63c1-53a8-448b-92e9-90716ebc287e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f74361ac-be79-4904-a3b7-d2ac4ffb19d5"
        },
        "item": {
          "id": "fd5c048f-e1b2-45d8-bc76-7f54a1f134ac",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "35c81403-93aa-46b3-a3e2-9c5334da2002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b1dc0e-5609-46e0-8d50-b111b202b576",
        "cursor": {
          "ref": "cfcc501a-e507-471c-8905-8ac08084e9ad",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "04a75138-bdcb-4255-9f0f-259ad2245915"
        },
        "item": {
          "id": "29b1dc0e-5609-46e0-8d50-b111b202b576",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cf9d5265-1312-4e7a-8362-31e55a4ccf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cee0a1f-c6d2-4614-a6ee-29c9a33d9a55",
        "cursor": {
          "ref": "c83676a4-11e0-489f-a157-bfed66f15804",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3b07ce48-5265-4612-8037-9df4c6ae8a3d"
        },
        "item": {
          "id": "3cee0a1f-c6d2-4614-a6ee-29c9a33d9a55",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "99d4e11d-d49d-4240-9a26-34cc1c6b0e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ba2833-29db-4c3c-8540-c2cec3374f49",
        "cursor": {
          "ref": "cdbaa183-6ea9-4693-8e7e-7fbe98edda79",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2a87ef53-9eaa-4514-b98c-7e5264192b4f"
        },
        "item": {
          "id": "b6ba2833-29db-4c3c-8540-c2cec3374f49",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b9af342b-53c6-4f0c-be63-3dba1482df54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dfe221-d769-4ec0-b9d2-a021960ae000",
        "cursor": {
          "ref": "06bb28ee-5345-4a8c-ad77-67165c92a4c1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "65136214-1bc0-43fe-8e33-c4734ef500d5"
        },
        "item": {
          "id": "46dfe221-d769-4ec0-b9d2-a021960ae000",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c4575e06-0788-4e99-8f6e-43d77272e784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f23c17-003c-4f03-b6ec-983a62ea893c",
        "cursor": {
          "ref": "2ed30aa9-7965-4eb4-b3f1-36bc2f440ede",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "48b0b37e-2652-4bf2-8073-7659f7004deb"
        },
        "item": {
          "id": "f0f23c17-003c-4f03-b6ec-983a62ea893c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7f018be0-f1b9-4907-9743-53daf1bd366e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c46f78-1487-4593-a562-3488eb1aecaa",
        "cursor": {
          "ref": "6d85452f-cd67-477e-981d-c2d59287fda8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a318dfc8-6a51-4de5-9fbe-2fa2449d2894"
        },
        "item": {
          "id": "76c46f78-1487-4593-a562-3488eb1aecaa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7248923a-d784-4838-98f4-2910f0c48da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb67792c-f7bd-45e0-92e8-30722fb975f1",
        "cursor": {
          "ref": "a23110f6-8d53-45d5-8fbc-e5f4a29022f4",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c3f91d83-0135-4984-9dc6-c5f775b2b537"
        },
        "item": {
          "id": "cb67792c-f7bd-45e0-92e8-30722fb975f1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b35ca9a6-e076-4a4d-8be7-202e32a98a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91a23ee-f5ee-4e79-a599-b30c637f7833",
        "cursor": {
          "ref": "3e41c154-bb8e-4a54-b0ff-be8756048949",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a1ca44b1-7a5a-446f-bf62-397e94cee419"
        },
        "item": {
          "id": "a91a23ee-f5ee-4e79-a599-b30c637f7833",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a75c599b-cadb-4736-8b0f-c17b9d2c5c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7932821e-9678-4e16-8a65-dfd23e252f26",
        "cursor": {
          "ref": "4cc8812b-7789-4f79-89ea-69c0ed566c98",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6d7f68dd-0baa-4e81-9b8d-0ba26bf9ef5a"
        },
        "item": {
          "id": "7932821e-9678-4e16-8a65-dfd23e252f26",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0651b914-a257-4c65-ad3b-2f7008a4875f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df1bda4-8267-4542-86f6-8a1756962829",
        "cursor": {
          "ref": "af4d6c92-51e5-48dd-905c-1e2695ffdd46",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "19556d8d-7211-4a09-9ad0-b4f1d2e2bb5b"
        },
        "item": {
          "id": "5df1bda4-8267-4542-86f6-8a1756962829",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7546aea4-25ab-4369-b6fa-50ff264a29eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef17d86-23d5-44ea-a90c-e52467908fd7",
        "cursor": {
          "ref": "b8433102-5981-47a0-a593-ab913a94ebdc",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "74ef3285-2008-4fe4-80b0-7e45c7c27926"
        },
        "item": {
          "id": "5ef17d86-23d5-44ea-a90c-e52467908fd7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bb174f85-54b2-401e-a9b9-9e39fc1e0b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6bb551-fe91-4517-b06b-b88c95f11b3a",
        "cursor": {
          "ref": "975be3fa-8169-4893-98a8-3c8501178f36",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0ce6791f-1ff7-4d61-9b70-dfea09781356"
        },
        "item": {
          "id": "dc6bb551-fe91-4517-b06b-b88c95f11b3a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "84f3b02f-c7a0-41ee-96b2-54c2c46dd4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be20b8ac-7b2c-4f26-9263-604bf4e16136",
        "cursor": {
          "ref": "c775efc8-6f98-4626-b82f-27eea31b0d0a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3f94d941-70dc-496b-ba37-7290bb76f697"
        },
        "item": {
          "id": "be20b8ac-7b2c-4f26-9263-604bf4e16136",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bd76f419-a2ef-4517-b3be-9074fb9c79ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e416e81-15bb-4ac9-9e14-9e7d786313e5",
        "cursor": {
          "ref": "05757684-8b35-4bcf-8c36-0e21cedfaedd",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bce45c89-8c93-4f96-95e6-7c0d05a4333f"
        },
        "item": {
          "id": "3e416e81-15bb-4ac9-9e14-9e7d786313e5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8f856b13-ab11-4810-a32e-d4eb4af7b7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a8d887-3534-4936-93d0-eb9cf4dfe067",
        "cursor": {
          "ref": "0b9f5cdc-782e-4be5-8834-a071dc940df6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bf2cf74e-71c9-4e0f-9102-ef8305e0a2a6"
        },
        "item": {
          "id": "94a8d887-3534-4936-93d0-eb9cf4dfe067",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bd3d389e-5c7b-4d25-b8e9-60642a41c781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5c40f5-fe82-4625-9105-31569a7467a5",
        "cursor": {
          "ref": "985cbbe5-b9ae-453c-84cc-5095c464b3d8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "21f648b9-c7f7-41e8-98ea-4aece0deee91"
        },
        "item": {
          "id": "8e5c40f5-fe82-4625-9105-31569a7467a5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c5c3740c-b009-4e61-a6cf-8b3b9abf5c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc25251-de44-496a-a5ad-376fafacdf99",
        "cursor": {
          "ref": "6cc55ec6-02e1-4b99-a822-64f68dd2104b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "967aaaaf-7b81-45c4-b440-af683ba428ab"
        },
        "item": {
          "id": "3cc25251-de44-496a-a5ad-376fafacdf99",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d4ce39f1-b3e4-4793-a94d-b8bde5147478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2e3894-c29d-4bbd-adeb-e9778e0746c7",
        "cursor": {
          "ref": "807750fb-5634-4ff3-84ce-22697a6fa13f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "259d38f8-1d46-482c-905f-3e600a1111ab"
        },
        "item": {
          "id": "4b2e3894-c29d-4bbd-adeb-e9778e0746c7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5f5ef356-15d4-4e50-a2e6-60b6d1e771b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4beb22-fbe9-4158-9856-c13a5faac1e7",
        "cursor": {
          "ref": "e4a0ec33-005e-47d1-b64a-b054bb432c19",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8456e876-8f62-4499-a475-da72ee26e925"
        },
        "item": {
          "id": "4f4beb22-fbe9-4158-9856-c13a5faac1e7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8fcc2dc7-0702-4cd3-97ce-312d6f479525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f8d395-0f5e-4829-a355-127d324cd998",
        "cursor": {
          "ref": "e09c8f96-af77-42e9-9d2b-b4ecc25cd5b4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "edb981a4-f4e4-4de1-b40d-dcb0c5b99921"
        },
        "item": {
          "id": "e6f8d395-0f5e-4829-a355-127d324cd998",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "10c56c51-fa93-40c3-bc3d-68aec3f34149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061b2fe-98bb-4ea7-8418-11932f15be3d",
        "cursor": {
          "ref": "c5990700-f54f-4297-886f-9ea4b9e67701",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ea90f0a6-941d-452c-80ea-4b4a5fd0ffd4"
        },
        "item": {
          "id": "b061b2fe-98bb-4ea7-8418-11932f15be3d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a5a677c8-8af1-4412-b715-33b68c034045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcfbea8-2be8-430a-a36f-928f338a88e7",
        "cursor": {
          "ref": "58e383ac-01ce-4377-b943-fdc6bbc11627",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8defc30e-2fb2-49b3-ba58-f420d92cb9af"
        },
        "item": {
          "id": "0dcfbea8-2be8-430a-a36f-928f338a88e7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "996601d6-f183-4142-a77e-5ac73187f2e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbdf917-ffe9-49c8-b004-a17fb717cb01",
        "cursor": {
          "ref": "178f52ab-8e42-464f-a862-965b1cdc0f65",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9e4b7cd7-b0f4-4e31-9879-7ae5e5f49848"
        },
        "item": {
          "id": "9cbdf917-ffe9-49c8-b004-a17fb717cb01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d423f32-5c7a-4a1c-a271-0562278ba14a",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d069f2d0-232c-4ace-ae35-b4416b4d744d",
        "cursor": {
          "ref": "915e8db5-2a9a-4e43-a606-ff48e7dfce3d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "166fa581-bfc5-4f5a-9f47-30990b682a3a"
        },
        "item": {
          "id": "d069f2d0-232c-4ace-ae35-b4416b4d744d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d6236bf2-da46-4495-8f5b-0330a5d7396e",
          "status": "OK",
          "code": 200,
          "responseTime": 1460,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df8ddce-a00f-4743-b618-3de3357e6872",
        "cursor": {
          "ref": "c0b0e6fd-8405-4914-9bc8-cc95d5ef7352",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ae5a2eff-ee87-445f-8e3a-018a14c2305e"
        },
        "item": {
          "id": "7df8ddce-a00f-4743-b618-3de3357e6872",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f9e54ce0-d717-4653-ba54-6b6bd9b1db28",
          "status": "OK",
          "code": 200,
          "responseTime": 1482,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "581109f2-f89b-49b9-b621-7a97b2ca43a6",
        "cursor": {
          "ref": "07bddaad-d862-43e2-bdf7-87fd6a75c734",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0689c38e-9a30-4da8-8af8-2893b67d30a5"
        },
        "item": {
          "id": "581109f2-f89b-49b9-b621-7a97b2ca43a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20f2a0e2-0d1d-4fe7-8c10-b017b4d9b4cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581109f2-f89b-49b9-b621-7a97b2ca43a6",
        "cursor": {
          "ref": "07bddaad-d862-43e2-bdf7-87fd6a75c734",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0689c38e-9a30-4da8-8af8-2893b67d30a5"
        },
        "item": {
          "id": "581109f2-f89b-49b9-b621-7a97b2ca43a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20f2a0e2-0d1d-4fe7-8c10-b017b4d9b4cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe18ac7-3751-484b-9b16-3ebe1af21dc8",
        "cursor": {
          "ref": "7ba4d386-1bb5-4a2e-828f-db08940cfe22",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "533bb6b6-cea4-4305-93ea-e5a44951b707"
        },
        "item": {
          "id": "1fe18ac7-3751-484b-9b16-3ebe1af21dc8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a8070493-6928-4748-9f14-085f9fbd6970",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db96b092-f38e-4078-8eb8-05877d5708ed",
        "cursor": {
          "ref": "55e5a55b-229a-475d-82db-79a285efed7a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2e10afa3-6a77-457a-89ee-1d0bdef757b1"
        },
        "item": {
          "id": "db96b092-f38e-4078-8eb8-05877d5708ed",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "53d7a610-4afd-40fd-b307-0867b88393a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}